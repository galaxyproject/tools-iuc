<tool id="fastplong" name="Fastplong" version="0.2.2">
    <description>Filter and trim long reads</description>
    <requirements>
        <requirement type="package" version="0.2.2">fastplong</requirement>
    </requirements>
    <command detect_errors="exit_code">
        <![CDATA[
        fastplong -i '$inputs' -o '$output' 
	#if $reads_to_process:
            --reads_to_process '$reads_to_process'
        #end if
	#if $disable_quality_filtering:
            --disable_quality_filtering
        #end if
	 #if $disable_adapter_trimming:
            --disable_adapter_trimming
        #end if
	#if $start_adapter:
            --start_adapter '$start_adapter'
        #end if
	#if $end_adapter:
            --end_adapter '$end_adapter'
        #end if
	#if $adapter_fasta:
            --adapter_fasta '$adapter_fasta'
        #end if
	#if $distance_threshold:
            --distance_threshold '$distance_threshold'
        #end if
	#if $trimming_extension:
            --trimming_extension '$trimming_extension'
        #end if
	#if $trim_front:
            --trim_front '$trim_front'
        #end if
        #if $trim_tail:
            --trim_tail '$trim_tail'
        #end if
	#if $trim_poly_x:
            --trim_poly_x
        #end if
        #if $poly_x_min_len:
            --poly_x_min_len '$poly_x_min_len'
        #end if
        #if $cut_front:
            --cut_front
        #end if
        #if $cut_tail:
            --cut_tail
        #end if
	#if $cut_window_size:
            --cut_window_size '$cut_window_size'
        #end if
        #if $cut_mean_quality:
            --cut_mean_quality '$cut_mean_quality'
        #end if
        #if $cut_front_window_size:
            --cut_front_window_size '$cut_front_window_size'
        #end if
        #if $cut_front_mean_quality:
            --cut_front_mean_quality '$cut_front_mean_quality'
        #end if
        #if $cut_tail_window_size:
            --cut_tail_window_size '$cut_tail_window_size'
        #end if
        #if $cut_tail_mean_quality:
            --cut_tail_mean_quality '$cut_tail_mean_quality'
        #end if
	#if $qualified_quality_phred:
    	    --qualified_quality_phred '$qualified_quality_phred'
	#end if
	#if $unqualified_percent_limit:
    	    --unqualified_percent_limit '$unqualified_percent_limit'
	#end if
	#if $n_base_limit:
	    --n_base_limit '$n_base_limit'
	#end if
	#if $mean_qual:
	    --mean_qual '$mean_qual'
	#end if
	#if $disable_length_filtering:
	    --disable_length_filtering
	#end if
	#if $length_required:
	    --length_required '$length_required'
	#end if
	#if $length_limit:
	    --length_limit '$length_limit'
	#end if
	#if $low_complexity_filter:
	    --low_complexity_filter
	#end if
	#if $complexity_threshold:
	    --complexity_threshold '$complexity_threshold'
	#end if
	#if $thread:
	    --thread '$thread'
	#end if
	#if $save_failed_reads:
	    --failed_out '$failed_out'
	#end if
	#if $compression:
	    --compression '$compression'
	#end if
	#if $verbose:
	    --verbose
	#end if
	#if $json_report:
    		--json '${json_output}'
	#else:
	    --json 'fastplong.json'
	#end if
	#if $html_report:
                --html '${html_output}'
        #else:
            --html 'fastplong.html'
        #end if
	#if $report_title:
    		--report_title '$report_title'
	#else:
    		--report_title 'fastplong report'
	#end if
        ]]>
    </command>

    <inputs>
        <param name="inputs" type="data" format="fastq" label="Input FASTQ file"/>
	<param name="reads_to_process" type="integer" optional="true" label="Number of reads to process (optional)" help="Limit the number of reads to process. Useful for quick QC or creating subsets."/>
	<param name="disable_quality_filtering" type="boolean" checked="false" label="Disable quality filtering?" help="By default, quality filtering is enabled. Enable this option to turn it off (--disable_quality_filtering or -Q)."/>
	<param name="disable_adapter_trimming" type="boolean" checked="false" label="Disable adapter trimming?" help="By default, adapter trimming is enabled. Enable this option to turn it off (--disable_adapter_trimming or -A)."/>
	<param name="start_adapter" type="text" optional="true" label="Start adapter sequence (5')" help="Specify the adapter sequence at the 5' end of reads (--start_adapter or -s). Leave blank to auto-detect."/>
	<param name="end_adapter" type="text" optional="true" label="End adapter sequence (3')" help="Specify the adapter sequence at the 3' end of reads (--end_adapter or -e). Leave blank to auto-detect."/>
	<param name="adapter_fasta" type="data" format="fasta" optional="true" label="Adapter sequences (FASTA file)" help="Specify a FASTA file with adapter sequences to trim (--adapter_fasta or -a)"/>
	<param name="distance_threshold" type="float" optional="true" label="Adapter distance threshold" help="Threshold of sequence-adapter-distance / adapter-length. Higher values detect more adapters (--distance_threshold or -d). Range: 0.0–1.0"/>
	<param name="trimming_extension" type="integer" optional="true" label="Trimming extension length" help="Extend trimming beyond the adapter match to clean up the sequence more thoroughly (--trimming_extension). Default is 10"/>
	<param name="trim_front" type="integer" optional="true" label="Trim front (5') bases" help="Trim this many bases from the start (5') of each read (--trim_front or -f). Default is 0"/>
        <param name="trim_tail" type="integer" optional="true" label="Trim tail (3') bases" help="Trim this many bases from the end (3') of each read (--trim_tail or -t). Default is 0"/>
	<param name="trim_poly_x" type="boolean" checked="false" label="Trim polyX tails?" help="Enable to trim polyX stretches (e.g., polyA, polyT) at the 3' end (--trim_poly_x or -x)"/>
        <param name="poly_x_min_len" type="integer" optional="true" label="Minimum polyX length" help="Minimum length to detect polyX in the tail (--poly_x_min_len). Default is 10"/>
        <param name="cut_front" type="boolean" checked="false" label="Enable sliding-window trimming from 5' end?" help="Trim from 5' end until window mean quality is above threshold (--cut_front or -5)"/>
        <param name="cut_tail" type="boolean" checked="false" label="Enable sliding-window trimming from 3' end?" help="Trim from 3' end until window mean quality is above threshold (--cut_tail or -3)"/>
	<param name="cut_window_size" type="integer" optional="true" label="Sliding window size" help="Window size shared by cut_front, cut_tail, cut_sliding (--cut_window_size or -W). Default: 4"/>
        <param name="cut_mean_quality" type="integer" optional="true" label="Mean quality threshold" help="Mean quality required for cutting (--cut_mean_quality or -M). Default: 20"/>
        <param name="cut_front_window_size" type="integer" optional="true" label="Front window size" help="Override window size for cut_front only (--cut_front_window_size). Default: cut_window_size"/>
        <param name="cut_front_mean_quality" type="integer" optional="true" label="Front mean quality" help="Override quality threshold for cut_front only (--cut_front_mean_quality). Default: cut_mean_quality"/>
        <param name="cut_tail_window_size" type="integer" optional="true" label="Tail window size" help="Override window size for cut_tail only (--cut_tail_window_size). Default: cut_window_size"/>
        <param name="cut_tail_mean_quality" type="integer" optional="true" label="Tail mean quality" help="Override quality threshold for cut_tail only (--cut_tail_mean_quality). Default: cut_mean_quality"/>
	<param name="qualified_quality_phred" type="integer" optional="true" label="Qualified base Phred score" help="Phred quality score that counts as qualified (--qualified_quality_phred or -q). Default: 15"/>
	<param name="unqualified_percent_limit" type="integer" optional="true" label="Unqualified base percentage limit" help="Percent of bases allowed to be below quality threshold (--unqualified_percent_limit or -u). Default: 40"/>
	<param name="n_base_limit" type="integer" optional="true" label="N base limit" help="Reads with more than this number of N bases are discarded (--n_base_limit or -n). Default: 5"/>
	<param name="mean_qual" type="integer" optional="true" label="Minimum mean quality" help="Reads with mean quality below this are discarded (--mean_qual or -m). Default: 0"/>
	<param name="disable_length_filtering" type="boolean" checked="false" label="Disable length filtering?" help="Length filtering is enabled by default. Enable this to disable it (--disable_length_filtering or -L)"/>
	<param name="length_required" type="integer" optional="true" label="Minimum read length" help="Reads shorter than this will be discarded (--length_required or -l). Default: 15"/>
	<param name="length_limit" type="integer" optional="true" label="Maximum read length" help="Reads longer than this will be discarded (--length_limit). Default: 0 (no limit)"/>
	<param name="low_complexity_filter" type="boolean" checked="false" label="Enable low complexity filter?" help="Enable low complexity filtering (--low_complexity_filter or -y)"/>
	<param name="complexity_threshold" type="integer" optional="true" label="Complexity threshold (%)" help="Minimum required sequence complexity (0–100) (--complexity_threshold or -Y). Default: 30"/>
	<param name="thread" type="integer" optional="true" label="Number of threads" help="Number of worker threads (--thread or -w). Default is 3"/>
	<param name="save_failed_reads" type="boolean" checked="false" label="Save failed reads?" help="Enable this to write failed reads to a separate FASTQ file (--failed_out)"/>
	<param name="compression" type="integer" optional="true" label="Gzip compression level" help="Compression level for gzip output (1–9). 1 is fastest, 9 is smallest. Default is 4." />
	<param name="verbose" type="boolean" checked="false" label="Enable verbose logging?" help="Print log updates after every 1M reads processed (--verbose or -V). Useful for monitoring progress in long runs."/>
	<param name="json_report" type="text" optional="true" label="JSON report filename" help="Optional: Name of the JSON-format report file (--json). If not specified, defaults to fastplong.json."/>
	<param name="html_report" type="text" optional="true" label="HTML report filename" help="Optional: Name of the HTML-format report file (--html). If not specified, defaults to fastplong.html."/>
	<param name="report_title" type="text" optional="true" label="Report title" help="Optional: Title for the report (--report_title or -R). If omitted, the default is 'fastplong report'."/>
    </inputs>

    <outputs>
        <data name="output" format="fastq" label="Filtered Output FASTQ"/>
        <data name="failed_out" format="fastq" from_work_dir="failed_reads.fastq" label="Failed Reads FASTQ">
            <filter>save_failed_reads</filter>
        </data>
	<data name="json_output" format="json" label="JSON Report">
	    <filter>json_report</filter>
	</data>

	<data name="json_output_default" format="json" from_work_dir="fastplong.json" label="JSON Report (default)">
	    <filter>not json_report</filter>
	</data>
	<data name="html_output" format="html" label="HTML Report">
            <filter>html_report</filter>
        </data>

        <data name="html_output_default" format="html" from_work_dir="fastplong.html" label="HTML Report (default)">
            <filter>not html_report</filter>
        </data>
    </outputs>

    <tests>
	<test expect_num_outputs="3">
        	<param name="inputs" value="input.fastq"/>
        	<output name="output" file="output.fastq"/>
    	</test>
    </tests>

    <help>
	**Fastplong: Filter and trim long reads**

    	This tool wraps the `fastplong` command-line tool to allow filtering and trimming of long reads in FASTQ format.

	**Inputs**
	- A FASTQ file containing reads and optional parameters to control trimming, quality filtering, adapter detection, and more.

	**Outputs**
	- A filtered FASTQ file with trimmed reads, HTML and JSON report and an optional FASTQ file of failed reads.

	For more information, see https://github.com/OpenGene/fastplong
    </help>

    <citations>
	<citation type="doi">10.1002/imt2.107</citation>
    	<citation type="doi">10.1093/bioinformatics/bty560</citation>
    </citations>

</tool>
