<tool profile="16.07" id="mothur_parsimony" name="Parsimony" version="@WRAPPER_VERSION@.0">
    <description>Describes whether two or more communities have the same structure</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <expand macro="stdio"/>
    <expand macro="version_command"/>
    <command><![CDATA[
        @SHELL_OPTIONS@

        ## create symlinks to input datasets
        ln -s "$tree" tree.dat &&
        ln -s "$group" group.dat &&
        ln -s "$count" count.dat &&
        ln -s "$name" name.dat &&

        echo 'parsimony(
            tree=tree.dat,
            iters=$iters,
            group=group.dat,
            #if $groups:
                groups=${ str($groups).replace(",","-") },
            #end if
            #if $name:
                name=name.dat,
            #end if
            #if $count:
                count=count.dat,
            #end if
            processors='\${GALAXY_SLOTS:-8}'
        )'
        | sed 's/ //g'  ## mothur trips over whitespace
        | mothur
        | tee mothur.out.log
    ]]></command>
    <inputs>
        <param name="tree" type="data" format="mothur.tre" label="tree - Phylogenetic Tree"/>
        <param name="group" type="data" format="mothur.groups" label="group - Group file for the tree"/>
        <param name="groups" type="select" label="groups - Groups to display" multiple="true" help="By default all are included if no selection is made.">
            <options>
                <filter type="data_meta" ref="group" key="groups"/>
            </options>
        </param>
        <param name="name" type="data" format="mothur.names" optional="true" label="name - Sequences Name reference file for the tree"/>
        <param name="iters" type="integer" min="1" value="1000" label="iters - Number of bootstrap iterations to try (default 1000)"/>
        <param name="count" type="data" format="mothur.count_table" optional="true" label="count - a count_table" help="generated by count.seqs"/>
    </inputs>
    <outputs>
        <expand macro="logfile-output"/>
        <data name="psummary" format="tabular" from_work_dir="tree*.psummary" label="${tool.name} on ${on_string}: psummary"/>
        <data name="parsimony" format="tabular" from_work_dir="tree*.parsimony" label="${tool.name} on ${on_string}: parsimony"/>
    </outputs>
    <tests>
        <test>
            <param name="tree" value="treetest.tre" ftype="mothur.tre"/>
            <param name="group" value="treetest.groups"/>
            <param name="groups" value="green,orange"/>
            <param name="name" value="treetest.names"/>
            <param name="iters" value="1000"/>
            <output name="psummary" md5="011c202c5e5e33cb1af7c742aeb06457"/>
            <output name="parsimony" md5="f49e0d64fd0c5df01abc913f398d428a"/>
            <expand macro="logfile-test"/>
        </test>
    </tests>
    <help>
<![CDATA[

@MOTHUR_OVERVIEW@

**Command Documentation**

The parsimony_ command implements the parsimony method (aka P-test), which was previously implemented in TreeClimber and is also available in MacClade and on the UniFrac website. The parsimony method is a generic test that describes whether two or more communities have the same structure. The significance of the test statistic can only indicate the probability that the communities have the same structure by chance. The value does not indicate a level of similarity.

.. _parsimony: https://www.mothur.org/wiki/Parsimony

v.1.20.0: Added count parameter

]]>
    </help>
    <expand macro="citations"/>
</tool>
