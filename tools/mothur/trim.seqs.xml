<tool profile="20.05" id="mothur_trim_seqs" name="Trim.seqs" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@">
    <description>Trim sequences - primers, barcodes, quality</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="biotools"/>
    <expand macro="requirements"/>
    <expand macro="stdio"/>
    <expand macro="version_command"/>
    <command><![CDATA[
@SHELL_OPTIONS@

## create symlinks to input datasets
ln -s '$fasta' fasta.dat &&
ln -s '$names' names.dat &&
ln -s '$count' count.dat &&
#if $oligo.add == "yes":
    ln -s '$oligo.oligos' oligo.oligos.dat &&
#end if
#if $qual.add2 == "yes":
    ln -s '$qual.qfile' qual.qfile.dat &&
#end if

echo 'trim.seqs(
    fasta=fasta.dat,
    minlength=$minlength,
    maxlength=$maxlength,
    maxambig=$maxambig,
    maxhomop=$maxhomop,
    keepfirst=$keepfirst,
    removelast=$removelast,
    #if $oligo.add == "yes":
        oligos=oligo.oligos.dat,
        bdiffs=$oligo.bdiffs,
        pdiffs=$oligo.pdiffs,
        tdiffs=$oligo.tdiffs,
        ldiffs=$oligo.ldiffs,
        sdiffs=$oligo.sdiffs,
        keepforward=$oligo.keepforward,
        allfiles=$oligo.allfiles,
    #end if
    #if $qual.add2 == "yes":
        qfile=qual.qfile.dat,
        qaverage=$qual.qaverage,
        qthreshold=$qual.qthreshold,
        qwindowaverage=$qual.qwindowaverage,
        qwindowsize=$qual.qwindowsize,
        rollaverage=$qual.rollaverage,
        qstepsize=$qual.qstepsize,
        qtrim=$qual.qtrim,
    #end if
    flip=$flip,
    #if $names:
        name=names.dat,
    #end if
    logtransform=$logtransform,
    checkorient=$checkorient,
    #if $count:
        count=count.dat,
    #end if
    processors='\${GALAXY_SLOTS:-8}'
)'
| sed 's/ //g'  ## mothur trips over whitespace
| mothur
| tee mothur.out.log

## prevent these two files from being gathered into collection
&& mv fasta.trim.fasta fasta.trim
&& mv fasta.scrap.fasta fasta.scrap
    ]]></command>
    <inputs>
        <param name="fasta" type="data" format="fasta" label="fasta - Sequences"/>
        <param name="names" type="data" format="mothur.names" optional="true" label="name - Sequence representative name list"/>
        <param name="minlength" type="integer" value="0" min="0" label="minlength - Minimum Sequence Length (default 0, ignored if &#060; 1 )"/>
        <param name="maxlength" type="integer" value="0" min="0" label="maxlength - Maximum Sequence Length (default 0, ignored if &#060; 1)"/>
        <param name="maxambig" type="integer" value="-1" min="-1" label="maxambig - Maximum ambiguous bases (default -1, ignored if &#060; 0)"/>
        <param name="maxhomop" type="integer" value="0" min="0" label="maxhomop - Maximum homopolymers (default 0, ignored if &#060; 1)"/>
        <param name="keepfirst" type="integer" value="0" min="0" label="keepfirst - ignored if &#060; 0)" help="trims the sequence to the first keepfirst number of bases after the barcode or primers are removed, before the sequence is checked to see if it meets the other requirements"/>
        <param name="removelast" type="integer" value="0" min="0" label="removelast - ignored if &#060; 0)" help="removes the last removelast number of bases after the barcode or primers are removed, before the sequence is checked to see if it meets the other requirements"/>
        <conditional name="oligo">
            <param name="add" type="select" label="Trim with an oligos file?" help="">
                <option value="no">no</option>
                <option value="yes">yes</option>
            </param>
            <when value="no"/>
            <when value="yes">
                <param name="oligos" type="data" format="mothur.oligos" label="oligos - barcodes and primers"/>
                <param name="bdiffs" type="integer" value="0" min="0" label="bdiffs - number of differences to allow in the barcode (default 0)"/>
                <param name="pdiffs" type="integer" value="0" min="0" label="pdiffs - number of differences to allow in the primer (default 0)"/>
                <param name="tdiffs" type="integer" value="0" min="0" label="tdiffs - total number of differences to allow in primer and barcode (default 0)"/>
                <param name="ldiffs" type="integer" value="0" min="0" optional="true" label="ldiffs - total number of differences to allow in linker sequence (default 0)"/>
                <param name="sdiffs" type="integer" value="0" min="0" optional="true" label="sdiffs - total number of differences to allow in spacer sequence (default 0)"/>
                <param name="keepforward" type="boolean" truevalue="true" falsevalue="false" checked="false" label="keepforward - keep the primer"/>
                <param name="allfiles" type="boolean" truevalue="true" falsevalue="false" checked="false" label="allfiles - separate into file per barcode"/>
            </when>
        </conditional>
        <conditional name="qual">
            <param name="add2" type="select" label="Trim based on a quality file?" help="">
                <option value="no">no</option>
                <option value="yes">yes</option>
            </param>
            <when value="no"/>
            <when value="yes">
                <param name="qfile" type="data" format="qual454" label="qfile - 454 quality file"/>
                <param name="qaverage" type="integer" value="0" min="0" label="qaverage - remove sequences that have an average base quality below this value (ignored if &#060; 1)"/>
                <param name="qthreshold" type="integer" value="0" min="0" label="qthreshold - remove sequences that have any base quality below this value (ignored if &#060; 1)"/>
                <param name="qwindowaverage" type="integer" value="0" min="0" label="qwindowaverage - remove sequences that have an average base quality below this value over a window (ignored if &#060; 1)"/>
                <param name="qwindowsize" type="integer" value="50" min="0" label="qwindowsize - number of bases in a window. Default=50."/>
                <param name="rollaverage" type="integer" value="0" min="0" label="rollaverage - remove sequences that have an average base quality below this value in a rolling window (ignored if &#060; 1)"/>
                <param name="qstepsize" type="integer" value="1" min="0" label="qstepsize - number of bases to move the window over. Default=1."/>
                <param name="qtrim" type="boolean" truevalue="true" falsevalue="false" checked="false" label="qtrim - trim sequences below qthreshold and put in trim output, else put in scrap "/>
            </when>
        </conditional>
        <param name="flip" type="boolean" truevalue="true" falsevalue="false" checked="false" label="flip - reverse complement the trimmed sequences"/>
        <param name="count" type="data" format="mothur.count_table" optional="true" label="count - a count_table" help="The count file is similar to the name file in that it is used to represent the number of duplicate sequences for a given representative sequence. If you run trim.seqs with an oligos file that contains group labels, trim.seqs will create a new *.trim.count_table with the group information included. "/>
        <param name="logtransform" type="boolean" truevalue="true" falsevalue="false" checked="false" label="logtransform" help="allows you to indicate you want the averages for the qwindowaverage, rollaverage and qaverage to be calculated using a logtransform."/>
        <param name="checkorient" type="boolean" truevalue="true" falsevalue="false" checked="false" label="checkorient - search the reverse complement?" help="If you are running the trim.seqs command with paired barcodes or primers, you can use the checkorient parameter. When checkorient=t and mothur can't find the barcodes and primers, it will search the reverse compliment. "/>
        <expand macro="param-savelog"/>
    </inputs>
    <outputs>
        <expand macro="logfile-output"/>
        <data name="trim_fasta" format_source="fasta" from_work_dir="fasta.trim" label="${tool.name} on ${on_string}: trim.fasta"/>
        <data name="scrap_fasta" format_source="fasta" from_work_dir="fasta.scrap" label="${tool.name} on ${on_string}: scrap.fasta"/>
        <data name="trim_names" format="mothur.names" from_work_dir="names*.trim.names" label="${tool.name} on ${on_string}: trim.names">
            <filter>names</filter>
        </data>
        <data name="scrap_names" format="mothur.names" from_work_dir="names*.scrap.names" label="${tool.name} on ${on_string}: scrap.names">
            <filter>names</filter>
        </data>
        <data name="trim_count" format="mothur.count_table" from_work_dir="count*.trim.count_table" label="${tool.name} on ${on_string}: trim.count">
            <filter>count</filter>
        </data>
        <data name="scrap_count" format="mothur.count_table" from_work_dir="count*.scrap.count_table" label="${tool.name} on ${on_string}: scrap.count">
            <filter>count</filter>
        </data>
        <data name="trim_qual" format_source="qfile" from_work_dir="fasta*.trim.qual" label="${tool.name} on ${on_string}: trim.qual">
            <filter>qual['add2'] == 'yes'</filter>
        </data>
        <data name="scrap_qual" format_source="qfile" from_work_dir="fasta*.scrap.qual" label="${tool.name} on ${on_string}: scrap.qual">
            <filter>qual['add2'] == 'yes'</filter>
        </data>
        <data name="groups_file" format="mothur.groups" from_work_dir="fasta.groups" label="${tool.name} on ${on_string}: groups">
            <filter>oligo['add'] == 'yes'</filter>
        </data>
         <collection name="fasta_allfiles" type="list" label="${tool.name} on ${on_string}: allfiles fasta">
             <filter>oligo['add'] == 'yes' and oligo['allfiles']</filter>
             <discover_datasets pattern="fasta.*?\.(?P&lt;designation&gt;.*)\.fasta" format="fasta"/>
         </collection>
         <collection name="groups_allfiles" type="list" label="${tool.name} on ${on_string}: allfiles groups)">
             <filter>oligo['add'] == 'yes' and oligo['allfiles']</filter>
             <discover_datasets pattern="fasta.*?\.(?P&lt;designation&gt;.*)\.groups" format="mothur.groups"/>
         </collection>
    </outputs>
    <tests>
        <test><!-- test with fasta and names -->
            <param name="fasta" value="amazon.fasta" ftype="fasta"/>
            <param name="names" value="amazon1.names" ftype="mothur.names"/>
            <param name="maxhomop" value="4"/>
            <output name="trim_fasta" md5="14dcaa23735a3f545e7014a69b002859" ftype="fasta"/>
            <output name="scrap_fasta" md5="0efa9e9df562ebe376950cf2bed46e41" ftype="fasta"/>
            <output name="trim_names" md5="d41d8cd98f00b204e9800998ecf8427e" ftype="mothur.names"/>
            <output name="scrap_names" md5="d41d8cd98f00b204e9800998ecf8427e" ftype="mothur.names"/>
            <param name="savelog" value="true"/>
            <expand macro="logfile-test"/>
        </test>
        <test><!-- test with count table -->
            <param name="fasta" value="amazon.fasta" ftype="fasta"/>
            <param name="count" value="amazon1.count_table" ftype="mothur.count_table"/>
            <param name="maxhomop" value="4"/>
            <output name="trim_fasta" md5="14dcaa23735a3f545e7014a69b002859" ftype="fasta"/>
            <output name="scrap_fasta" md5="0efa9e9df562ebe376950cf2bed46e41" ftype="fasta"/>
            <output name="trim_count" md5="a30b953343f9c2a5e3cb619a9120f005" ftype="mothur.count_table"/>
            <output name="scrap_count" md5="c6c4a61f3e70bd963531f88098783cc5" ftype="mothur.count_table"/>
            <param name="savelog" value="true"/>
            <expand macro="logfile-test"/>
        </test>
        <test><!-- test with oligos -->
            <param name="fasta" value="amazon.fasta" ftype="fasta"/>
            <param name="add" value="yes"/>
            <param name="oligos" value="GQY1XT001.oligos" ftype="mothur.oligos"/>
            <param name="bdiffs" value="100"/>
            <param name="pdiffs" value="100"/>
            <output name="trim_fasta" md5="b081d3fe4f11640c0abbc2d71fd70a4e" ftype="fasta"/>
            <output name="scrap_fasta" md5="7c77619c28ac4c6b9e48aabfb95928ef" ftype="fasta"/>
            <output name="groups_file" md5="d41d8cd98f00b204e9800998ecf8427e" ftype="mothur.groups"/>
            <param name="savelog" value="true"/>
            <expand macro="logfile-test"/>
        </test>
        <test><!-- test with oligos and allfiles parameter -->
            <param name="fasta" value="amazon.fasta" ftype="fasta"/>
            <param name="add" value="yes"/>
            <param name="oligos" value="GQY1XT001.oligos" ftype="mothur.oligos"/>
            <param name="bdiffs" value="100"/>
            <param name="pdiffs" value="100"/>
            <param name="allfiles" value="true"/>
            <output name="trim_fasta" md5="b081d3fe4f11640c0abbc2d71fd70a4e" ftype="fasta"/>
            <output name="scrap_fasta" md5="7c77619c28ac4c6b9e48aabfb95928ef" ftype="fasta"/>
            <output_collection name="groups_allfiles" count="9">
                <element name="F003D144" md5="445124b06d0c9146ae353631794c8093" ftype="mothur.groups"/>
            </output_collection>
            <output_collection name="fasta_allfiles" count="9">
                <element name="F003D144" md5="025ff271ac24ecb898863d7fcbfabf10" ftype="fasta"/>
            </output_collection>
            <param name="savelog" value="true"/>
            <expand macro="logfile-test"/>
        </test>
        <test><!-- test with qfile-->
            <param name="fasta" value="Fasting_Example1.fasta" ftype="fasta"/>
            <param name="add2" value="yes"/>
            <param name="qfile" value="Fasting_Example1.qual" ftype="qual454"/>
            <param name="maxhomop" value="4"/>
            <output name="trim_fasta" md5="d02f74acd6d9fb52b04a93869bb79302" ftype="fasta"/>
            <output name="scrap_fasta" md5="fd841c9b79faf5ca4851a23e0a0fa9c0" ftype="fasta"/>
            <output name="trim_qual" md5="30af1fb398e18d95aaffcd0f3efb96d4" ftype="qual454"/>
            <output name="scrap_qual" md5="b30d736ee8ca0821ebaad1e2372c6c93" ftype="qual454"/>
            <param name="savelog" value="true"/>
            <expand macro="logfile-test"/>
        </test>
    </tests>
    <help><![CDATA[

@MOTHUR_OVERVIEW@

**Command Documentation**

The trim.seqs_ command provides the preprocessing features needed to screen and sort pyrosequences.  The command will enable you to trim off primer sequences and barcodes, use the barcode information to generate a group file and split a fasta file into sub-files, screen sequences based on the qual file that comes from 454 sequencers, cull sequences based on sequence length and the presence of ambiguous bases and get the reverse complement of your sequences. While this analysis is clearly geared towards pyrosequencing collections, it can also be used with traditional Sanger sequences.

.. _trim.seqs: https://www.mothur.org/wiki/Trim.seqs

    ]]></help>
    <expand macro="citations"/>
</tool>
