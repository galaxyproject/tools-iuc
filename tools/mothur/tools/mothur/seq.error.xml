<tool id="mothur_seq_error" name="Seq.error" version="@WRAPPER_VERSION@.0">
    <description>assess error rates in sequencing data</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements" />

    <command interpreter="python"><![CDATA[
        mothur_wrapper.py 
        #import re, os.path
        #set results = ["'^mothur.\S+\.logfile$:'" + $logfile.__str__]
        #if 'summary' in $output_sel.__str__.split(','):
                #set results = $results + ["'^\S+.error.summary$:'" + $summary_out.__str__]
        #end if
        #if 'seq' in $output_sel.__str__.split(','):
                #set results = $results + ["'^\S+.error.seq$:'" + $seq_out.__str__]
        #end if
        #if 'seq_forward' in $output_sel.__str__.split(','):
                #set results = $results + ["'^\S+.error.seq.forward$:'" + $seq_forward_out.__str__]
        #end if
        #if 'seq_reverse' in $output_sel.__str__.split(','):
                #set results = $results + ["'^\S+.error.seq.reverse$:'" + $seq_reverse_out.__str__]
        #end if
        #if 'chimera' in $output_sel.__str__.split(','):
                #set results = $results + ["'^\S+.error.chimera$:'" + $chimera_out.__str__]
        #end if
        #if 'count' in $output_sel.__str__.split(','):
                #set results = $results + ["'^\S+.error.count$:'" + $count_out.__str__]
        #end if
        #if 'matrix' in $output_sel.__str__.split(','):
                #set results = $results + ["'^\S+.error.matrix$:'" + $matrix_out.__str__]
        #end if
        #if 'ref_query' in $output_sel.__str__.split(','):
                #set results = $results + ["'^\S+.error.ref-query$:'" + $ref_query_out.__str__]
        #end if
        --cmd='seq.error'
        --outputdir='$logfile.extra_files_path'
        --fasta="$fasta_in"
        --reference="$alignment.template"
        #if $name_in.__str__ != "None" and len($name_in.__str__) > 0:
            --name="$name_in"
        #end if
        #if $qual.use.__str__ == 'yes':
            --qfile="$qfile_in"
            --alignreport="$alignreport_in"
            #if 'quality' in $output_sel.__str__.split(','):
                #set results = $results + ["'^\S+.error.quality$:'" + $quality_out.__str__]
            #end if
            #if 'qual_forward' in $output_sel.__str__.split(','):
                #set results = $results + ["'^\S+.error.qual.forward$:'" + $qual_forward_out.__str__]
            #end if
            #if 'qual_reverse' in $output_sel.__str__.split(','):
                #set results = $results + ["'^\S+.error.qual.reverse$:'" + $qual_reverse_out.__str__]
            #end if
        #end if
        #if $threshold.__str__ != '':
            --threshold="$threshold"
        #end if
        "$ignorechimeras"
        --result=#echo ','.join($results)
        --processors=\${GALAXY_SLOTS:-8}
        #if $count.__str__ != "None" and len($count.__str__) > 0:
            --count='$count'
        #end if
    ]]></command>
    <inputs>
        <param name="fasta_in" type="data" format="mothur.align" label="fasta - Candiate Sequences"/>
        <conditional name="alignment">
            <param name="source" type="select" label="Select Reference Template from" help="">
                <option value="ref">Cached Reference</option>
                <option value="history">Your History</option>
            </param>
            <when value="ref">
                <param name="template" type="select" label="reference - Select an alignment database " help="">
                    <options from_data_table="mothur_aligndb">
                    </options>
                </param>
            </when>
            <when value="history">
                <param name="template" type="data" format="mothur.align" label="reference - Reference to align with" help=""/>
            </when>
        </conditional>

        <param name="name_in" type="data" format="mothur.names" optional="true" label="name - Sequences Name reference"/>

        <conditional name="qual">
            <param name="use" type="select" label="Include a quality file and an alignment report as inputs" help="">
                <option value="no">No</option>
                <option value="yes">Yes</option>
            </param>
            <when value="yes"> 
                <param name="qfile_in" type="data" format="qual" label="qfile - Fasta Quality"/>
                <param name="alignreport_in" type="data" format="mothur.align.report" label="alignreport - Align Report"/>
            </when>
            <when value="no"/> 
        </conditional>
        <param name="count" type="data" format="mothur.count_table" optional="true" label="The count parameter allows you to provide a count file associated with your fasta file, so you can include the redundant sequences in your error analysis"/>
        <param name="threshold" type="float" value="" optional="true" label="threshold - error rate at which to report (default 1.)"
                                    help="">
            <validator type="in_range" message="error rate threshold between 0. and 1." min="0.0" max="1.0"/>
        </param>
        <param name="ignorechimeras" type="boolean" truevalue="" falsevalue="--ignorechimeras=false" checked="true" label="ignorechimeras - " />

        <param name="output_sel" type="select" multiple="true" display="checkboxes" label="Outputs as history datasets" >
                <option value="summary">error.summary</option>
                <option value="seq">error.seq</option>
                <option value="seq_forward">error.seq.forward</option>
                <option value="seq_reverse">error.seq.reverse</option>
                <option value="chimera">error.chimera</option>
                <option value="count">error.count</option>
                <option value="matrix">error.matrix</option>
                <option value="quality">error.quality</option>
                <option value="qual_forward">error.qual.forward</option>
                <option value="qual_reverse">error.qual.reverse</option>
                <option value="ref_query">error.ref-query</option>
        </param>
    </inputs>
    <outputs>
        <data format="html" name="logfile" label="${tool.name} on ${on_string}: logfile" />}}
        <data format="tabular" name="summary_out" label="${tool.name} on ${on_string}: error.summary" >
            <filter>('summary' in output_sel)</filter>
        </data>
        <data format="fasta" name="seq_out" label="${tool.name} on ${on_string}: error.seq" >
            <filter>('seq' in output_sel)</filter>
        </data>
        <data format="tabular" name="seq_forward_out" label="${tool.name} on ${on_string}: error.seq.forward" >
            <filter>('seq_forward' in output_sel)</filter>
        </data>
        <data format="tabular" name="seq_reverse_out" label="${tool.name} on ${on_string}: error.seq.reverse" >
            <filter>('seq_reverse' in output_sel)</filter>
        </data>
        <data format="tabular" name="chimera_out" label="${tool.name} on ${on_string}: error.chimera" >
            <filter>('chimera' in output_sel)</filter>
        </data>
        <data format="tabular" name="count_out" label="${tool.name} on ${on_string}: error.count" >
            <filter>('count' in output_sel)</filter>
        </data>
        <data format="tabular" name="matrix_out" label="${tool.name} on ${on_string}: error.matrix" >
            <filter>('matrix' in output_sel)</filter>
        </data>
        <data format="tabular" name="quality_out" label="${tool.name} on ${on_string}: error.quality" >
            <filter>('quality' in output_sel)</filter>
        </data>
        <data format="tabular" name="qual_forward_out" label="${tool.name} on ${on_string}: error.qual.forward" >
            <filter>('qual_forward' in output_sel)</filter>
        </data>
        <data format="tabular" name="qual_reverse_out" label="${tool.name} on ${on_string}: error.qual.reverse" >
            <filter>('qual_reverse' in output_sel)</filter>
        </data>
        <data format="mothur.align" name="ref_query_out" label="${tool.name} on ${on_string}: error.ref-query" >
            <filter>('ref_query' in output_sel)</filter>
        </data>
    </outputs>
    <tests>
    </tests>
    <help>
<![CDATA[

@MOTHUR_OVERVIEW@

**Command Documenation**

The seq.error_ command evaluates error rate for sequences by comparing to the fasta-formatted template_alignment_.
This is demonstrated in http://www.mothur.org/wiki/Schloss_SOP#Error_analysis

.. _template_alignment: http://www.mothur.org/wiki/Alignment_database
.. _seq.error: http://www.mothur.org/wiki/Seq.error

]]>
    </help>
    <expand macro="citations" />
</tool>
