<tool id="mothur_sub_sample" name="Sub.sample" version="@WRAPPER_VERSION@.0">
    <description>Create a sub sample</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements" />

    <command interpreter="python"><![CDATA[
        mothur_wrapper.py 
        ## output {group_file_name}.pick.{label}.groups   {list_file_name}.pick.{label}.list 
        #import re, os.path
        #set results = ["'^mothur.\S+\.logfile$:'" + $logfile.__str__]
        --cmd='sub.sample'
        --outputdir='$logfile.extra_files_path'
        #if $input.format == "fasta":
            --fasta="$input.fasta_in"
            #set results = $results + ["'" + $re.sub(r'(^.*)\.(.*?)',r'\1\\.subsample\\.\2',$os.path.basename($input.fasta_in.__str__)) + ":'" + $fasta_out.__str__]
            #if $input.name_in.__str__ != "None" and len($input.name_in.__str__) > 0:
                --name="$input.name_in"
                #set results = $results + ["'" + $re.sub(r'(^.*)\.(.*?)',r'\1\\.subsample\\.\2',$os.path.basename($input.name_in.__str__)) + ":'" + $names_out.__str__]
            #end if
            #if $input.use_group.to_filter == "yes":
                #if $input.use_group.group_in.__str__ != "None" and len($input.use_group.group_in.__str__) > 0:
                    --group="$input.use_group.group_in"
                    #set results = $results + ["'" + $re.sub(r'(^.*)\.(.*?)',r'\1\\.subsample\\.\2',$os.path.basename($input.use_group.group_in.__str__)) + ":'" + $group_out.__str__]
                    #if $input.use_group.groups.__str__ != "None" and len($input.use_group.groups.__str__) > 0:
                        --groups="$input.use_group.groups"
                    #end if
                    "$input.use_group.persample"
                #end if
            #end if
        #elif $input.format == "list":
            --list="$input.otu"
            #set results = $results + ["'" + $re.sub(r'(^.*)\.(.*?)',r'\1\\.subsample\\.\2',$os.path.basename($input.otu.__str__)) + ":'" + $list_out.__str__]
            #if $input.use_group.to_filter == "yes":
                #if $input.use_group.group_in.__str__ != "None" and len($input.use_group.group_in.__str__) > 0:
                    --group="$input.use_group.group_in"
                    #set results = $results + ["'" + $re.sub(r'(^.*)\.(.*?)',r'\1\\.subsample\\.\2',$os.path.basename($input.use_group.group_in.__str__)) + ":'" + $group_out.__str__]
                    #if $input.use_group.groups.__str__ != "None" and len($input.use_group.groups.__str__) > 0:
                        --groups="$input.use_group.groups"
                    #end if
                    "$input.use_group.persample"
                #end if
            #end if
            #if $input.label.__str__ != "None" and len($input.label.__str__) > 0:
                --label="$input.label"
            #end if
        #elif $input.format == "shared":
            --shared="$input.otu"
            #set results = $results + ["'" + $re.sub(r'(^.*)\.(.*?)',r'\1.*\\.subsample\\.\2',$os.path.basename($input.otu.__str__)) + ":'" + $shared_out.__str__]
            #if $input.groups.__str__ != "None" and len($input.groups.__str__) > 0:
                --groups="$input.groups"
            #end if
            #if $input.label.__str__ != "None" and len($input.label.__str__) > 0:
                --label="$input.label"
            #end if
        #elif $input.format == "sabund":
            --sabund="$input.otu"
            #set results = $results + ["'" + $re.sub(r'(^.*)\.(.*?)',r'\1\\.subsample\\.\2',$os.path.basename($input.otu.__str__)) + ":'" + $sabund_out.__str__]
            #if $input.label.__str__ != "None" and len($input.label.__str__) > 0:
                --label="$input.label"
            #end if
        #elif $input.format == "rabund":
            --rabund="$input.otu"
            #set results = $results + ["'" + $re.sub(r'(^.*)\.(.*?)',r'\1\\.subsample\\.\2',$os.path.basename($input.otu.__str__)) + ":'" + $rabund_out.__str__]
            #if $input.label.__str__ != "None" and len($input.label.__str__) > 0:
                --label="$input.label"
            #end if
        #end if
        #if int($size) > 0:
            --size="$size"
        #end if
        --result=#echo ','.join($results)
        #if $count.__str__ != "None" and len($count.__str__) > 0:
            --count="$count"
        #end if
        #if $taxonomy.__str__ != "None" and len($taxonomy.__str__) > 0:
            --taxonomy="$taxtaxonomy"
        #end if
    ]]></command>
    <inputs>
        <conditional name="input">
            <param name="format" type="select" label="Select type of data to sub sample" >
                <option value="fasta">FASTA</option>
                <option value="list">OTU List</option>
                <option value="shared">OTU Shared</option>
                <option value="sabund">OTU Shared Abundance</option>
                <option value="rabund">OTU Relative Abundance</option>
            </param>
            <when value="fasta">
                <param name="fasta_in" type="data" format="fasta" label="fasta - "/>
                <param name="name_in" type="data" format="mothur.names" optional="true" label="name - Group Names from your history"/>
                <conditional name="use_group">
                    <param name="to_filter" type="select" label="Use groups " >
                        <option value="no">No</option>
                        <option value="yes">Yes</option>
                    </param>
                    <when value="no"/>
                    <when value="yes">
                        <param name="group_in" type="data" format="mothur.groups" label="group - Groups"/>
                        <param name="groups" type="select" optional="true" label="groups - Pick groups to include" multiple="true">
                            <options>
                                <filter type="data_meta" ref="group_in" key="groups" />
                            </options>
                        </param>
                        <param name="persample" type="boolean" truevalue="--persample=true" falsevalue="" checked="false" label="persample - select subsample of the same size from each of the groups"/>
                    </when> <!-- yes -->
                </conditional> <!-- use_group -->
            </when> <!-- fasta -->
            <when value="list">
                <param name="otu" type="data" format="mothur.list" label="list - OTU List"/>
                <conditional name="use_group">
                    <param name="to_filter" type="select" label="Use groups " >
                        <option value="no">No</option>
                        <option value="yes">Yes</option>
                    </param>
                    <when value="no"/>
                    <when value="yes">
                        <param name="group_in" type="data" format="mothur.groups" label="group - Groups"/>
                        <param name="groups" type="select" optional="true" label="groups - Pick groups to include" multiple="true">
                            <options>
                                <filter type="data_meta" ref="group_in" key="groups" />
                            </options>
                        </param>
                        <param name="persample" type="boolean" truevalue="--persample=true" falsevalue="" checked="false" label="persample - select subsample of the same size from each of the groups"/>
                    </when> <!-- yes -->
                </conditional> <!-- use_group -->
                <param name="label" type="select" label="label - OTU Labels" optional="true" multiple="true">
                    <expand macro="labeloptions"/>
                </param>
            </when> <!-- list -->
            <when value="shared">
                <param name="otu" type="data" format="mothur.shared" label="shared - OTU Shared"/>
                <param name="groups" type="select" optional="true" label="groups - Pick groups to include" multiple="true">
                    <options>
                        <filter type="data_meta" ref="otu" key="groups" />
                    </options>
                </param>
                <param name="label" type="select" label="label - OTU Labels" optional="true" multiple="true">
                    <expand macro="labeloptions"/>
                </param>
            </when> <!-- shared -->
            <when value="sabund">
                <param name="otu" type="data" format="mothur.sabund" label="sabund - OTU Species Abundance"/>
                <param name="label" type="select" label="label - OTU Labels" optional="true" multiple="true">
                    <expand macro="labeloptions"/>
                </param>
            </when> <!-- sabund -->
            <when value="rabund">
                <param name="otu" type="data" format="mothur.rabund" label="rabund - OTU Relative Abundance"/>
                <param name="label" type="select" label="label - OTU Labels" optional="true" multiple="true">
                    <expand macro="labeloptions"/>
                </param>
            </when> <!-- rabund -->
        </conditional> <!-- input -->
        <param name="size" type="integer" value="0" label="size - If greater than 0, the number of samples to pick"/>
        <param name="count" type="data" format="mothur.count_table" optional="true" label="count - a count_table" help="generated by count.seqs"/>
        <param name="taxonomy" type="data" format="taxonomy" optional="true" label="taxonomy - allows a taxonomy file"/>
    </inputs>
    <outputs>
        <data format="html" name="logfile" label="${tool.name} on ${on_string}: logfile" />
        <data format_source="fasta_in" name="fasta_out" label="${tool.name} on ${on_string}: subsample.fasta">
            <filter>input['format'] == 'fasta'</filter>
        </data>
        <data format="mothur.list" name="list_out" label="${tool.name} on ${on_string}: subsample.list">
            <filter>input['format'] == 'list'</filter>
        </data>
        <data format="mothur.shared" name="shared_out" label="${tool.name} on ${on_string}: subsample.shared">
            <filter>input['format'] == 'shared'</filter>
        </data>
        <data format="mothur.sabund" name="sabund_out" label="${tool.name} on ${on_string}: subsample.sabund">
            <filter>input['format'] == 'sabund'</filter>
        </data>
        <data format="mothur.rabund" name="rabund_out" label="${tool.name} on ${on_string}: subsample.rabund">
            <filter>input['format'] == 'rabund'</filter>
        </data>
        <!--  This doesn't appear to be generated even though the documentation says it is
        -->
        <data format="mothur.names" name="names_out" label="${tool.name} on ${on_string}: subsample.names">
            <filter>(input['format'] == 'fasta' and input['name_in'] != None)</filter>
        </data>
        <data format="mothur.groups" name="group_out" label="${tool.name} on ${on_string}: subsample.groups">
            <filter>((input['format'] == 'fasta' or input['format'] == 'list') and input['use_group'] == 'yes')</filter>
        </data>
    </outputs>
    <tests>
    </tests>
    <help>
<![CDATA[

@MOTHUR_OVERVIEW@

**Command Documenation**

The sub.sample_ command can be used as a way to normalize your data, or to create a smaller set from your original set. It takes as an input the following file types: fasta, list_, shared_, rabund_ and sabund_ to generate a new file that contains a sampling of your original file.

.. _list: http://www.mothur.org/wiki/List_file
.. _shared: http://www.mothur.org/wiki/Shared_file
.. _rabund: http://www.mothur.org/wiki/Rabund_file
.. _sabund: http://www.mothur.org/wiki/Sabund_file
.. _sub.sample: http://www.mothur.org/wiki/Sub.sample

]]>
    </help>
    <expand macro="citations" />
</tool>
