<tool id="mothur_phylo_diversity" name="Phylo.diversity" version="@WRAPPER_VERSION@.0">
    <description>Alpha Diversity calculates unique branch length</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements" />

    <command interpreter="python"><![CDATA[
        mothur_wrapper.py 
        --cmd='phylo.diversity'
        --result='^mothur.\S+\.logfile$:'$logfile,'^\S+\.phylodiv\.summary$:'$summary_out,'^\S+\.phylodiv$:'$collectors_out,'^\S+\.rarefaction$:'$rarefaction_out
        --outputdir='$logfile.extra_files_path'
        --tree="$tree"
        #if $grouping.use:
            #if $grouping.group.__str__ != "None" and len($grouping.group.__str__) > 0:
                --group='$grouping.group'
            #end if
            #if $grouping.groups.__str__ != "None" and len($grouping.groups.__str__) > 0:
                --groups='$grouping.groups'
            #end if
        #end if
        #if $name.__str__ != "None" and len($name.__str__) > 0:
            --name='$name'
        #end if
        #if int($iters.__str__) > 0:
            --iters="$iters"
        #end if
        #if float($freq.__str__) > 0:
            --freq="$freq"
        #end if
        "$scale"
        "$collect"
        "$rarefy"
        #if len($rarefy.__str__) > 0 or len($collect.__str__) > 0:
            "$summary"
        #end if
        --processors=\${GALAXY_SLOTS:-8}
        #if $count.__str__ != "None" and len($count.__str__) > 0:
            --count="$count"
        #end if
    ]]></command>
    <inputs>
        <!-- list,group  or shared -->
        <param name="tree" type="data" format="tre" label="tree - Phylogenetic Tree"/>
        <conditional name="grouping">
            <param name="use" type="boolean" truevalue="yes" falsevalue="no" checked="true" label="Analyze by group using a Group file"/>
            <when value="yes">
            <param name="group" type="data" format="mothur.groups" label="group - Group file for the tree"/>
            <param name="groups" type="select" label="groups - Groups to display" multiple="true">
                <help>All groups displayed if none are selected.</help>
                <options>
                    <filter type="data_meta" ref="group" key="groups" />
                </options>
            </param>
            </when>
            <when value="no"/>
        </conditional> <!-- use_groups -->
        <param name="name" type="data" format="mothur.names" optional="true" label="name - Sequences Name reference file for the tree"/>
        <param name="iters" type="integer" value="1000" label="iters - Number of iterations to try (default 1000)"/>
        <param name="freq" type="float" value="0.0" label="freq - Reporting frequency" 
                                    help="if between 0 and 1 the fraction of sequences to sample, if greater than one - report every n iterations"/>

        <param name="scale" type="boolean" truevalue="--scale=true" falsevalue="" checked="false" label="scale - Scale output to the number of sequences sampled" />
        <param name="rarefy" type="boolean" truevalue="--rarefy=true" falsevalue="" checked="false" label="rarefy - Calculate the rarefaction data" />
        <param name="summary" type="boolean" truevalue="" falsevalue="--summary=false" checked="true" label="summary - Generate a summary file" />
        <param name="collect" type="boolean" truevalue="--collect=true" falsevalue="" checked="false" label="collect - Create a collectors curve" />
        <param name="count" type="data" format="mothur.count_table" optional="true" label="count - a count_table" help="generated by count.seqs"/>
    </inputs>
    <outputs>
        <data format="html" name="logfile" label="${tool.name} on ${on_string}: logfile" />
        <data format="tabular" name="summary_out" label="${tool.name} on ${on_string}: summary">
            <filter>summary == True</filter>
        </data>
        <data format="tabular" name="rarefaction_out" label="${tool.name} on ${on_string}: rarefaction">
            <filter>rarefy == True</filter>
        </data>
        <data format="tabular" name="collectors_out" label="${tool.name} on ${on_string}: collectors">
            <filter>collect == True</filter>
        </data>
        <!-- random uses input prompts, not sure how to model that
        <data format="tabular" name="random" label="${tool.name} on ${on_string}: random">
        </data>
        -->
    </outputs>
    <tests>
    </tests>
    <help>
<![CDATA[

@MOTHUR_OVERVIEW@


**Command Documenation**

The phylo.diversity_ command calculates alpha diversity as the total of the unique branch length. 

.. _phylo.diversity: http://www.mothur.org/wiki/Phylo.diversity

v.1.21.0: Updated to Mothur 1.33, added count parameter

]]>
    </help>
    <expand macro="citations" />
</tool>
