<tool id="mothur_classify_seqs" name="Classify.seqs" version="@WRAPPER_VERSION@.0">
    <description>Assign sequences to taxonomy</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements" />

    <command interpreter="python"><![CDATA[
        mothur_wrapper.py 
        --cmd='classify.seqs'
        --result='^mothur.\S+\.logfile$:'$logfile,'^\S+\.taxonomy$:'$taxonomy_out,'^\S+\.tax\.summary$:'$tax_summary
        --outputdir='$logfile.extra_files_path'
        --fasta="$fasta"
        --reference="$alignment.template"
        --taxonomy="$tax.taxonomy"
        #if $classify.method == 'wang': 
            --method="$classify.method"
        #if 15 >= int($classify.ksize.__str__) >= 4:
            --ksize="$classify.ksize"
        #end if
        #if int($classify.iters.__str__) > 0:
            --iters="$classify.iters"
        #end if
        #if 100 >= int($classify.cutoff.__str__) > 0:
            --cutoff="$classify.cutoff"
        #end if
        "$classify.probs"
        #elif $classify.method == 'knn': 
            --method="$classify.method"
            --numwanted="$classify.search.numwanted"
        #if $classify.search.algorithm == 'kmer':
            --search="$classify.search.algorithm"
            --ksize="$classify.search.ksize"
        #elif $classify.search.algorithm == 'blast':
            --search="$classify.search.algorithm"
            --match="$classify.search.match"
            --mismatch="$classify.search.mismatch"
            --gapopen="$classify.search.gapopen"
            --gapextend="$classify.search.gapextend"
        #elif $classify.knn.search == 'suffix':
            --search="$classify.search.algorithm"
        #elif $classify.search.algorithm == 'distance':
            --search="$classify.search.algorithm"
        #end if
        #end if
        --processors=\${GALAXY_SLOTS:-8}
        #if $count.__str__ != "None" and len($count.__str__) > 0:
            --count="$count"
        #end if
        "$relabund"
    ]]></command>
    <inputs>
        <param name="fasta" type="data" format="fasta" label="fasta - Candiate Sequences"/>
        <conditional name="alignment">
            <param name="source" type="select" label="Select Reference Template from" help="">
                <option value="hist">History</option>
                <option value="ref">Cached Reference</option>
            </param>
            <when value="ref">
                <param name="template" type="select" label="reference - Select an alignment database " help="">
                    <options from_data_table="mothur_aligndb">
                    </options>
                </param>
            </when>
            <when value="hist">
                <param name="template" type="data" format="fasta" label="reference - Reference to align with" help=""/>
            </when>
        </conditional>
        <conditional name="tax">
            <param name="source" type="select" label="Select Taxonomy from" help="">
                <option value="ref">Cached Reference</option>
                <option value="hist">History</option>
            </param>
            <when value="ref">
                <param name="taxonomy" type="select" format="mothur.seq.taxonomy" label="taxonomy - Taxonomy reference">
                    <options from_data_table="mothur_taxonomy">
                    </options>
                </param>
            </when>
            <when value="hist">
                <param name="taxonomy" type="data" format="mothur.seq.taxonomy" label="taxonomy - Taxonomy reference"/>
            </when>
        </conditional>
        <conditional name="classify">
            <param name="method" type="select" label="method - Select a classification method" help="">
                <option value="wang">Bayesian (default)</option>
                <option value="knn">K-Nearest Neighbor (knn)</option>
            </param>
            <when value="wang">
                <param name="ksize" type="integer" value="8" label="ksize - kmer length between 5 and 12">
                    <validator type="in_range" message="ksize - kmer length between 5 and 12" min="5" max="12"/>
                </param>
                <param name="iters" type="integer" value="100" label="iters - iterations to do when calculating the bootstrap confidence score"/>
                <param name="cutoff" type="integer" value="60" label="cutoff - Confindence percentage cutoff between 1 and 100">
                    <validator type="in_range" message="Confindence percentage cutoff must be between 0 and 100" min="0" max="100"/>
                </param>
                <param name="probs" type="boolean" falsevalue="--probs=false" truevalue="" checked="true" label="probs - Show probabilities"/>
            </when>
            <when value="knn">
                <param name="numwanted" type="integer" value="10" label="numwanted - "/>
                <conditional name="search">
                    <param name="algorithm" type="select" label="algorithm - " help="">
                        <option value="kmer">Kmer (default)</option>
                        <option value="blast">BLAST</option>
                        <option value="suffix">Suffix Tree</option>
                        <option value="distance">Distance</option>
                    </param>
                    <when value="kmer">
                        <param name="ksize" type="integer" value="8" label="ksize - kmer length between 5 and 12"/>
                    </when>
                    <when value="blast">
                        <param name="match" type="integer" value="1" label="match - Pairwise alignment reward for a match"/>
                        <param name="mismatch" type="integer" value="-1" label="mismatch - Pairwise alignment penalty for a mismatch"/>
                        <param name="gapopen" type="integer" value="-2" label="gapopen - Pairwise alignment penalty for opening a gap"/>
                        <param name="gapextend" type="integer" value="-1" label="gapextend - Pairwise alignment penalty for extending a gap"/>
                    </when>
                    <when value="suffix"/>
                    <when value="distance"/>
                </conditional>
            </when>
        </conditional>

        <param name="count" type="data" format="mothur.count_table" label="count file" optional="true"/>

        <param name="relabund" type="boolean" falsevalue="" truevalue="--relabund=true" checked="false" label="relabund - allows you to indicate that you want the summary files to be relative abundances rather than raw abundances. default=f"/>


    </inputs>
    <outputs>
        <data format="html" name="logfile" label="${tool.name} on ${on_string}: logfile" />
        <data format="mothur.seq.taxonomy" name="taxonomy_out" label="${tool.name} on ${on_string}: taxonomy" />
        <data format="mothur.tax.summary" name="tax_summary" label="${tool.name} on ${on_string}: tax.summary" />
    </outputs>
    <tests>
    </tests>
    <help>
<![CDATA[

@MOTHUR_OVERVIEW@

**Command Documenation**

The classify.seqs_ command assigns sequences to chosen taxonomy outline.

.. _classify.seqs: http://www.mothur.org/wiki/Classify.seqs


v1.22.0: Updated for Mothur 1.33. Added count parameter (1.28), added relabund parameter (1.33), bayesian term changed to wang.
]]>
    </help>
    <expand macro="citations" />
</tool>
