<tool id="mothur_chimera_ccode" name="Chimera.ccode" version="@WRAPPER_VERSION@.0">
    <description>Find putative chimeras using ccode</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements" />

    <command interpreter="python"><![CDATA[
        mothur_wrapper.py 
        --cmd='chimera.ccode'
        --result='^mothur.\S+\.logfile$:'$logfile,'^\S+\.ccode\.chimeras?$:'$out_file,'^\S+\.ccode\.accnos$:'$out_accnos,'^\S+\.mapinfo$:'$mapinfo
        --outputdir='$logfile.extra_files_path'
        --fasta="$fasta"
        --reference="$alignment.template"
        "$filter"
        #if $mask.source == 'default':
            --mask=default
        #elif $mask.source == 'history':
            --mask="$mask.input"
        #end if
        #if int($window.__str__) > 0:
            --window="$window"
        #end if
        #if int($numwanted.__str__) > 0:
            --numwanted="$numwanted"
        #end if
        --processors=\${GALAXY_SLOTS:-8}
    ]]></command>
    <inputs>
        <param name="fasta" type="data" format="align" label="fasta - Candiate Aligned Sequences"/>
        <conditional name="alignment">
            <param name="source" type="select" label="Select Reference Template from" help="">
                <option value="hist">History</option>
                <option value="ref">Cached Reference</option>
            </param>
            <when value="ref">
                <param name="template" type="select" label="reference - Select an alignment database " help="">
                    <options from_data_table="mothur_aligndb">
                    </options>
                </param>
            </when>
            <when value="hist">
                <param name="template" type="data" format="fasta" label="reference - Reference to align with" help=""/>
            </when>
        </conditional>
        <param name="filter" type="boolean" falsevalue="" truevalue="--filter=true" checked="false" label="filter - Apply a 50% soft vertical filter"/>
        <!-- mask -->
        <conditional name="mask">
            <param name="source" type="select" label="Mask option">
                <option value="">None</option>
                <option value="default">default ecoli mask</option>
                <option value="history">From Your History</option>
            </param>
            <when value=""/>
            <when value="default"/>
            <when value="history">
                <param name="input" type="data" format="filter" label="Mask for the reference file" help=""/>
            </when>
        </conditional>
        <param name="window" type="integer" value="0" label="window - Length of sequence you want in each window analyzed (default if &lt; 1)" 
                                    help="Recommended window size is between 5 and 20% of your trimmed sequence length. Default is 10% of the sequence length."/>
        <param name="numwanted" type="integer" value="20" label="numwanted - Number of sequences compared with each query (uses default if set to 0)"/>
    </inputs>
    <outputs>
        <data format="html" name="logfile" label="${tool.name} on ${on_string}: logfile" />
        <data format="txt" name="out_file" label="${tool.name} on ${on_string}: ccode.chimeras" />
        <data format="accnos" name="out_accnos" label="${tool.name} on ${on_string}: ccode.accnos" />
        <data format="tabular" name="mapinfo" label="${tool.name} on ${on_string}: mapinfo" />
    </outputs>
    <tests>
        <test>
            <param name="fasta" value="Mock_S280_L001_R1_001_small.trim.contigs.good.align_head" /> <!-- not using more realistic input to save space in test-data dir -->
            <param name="source" value="hist" />
            <param name="template" value="HMP_MOCK.v35.align" /> 
            <output name="out_file" ftype="txt" > <!-- contains file path so only check for presence of certain contents -->
                <assert_contents>
                    <has_line_matching expression="^Window\tAvgQ\t\(sdQ\)\tAvgR\t\(sdR\)\tRatio\tAnova$" />
                </assert_contents>
            </output>
            <output name="out_accnos" file="Mock_S280_L001_R1_001_small.trim.contigs.good.ccode.accnos" ftype="accnos"/>
            <output name="mapinfo" md5="ef3353b1467fe95a24153513917e6444" ftype="tabular"/>
        </test>
    </tests>
    <help>
<![CDATA[

@MOTHUR_OVERVIEW@

**Command Documenation**

The chimera.ccode_ command identifies putative chimeras using the ccode approach (Chimera and Cross-Over Detection and Evaluation).  Ccode_ compares differences in distances, for each word, between query sequence and reference sequences, and reference sequences and themselves.

This method was written using the algorithms described in the paper_ "Evaluating putative chimeric sequences from PCR-amplified products" by Juan M. Gonzalez, Johannes Zimmerman and Cesareo Saiz-Jimenez.

The program can analyze sequences for any required word length. Generally, values of 5-20% of sequence length appear to deliver accurate results, for example, working on 16S rDNA sequences with a full-length of #1500 nt. It should be noted that the use of fragments either too long or too short might result in a reduction of sensitivity.

.. _Ccode: http://www.microextreme.net/downloads.html
.. _paper: http://bioinformatics.oxfordjournals.org/content/21/3/333.full.pdf
.. _chimera.ccode: http://www.mothur.org/wiki/Chimera.ccode

]]>
    </help>
    <expand macro="citations" />
</tool>
