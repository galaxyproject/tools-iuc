<tool id="mothur_dist_shared" name="Dist.shared" version="@WRAPPER_VERSION@.0" force_history_refresh="True">
    <description>Generate a phylip-formatted dissimilarity distance matrix among multiple groups</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements" />

    <command interpreter="python"><![CDATA[
        mothur_wrapper.py 
        --cmd='dist.shared'
        --result='^mothur.\S+\.logfile$:'$logfile
        --outputdir='$logfile.extra_files_path'
        #if $as_datasets.__str__ == "yes":
            --datasetid='$logfile.id' --new_file_path='$__new_file_path__'
            #if len($output.__str__) > 0:
                #if $output.__str__ == 'square':
                    --new_datasets='^\S+?\.([a-z]+\.(unique|[0-9.]*)\.(square|lt)(\.(ave|std))?)\.dist$:square.dist'
                #elif $output.__str__ == 'lt':
                    --new_datasets='^\S+?\.([a-z]+\.(unique|[0-9.]*)\.(square|lt)(\.(ave|std))?)\.dist$:lower.dist'
                #end if
            #else:
                --new_datasets='^\S+?\.([a-z]+\.(unique|[0-9.]*)\.(square|lt)(\.(ave|std))?)\.dist$:lower.dist'
            #end if
        #end if
        --shared="$otu"
        #if $label.__str__ != "None" and len($label.__str__) > 0:
            --label='$label'
        #end if
        #if $groups.__str__ != "None" and len($groups.__str__) > 0:
            --groups="$groups"
        #end if
        #if $calc.__str__ != "None" and len($calc.__str__) > 0:
            --calc="$calc"
        #end if
        #if $subsampling.use:
            #if len($subsampling.subsample.__str__) > 0 and int($subsampling.subsample.__str__) > 0:
                --subsample="$subsampling.subsample"
            #else
                --subsample=T
            #end if
            #if len($subsampling.iters.__str__) > 0 and int($subsampling.iters.__str__) > 0:
                --iters="$subsampling.iters"
            #end if
        #end if
        #if $output.__str__ != "None" and len($output.__str__) > 0:
            --output="$output"
        #end if
        --processors=\${GALAXY_SLOTS:-8}
    ]]></command>
    <inputs>
        <!-- list,group  or shared -->
        <param name="otu" type="data" format="mothur.shared" label="shared - OTU Shared"/>
        <param name="label" type="select" label="label - OTU Labels to calculate" multiple="true">
            <expand macro="labeloptions"/>
        </param>
        <param name="groups" type="select" label="groups - Groups to analyze" multiple="true">
            <options>
                <filter type="data_meta" ref="otu" key="groups" />
            </options>
        </param>
        <param name="calc" type="select" label="calc - Calculators (Uses defaults if none selected)" multiple="true">
            <option value="sharedsobs">sharedsobs - Shared community richness the observed richness shared between two or more samples</option>
            <option value="sharedchao">sharedchao - Shared community richness the two or more sample shared Chao1 richness estimator</option>
            <option value="sharedace">sharedace - Shared community richness the two sample shared ACE richness estimator</option>
            <option value="anderberg">anderberg - Community Membership Similarity the Anderberg similarity coefficient</option>
            <option value="jclass" selected="true">jclass - Community Membership Similarity the traditional Jaccard similarity coefficient based on the observed richness</option>
            <option value="jest">jest - Community Membership Similarity the Jaccard similarity coefficient based on the Chao1 estimated richnesses</option>
            <option value="kulczynski">kulczynski - Community Membership Similarity the Kulczynski similarity coefficient</option>
            <option value="kulczynskicody">kulczynskicody - Community Membership Similarity the Kulczynski-Cody similarity coefficient</option>
            <option value="kstest">kstest - Community Membership Similarity Kolmogorov-Smirnov test</option>
            <option value="lennon">lennon - Community Membership Similarity the Lennon similarity coefficient</option>
            <option value="ochiai">ochiai - Community Membership Similarity the Ochiai similarity coefficient</option>
            <option value="sorclass">sorclass - Community Membership Similarity the Sorenson similarity coefficient based on the observed richness</option>
            <option value="sorest">sorest - Community Membership Similarity the Sorenson similarity coefficient based on the Chao1 estimated richnesses</option>
            <option value="whittaker">whittaker - Community Membership Similarity the Whittaker similarity coefficient</option>
            <option value="hamming">hamming - Community Membership Similarity -</option>
            <option value="memchi2">memchi2 - Community Membership Similarity -</option>
            <option value="memchord">memchord - Community Membership Similarity -</option>
            <option value="memeuclidean">memeuclidean - Community Membership Similarity -</option>
            <option value="mempearson">mempearson - Community Membership Similarity -</option>
            <option value="braycurtis">braycurtis - Community Structure Similarity the Bray-Curtis similarity coefficient</option>
            <option value="jabund">jabund - Community Structure Similarity the abundance-based Jaccard similarity coefficient</option>
            <option value="morisitahorn">morisitahorn - Community Structure Similarity the Morisita-Horn similarity coefficient</option>
            <option value="sorabund">sorabund - Community Structure Similarity the abundance-based Sorenson similarity coefficient</option>
            <option value="thetan">thetan - Community Structure Similarity the Smith theta similarity coefficient</option>
            <option value="thetayc" selected="true">thetayc - Community Structure Similarity the Yue &amp; Clayton theta similarity coefficient</option>
            <option value="canberra">canberra - Community Structure Similarity -</option>
            <option value="gower">gower - Community Structure Similarity -</option>
            <option value="hellinger">hellinger - Community Structure Similarity -</option>
            <option value="manhattan">manhattan - Community Structure Similarity -</option>
            <option value="odum">odum - Community Structure Similarity -</option>
            <option value="soergel">soergel - Community Structure Similarity -</option>
            <option value="spearman">spearman - Community Structure Similarity -</option>
            <option value="speciesprofile">speciesprofile - Community Structure Similarity -</option>
            <option value="structchi2">structchi2 - Community Structure Similarity -</option>
            <option value="structchord">structchord - Community Structure Similarity -</option>
            <option value="structeuclidean">structeuclidean - Community Structure Similarity -</option>
            <option value="structkulczynski">structkulczynski - Community Structure Similarity -</option>
            <option value="structpearson">structpearson - Community Structure Similarity -</option>
            <option value="sharednseqs">sharednseqs - Utility the number of sequences in two samples</option>
            <option value="sharedobserved">sharedobserved - Utility the number of sequences in two samples</option>
        </param>
        <conditional name="subsampling">
            <param name="use" type="boolean" truevalue="yes" falsevalue="no" checked="false" label="subsample"/>
            <when value="yes">
                <param name="subsample" type="integer" value="" optional="true" label="subsample (defaults to the size of the smallest group)"
                                            help="Should not exceed the number of sequences in any group"/>
                <param name="iters" type="integer" value="" optional="true" label="iters - Number of iterations to try (default 1000)">
                        <validator type="in_range" message="Number of iterations must be positive" min="1"/>
                </param>
            </when>
            <when value="no"/>
        </conditional> <!-- subsampling -->
        <param name="output" type="select" label="output - Distance Matrix Output Format" help="A Distance Matrix will be generated for each calculator label pair">
            <option value="lt">Phylip formatted Lower Triangle Matrix</option>
            <option value="square">Phylip formatted Square Matrix</option>
        </param>
        <param name="as_datasets" type="boolean" truevalue="yes" falsevalue="no" checked="true" label="Create a new history dataset for each distance matrix"/>
    </inputs>
    <outputs>
        <data format="html" name="logfile" label="${tool.name} on ${on_string}: logfile" />
    </outputs>
    <tests>
    </tests>
    <help>
<![CDATA[

@MOTHUR_OVERVIEW@

**Command Documenation**

The dist.shared_ command will generate a phylip-formatted_distance_matrix_ that describes the dissimilarity (1-similarity) among multiple groups from a shared_ file. For calc parameter choices see: http://www.mothur.org/wiki/Calculators

.. _phylip-formatted_distance_matrix: http://www.mothur.org/wiki/Phylip-formatted_distance_matrix
.. _shared: http://www.mothur.org/wiki/Shared_file
.. _dist.shared: http://www.mothur.org/wiki/Dist.shared

v1.26.0: Updated to Mothur 1.33. Omitted calculators since they do not appear to be available.

]]>
    </help>
    <expand macro="citations" />
</tool>
