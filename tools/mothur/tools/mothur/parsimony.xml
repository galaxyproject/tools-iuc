<tool id="mothur_parsimony" name="Parsimony" version="@WRAPPER_VERSION@.0">
    <description>Describes whether two or more communities have the same structure</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements" />

    <command interpreter="python"><![CDATA[
        mothur_wrapper.py 
        --cmd='parsimony'
        --result='^mothur.\S+\.logfile$:'$logfile,'^\S+\.psummary$:'$psummary,'^\S+\.parsimony$:'$parsimony
        --outputdir='$logfile.extra_files_path'
        --tree="$tree"
        #if $group.__str__ != "None" and len($group.__str__) > 0:
            --group='$group'
        #end if
        #if $groups.__str__ != "None" and len($groups.__str__) > 0:
            --groups='$groups'
        #end if
        #if $name.__str__ != "None" and len($name.__str__) > 0:
            --name='$name'
        #end if
        #if int($iters.__str__) > 0:
            --iters="$iters"
        #end if
        --processors=\${GALAXY_SLOTS:-8}
        #if $count.__str__ != "None" and len($count.__str__) > 0:
            --count="$count"
        #end if
    ]]></command>
    <inputs>
        <param name="tree" type="data" format="tre" label="tree - Phylogenetic Tree"/>
        <param name="group" type="data" format="mothur.groups" label="group - Group file for the tree"/>
        <param name="groups" type="select" label="groups - Groups to display" multiple="true" 
                                    help="By default all are included if no selection is made.">
            <options>
                <filter type="data_meta" ref="group" key="groups" />
            </options>
        </param>
        <param name="name" type="data" format="mothur.names" optional="true" label="name - Sequences Name reference file for the tree"/>
        <param name="iters" type="integer" value="1000" label="iters - Number of bootstrap iterations to try (default 1000)"/>
        <!-- random uses input prompts, not sure how to model that
        <param name="random" type="text" value="" label="random - The root name for random tests"/>
        -->
        <param name="count" type="data" format="mothur.count_table" optional="true" label="count - a count_table" help="generated by count.seqs"/>
    </inputs>
    <outputs>
        <data format="html" name="logfile" label="${tool.name} on ${on_string}: logfile" />
        <data format="tabular" name="psummary" label="${tool.name} on ${on_string}: psummary">
        </data>
        <data format="tabular" name="parsimony" label="${tool.name} on ${on_string}: parsimony">
        </data>
        <!-- random uses input prompts, not sure how to model that
        <data format="tabular" name="random" label="${tool.name} on ${on_string}: random">
        </data>
        -->
    </outputs>
    <tests>
    </tests>
    <help>
<![CDATA[

@MOTHUR_OVERVIEW@

**Command Documenation**

The parsimony_ command implements the parsimony method (aka P-test), which was previously implemented in TreeClimber and is also available in MacClade and on the UniFrac website. The parsimony method is a generic test that describes whether two or more communities have the same structure. The significance of the test statistic can only indicate the probability that the communities have the same structure by chance. The value does not indicate a level of similarity. 

.. _parsimony: http://www.mothur.org/wiki/Parsimony

v.1.20.0: Added count parameter

]]>
    </help>
    <expand macro="citations" />
</tool>
