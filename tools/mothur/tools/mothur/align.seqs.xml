<tool profile="16.07" id="mothur_align_seqs" name="Align.seqs" version="@WRAPPER_VERSION@.0">
    <description>Align sequences to a template alignment</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <expand macro="version_command"/>
    <command detect_errors="aggressive"><![CDATA[
        ## cd to mothur directory otherwise it cannot find
        ## relative blast location on execution
        loc=`which mothur`;
        loc=\${loc%/mothur};
        cd \$loc;
        echo 'align.seqs(
            fasta=$candidate,
            reference=$alignment.template,
            align=$align,
            #if $search.method == "kmer":
                ksize=$search.ksize,
            #else:
                search=$search.method,
            #end if
            #if $scoring.adjust == "yes":
                match=$scoring.match,
                mismatch=$scoring.mismatch,
                gapopen=$scoring.gapopen,
                gapextend=$scoring.gapextend,
            #end if
            #if $reverse.flip == "yes":
                flip=true,
                threshold=$reverse.threshold,
            #end if
            processors='\${GALAXY_SLOTS:-8}'
        )'
        | sed 's/ //g'  ## mothur trips over whitespace
        | mothur &&

        ## move output files to correct destination
        prefix="$candidate" &&
        mv mothur.*.logfile "$logfile" &&
        mv \${prefix%.dat}.align "$out_file" &&
        mv \${prefix%.dat}.align.report "$report"
    ]]></command>
    <inputs>
        <param name="candidate" type="data" format="fasta" label="fasta - Candiate Sequences"/>
        <conditional name="alignment">
            <param name="source" type="select" label="Select Reference Template from" help="">
                <option value="ref">Cached Reference</option>
                <option value="history">Your History</option>
            </param>
            <when value="ref">
                <param name="template" type="select" label="reference - Select an alignment database " help="">
                    <options from_data_table="mothur_aligndb"/>
                </param>
            </when>
            <when value="history">
                <param name="template" type="data" format="fasta" label="reference - Reference to align with" help=""/>
            </when>
        </conditional>
        <conditional name="search">
            <param name="method" type="select" label="Select a search method" help="">
                <option value="kmer" selected="true">kmer (default)</option>
                <option value="suffix">suffix tree</option>
                <option value="blast">blast</option>
            </param>
            <when value="kmer">
                <param name="ksize" type="integer" value="8" min="5" max="12" label="ksize - kmer length between 5 and 12"/>
            </when>
            <when value="suffix"/>
            <when value="blast"/>
        </conditional>
        <param name="align" type="select" label="align - Select a pairwise alignment method" help="">
            <option value="needleman" selected="true">needleman (default)</option>
            <option value="gotoh">gotoh</option>
            <option value="blast">blast</option>
        </param>
        <conditional name="scoring">
            <param name="adjust" type="select" label="Alignment scoring values" help="">
                <option value="no">use defaults</option>
                <option value="yes">adjust values</option>
            </param>
            <when value="yes">
                <param name="match" type="integer" value="1" label="match - Pairwise alignment reward for a match"/>
                <param name="mismatch" type="integer" value="-1" label="mismatch - Pairwise alignment penalty for a mismatch"/>
                <param name="gapopen" type="integer" value="-5" label="gapopen - Pairwise alignment penalty for opening a gap"/>
                <param name="gapextend" type="integer" value="-2" label="gapextend - Pairwise alignment penalty for extending a gap"/>
            </when>
            <when value="no"/>
        </conditional>
        <conditional name="reverse">
            <param name="flip" type="select" label="flip - Try to align against the reverse complement" help="">
                <option value="no">No</option>
                <option value="yes">Yes values</option>
            </param>
            <when value="yes">
                <param name="threshold" type="float" value="0.5" min="0.0" max="1.0" label="threshold - Cutoff (0. - 1.) at which an alignment is deemed 'bad' and the reverse complement may be tried." help="The default for the threshold parameter is 0.50, meaning at least 50% of the bases must remain or the sequence is reported as potentially reversed"/>
            </when>
            <when value="no"/>
        </conditional>
    </inputs>
    <outputs>
        <data name="logfile" format="txt" label="${tool.name} on ${on_string}: logfile"/>
        <data name="out_file" format="mothur.align" label="${tool.name} on ${on_string}: align"/>
        <data name="report" format="mothur.align.report" label="${tool.name} on ${on_string}: align.report"/>
    </outputs>
    <tests>
        <test>
            <param name="candidate" value="Mock_S280_L001_R1_001_small.trim.contigs.good.fasta"/>
            <param name="source" value="history"/>
            <param name="template" value="HMP_MOCK.v35.align"/>
            <output name="out_file" md5="c500a4ae34a16884171f5f9c91f1636b" ftype="mothur.align"/>
            <output name="report" file="Mock_S280_L001_R1_001_small.trim.contigs.good.align.report" ftype="mothur.align.report"/>
            <expand macro="logfile-test"/>
        </test>
        <test>
            <param name="candidate" value="Mock_S280_L001_R1_001_small.trim.contigs.good.fasta"/>
            <param name="source" value="history"/>
            <param name="template" value="HMP_MOCK.v35.align"/>
            <param name="method" value="kmer"/>
            <param name="adjust" value="yes"/>
            <param name="match" value="2"/>
            <param name="mismatch" value="-15"/>
            <param name="gapopen" value="-6"/>
            <param name="gapextend" value="-3"/>
            <output name="out_file" md5="3ce542a29ed1e3fb71c3c711ae9e5c3c" ftype="mothur.align"/>
            <output name="report" md5="6d7b4f0a51e81d7984a4f77758b8cfaf" ftype="mothur.align.report"/>
            <expand macro="logfile-test"/>
        </test>
        <test>
            <param name="candidate" value="Mock_S280_L001_R1_001_small.trim.contigs.good.fasta"/>
            <param name="source" value="history"/>
            <param name="template" value="HMP_MOCK.v35.align"/>
            <param name="method" value="suffix"/>
            <param name="align" value="gotoh"/>
            <param name="adjust" value="yes"/>
            <param name="match" value="2"/>
            <param name="mismatch" value="-15"/>
            <param name="gapopen" value="-6"/>
            <param name="gapextend" value="-3"/>
            <output name="out_file" md5="6aea1563e1d2e65e331968961da715d3" ftype="mothur.align"/>
            <output name="report" md5="714474e4ac446f5a112f9c44b11a6fae" ftype="mothur.align.report"/>
            <expand macro="logfile-test"/>
        </test>
        <test><!-- test blast -->
            <param name="candidate" value="Mock_S280_L001_R1_001_small.trim.contigs.good.fasta"/>
            <param name="source" value="history"/>
            <param name="template" value="HMP_MOCK.v35.align"/>
            <param name="method" value="blast"/>
            <param name="align" value="blast"/>
            <param name="flip" value="yes"/>
            <param name="threshold" value="0.5"/>
            <output name="out_file" md5="3b89c0afbec5f46e9c0c2974a234bc6e" ftype="mothur.align"/>
            <output name="report" md5="9ec830c9a278e20d8499ba55fef6f501" ftype="mothur.align.report"/>
            <expand macro="logfile-test"/>
        </test>
    </tests>
    <help>
<![CDATA[

@MOTHUR_OVERVIEW@

**Command Documenation**

The align.seqs_ command aligns a user-supplied fasta-formatted candidate sequence file to a user-supplied fasta-formatted template_alignment_.

The general approach is to
 i) find the closest template for each candidate using kmer searching, blastn, or suffix tree searching;
 ii) to make a pairwise alignment between the candidate and de-gapped template sequences using the Needleman-Wunsch, Gotoh, or blastn algorithms; and
 iii) to re-insert gaps to the candidate and template pairwise alignments using the NAST algorithm so that the candidate sequence alignment is compatible with the original template alignment.

In general the alignment is very fast - we are able to align over 186,000 full-length sequences to the SILVA alignment in less than 3 hrs with a quality as good as the SINA aligner. Furthermore, this rate can be accelerated using multiple processors. While the aligner doesn't explicitly take into account the secondary structure of the 16S rRNA gene, if the template database is based on the secondary structure, then the resulting alignment will at least be implicitly based on the secondary structure.

.. _template_alignment: http://www.mothur.org/wiki/Alignment_database
.. _align.seqs: http://www.mothur.org/wiki/Align.seqs

]]>
    </help>
    <expand macro="citations"/>
</tool>
