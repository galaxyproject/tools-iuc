<tool id="mothur_sort_seqs" name="Sort.seqs" version="@WRAPPER_VERSION@.0">
    <description>put sequences in different files in the same order</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements" />

    <command interpreter="python"><![CDATA[
        mothur_wrapper.py 
        #import re, os.path
        #set results = ["'^mothur.\S+\.logfile$:'" + $logfile.__str__]
        ## adds .sorted before the last extension to the input file (except group has .pick) 
        --cmd='sort.seqs'
        --outputdir='$logfile.extra_files_path'
        #if $fasta_in.__str__ != "None" and len($fasta_in.__str__) > 0:
            --fasta="$fasta_in"
            #set results = $results + ["'" + $re.sub(r'(^.*)\.(.*?)',r'\1.sorted.\2',$os.path.basename($fasta_in.__str__)) + ":'" + $fasta_out.__str__]
        #end if
        #if $qfile_in.__str__ != "None" and len($qfile_in.__str__) > 0:
            --qfile="$qfile_in"
            #set results = $results + ["'" + $re.sub(r'(^.*)\.(.*?)',r'\1.sorted.\2',$os.path.basename($qfile_in.__str__)) + ":'" + $qfile_out.__str__]
        #end if
        #if $flow_in.__str__ != "None" and len($flow_in.__str__) > 0:
            --flow="$flow_in"
            #set results = $results + ["'" + $re.sub(r'(^.*)\.(.*?)',r'\1.sorted.\2',$os.path.basename($flow_in.__str__)) + ":'" + $flow_out.__str__]
        #end if
        #if $name_in.__str__ != "None" and len($name_in.__str__) > 0:
            --name="$name_in"
            #set results = $results + ["'" + $re.sub(r'(^.*)\.(.*?)',r'\1.sorted.\2',$os.path.basename($name_in.__str__)) + ":'" + $name_out.__str__]
        #end if
        #if $group_in.__str__ != "None" and len($group_in.__str__) > 0:
            --group="$group_in"
            #set results = $results + ["'" + $re.sub(r'(^.*)\.(.*?)',r'\1.pick.\2',$os.path.basename($group_in.__str__)) + ":'" + $group_out.__str__]
        #end if
        #if $taxonomy_in.__str__ != "None" and len($taxonomy_in.__str__) > 0:
            --taxonomy="$taxonomy_in"
            #set results = $results + ["'" + $re.sub(r'(^.*)\.(.*?)',r'\1.sorted.\2',$os.path.basename($taxonomy_in.__str__)) + ":'" + $taxonomy_out.__str__]
        #end if
        #if $accnos.__str__ != "None" and len($accnos.__str__) > 0:
            --accnos="$accnos"
        #end if
        "$large"
        --result=#echo ','.join($results)
        #if $count.__str__ != "None" and len($count.__str__) > 0:
            --count="$count"
        #end if
    ]]></command>
    <inputs>
        <param name="fasta_in" type="data" format="fasta" optional="true" label="fasta - sequences"/>
        <param name="qfile_in" type="data" format="qual" optional="true" label="qfile - sequence quality"/>
        <param name="flow_in" type="data" format="mothur.sff.flow" optional="true" label="flow - sff flowgram "/>
        <param name="group_in" type="data" format="mothur.groups" optional="true" label="groups - sequence groupings"/>
        <param name="name_in" type="data" format="mothur.names" optional="true" label="names - name reference"/>
        <param name="taxonomy_in" type="select" format="mothur.seq.taxonomy" optional="true" label="taxonomy - taxonomy reference"/>
        <param name="accnos" type="data" format="mothur.accnos" optional="true" label="accnos - sort "/>
        <param name="large" type="boolean" checked="false" truevalue="--large=true" falsevalue="" label="large - Datasets are large and may not fit in RAM"/>
<param name="count" type="data" format="mothur.count_table" optional="true" label="count - a count_table" help="generated by count.seqs"/>
    </inputs>
    <outputs>
        <data format="html" name="logfile" label="${tool.name} on ${on_string}: logfile" />
        <data format_source="fasta_in" name="fasta_out" label="${tool.name} on ${on_string}: sorted.fasta">
                <filter>fasta_in != None</filter>
        </data>
        <data format_source="qfile_in" name="qfile_out" label="${tool.name} on ${on_string}: sorted.qfile">
                <filter>qfile_in != None</filter>
        </data>
        <data format_source="flow_in" name="flow_out" label="${tool.name} on ${on_string}: sorted.flow">
                <filter>flow_in != None</filter>
        </data>
        <data format_source="group_in" name="group_out" label="${tool.name} on ${on_string}: sorted.group">
                <filter>group_in != None</filter>
        </data>
        <data format_source="name_in" name="name_out" label="${tool.name} on ${on_string}: sorted.name">
                <filter>name_in != None</filter>
        </data>
        <data format_source="taxonomy_in" name="taxonomy_out" label="${tool.name} on ${on_string}: sorted.taxonomy">
                <filter>taxonomy_in != None</filter>
        </data>
    </outputs>
    <tests>
    </tests>
    <help>
<![CDATA[

@MOTHUR_OVERVIEW@

**Command Documenation**

The sort.seqs_ command puts sequences from a fasta, name, group, quality, flow or taxonomy file in the same order.
You can provide an accnos file to indicate the order you want, otherwise mothur will use the order of the first file it reads.

.. _sort.seqs: http://www.mothur.org/wiki/Sort.seqs

]]>
    </help>
    <expand macro="citations" />
</tool>
