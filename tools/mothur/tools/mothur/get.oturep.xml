<tool id="mothur_get_oturep" name="Get.oturep" version="@WRAPPER_VERSION@.0"  force_history_refresh="true">
    <description>Generate a fasta with a representative sequence for each OTU</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements" />

    <command interpreter="python"><![CDATA[
        mothur_wrapper.py 
        --cmd='get.oturep'
        --result='^mothur.\S+\.logfile$:'$logfile
        --outputdir='$logfile.extra_files_path'
        #if $as_datasets.__str__ == "yes":
            --datasetid='$logfile.id' --new_file_path='$__new_file_path__'
            --new_datasets='^\S+?\.((unique|[0-9.]*)(\S+)\.rep\.fasta)$:${fasta.ext}','^\S+?\.((unique|[0-9.]*)(\S+)\.rep\.names)$:names'
        #end if
        #if $fasta.__str__ != "None" and len($fasta.__str__) > 0:
            --fasta="$fasta"
        #end if
        --list="$otu"
        #if $input.source == 'column':
            --column="$input.dist"
            --name="$input.name"
        #elif $input.source == 'phylip':
            --phylip="$input.dist"
            #if $input.name.__str__ != "None" and len($input.name.__str__) > 0:
                --name="$input.name"
            #end if
        #end if
        #if $label.__str__ != "None" and len($label.__str__) > 0:
            --label='$label'
        #end if
        #if $pick.type == 'yes':
            #if $pick.group.__str__ != "None" and len($pick.group.__str__) > 0:
                --group="$pick.group"
            #end if
            #if $pick.groups.__str__ != "None" and len($pick.groups.__str__) > 0:
                --groups="$pick.groups"
            #end if
        #end if
        #if $sorted.__str__ != "None" and len($sorted.__str__) > 0:
            --sorted="$sorted"
        #end if
        #if $method.__str__ != "None" and len($method.__str__) > 0:
            --method="$method"
        #end if
        "$large"
        #if $count.__str__ != "None" and len($count.__str__) > 0:
            --count="$count"
        #end if
    ]]></command>
    <inputs>
        <!-- get.relabund  relabund type should also work -->
        <param name="otu" type="data" format="mothur.list" label="list - OTU List"/>
        <conditional name="input">
            <param name="source" type="select" label="Distance Matrix Format">
                <option value="column">Pairwise Column Distance Matrix</option>
                <option value="phylip">Phylip Distance Matrix</option>
            </param>
            <when value="column">
                <param name="dist" type="data" format="mothur.pair.dist" label="column - Distance Matrix"/>
                <param name="name" type="data" format="mothur.names" label="name - Sequences Name reference"/>
            </when>
            <when value="phylip">
                <param name="dist" type="data" format="mothur.lower.dist,mothur.square.dist" label="phylip - Distance Matrix"/>
                <param name="name" type="data" format="mothur.names" optional="true" label="name - Names"/>
            </when>
        </conditional>
        <param name="fasta" type="data" format="fasta" optional="true" label="fasta - Fasta"/>
        <conditional name="pick">
            <param name="type" type="select" label="Parse a group file into abundant and rare groups?" help="">
                <option value="no" selected="true">No</option>
                <option value="yes">Yes</option>
            </param>
            <when value="no"/>
            <when value="yes">
                <param name="group" type="data" format="mothur.groups" label="group - Group file for the OTU List"/>
                <param name="groups" type="select" label="groups - Group Selection (all used if none are selected)" multiple="true">
                    <options>
                        <filter type="data_meta" ref="group" key="groups" />
                    </options>
                </param>
            </when>
        </conditional> <!-- pick -->
        <param name="label" type="select" label="label - OTU Labels" multiple="true">
            <expand macro="labeloptions"/>
        </param>
        <param name="sorted" type="select" label="sorted - Sort Sequences by">
            <option value="">Don't sort</option>
            <option value="name">Sequence Name</option>
            <option value="number">Bin Number</option>
            <option value="size">Bin Size</option>
            <option value="group">Group</option>
        </param>
        <param name="large" type="boolean" checked="false" truevalue="--large=true" falsevalue="" label="large - Distance Matrix is very Large"/>
        <param name="as_datasets" type="boolean" truevalue="yes" falsevalue="no" checked="true" label="Create a new history dataset for each label"/>
        <param name="count" type="data" format="mothur.count_table" optional="true" label="count - a count_table" help="generated by count.seqs"/>
        <param name ="method" type="select" label="method - select the method of selecting the representative sequence" help="the distance method finds the sequence with the smallest maximum distance to other sequences. The abundance method chooses the abundant sequence in the OTU as the representative" optional = "true">
            <option value="distance">distance</option>
            <option value="abundance">abundance</option>
        </param>
    </inputs>
    <outputs>
        <data format="html" name="logfile" label="${tool.name} on ${on_string}: logfile" />
    </outputs>
    <tests>
    </tests>
    <help>
<![CDATA[

@MOTHUR_OVERVIEW@


**Command Documenation**

The get.oturep_ command generates a fasta-formatted sequence file containing only a representative sequence for each OTU.  The opposite of the bin.seqs command.

.. _get.oturep: http://www.mothur.org/wiki/Get.oturep

v1.23.0: Updated to Mothur 1.33, added count and method parameter
]]>
    </help>
    <expand macro="citations" />
</tool>
