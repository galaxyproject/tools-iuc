<tool id="mothur_collect_shared" name="Collect.shared" version="@WRAPPER_VERSION@.0" force_history_refresh="True">
    <description>Generate collector's curves for calculators on OTUs</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements" />

    <command interpreter="python"><![CDATA[
        mothur_wrapper.py 
        --cmd='collect.shared'
        --result='^mothur.\S+\.logfile$:'$logfile
        --outputdir='$logfile.extra_files_path'
        --datasetid='$logfile.id' --new_file_path='$__new_file_path__'
        --new_datasets='^\S+?\.(anderberg|braycurtis|jabund|jclass|jest|kstest|kulczynski|kulczynskicody|lennon|morisitahorn|ochiai|shared\.ace|shared\.chao|shared\.nseqs|shared\.sobs|sorabund|sorclass|sorest|thetan|thetayc|whittaker)$:tabular'
        --shared="$otu"
        #if $label.__str__ != "None" and len($label.__str__) > 0:
            --label='$label'
        #end if
        #if $calc.__str__ != "None" and len($calc.__str__) > 0:
            --calc='$calc'
        #end if
        "$all"
        #if float($freq.__str__) > 0:
            --freq="$freq"
        #end if
        #if $groups.__str__ != "None" and len($groups.__str__) > 0:
            --groups="$groups"
        #end if
    ]]></command>
    <inputs>
        <param name="otu" type="data" format="mothur.shared" label="shared - OTU Shared"/>
        <param name="label" type="select" label="label - OTU Label filter" multiple="true">
            <expand macro="labeloptions"/>
        </param>
        <param name="groups" type="select" label="groups - Groups filter (uses all groups if none are selected)" multiple="true">
            <help>To filter: select select at least 2 groups</help>
            <options>
                <filter type="data_meta" ref="otu" key="groups" />
            </options>
        </param>
        <param name="calc" type="select" label="calc - Calculators (Uses defaults if none are selected)" multiple="true">
            <option value="sharedsobs" selected="true">sharedsobs - Shared community richness the observed richness shared between two or more samples</option>
            <option value="sharedchao" selected="true">sharedchao - Shared community richness the two or more sample shared Chao1 richness estimator</option>
            <option value="sharedace" selected="true">sharedace - Shared community richness the two sample shared ACE richness estimator</option>
            <option value="anderberg">anderberg - Community Membership Similarity the Anderberg similarity coefficient</option>
            <option value="jclass" selected="true">jclass - Community Membership Similarity the traditional Jaccard similarity coefficient based on the observed richness</option>
            <option value="jest" selected="true">jest - Community Membership Similarity the Jaccard similarity coefficient based on the Chao1 estimated richnesses</option>
            <option value="kulczynski">kulczynski - Community Membership Similarity the Kulczynski similarity coefficient</option>
            <option value="kulczynskicody">kulczynskicody - Community Membership Similarity the Kulczynski-Cody similarity coefficient</option>
            <option value="kstest">kstest - Community Membership Similarity Kolmogorov-Smirnov test</option>
            <option value="lennon">lennon - Community Membership Similarity the Lennon similarity coefficient</option>
            <option value="ochiai">ochiai - Community Membership Similarity the Ochiai similarity coefficient</option>
            <option value="sorclass" selected="true">sorclass - Community Membership Similarity the Sorenson similarity coefficient based on the observed richness</option>
            <option value="sorest" selected="true">sorest - Community Membership Similarity the Sorenson similarity coefficient based on the Chao1 estimated richnesses</option>
            <option value="whittaker">whittaker - Community Membership Similarity the Whittaker similarity coefficient</option>
            <option value="hamming">hamming - Community Membership Similarity -</option>
            <option value="memchi2">memchi2 - Community Membership Similarity -</option>
            <option value="memchord">memchord - Community Membership Similarity -</option>
            <option value="memeuclidean">memeuclidean - Community Membership Similarity -</option>
            <option value="mempearson">mempearson - Community Membership Similarity -</option>
            <option value="braycurtis">braycurtis - Community Structure Similarity the Bray-Curtis similarity coefficient</option>
            <option value="jabund" selected="true">jabund - Community Structure Similarity the abundance-based Jaccard similarity coefficient</option>
            <option value="morisitahorn">morisitahorn - Community Structure Similarity the Morisita-Horn similarity coefficient</option>
            <option value="sorabund" selected="true">sorabund - Community Structure Similarity the abundance-based Sorenson similarity coefficient</option>
            <option value="thetan" selected="true">thetan - Community Structure Similarity the Smith theta similarity coefficient</option>
            <option value="thetayc" selected="true">thetayc - Community Structure Similarity the Yue &amp; Clayton theta similarity coefficient</option>
            <option value="canberra">canberra - Community Structure Similarity -</option>
            <option value="gower">gower - Community Structure Similarity -</option>
            <option value="hellinger">hellinger - Community Structure Similarity -</option>
            <option value="manhattan">manhattan - Community Structure Similarity -</option>
            <option value="odum">odum - Community Structure Similarity -</option>
            <option value="soergel">soergel - Community Structure Similarity -</option>
            <option value="spearman">spearman - Community Structure Similarity -</option>
            <option value="speciesprofile">speciesprofile - Community Structure Similarity -</option>
            <option value="structchi2">structchi2 - Community Structure Similarity -</option>
            <option value="structchord">structchord - Community Structure Similarity -</option>
            <option value="structeuclidean">structeuclidean - Community Structure Similarity -</option>
            <option value="structkulczynski">structkulczynski - Community Structure Similarity -</option>
            <option value="structpearson">structpearson - Community Structure Similarity -</option>
            <option value="sharednseqs">sharednseqs - Utility the number of sequences in two samples</option>
            <option value="sharedobserved">sharedobserved - Utility the number of sequences in two samples</option>
            <option value="Square Root Jensen-Shannon Divergence">Square Root Jensen-Shannon Divergence</option>
        </param>
            <option value="Square Root Jensen-Shannon Divergence">Jensen-Shannon Divergence</option>
        <param name="freq" type="float" value="0.0" label="freq - "/>
        <param name="all" type="boolean" truevalue="--all=true" falsevalue="" checked="false" label="all - Include RAM intensive sharedsobs and sharedchao calculations"/>
    </inputs>
    <outputs>
        <data format="html" name="logfile" label="${tool.name} on ${on_string}: logfile" />
    </outputs>
    <tests>
    </tests>
    <help>
<![CDATA[

@MOTHUR_OVERVIEW@

**Command Documenation**

The collect.shared_ command generates collector's curves for calculators_, which describe the similarity between communities or their shared richness. Collector's curves describe how richness or diversity change as you sample additional individuals. If a collector's curve becomes parallel to the x-axis, you can be reasonably confident that you have done a good job of sampling and can trust the last value in the curve.  For calc parameter choices see: http://www.mothur.org/wiki/Calculators

.. _calculators: http://www.mothur.org/wiki/Calculators
.. _collect.shared: http://www.mothur.org/wiki/Collect.shared
]]>
    </help>
    <expand macro="citations" />
</tool>
