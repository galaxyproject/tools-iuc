<tool id="mothur_remove_lineage" name="Remove.lineage" version="@WRAPPER_VERSION@.0">
    <description>Picks by taxon</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements" />

    <command interpreter="python"><![CDATA[
        mothur_wrapper.py 
        #import re, os.path
        #set results = ["'^mothur.\S+\.logfile$:'" + $logfile.__str__]
        ## adds .pick before the last extension to the input file
        --cmd='remove.lineage'
        --outputdir='$logfile.extra_files_path'
        #if $file.filetype.__str__ == "usetaxonomy"
            --taxonomy="$file.taxonomy"
            #set results = $results + ["'" + $re.sub(r'(^.*)\.(.*?)',r'\1.pick.\2',$os.path.basename($taxonomy.__str__)) + ":'" + $taxonomy_out.__str__]
        #else
            --constaxonomy="$file.constaxonomy"
            --shared="$file.shared"
            --list="$file.list"
            #set results = $results + ["'" + $re.sub(r'(^.*)\.(.*?)',r'\1.pick.\2',$os.path.basename($constaxonomy.__str__)) + ":'" + $taxonomy_out.__str__]
        #end if
        --taxon="'$re.sub('(\s|,)+',',',$re.sub('\(\d+\)','',$taxon.value.__str__))'"
        #if $fasta_in.__str__ != "None" and len($fasta_in.__str__) > 0:
            --fasta="$fasta_in"
            #set results = $results + ["'" + $re.sub(r'(^.*)\.(.*?)',r'\1.pick.\2',$os.path.basename($fasta_in.__str__)) + ":'" + $fasta_out.__str__]
        #end if
        #if $group_in.__str__ != "None" and len($group_in.__str__) > 0:
            --group="$group_in"
            #set results = $results + ["'" + $re.sub(r'(^.*)\.(.*?)',r'\1.pick.\2',$os.path.basename($group_in.__str__)) + ":'" + $group_out.__str__]
        #end if
        #if $alignreport_in.__str__ != "None" and len($alignreport_in.__str__) > 0:
            --alignreport="$alignreport_in"
            #set results = $results + ["'" + $re.sub(r'(^.*)\.(.*?)$',r'\1.pick.align.report',$os.path.basename($alignreport_in.__str__)) + ":'" + $alignreport_out.__str__]
        #end if
        #if $list_in.__str__ != "None" and len($list_in.__str__) > 0:
            --list="$list_in"
            #set results = $results + ["'" + $re.sub(r'(^.*)\.(.*?)',r'\1.pick.\2',$os.path.basename($list_in.__str__)) + ":'" + $list_out.__str__]
        #end if
        #if $name_in.__str__ != "None" and len($name_in.__str__) > 0:
            --name="$name_in"
        #set results = $results + ["'" + $re.sub(r'(^.*)\.(.*?)',r'\1.pick.\2',$os.path.basename($name_in.__str__)) + ":'" + $name_out.__str__]
            "$dups"
        #end if
        --result=#echo ','.join($results)
        #if $count.__str__ != "None" and len($count.__str__) > 0:
            --count="$count"
        #end if
    ]]></command>
    <inputs>
        <conditional name ="file">
        <param name = "filetype" type = "select" label="choose which file is used">
            <option value = "usetaxonomy" selected = "true">taxonomy</option>
            <option value = "useconstaxonomy">constaxonomy</option>
        </param>
        <when value = "usetaxonomy">
            <param name="taxonomy" type="data" format="mothur.seq.taxonomy" label="taxonomy - Taxonomy"/>
        </when>
        <when value = "useconstaxonomy">
            <param name="constaxonomy" type="data" format="mothur.cons.taxonomy" label="constaxonomy - Constaxonomy file. Provide either a constaxonomy file or a taxonomy file"/>
            <param name="shared" type="data" format="mothur.shared" label="shared - shared file" optional="true"/>
            <param name="list" type="data" format="mothur.list" label="list - list file" optional="true"/>
        </when>
    </conditional>
        <!--
        <param name="taxons" type="select" size="120" multiple="true" label="Browse Taxons from Taxonomy">
            <options from_dataset="taxonomy">
                <column name="name" index="1"/>
                <column name="value" index="1"/>
                <filter type="unique_value" name="unique_taxon" column="1" />
                <filter type="sort_by" name="sorted_taxon" column="1" />
            </options>
        </param>
        -->
        <param name="taxon" type="text" area="True" size="5x120" label="taxon - Select Taxons for filtering" help="Enter 1 or more taxons separated by whitespace or commas"/>
        <param name="fasta_in" type="data" format="fasta" optional="true" label="fasta - Fasta Sequences"/>
        <param name="group_in" type="data" format="mothur.groups" optional="true" label="group - Groups"/>
        <param name="alignreport_in" type="data" format="mothur.align.report" optional="true" label="alignreport - Align Report"/>
        <param name="list_in" type="data" format="mothur.list" optional="true" label="list - OTU List"/>
        <param name="name_in" type="data" format="mothur.names" optional="true" label="name - Sequences Name reference"/>
        <param name="dups" type="boolean" truevalue="" falsevalue="--dups=false" checked="true" label="dups - Apply to duplicate names"/>
        <param name="count" type="data" format="mothur.count_table" optional="true" label="count - a count_table" help="generated by count.seqs"/>
    </inputs>
    <outputs>
        <data format="html" name="logfile" label="${tool.name} on ${on_string}: logfile" />
        <data format="mothur.seq.taxonomy" name="taxonomy_out" label="${tool.name} on ${on_string}: pick.taxonomy"/>
        <data format_source="fasta_in" name="fasta_out" label="${tool.name} on ${on_string}: pick.fasta">
            <filter>fasta_in != None</filter>
        </data>
        <data format="mothur.groups" name="group_out" label="${tool.name} on ${on_string}: pick.group">
            <filter>group_in != None</filter>
        </data>
        <data format="mothur.list" name="list_out" label="${tool.name} on ${on_string}: pick.list">
            <filter>list_in != None</filter>
        </data>
        <data format="mothur.names" name="name_out" label="${tool.name} on ${on_string}: pick.name">
            <filter>name_in != None</filter>
        </data>
        <data format="mothur.align.report" name="alignreport_out" label="${tool.name} on ${on_string}: pick.align.report">
            <filter>alignreport_in != None</filter>
        </data>
    </outputs>
    <tests>
    </tests>
    <help>
<![CDATA[

@MOTHUR_OVERVIEW@

**Command Documenation**

The remove.lineage_ command reads a taxonomy_ file and a taxon and generates a new file that contains only the sequences in the that are not from that taxon. You may also include either a fasta, name_, group_, list_, or align.report_ file to this command and mothur will generate new files for each of those containing only the selected sequences.

.. _taxonomy: http://www.mothur.org/wiki/Taxonomy_outline
.. _name: http://www.mothur.org/wiki/Name_file
.. _group: http://www.mothur.org/wiki/Group_file
.. _list: http://www.mothur.org/wiki/List_file
.. _align.report: http://www.mothur.org/wiki/Align.seqs
.. _remove.lineage: http://www.mothur.org/wiki/Remove.lineage

]]>
    </help>
    <expand macro="citations" />
</tool>
