<tool id="prodigal" name="Prodigal Gene Predictor" version="0.1.0+galaxy0" python_template_version="3.5" profile="21.05">
    <description>A tool for gene prediction in microbial genomes</description>
    <requirements>
        <requirement type="package" version="2.6.3">prodigal</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        prodigal -i '$input1' -o '$output1' -f '$format' -p '$mode' -g '$trans_table' -e '$gap_mode'
    ]]></command>
    <inputs>
        <param type="data" name="input1" format="fa" />
        <param type="select" name="format" label="Specify output format" >
            <option value="gbk">GBK</option>
            <option value="gff">GFF</option>
            <option value="sqn">SQN</option>
            <option value="sco">SCO</option>
        </param>
        <param type="select" name="mode" label="Specify mode" >
            <option value="normal">Normal : Single genome, any number of
                sequences</option>
            <option value="train">Train : Do only training.  Input
                should be multiple FASTA of one or more closely related genomes</option>
            <option value="anon">Anon : Anonymous sequences, analyze
                using preset training files, ideal for metagenomic dataor single short sequences</option>
        </param>
        <param type="select" name="trans_table" label="Specify a translation table to use" >
            <option value="auto">Auto : Tries 11 then 4</option>
            <option value="11">11 : Standard Bacteria/Archaea</option>
            <option value="4">4 : Mycoplasma/Spiroplasma</option>
            <option value="#"># : Other genetic codes 1-25</option>
        </param>
        <param type="select" name="gap_mode" label="Specify gap-handling behavior" >
            <option value="0">0 : Partial genes run into gaps</option>
            <option value="1">1 : Genes cannot run into gaps</option>
            <option value="2">2 : Do not treat N's as gaps</option>
        </param>
    </inputs>
    <outputs>
        <data name="output1" format="gff" />
    </outputs>
    <tests>
        <test>
            <param name="input1" value="input.fa"/>
            <output name="output1" file="output.gff"/>
        </test>
    </tests>
    <help><![CDATA[
        
Usage:  prodigal [-a trans_file] [-c] [-d nuc_file] [-f output_type]
                 [-g tr_table] [-h] [-i input_file] [-m] [-n] [-o output_file]
                 [-p mode] [-q] [-s start_file] [-t training_file] [-v]

         -a:  Write protein translations to the selected file.
         -c:  Closed ends.  Do not allow genes to run off edges.
         -d:  Write nucleotide sequences of genes to the selected file.
         -f:  Select output format (gbk, gff, or sco).  Default is gbk.
         -g:  Specify a translation table to use (default 11).
         -h:  Print help menu and exit.
         -i:  Specify FASTA/Genbank input file (default reads from stdin).
         -m:  Treat runs of N as masked sequence; don't build genes across them.
         -n:  Bypass Shine-Dalgarno trainer and force a full motif scan.
         -o:  Specify output file (default writes to stdout).
         -p:  Select procedure (single or meta).  Default is single.
         -q:  Run quietly (suppress normal stderr output).
         -s:  Write all potential genes (with scores) to the selected file.
         -t:  Write a training file (if none exists); otherwise, read and use
              the specified training file.
         -v:  Print version number and exit.


    ]]></help>
    <citations>
        <citation type="doi">10.1186/1471-2105-11-119</citation>
        <citation type="bibtex">
@misc{githubProdigal,
  author = {LastTODO, FirstTODO},
  year = {TODO},
  title = {Prodigal},
  publisher = {GitHub},
  journal = {GitHub repository},
  url = {https://github.com/hyattpd/Prodigal},
}</citation>
    </citations>
</tool>