<tool id="autocycler_combine" name="AutoCycler Combine" version="@TOOL_VERSION@+galaxy0" profile="@PROFILE@">
    <description>combine multiple cluster GFA files into final assembly</description>
    <macros>
          <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <command detect_errors="exit_code"><![CDATA[
        mkdir -p out_dir &&
        #set cluster_directory = 'cluster_directory'
        mkdir $cluster_directory &&
        #for $value, $cluster_collection in enumerate($input_collection):
                #set $cluster_name = $cluster_collection.element_identifier
                mkdir -p $cluster_directory/$cluster_name &&
                #for $value,$input_file in enumerate($cluster_collection):
                        #if $input_file.is_of_type("yaml")
                                ln -s $input_file '$cluster_directory/$cluster_name/$(input_file.element_identifier).yaml' &&
                        #elif $input_file.ext == 'gfa1'
                                ln -s $input_file '$cluster_directory/$cluster_name/$(input_file.element_identifier).gfa' &&
                        #else
                                echo "${input_file} is not a fasta/gfa file" &&
                        #end if
                #end for
        #end for

        autocycler combine
	--autocycler_dir out_dir/ 
	--in_gfas cluster_directory/*/*.gfa

    ]]></command>
    <inputs>
	<param name="input_collection" type="data_collection" collection_type="list:list" label="AutoCycler collection"
	help="final gfa file in collection (from resolve step)"/>
    </inputs>
    <outputs>
	<data name="consensus_assembly_yaml" from_work_dir="out_dir/consensus_assembly.yaml" format="yaml" label="${tool.name} on ${on_string} : consensus assembly yaml"/>
	<data name="consensus_assembly_gfa" from_work_dir="out_dir/consensus_assembly.gfa" format="gfa1" label="${tool.name} on ${on_string} : consensus assembly gfa"/>
	<data name="consensus_assembly_fasta" from_work_dir="out_dir/consensus_assembly.fasta" format="fasta" label="${tool.name} on ${on_string} : consensus assembly fasta"/>
    </outputs>
    <tests>
        <test>
           <param name="input_collection">
                <collection type="list:list">
                        <element name="qc_pass">
                                <collection type="list">
                                        <element name="5_final" value="5_final.gfa" ftype="gfa1"/>
                                </collection>
                        </element>
                </collection>
	    </param>
	    <output name="consensus_assembly_yaml" value="consensus_assembly.yaml" ftype="yaml" >
		    <assert_contents>
			    <has_text text="consensus_assembly_bases: 8538"/>
			    <has_n_lines n="7"/>
		    </assert_contents>
	    </output>	    
	    <output name="consensus_assembly_gfa" value="consensus_assembly.gfa" ftype="gfa1" >
		    <assert_contents>
			    <has_size value="8581" delta="100"/>
		    </assert_contents>
	    </output>
	    <output name="consensus_assembly_fasta" value="consensus_assembly.fasta" ftype="fasta">
		    <assert_contents>
                    	<has_size value="8554"/>
                    	<has_line_matching expression="^>.*"/>
                    	<has_line_matching expression="^[ACGTN]+$"/>
                    </assert_contents>
	    </output>
        </test>
    </tests>
    <help><![CDATA[
**AutoCycler Combine Tool**

This tool combines multiple cluster GFA files into a final assembly.

**Inputs**

- One or more cluster GFA files (from previous AutoCycler steps)

**Outputs**
	    
- Final combined assembly in GFA format (i.e 5_final.gfa1)
- output files: 1_untrimmed_yaml.yaml, 2_trimmed_yaml.yaml, 1_untrimmed.gfa1, 2_trimmed.gfa1, 3_bridged.gfa1, 4_merged.gfa1

**Notes**

- While Autocycler combine is typically run using each cluster's final graph (5_final.gfa), it can also be run on earlier graphs (e.g. 4_merged.gfa) if desired.	    
- This is typically the final assembly step in the AutoCycler pipeline
- Multiple GFA files can be selected for combination
- The output represents the complete assembled sequence graph

.. class:: infomark

**More Information**

- `Autocycler combine`: https://github.com/rrwick/Autocycler/wiki/Autocycler-combine

**Citations**


    ]]></help>
	    <expand macro="citations"/>
</tool>
