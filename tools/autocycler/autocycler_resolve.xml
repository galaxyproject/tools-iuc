<tool id="autocycler_resolve" name="AutoCycler Resolve" version="@TOOL_VERSION@+galaxy0" profile="@PROFILE@">
    <description>resolve consensus sequences from trimmed clusters</description>
    <macros>
          <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <command detect_errors="exit_code"><![CDATA[
        mkdir -p out_dir &&

        #set cluster_directory = 'cluster_directory'
        mkdir $cluster_directory &&
        #for $value, $cluster_collection in enumerate($input_collection):
                #set $cluster_name = $cluster_collection.element_identifier
                mkdir -p $cluster_directory/$cluster_name &&
                #for $value,$input_file in enumerate($cluster_collection):
                        #if $input_file.is_of_type("yaml")
                                ln -s $input_file '$cluster_directory/$cluster_name/$(input_file.element_identifier).yaml' &&
                        #elif $input_file.ext == 'gfa1'
                                ln -s $input_file '$cluster_directory/$cluster_name/$(input_file.element_identifier).gfa' &&
                        #else
                                echo "${input_file} is not a fasta/gfa file" &&
                        #end if
                #end for
                autocycler resolve
	    	--cluster_dir '$cluster_directory/$cluster_name'
	    	&& cp -r '$cluster_directory/$cluster_name' out_dir/
        #end for



    ]]></command>
    <inputs>
        <param name="input_collection" type="data_collection" collection_type="list:list" label="Cluster directory"
               help="Directory containing 2_trimmed.gfa file (from trim step)"/> 
    </inputs>
    <outputs>
        <collection name="consensus_results" type="list:list" label="${tool.name} on ${on_string}: resolved clusters">
                <discover_datasets pattern="(?P&lt;identifier_0&gt;.*?)/(?P&lt;identifier_1&gt;.+)\.yaml$" format="yaml" directory="out_dir/" recurse="true" match_relative_path="true"/>
                <discover_datasets pattern="(?P&lt;identifier_0&gt;.*?)/(?P&lt;identifier_1&gt;.+)\.gfa$" format="gfa1" directory="out_dir/" recurse="true" match_relative_path="true"/>
        </collection>
    </outputs>
    <tests>
        <test>
           <param name="input_collection">
                <collection type="list:list">
                        <element name="qc_pass">
				<collection type="list">
                                        <element name="2_trimmed" value="2_trimmed.gfa" ftype="gfa1"/>
                                </collection>
                        </element>
                </collection>
            </param>
            <output_collection name="consensus_results">
                <collection type="list:list">
                        <element name="qc_pass">
				<collection type="list">
                                        <element name="3_bridged" file="3_bridged.gfa" ftype="gfa1">
                                                <has_size value="8589" delta="100"/>
                                        </element>
                                        <element name="4_merged" file="4_merged.gfa" ftype="gfa1">
                                                <has_size value="8589" delta="100"/>
                                        </element>
					<element name="5_final" file="5_final.gfa" ftype="gfa1">
						<has_size value="8589" delta="100"/>
					</element>
                                </collection>
                        </element>
                </collection>
            </output_collection>
        </test>
    </tests>
    <help><![CDATA[
**AutoCycler Resolve Tool**

This tool is erformed on a per-cluster basis. It aims to resolve repeats and ambiguities in the cluster by following these steps:

- Identifying anchors: unitigs which occur exactly once in each of the cluster's contigs.
	    
- Creating bridges: connections between anchors that follow the most common path.
	    
- Applying bridges: first unique bridges (those with no conflicts) and then the most supported conflicting bridges.
	    
- Merging linear sequences into 'consentigs'.
	    
This tool generates consensus sequences from trimmed assembly clusters.

**Inputs**
	    
- Cluster directory (must contain trimmed cluster data from trim step)

**Outputs**
	    
- Collection of consensus sequences in FASTA format (one per cluster)
- Resolution log file with processing details

**Notes**

- Examining the 4_merged.gfa file can reveal locations of structural heterogeneity in the genome â€“ sites where input assemblies disagreed on the ordering of anchor unitigs.

.. class:: infomark

**More Information**

- `Autocycler resolve`: https://github.com/rrwick/Autocycler/wiki/Autocycler-resolve

**Citations**

    ]]></help>
        <expand macro="citations"/>
</tool>
