<tool id="autocycler_trim" name="AutoCycler Trim" version="@TOOL_VERSION@+galaxy0" profile="@PROFILE@">
    <description>trim assemblies within clusters based on alignment</description>
    <macros>
          <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <command detect_errors="exit_code"><![CDATA[
        mkdir -p out_dir &&

	#set cluster_directory = 'cluster_directory'
	mkdir $cluster_directory &&
	#for $value, $cluster_collection in enumerate($input_collection):
		#set $cluster_name = $cluster_collection.element_identifier
		mkdir -p $cluster_directory/$cluster_name &&
		#for $value,$input_file in enumerate($cluster_collection):
                	#if $input_file.is_of_type("yaml")
	    			ln -s $input_file '$cluster_directory/$cluster_name/$(input_file.element_identifier).yaml' &&
                	#elif $input_file.ext == 'gfa1'
	    			ln -s $input_file '$cluster_directory/$cluster_name/$(input_file.element_identifier).gfa' &&
                	#else
                    		echo "${input_file} is not a fasta/gfa file" &&
	    		#end if
	    	#end for
                autocycler trim
                --cluster_dir '$cluster_directory/$cluster_name'
                --min_identity '$min_identity'
                --max_unitigs '$max_unitigs'
                --mad '$mad'
                --threads \${GALAXY_SLOTS:-2}
	 #end for
	&& cp -r '$cluster_directory'/* out_dir/
	&&
	### rename identifcal 1_untrimmed.yaml to 1_untrimmed_yaml.yaml in cluster folder
	if [ -d "out_dir" ]; then
                for file in out_dir/*/2_trimmed.yaml; do
                	mv \$file \${file%/*}/2_trimmed_yaml.yaml;
                done;
        fi


    ]]></command>
    <inputs>
	<param name="input_collection" type="data_collection" collection_type="list:list" label="Cluster directory"
               help="Directory containing 1_untrimmed.gfa file (from cluster step)"/>
 
        <param name="min_identity" type="float" min="0" max="1" value="0.75" label="Minimum alignment identity"
               help="Minimum identity for trimming alignments (0-1)"/>
        
        <param name="max_unitigs" type="integer" min="0" value="5000" label="Maximum unitigs for alignment"
               help="Set to 0 to disable trimming (default: 5000)"/>
        
        <param name="mad" type="float" min="0" value="5.0" label="Allowed length variability (MAD)"
               help="Median absolute deviations for length outliers (0 to disable)"/>    
    </inputs>
    <outputs>
        <collection name="trimmed_results" type="list:list" label="${tool.name} on ${on_string}: trimmed clusters">
		<discover_datasets pattern="(?P&lt;identifier_0&gt;.*?)/(?P&lt;identifier_1&gt;.+)\.yaml$" format="yaml" directory="out_dir/" recurse="true" match_relative_path="true"/>
		<discover_datasets pattern="(?P&lt;identifier_0&gt;.*?)/(?P&lt;identifier_1&gt;.+)\.gfa$" format="gfa1" directory="out_dir/" recurse="true" match_relative_path="true"/>
        </collection>
    </outputs>
    <tests>
        <test>
	   <param name="input_collection">
            	<collection type="list:list">
                	<element name="qc_pass">
				<collection type="list">
					<element name="1_untrimmed" value="1_untrimmed.gfa" ftype="gfa1"/>
                    		</collection>
			</element>
		</collection>
            </param>
            <param name="min_identity" value="0.75"/>
	    <param name="max_unitigs" value="5000"/>
	    <param name="mad" value="5.0"/>
	    <output_collection name="trimmed_results">
		<collection type="list:list">
			<element name="qc_pass">
				<collection type="list">
					<element name="2_trimmed" file="2_trimmed.gfa" ftype="gfa1"/>
				</collection>
			</element>
		</collection>
            </output_collection>
        </test>
    </tests>
    <help><![CDATA[
**AutoCycler Trim Tool**

Long-read contigs sometimes contain excess sequence which needs to be trimmed off. This often occurs with circular sequences (typical for bacteria) where there is overlap between the start and end of a contig. For small plasmids, this can sometimes involve the entire sequence being duplicated (or more) in a single contig. Linear sequences with hairpin ends can also create excess sequence which needs to be trimmed. This tool will trim assemblies within clusters based on alignment information.

**Inputs**

- Cluster directory (must contain 1_untrimmed.gfa from cluster step)

**Parameters**
	    
- Minimum identity: Alignment identity threshold for trimming (0-1, default: 0.75)
- Maximum unitigs: Limit for unitigs used in alignment (0 disables trimming, default: 5000)
- Length variability (MAD): Allowed size variation in median absolute deviations (0 disables, default: 5.0)

**Outputs**
	    
- Collection of trimmed GFA files (one per cluster)
- In each cluster, 1_untrimmed (yaml and gfa1), 2_trimmed (yaml and gfa1) file

**Notes**

- --max_unitigs 0 will turn off trimming. This is appropriate if you manually trimmed the sequences before running Autocycler.
- Using --mad 0 will turn off outlier exclusion, so all contigs will be included in the output 2_trimmed.gfa file.
- Autocycler trim cannot distinguish between artifactual and genuine duplications. E.g. if a plasmid really is doubled, Autocycler trim will still cut it down to a single copy.
- The 2_trimmed.gfa graph made by Autocycler trim contains GFA path lines for the trimmed input contigs, so it can be used with Autocycler decompress.
- The median absolute deviation is a good measure of how well trimming went. Ideally, this will be low (<50 bp or so). If it's high (e.g. 1000 bp), that suggests a lot of inconsistency in the contigs, which is a red flag.
	    - Since identity is calculated using unitigs not bases (see implementation below), the default value for --min_identity of 0.75 represents a relatively strong alignment. That parameter can be reduced to much lower levels (e.g. --min_identity 0.25) to find weaker alignments.

.. class:: infomark

**More Information**

- `Autocycler trim`: https://github.com/rrwick/Autocycler/wiki/Autocycler-trim

**Citations**


    ]]></help>
	    <expand macro="citations"/>
</tool>
