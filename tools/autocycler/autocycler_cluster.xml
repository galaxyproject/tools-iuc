<tool id="autocycler_cluster" name="AutoCycler Cluster" version="@TOOL_VERSION@+galaxy0" profile="@PROFILE@">
    <description>cluster assemblies based on compressed representations</description>
    <macros>
          <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <command detect_errors="exit_code"><![CDATA[
        mkdir -p out_dir &&

        #import re
        #set input_directory = 'assemblies'
        mkdir $input_directory &&

        #for $value, $input_file in enumerate($autocycler_dir):
                #if $input_file.is_of_type("yaml")
                    ln -s $input_file '$input_directory/$(input_file.element_identifier).yaml' &&
                #elif $input_file.ext == 'gfa1'
                    ln -s $input_file '$input_directory/$(input_file.element_identifier).gfa' &&
                #else
                    echo "${input_file} is not a fasta/gfa file"
                #end if
        #end for



	autocycler cluster
        --autocycler_dir '$input_directory'
        --cutoff '$cutoff'
	#if $min_assemblies and int($min_assemblies) > 0:
            --min_assemblies '$min_assemblies'
        #end if
        --max_contigs '$max_contigs'
        #if $manual :
            --manual '$manual'
	#end if
	&& cp -r '$input_directory'/clustering out_dir/
	&& mv out_dir/clustering/clustering.newick out_dir/clustering/clustering_newick.newick
	&& mv out_dir/clustering/clustering.yaml out_dir/clustering/clustering_yaml.yaml
	&& mv out_dir/clustering/clustering.tsv out_dir/clustering/clustering_tsv.tsv
	&& 

	### rename identifcal 1_untrimmed.yaml to 1_untrimmed_yaml.yaml in qc_pass folder
    	if [ -d "out_dir/clustering/qc_pass" ]; then
        	for file in out_dir/clustering/qc_pass/*/1_untrimmed.yaml; do
            	mv \$file \${file%/*}/1_untrimmed_yaml.yaml;
        	done;
    	fi
	
	&&
        ### rename identifcal 1_untrimmed.yaml to 1_untrimmed_yaml.yaml in qc_fail folder
        if [ -d "out_dir/clustering/qc_fail" ]; then
                for file in out_dir/clustering/qc_fail/*/1_untrimmed.yaml; do
                mv \$file \${file%/*}/1_untrimmed_yaml.yaml;
                done;
        fi


    ]]></command>
    <inputs>
	<!-- Main input directory -->
	<param name="autocycler_dir" type="data_collection" collection_type="list"  format="yaml,gfa1" label="GFA and Yaml File" 
	       help="Directory containing input_assemblies.gfa file (from compress step)"/>
      
        <!-- Clustering cutoff -->
        <param name="cutoff" type="float" min="0" max="1" value="0.2" label="Clustering cutoff"
               help="Distance threshold for hierarchical clustering (0-1)"/>
        
        <!-- Minimum assemblies -->
	<param name="min_assemblies" type="integer" min="0" value="0" label="Minimum assemblies per cluster" />
    
        
        <!-- Max contigs -->
        <param name="max_contigs" type="integer" min="1" value="25" label="Maximum contigs per assembly"
               help="Refuse to run if mean contigs per assembly exceeds this value"/>
        
        <!-- Manual clustering  -->
        <param name="manual" type="text" value="" label="Cluster "/>
    </inputs>
    <outputs>
        <collection name="cluster_results" type="list" label="${tool.name} on ${on_string}: clustering results">
		<discover_datasets pattern="(?P&lt;designation&gt;.+)\.phylip$" directory="out_dir/clustering" format="phylip" />
		<discover_datasets pattern="(?P&lt;designation&gt;.+)\.newick$" directory="out_dir/clustering" format="newick" />
		<discover_datasets pattern="(?P&lt;designation&gt;.+)\.yaml$" directory="out_dir/clustering" format="yaml" />
		<discover_datasets pattern="(?P&lt;designation&gt;.+)\.tsv$" directory="out_dir/clustering" format="tsv" />
	</collection>
	<collection name="qc_pass" type="list:list" label="${tool.name} on ${on_string}: clustering QC pass">
		<discover_datasets pattern="(?P&lt;identifier_0&gt;.*?)/(?P&lt;identifier_1&gt;.+)\.yaml$" format="yaml" directory="out_dir/clustering/qc_pass/" recurse="true" match_relative_path="true"/>
		<discover_datasets pattern="(?P&lt;identifier_0&gt;.*?)/(?P&lt;identifier_1&gt;.+)\.gfa$" format="gfa1" directory="out_dir/clustering/qc_pass/" recurse="true" match_relative_path="true"/>
	</collection>
       <collection name="qc_fail" type="list:list" label="${tool.name} on ${on_string}: clustering QC fail">
                <discover_datasets pattern="(?P&lt;identifier_0&gt;.*?)/(?P&lt;identifier_1&gt;.+)\.gfa$"  format="gfa1" directory="out_dir/clustering/qc_fail/" recurse="true" match_relative_path="true"/>
                <discover_datasets pattern="(?P&lt;identifier_0&gt;.*?)/(?P&lt;identifier_1&gt;.+)\.yaml$"  format="yaml" directory="out_dir/clustering/qc_fail/" recurse="true" match_relative_path="true"/>
        </collection>
    </outputs>
    <tests>
        <test>
           <param name="autocycler_dir">
		<collection type="list">
			<element name="input_assemblies" value="input_assemblies.gfa" ftype="gfa1"/>
                </collection>
           </param>
	   <param name="cutoff" value="0.2"/>
           <param name="max_contigs" value="25"/>
	   <param name="mad" value="5.0"/>
	   <output_collection name="cluster_results">
		   <collection type="list">
			   <element name="pairwise_distances" file="pairwise_distances.phylip" ftype="phylip">
				   <has_size value="4609" delta="100"/>
				   <has_n_lines n="20"/>
				   <has_text text="flye_01.fasta contig_1"/>
				   <has_text text="flye_04.fasta contig_6"/>
                           </element>
                           <element name="clustering_newick" file="clustering_newick.newick" ftype="newick">
                                   <has_size value="1519" delta="100"/>
                           </element>
                           <element name="clustering_yaml" file="clustering_yaml.yaml" ftype="yaml">
				   <has_size value="303" delta="100"/>
				   <has_n_lines n="9"/>
				   <has_text text="pass_cluster_count: 1"/>
				   <has_text text="fail_cluster_count: 17"/>
			   </element>
                           <element name="clustering_tsv" file="clustering_tsv.tsv" ftype="tsv">
				   <has_size value="1471" delta="100"/>
				   <has_n_lines n="20"/>
				   <has_text text="1__flye_01.fasta__contig_1__8538_bp"/>
				   <has_text text="2__flye_01.fasta__contig_2__9319_bp"/>
                           </element>
		   </collection>
           </output_collection>
           <output_collection name="qc_pass">
                <collection type="list:list">
                        <element name="qc_pass">
                                <collection type="list">
                                        <element name="1_untrimmed" file="1_untrimmed.gfa" ftype="gfa1"/>
                                </collection>
                        </element>
                </collection>
	   </output_collection>
           <output_collection name="qc_fail">
                <collection type="list:list">
                        <element name="qc_fail">
                                <collection type="list">
                                        <element name="1_untrimmed" file="1_untrimmed.gfa" ftype="gfa1"/>
                                </collection>
                        </element>
                </collection>
           </output_collection>
        </test>
    </tests>
    <help><![CDATA[
**AutoCycler Cluster Tool**
	    
The autocycler cluster command groups input contigs into clusters. A cluster is a group of contigs which represent the same genomic sequence. It also decides which of these clusters should be included in the final assembly (QC-pass) and which should not (QC-fail).

**Inputs**

- AutoCycler directory (must contain input_assemblies.gfa from compress step)

**Parameters**

- Clustering cutoff: Distance threshold for hierarchical clustering (0-1, default: 0.2)
- Minimum assemblies: Exclude clusters with fewer than this many assemblies (auto or manual)
- Maximum contigs: Refuse to run if mean contigs per assembly exceeds this value (default: 25)
- Manual clustering: Optionally specify exact cluster nodes from the tree

**Outputs**

- Collection of cluster files (one per cluster)
- Summary file with clustering statistics

**Notes**

- The --max_contigs option exists to catch obviously bad input data. If the mean number of contigs per input assemblies exceeds this value (default of 25), Autocycler cluster will refuse to run and display an error message. For example, if you give Autocycler 10 input assemblies with a total of 1000 contigs, that is an average of 100 contigs per assembly, which almost certainly means that they are fragmented or contaminated and thus not appropriate for Autocycler.

.. class:: infomark

**More Information**

- `Autocycler cluster`: https://github.com/rrwick/Autocycler/wiki/Autocycler-cluster

**Citations**
    ]]></help>
	    <expand macro="citations"/>
</tool>
