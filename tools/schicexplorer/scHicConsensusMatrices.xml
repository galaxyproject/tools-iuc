<tool id="schicexplorer_schicconsensusmatrices" name="@BINARY@" version="@WRAPPER_VERSION@.0">
    <description>creates per cluster one average matrix</description>
    <macros>
        <token name="@BINARY@">scHicConsensusMatrices</token>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <command detect_errors="exit_code"><![CDATA[
        @BINARY@

        --matrix '$matrix_mcooler'
        --clusters $clusters

        --outFileName consensus_matrix.mcool

        --threads @THREADS@



    ]]></command>
    <inputs>
        
        <expand macro="matrix_mcooler_macro"/>
        <param name='clusters' type='data' format='txt' label='Cluster file' help='Cluster file created by scHicCluster, scHicClusterCompartments, scHicClusterMinHash or scHicClusterSVL'/>
        
        <param name='chromosomes' type='text' label='List of chromosomes to consider' help='Please separate the chromosomes by space'/>
    </inputs>
    <outputs>
        <data name="outFileName" from_work_dir="consensus_matrix.mcool" format="mcool" label="${tool.name} on ${on_string}: Consensus matrices"/>
    </outputs>
    <tests>
        <test>
            <param name='matrix_mcooler' value='test_matrix.mcool' />
            <param name='clusters' value='scHicConsensusMatrices/cluster_kmeans.txt' />
            <output name="outFileName" ftype="mcool">
                <assert_contents>
                    <has_h5_keys keys='consensus_matrix_cluster_0, 
                                        consensus_matrix_cluster_0/bins, consensus_matrix_cluster_0/bins/chrom, 
                                        consensus_matrix_cluster_0/bins/end, consensus_matrix_cluster_0/bins/start,
                                        consensus_matrix_cluster_0/chroms, consensus_matrix_cluster_0/chroms/length, 
                                        consensus_matrix_cluster_0/chroms/name, consensus_matrix_cluster_0/indexes, 
                                        consensus_matrix_cluster_0/indexes/bin1_offset, consensus_matrix_cluster_0/indexes/chrom_offset,
                                        consensus_matrix_cluster_0/pixels, consensus_matrix_cluster_0/pixels/bin1_id,
                                        consensus_matrix_cluster_0/pixels/bin2_id, consensus_matrix_cluster_0/pixels/count, 
                                        consensus_matrix_cluster_1, consensus_matrix_cluster_1/bins, consensus_matrix_cluster_1/bins/chrom, 
                                        consensus_matrix_cluster_1/bins/end, consensus_matrix_cluster_1/bins/start, consensus_matrix_cluster_1/chroms,
                                        consensus_matrix_cluster_1/chroms/length, consensus_matrix_cluster_1/chroms/name, consensus_matrix_cluster_1/indexes,
                                        consensus_matrix_cluster_1/indexes/bin1_offset, consensus_matrix_cluster_1/indexes/chrom_offset, 
                                        consensus_matrix_cluster_1/pixels, consensus_matrix_cluster_1/pixels/bin1_id, consensus_matrix_cluster_1/pixels/bin2_id,
                                        consensus_matrix_cluster_1/pixels/count, consensus_matrix_cluster_2, consensus_matrix_cluster_2/bins, 
                                        consensus_matrix_cluster_2/bins/chrom, consensus_matrix_cluster_2/bins/end, consensus_matrix_cluster_2/bins/start, 
                                        consensus_matrix_cluster_2/chroms, consensus_matrix_cluster_2/chroms/length, consensus_matrix_cluster_2/chroms/name,
                                        consensus_matrix_cluster_2/indexes, consensus_matrix_cluster_2/indexes/bin1_offset, consensus_matrix_cluster_2/indexes/chrom_offset, 
                                        consensus_matrix_cluster_2/pixels, consensus_matrix_cluster_2/pixels/bin1_id, consensus_matrix_cluster_2/pixels/bin2_id, 
                                        consensus_matrix_cluster_2/pixels/count'/>
                </assert_contents>
            </output>
        </test>
       
    </tests>
    <help><![CDATA[

Consensus matrices
==================

scHicConsensusMatrices creates based on the clustered samples one consensus matrix for each cluster. The consensus matrices are normalized to an equal read coverage level and are stored all in one mcool matrix.

For more information about scHiCExplorer please consider our documentation on readthedocs.io_

.. _readthedocs.io: http://schicexplorer.readthedocs.io/
]]></help>
    <expand macro="citations" />

</tool>
