<?xml version="1.0"?>
<tool id="pisces" name="Pisces" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="18.01">
    <description>...</description>
    <macros>
        <token name="@TOOL_VERSION@">5.2.10.49</token>
        <token name="@VERSION_SUFFIX@">0</token>         
    </macros>
    <requirements>
        <requirement type="package" version="@TOOL_VERSION@">pisces</requirement>
    </requirements>    
    <version_command><![CDATA[dotnet Pisces.dll -v 2>&1 | grep 'Pisces' | cut -f 2 -d ' ' ]]></version_command>
    <command detect_errors="exit_code"><![CDATA[
## process genome to create GenomeSize.xml
mkdir genome &&
ln -s '$genome' 'genome/genome.fasta' &&
dotnet CreateGenomeSizeFile.dll
-g 'genome' ## folder
-s '$genome_description' &&

## process samples
mkdir data &&
#for $i, $current in enumerate($b)
    ln -s '${current}' 'data/sample_${i}.bam' &&
    ln -s '${current.metadata.bam_index}' 'data/sample_${i}.bam.bai' &&
#end for

## run
dotnet Pisces.dll
## required parameters
-g 'genome'
-b 'data'

##common parameters
--callmnvs $cp.callmnvs
--maxgapbetweenmnv $cp.maxgapbetweenmnv
--outputsbfiles $cp.outputsbfiles
--collapse $cp.collapse
--collapsefreqthreshold $cp.collapsefreqthreshold
--collapsefreqratiothreshold $cp.collapsefreqratiothreshold
--trimmnvpriors $cp.trimmnvpriors
--coveragemethod $cp.coveragemethod
--usestitchedxd $cp.usestitchedxd
--trackedanchorsize $cp.trackedanchorsize
--chrfilter $cp.chrfilter
--insidesubprocess ## todo what its good for?
--threadbychr true
--baselogname 'log' ## todo 
--multiprocess true
--debug true ## todo for logging?
--outfolder 'results'
--maxthreads \${GALAXY_SLOTS:-4}

## BAM filtering parameters
--minbq $bfp.minbq
--minmq $bfp.minmq
$bfp.filterduplicates
$bfp.pp

## Variant calling parameters
--minvq $vcp.minvq
--mindp $vcp.mindp
--minvf $vcp.minvf
--targetlodfrequency $vcp.targetlodfrequency
--vqfilter $vcp.vqfilter
--vffilter $vcp.vffilter
--gqfilter $vcp.gqfilter
--repeatfilter_toberetired $vcp.repeatfilter_toberetired
--mindpfilter $vcp.mindpfilter
--ssfilter $vcp.ssfilter
#if $vcp.nl
    --nl $vcp.nl
#end if
--ploidy $vcp.ploidy
--diploidsnvgenotypeparameters $vcp.diploidsnvgenotypeparameters
--diploidindelgenotypeparameters $vcp.diploidindelgenotypeparameters
## --adaptivegenotypeparameters_fromfile adaptivegenotypeparameters_fromfile
--adaptivegenotypeparameters_snvmodel $vcp.adaptivegenotypeparameters_snvmodel
--adaptivegenotypeparameters_indelmodel $vcp.adaptivegenotypeparameters_indelmodel
--adaptivegenotypeparameters_snvprior $vcp.adaptivegenotypeparameters_snvprior
--adaptivegenotypeparameters_indelprior $vcp.adaptivegenotypeparameters_indelprior
--sbmodel $vcp.sbmodel
--maxvq $vcp.maxvq
--maxgq $vcp.maxgq
--maxgp $vcp.maxgp
--mingq $vcp.mingq
--sbfilter $vcp.sbfilter
--noisemodel $vcp.noisemodel
--gender $vcp.gender
--ncfilter $vcp.ncfilter

## VCF writer parameters
--gvcf $vcfp.gvcf
--crushvcf $vcfp.crushvcf
--reportnocalls $vcfp.reportnocalls
--reportrccounts $vcfp.reportrccounts
--reporttscounts $vcfp.reporttscounts
--reportsuspiciouscoveragefraction $vcfp.reportsuspiciouscoveragefraction
    ]]></command>
    <inputs>
        <!-- CreateGenomeSizeFile.dll -->
        <param name="genome" type="data" format="fasta" label="Select file with genome" help="(CreateGenomeSizeFile.dll -g)"/>
        <!-- TODO seem to accept specific format only, e.g. "Human (hg19) " works; "Human (hg19)" not -->
        <param name="genome_description" type="data" format="fasta" label="Select genome description" help="Species name and build, e.g. 'Rattus norvegicus (UCSC rn4)' (CreateGenomeSizeFile.dll -s)"/>

        <!-- Pisces.dll -->
        <param argument="-b" type="data" format="bam" multiple="true" label="Select samples"/>

        <section name="cp" title="Common parameters">
            <!-- -i -->
            <!-- -forcedalleles -->
            <param argument="--callmnvs" type="boolean" truevalue="--callmnvs" falsevalue="" checked="true" label="Call MNVs (a.k.a. phased SNPs)?" help=""/>
            <!-- -maxmnvlength -->
            <param argument="--maxgapbetweenmnv" type="integer" min="" max="" value="" label="Set max allowed gap between phased SNPs that can be called"/>                               
            <param argument="--outputsbfiles" type="boolean" truevalue="--outputsbfiles" falsevalue="" label="Output strand bias files?"/> <!-- TODO additional output files? -->
            <param argument="--collapse" type="boolean" truevalue="--collapse" falsevalue="" label="Collapse variants together?"/>
            <param argument="--collapsefreqthreshold" type="float" min="" max="" value="" label="Set minimum frequency required for target variants"/>
            <param argument="--collapsefreqratiothreshold" type="float" min="" max="" value="0.5" label="Set minimum ratio required of target variant frequency to collapsible variant frequency."/>
            <!-- - -priorspath -->
            <param argument="--trimmnvpriors" type="boolean" truevalue="--trimmnvpriors" falsevalue="" label="Trim preceeding base from MNVs in priors file?" help="COSMIC convention is to include preceeding base for MNV."/>
            <param argument="--coveragemethod" type="select" multiple="false" label="Select coverage method">
                <option value="approximate" selected="true">Approximate</option>
                <option value="exact">Exact</option>
            </param>
            <param argument="--usestitchedxd" type="boolean" truevalue="--usestitchedxd" falsevalue="" label="Use stitched xd?" help="Set to true to make use of the consensus read-direction information (the XD tag) from stitched reads. This is on by default when using Stitcher output bam, but must be deliberately set for Gemini output."/>
            <param argument="--trackedanchorsize" type="float" min="" max="" value="5" label="Set tracked anchor size" help="Set maximum size of anchor to granularly track, when collecting reference coverage at insertion sites. If zero, all coverage counts equally. Higher values will yield more precise spanning coverage results but require more memory and compromise speed."/>
            <param argument="--chrfilter" type="text" value="" optional="true" label="Set chromosome to process." help="If provided, other chromosomes are filtered out of output."/> <!-- todo needed? -->
        </section>
        <section name="bfp" title="BAM filtering parameters">
            <param argument="--minbq" type="integer" min="" max="" value="" label="Set minimum basecall quality to use a base of the read"/>
            <param argument="--minmq" type="integer" min="" max="" value="" label="Set minimum map quality required to use a read"/>
            <param argument="--filterduplicates" type="boolean" truevalue="--filterduplicates" falsevalue="" label="Filter reads marked as duplicates?"/>
            <param argument="--pp" type="boolean" truevalue="--pp" falsevalue="" label="Only use proper pairs?"/>
        </section>
        <section name="vcp" title="Variant calling parameters">
            <param argument="--minvq" type="integer" min="" max="" value="" label="Set minimum variant Qscore to report variants"/>
            <param argument="--mindp" type="integer" min="" max="" value="" label="Set minimum depth to call a variant"/>
            <param argument="--minvf" type="float" min="" max="" value="" label="Set minimum frequency to call a variant"/>
            <param argument="--targetlodfrequency" type="float" min="" max="" value="" label="Set target Frequency to call a variant" help="E.g. to target a 5% allele frequency, we must call down to 2.6%, to capture that 5% allele 95% of the time. This parameter is used by the Somatic Genotyping Model"/> <!-- TODO conditional ? -->
            <param argument="--vqfilter" type="float" min="" max="" value="" label="Set filtered variant Qscore to report variant as filtered"/>
            <param argument="--vffilter" type="float" min="" max="" value="" label="Set filtered variant frequency to report variant as filtered"/>
            <param argument="--gqfilter" type="integer" min="" max="" value="" label="Set filtered genotype quality to report variant 
            as filtered"/>
            <param argument="--repeatfilter_toberetired" type="integer" min="" max="" value="" label="Set filtered indel repeats to report variant as 
            filtered." help="To be retired. Please transition to RMxN."/> <!-- TODO deprecated ? -->
            <param argument="--mindpfilter" type="integer" min="" max="" value="" label="Set filtered low depth to report variant as filtered"/>
            <param argument="--ssfilter" type="boolean" truevalue="--ssfilter" falsevalue="" label="Flag variants as filtered if coverage limited to one strand?"/>
            <param argument="--nl" type="integer" value="" optional="true" label="Set noise level to used by the quality model" help="By default, this is driven by the basecall filter."/>
            <param argument="--ploidy" type="select" multiple="false" label="Select ploidy type" help="To test drive the new adaptive model, try 
            'DiploidByAdaptiveGT'"> <!-- TODO 'DiploidByAdaptiveGT' -->
                <option value="somatic" selected="true">somatic</option>
                <option value="diploid">diploid</option>
            </param>
            <param argument="--diploidsnvgenotypeparameters" type="text" value="" optional="true" label="Set diploid snv genotype parameters"/>
            <param argument="--diploidindelgenotypeparameters" type="text" value="" optional="true" label="Set diploid indel genotype parameters"/>
            <!-- TODO - - adaptivegenotypeparameters_fromfile -->
            <param argument="--adaptivegenotypeparameters_snvmodel" type="text" value="0.034,0.167,0.499,0.998" label="Set adaptive genotype parameters snvmodel"/>
            <param argument="--adaptivegenotypeparameters_indelmodel" type="text" value="0.037,0.443,0.905" label="Set adaptive genotype parameters indel model"/>
            <param argument="--adaptivegenotypeparameters_snvprior" type="text" value="0.729,0.044,0.141,0.087" label="Set adaptive genotype parameters snv prior"/>
            <param argument="--adaptivegenotypeparameters_indelprior" type="text" value="0.962,0.0266,0.0114" label="Set adaptive genotype parameters indel prior"/>
            <param argument="--sbmodel" type="text" value="" label="Set sb model"/>
            <param argument="--maxvq" type="integer" value="100" label="Set maximum variant Qscore to cap output variant Qscores"/>
            <param argument="--maxgq" type="integer" value="100" label="Set maximum genotype Qscore to cap output genotype Qscores"/>

            <param argument="--maxgp" type="integer" value="3000" label="Set maximum genotype posterior score to cap output genotype posteriors"/>
            <param argument="--mingq" type="integer" value="0" label="Set minimum genotype Qscore to cap output"/>
            <param argument="--sbfilter" type="float" value="0.5" label="Set strand bias cutoff"/>
            <param argument="--noisemodel" type="select" label="Set noise model">
                <option value="flat" selected="true">Flat</option>
                <option value="window">Window</option>                
            </param>
            <param argument="--gender" type="select" label="Select gender">
                <option value="true" selected="true">Male</option>
                <option value="false">Female</option>
            </param>
            <param argument="" type="text" value="R5x9,F=20" label="Set RMXN filter" help="Comma-separated list of integers indicating max length of the repeat section (M), the minimum number of repetitions of that repeat (N), to be applied if the variant frequency is less than (F)."/>
            <param argument="--ncfilter" type="float" value="" label="Set no-call rate filter"/>
        </section>

        <section name="vcfp" title="VCF writer parameters">
            <param argument="--gvcf" type="boolean" truevalue="--gvcf" falsevalue="" checked="true" label="Create gVCF outputs?" help="Include reference calls."/>
            <!-- TODO implement conditional with ploidy? -->
            <param argument="--crushvcf" type="boolean" truevalue="--crushvcf" falsevalue="" label="Create crushed VCF?" help="Normally gVcfs are output in the 'somatic' format, which has one line per allele. A crushed vcf is more standard in the germline world, with one line per genomic loci. Note: typically set to true in conjunction with the '-Ploidy diploid' option."/>
            <param argument="--reportnocalls" type="boolean" truevalue="--reportnocalls" falsevalue="" label="Report fraction no calls?"/>
            <param argument="--reportrccounts" type="boolean" truevalue="--reportrccounts" falsevalue="" label="Report collapsed read count?" help="When BAM files contain X1 and X2 tags, output read counts for duplex-stitched, duplex-nonstitched, simplex-stitched, and simplex-nonstitched."/>
            <!-- TODO check parameter description -->
            <param argument="--reporttscounts" type="boolean" truevalue="--reporttscounts" falsevalue="" label="Report collapsed read count by different template strands?"/>
            <param argument="--reportsuspiciouscoveragefraction" type="boolean" truevalue="--reportsuspiciouscoveragefraction" falsevalue="" label="Report fraction of total coverage?" help="That is 'suspicious' i.e. unanchored and bearing some resemblance to an insertion at that site. For spanning variants, this is start + end coverage, so up to double the reported coverage."/>
        </section>
        <section name="op" title="Output parameters">
            <param argument="log" type="boolean" label="Create log file?"/>
        </section>  
    </inputs>
    <outputs>
        <data name="out_log" format="txt" label="${tool.name} on ${on_string}: Log">
            <filter>oo['log']</filter>            
        </data>    
    </outputs>
    <tests>
        <!-- #1 default -->
        <test expect_num_outputs="">
            <param name="genome" value="genome.fasta"/>
            <param name="genome_description" value="Human (HG19)"/>
            <param name="b" value="sample1.bam,sample2.bam"/>

            <output name="out_log">
                <assert_contents>
                    <has_text_matching expression=".+"/>
                </assert_contents>
            </output>          
        </test>
        <!-- #2 custom -->
        <test expect_num_outputs="">
            <param name="genome" value="genome.fasta"/>
            <param name="genome_description" value="Human (HG19)"/>
            <param name="b" value="sample1.bam,sample2.bam"/>
            <section name="cp">
                <param name="callmnvs" value=""/>
                <param name="maxgapbetweenmnv" value=""/>
                <param name="outputsbfiles" value=""/>
                <param name="collapse" value=""/>
                <param name="collapsefreqthreshold" value=""/>
                <param name="collapsefreqratiothreshold" value=""/>
                <param name="trimmnvpriors" value=""/>
                <param name="coveragemethod" value=""/>
                <param name="usestitchedxd" value=""/>
                <param name="trackedanchorsize" value=""/>
                <param name="chrfilter" value=""/>
            </section>
            <section name="bfp">
                <param name="minbq" value=""/>
                <param name="minmq" value=""/> value=""/>
                <param name="filterduplicates" value=""/>
                <param name="pp" value=""/>
            </section>
            <section name="vcp">
                <param name="minvq" value=""/>
                <param name="mindp" value=""/>
                <param name="minvf" value=""/>
                <param name="targetlodfrequency" value=""/>
                <param name="vqfilter" value=""/>
                <param name="vffilter" value=""/>
                <param name="gqfilter" value=""/>
                <param name="repeatfilter_toberetired" value=""/>
                <param name="mindpfilter" value=""/>
                <param name="ssfilter" value=""/>
                <param name="vcp.nl" value=""/>
                <param name="ploidy" value=""/>
                <param name="diploidsnvgenotypeparameters" value=""/>
                <param name="diploidindelgenotypeparameters" value=""/>
                <!-- adaptivegenotypeparameters_fromfile -->
                <param name="adaptivegenotypeparameters_snvmodel" value=""/>
                <param name="adaptivegenotypeparameters_indelmodel" value=""/>
                <param name="adaptivegenotypeparameters_snvprior" value=""/>
                <param name="adaptivegenotypeparameters_indelprior" value=""/>
                <param name="sbmodel" value=""/>
                <param name="maxvq" value=""/>
                <param name="maxgq" value=""/>
                <param name="maxgp" value=""/>
                <param name="mingq" value=""/>
                <param name="sbfilter" value=""/>
                <param name=".noisemodel" value=""/>
                <param name="gender" value=""/>
                <param name="ncfilter" value=""/>
            </section>
            <section name="vcfp">
                <param name="gvcf" value="true"/>
                <param name="crushvcf" value="true"/>
                <param name="reportnocalls" value="true"/>
                <param name="reportrccounts" value="true"/>
                <param name="reporttscounts" value="true"/>
                <param name="reportsuspiciouscoveragefraction" value="true"/>
            </section>
            <output name="out_log">
                <assert_contents>
                    <has_text_matching expression=".+"/>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[
.. class:: infomark

**What it does**

Pisces is a small variant calling application, tuned for amplicons and enrichment panels. Pisces is a variant calling application, tuned for amplicons and enrichment panels. By default, it calls low frequency somatic variants, but it also supports germline calling.

**Input**

Pisces requires one or more BAM files as input. These BAM files are assumed to be sorted, i.e. alignment reads should be sorted by mapped reference position. Positions in BAM files are expected to use 0-based coordinate system.

Pisces does not perform denovo variant calling. Therefore, it also requires a reference genome for each BAM file.

Optionally, the user can specify genomic regions of interest for which Pisces should produce allele calls. This is done by providing Picard-style interval files. This format lists intervals defined as a chromosome, and start and end positions, inclusive. Positions in interval files are expected to use 1-based coordinate system. An example of a line in an interval file is as follows, where the entries between brackets describe typical hidden characters.

::

    chr1    11299989    11300989

**Output**

Any variants found by the algorithms described previously are reported to the output VCF files.

TODO possible optional output files?

.. class:: infomark

**References**

More information are available on `GitHub <https://github.com/Illumina/Pisces/>`_ and the `user guide <https://github.com/Illumina/Pisces/wiki>`_.
    ]]></help>
    <citations>
        <citation type="doi">10.1101/291641</citation>
        <citation type="doi">10.1093/bioinformatics/bty849</citation>
    </citations>
</tool>