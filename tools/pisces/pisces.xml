<?xml version="1.0"?>
<tool id="pisces" name="Pisces" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="18.01">
    <description>variant caller for somatic and germline NGS Data</description>
    <macros>
        <token name="@TOOL_VERSION@">5.2.11.163</token>
        <token name="@VERSION_SUFFIX@">0</token>
        <token name="@DOTNET@"><![CDATA[/home/stephan/Projects/tools/pisces/dotnet-runtime-2.0.0-linux-x64/dotnet]]></token> <!-- TODO remove -->
        <token name="@PISCES@"><![CDATA[/home/stephan/Projects/tools/pisces/Pisces_@TOOL_VERSION@/Pisces.dll]]></token> <!-- TODO remove --> 
        <token name="@CREATEGENOMESIZEFILE@"><![CDATA[/home/stephan/Projects/tools/pisces/CreateGenomeSizeFile_@TOOL_VERSION@/CreateGenomeSizeFile.dll]]></token> <!-- TODO remove -->      
    </macros>
    <requirements>
        <requirement type="package" version="@TOOL_VERSION@">pisces</requirement>
    </requirements>
    <version_command><![CDATA[@DOTNET@ @PISCES@ -v 2>&1 | grep 'Pisces' | cut -f 2 -d ' ' ]]></version_command> <!-- TODO -->
    <command detect_errors="exit_code"><![CDATA[ 
## process genome to create GenomeSize.xml
mkdir genome &&
ln -s '$genome' 'genome/genome.fasta' &&
@DOTNET@ @CREATEGENOMESIZEFILE@ ## TODO
-g 'genome/' ## folder, '/' required
-s '$genome_description' &&

## process samples
mkdir data &&
#for $i, $current in enumerate($b)
    ln -s '${current}' 'data/sample_${i}.bam' && ## TODO name pattern?
    ln -s '${current.metadata.bam_index}' 'data/sample_${i}.bam.bai' &&
#end for

## run
@DOTNET@ @PISCES@ ## TODO
## required parameters
-g 'genome'
-b 'data'

## common parameters
#if $cp.i
    -i '$cp.i' ## TODO filename required?
#end if
$cp.mode_cond.mode_sel ## --forcedalleles, --crushvcf
#if $cp.mode_cond.mode_sel == 'forcedalleles'
    '$cp.mode_cond.forcedalleles' ## TODO not tested
#end if
#if $cp.callmnvs_cond.callmnvs_sel == 'yes'
    --callmnvs true
    --maxmnvlength $cp.callmnvs_cond.maxmnvlength
    --maxgapbetweenmnv $cp.callmnvs_cond.maxgapbetweenmnv
#end if
#if $cp.collapse_cond.collapse_sel == 'yes'
    --collapse true
    #if $cp.collapse_cond.priorspath
        --priorspath '$cp.collapse_cond.priorspath' ## TODO filetype required?
    #end if
    $cp.collapse_cond.trimmnvpriors
    --collapsefreqthreshold $cp.collapse_cond.collapsefreqthreshold
    --collapsefreqratiothreshold $cp.collapse_cond.collapsefreqratiothreshold
#end if
--coveragemethod $cp.coveragemethod
$cp.usestitchedxd
--trackedanchorsize $cp.trackedanchorsize
#if $cp.chrfilter != ''
    --chrfilter '$cp.chrfilter'
#end if
--insidesubprocess true ## TODO required?
--multiprocess true
--baselogname 'log' ## TODO fetch logs
--debug true ## TODO fetch logs
--threadbychr true
--outfolder 'results'
--maxthreads \${GALAXY_SLOTS:-4}

## BAM filtering parameters
--minbq $bfp.minbq
--minmq $bfp.minmq
$bfp.filterduplicates
$bfp.pp

## variant calling parameters
--minvq $vcp.minvq
--mindp $vcp.mindp
--ploidy $vcp.ploidy_cond.ploidy_sel
#if $vcp.ploidy_cond.ploidy_sel == 'somatic'
    --minvf $vcp.ploidy_cond.minvf
    #if $vcp.ploidy_cond.targetlodfrequency != ''
        --targetlodfrequency $vcp.ploidy_cond.targetlodfrequency
    #end if
#elif $vcp.ploidy_cond.ploidy_sel == 'diploid'
    --diploidsnvgenotypeparameters '$vcp.ploidy_cond.diploidsnvgenotypeparameters'
    --diploidindelgenotypeparameters '$vcp.ploidy_cond.diploidindelgenotypeparameters'
#end if
#if $vcp.vqfilter != ''
    --vqfilter $vcp.vqfilter
#end if
#if $vcp.vffilter != ''
    --vffilter $vcp.vffilter
#end if
#if $vcp.gqfilter != ''
    --gqfilter $vcp.gqfilter
#end if
#if $vcp.mindpfilter != ''
    --mindpfilter $vcp.mindpfilter
#end if

$vcp.ssfilter
#if $vcp.nl != '' ## TODO test
    --nl $vcp.nl
#end if
#if $vcp.adaptivegenotypeparameters_fromfile
    --adaptivegenotypeparameters_fromfile '$vcp.adaptivegenotypeparameters_fromfile'
#end if
--adaptivegenotypeparameters_snvmodel '$vcp.adaptivegenotypeparameters_snvmodel'
--adaptivegenotypeparameters_indelmodel '$vcp.adaptivegenotypeparameters_indelmodel'
--adaptivegenotypeparameters_snvprior '$vcp.adaptivegenotypeparameters_snvprior'
--adaptivegenotypeparameters_indelprior '$vcp.adaptivegenotypeparameters_indelprior'
--sbmodel $vcp.sbmodel
--maxvq $vcp.maxvq
--mingq $vcp.mingq
--maxgq $vcp.maxgq
--maxgp $vcp.maxgp
--sbfilter $vcp.sbfilter
--noisemodel $vcp.noisemodel
#if $vcp.gender != ''
    --gender $vcp.gender
#end if
#if $vcp.rmxnfilter != ''
    --rmxnfilter false
#else
    --rmxnfilter '$vcp.rmxnfilter'
#end if
#if $vcp.ncfilter != '' ## TODO
    --ncfilter $vcp.ncfilter
#end if
#if $vcp.abfilter != '' ## TODO
    --abfilter $vcp.abfilter
#end if

## VCF writer parameters
$vcfp.gvcf
$vcfp.reportnocalls
$vcfp.reportrccounts
$vcfp.reporttscounts
$vcfp.reportsuspiciouscoveragefraction

## output options
$op.outputsbfiles
#if $op.log
    |& tee -a '$out_log'
#end if
    ]]></command>
    <inputs>
        <!-- CreateGenomeSizeFile.dll -->
        <param name="genome" type="data" format="fasta" label="Select file with genome" help="(CreateGenomeSizeFile.dll -g)"/> <!-- TODO use reference genomes of Galaxy here? -->
        <param name="genome_description" type="text" value="Human (hg19) " label="Select genome description" help="Species name and build, e.g. 'Rattus norvegicus (UCSC rn4)' (CreateGenomeSizeFile.dll -s)"/> <!-- TODO reuqires specific format, e.g. "Human (hg19) " works; "Human (hg19)" not, remove default value ! -->

        <!-- Pisces.dll -->
        <param argument="-b" type="data" format="bam" multiple="true" label="Select samples"/>

        <section name="cp" title="Common parameters">
            <param argument="-i" type="data" format="tabular" optional="true" label="Select interval file"/> <!-- TODO example missing, format unknown -->
           <conditional name="mode_cond">
                <param name="mode_sel" type="select" label="Select mode" help="">
                    <option value="" selected="true">None</option>
                    <option value="--crushvcf true">Crushed VCF (--crushvcf)</option>
                    <option value="--forcedalleles">Forced alleles (--forcedalleles)</option>
                </param>
                <when value=""/>
                <when value="--crushvcf true"/>
                <when value="--forcedalleles">
                    <param argument="--forcedalleles" type="data" format="vcf" optional="true" label="Select file to force Pisces to output specific supplied variants"/> <!-- TODO example missing -->
                </when>
            </conditional>

            <conditional name="callmnvs_cond">
                <param name="callmnvs_sel" type="select" label="Call multiple nucleotide variants?" help="MNVs a.k.a. phased SNPs (--callmnvs)">
                    <option value="no" selected="true">No</option>
                    <option value="yes">Yes</option>
                </param>
                <when value="no"/>
                <when value="yes">
                    <param argument="--maxmnvlength" type="integer" min="1" max="1000" value="3" label="Set maximum length for MNVs"/>
                    <param argument="--maxgapbetweenmnv" type="integer" min="0" value="1" label="Set maximum length of reference span contained in MNV"/>
                </when>
            </conditional>
            <conditional name="collapse_cond"> <!-- TODO not sure if all parameters belong to this conditional -->
                <param name="collapse_sel" type="select" label="Collapse variants together?" help="(--collapse)">
                    <option value="no" selected="true">No</option>
                    <option value="yes">Yes</option>
                </param>
                <when value="no"/>
                <when value="yes">
                    <param argument="--priorspath" type="data" format="vcf" optional="true" label="Select file containing known variants" help="To preferentially reconcile variants"/>
                    <param argument="--trimmnvpriors" type="boolean" truevalue="--trimmnvpriors true" falsevalue="" label="Trim preceeding base from MNVs in priors file?" help="COSMIC convention is to include preceeding base for MNV, which is NOT the Pisces convention. So, if you are using -collapse and -priorsFile and your file defies Pisces MNV convention you need this."/>
                    <param argument="--collapsefreqthreshold" type="float" min="0.0" max="1.0" value="0.0" label="Set minimum frequency required for target variants"/>
                    <param argument="--collapsefreqratiothreshold" type="float" min="0.0" max="1.0" value="0.5" label="Set minimum ratio required of target variant frequency to collapsible variant frequency."/>
                </when>
            </conditional>
            <param argument="--coveragemethod" type="select" label="Select coverage method">
                <option value="approximate" selected="true">Approximate</option>
                <option value="exact">Exact</option>
            </param>
            <param argument="--usestitchedxd" type="boolean" truevalue="--usestitchedxd true" falsevalue="" label="Use stitched XD (stitched direction tag)?" help="Activate if you are using Gemini and it is doing stitching."/>
            <param argument="--trackedanchorsize" type="integer" min="0" value="5" label="Set tracked anchor size" help="Set maximum size of anchor to granularly track, when collecting reference coverage at insertion sites. If zero, all coverage counts equally. Higher values will yield more precise spanning coverage results but require more memory and compromise speed."/>
            <param argument="--chrfilter" type="text" value="" optional="true" label="Set chromosome to process" help="If provided, other chromosomes are filtered out of output."/>
        </section>

        <section name="bfp" title="BAM filtering parameters">
            <param argument="--minbq" type="integer" min="0" max="50" value="20" label="Set minimum basecall quality for a base to contribute to variant calling" help="Note that as well as filtering base calls, this also drives Pisces internal noise model. E.g. if all bases are Q20 and above, Pisces has believes that the noise rate is 1/100, and uses that to drive decisions."/>
            <param argument="--minmq" type="integer" min="0" value="1" label="Set minimum map quality required to use a read" help="A.k.a map score"/>
            <param argument="--filterduplicates" type="boolean" truevalue="--filterduplicates true" falsevalue="" checked="true" label="Filter reads marked as duplicates?" help="Reads should already be marked as duplicates by an upstream application."/>
            <param argument="--pp" type="boolean" truevalue="--pp true" falsevalue="" label="Only use properly paired alignments?"/>
        </section>

        <section name="vcp" title="Variant calling parameters">
            <param argument="--minvq" type="integer" value="20" label="Set minimum variant Qscore to report variants"/> <!-- TODO min/max -->
            <param argument="--mindp" type="integer" value="10" label="Set minimum depth to call a variant" help="Variant will be omitted or converted to a nocall if in gVCF mode"/> <!-- TODO min/max -->
            <conditional name="ploidy_cond">
                <param argument="ploidy_sel" type="select" multiple="false" label="Select ploidy type" help="To test drive the new adaptive model, try 'DiploidByAdaptiveGT' (--ploidy)"> <!-- TODO how to use 'DiploidByAdaptiveGT' ? -->
                    <option value="somatic" selected="true">somatic</option>
                    <option value="diploid">diploid</option>
                </param>
                <when value="somatic">
                    <param argument="--minvf" type="float" min="0.0" max="1.0" value="0.01" label="Set minimum frequency to call a variant"/>
                    <param argument="--targetlodfrequency" type="float" min="0.0" max="1.0" value="" optional="true" label="Set target frequency to call a variant" help="E.g. to target a 5% allele frequency, we must call down to 2.6%, to capture that 5% allele 95% of the time."/> <!-- TODO default ? remove optional, also in command -->
                </when>
                <when value="diploid">
                    <param argument="--diploidsnvgenotypeparameters" type="text" value="0.2,0.7,0.8" label="Set diploid snv genotype parameters"/>
                    <param argument="--diploidindelgenotypeparameters" type="text" value="0.2,0.7,0.8" label="Set diploid indel genotype parameters"/> <!-- TODO wiki mentions DiploidGenotypeParameters, not sure how to use it -->
                </when>
            </conditional>
            <param argument="--vqfilter" type="integer" value="30" label="Set filtered variant Qscore" help="To report variant as filtered"/> <!-- TODO min/max -->
            <param argument="--vffilter" type="float" min="0.0" max="1.0" value="" optional="true" label="Set filtered variant frequency" help="To report variant as filtered"/>
            <param argument="--gqfilter" type="integer" min="0" value="" optional="true" label="Set filtered genotype quality" help="Filters variants if genotype quality is below the given threshold."/>
            <param argument="--mindpfilter" type="integer" value="" optional="true" label="Set minimum coverage allowed" help="Variant will be omitted or converted to a nocall if in gVCF mode."/> <!-- TODO min/max, default, remove optional-->
            <param argument="--ssfilter" type="boolean" truevalue="--ssfilter true" falsevalue="" label="Flag variants as filtered if coverage is limited to one strand?" help="If all available reads go in one direction, this will filter everything"/>
            <param argument="--nl" type="integer" min="0" value="" optional="true" label="Set noise level to used by the quality model" help="By default, the noise level is taken to be the minimum basecall quality used, but it can be overridden here. The noise level is then fed into the variant Qscore algorithms to determine the change of a false positive."/>
            <!-- TODO 
            - not sure how the following parameters work together. Maybe a conditional for file/custom parameters? 
            - the wiki lists another parameter DiploidGenotypeParameters
            -->
            <param argument="--adaptivegenotypeparameters_fromfile" type="data" format="txt" optional="true" label="Select file with adaptive genotype parameters"/>
            <param argument="--adaptivegenotypeparameters_snvmodel" type="text" value="0.037,0.439,0.976" label="Set adaptive genotype parameters snvmodel" help="Comma-separated list of foat,float,float"/>
            <param argument="--adaptivegenotypeparameters_indelmodel" type="text" value="0.037,0.443,0.905" label="Set adaptive genotype parameters indel model" help="Comma-separated list of foat,float,float"/>
            <param argument="--adaptivegenotypeparameters_snvprior" type="text" value="0.755,0.154,0.0919" label="Set adaptive genotype parameters snv prior" help="Comma-separated list of foat,float,float"/>
            <param argument="--adaptivegenotypeparameters_indelprior" type="text" value="0.962,0.0266,0.0114" label="Set adaptive genotype parameters indel prior" help="Comma-separated list of foat,float,float"/>
            <param argument="--sbmodel" type="select" label="Set SB model">
                <option value="extended" selected="true">Extended</option>
                <option value="poisson">Poisson</option>
            </param>
            <param argument="--minvq" type="integer" value="20" label="Set minimum variant quality Qscore" help="To emit variant."/>
            <param argument="--maxvq" type="integer" min="0" value="100" label="Set maximum variant quality Qscore" help="To cap output variant Qscores."/> <!-- TODO Must be greater than or equal to MinimumVariantQscore -->
            <param argument="--mingq" type="integer" min="0" value="0" label="Set lower bound for genotype Qscore"/>
            <param argument="--maxgq" type="integer" min="0" value="100" label="Set upper bound for genotype Qscore"/>
            <!-- TODO does mingp exist? -->
            <param argument="--maxgp" type="integer" value="3000" label="Set maximum genotype posterior score to cap output genotype posteriors"/> <!-- TODO min/max -->
            <param argument="--sbfilter" type="float" min="0.0" value="0.5" label="Set threshold for strand bias filter"/>
            <param argument="--noisemodel" type="select" label="Set noise model" help="If 'flat' is selected, the same noise level will be assumed for all loci when calculating the variant call Q score. By default, this is q20. If 'window' is selected, the average noise level in a window around the variant will be calculated based on local base call Q scores. The window size is currently hard coded to 1. In practice, keeping the applied noise level coupled to the minimum basecall quality seems to be the most effective.">
                <option value="flat" selected="true">Flat</option>
                <option value="window">Window</option>
            </param>
            <param argument="--gender" type="select" label="Select gender" help="Used in ploidy calculation. Only affects germline-mode results.">
                <option value="" selected="true">No</option>
                <option value="true">Male</option>
                <option value="false">Female</option>
            </param>
            <param argument="--rmxnfilter" type="text" value="5,9,0.20" label="Set RMXN filter" help="Disable with empty value. Otherwise, comma-separated list of integer, integer, float indicating max length of the repeat section (M), the minimum number of repetitions of that repeat (N), to be applied if the variant frequency is less than (F). Filters out indels, when the insertion or deletion is bookended by an exact match (of length &lt;=M) for the repeat element in a region of >= N repeats of the element. SDS for details. Value must be bool or M,N,F format. Default, kicks in for 20% VF and below. Raise to 35% if needed."/>
            <param argument="--ncfilter" type="float" value="" optional="true" label="Set no-call rate filter"/> <!-- TODO min,max,default?! -->
            <param argument="--abfilter" type="float" value="" optional="true" label="Set amplicon bias filter threshold" help="Keep empty to turn this filter off. If on, the threshold has the following meaning:  If a variant shows up at Y percent on amplicon A and X percent on amplicon B, the X observation must be at least as probable as the Amplicon bias filter threshold, using the observations of Y as frequency estimate. '0.01' seems to work well."/>
        </section>

        <section name="vcfp" title="VCF writer parameters">
            <param argument="--gvcf" type="boolean" truevalue="--gvcf true" falsevalue="" label="Create gVCF outputs?" help="Include reference calls."/>
            <param argument="--reportnocalls" type="boolean" truevalue="--reportnocalls true" falsevalue="" label="Report fraction no calls?"/>
            <param argument="--reportrccounts" type="boolean" truevalue="--reportrccounts true" falsevalue="" label="Report collapsed read count?" help="When BAM files contain X1 and X2 tags, output read counts for duplex-stitched, duplex-nonstitched, simplex-stitched, and simplex-nonstitched."/>
            <!-- TODO debug option, maybe skip? check parameter description -->
            <param argument="--reporttscounts" type="boolean" truevalue="--reporttscounts true" falsevalue="" label="Report collapsed read count by different template strands?"/>
            <param argument="--reportsuspiciouscoveragefraction" type="boolean" truevalue="--reportsuspiciouscoveragefraction true" falsevalue="" label="Report fraction of total coverage?" help="'suspicious' means unanchored and bearing some resemblance to an insertion at that site. For spanning variants, this is start + end coverage, so up to double the reported coverage."/>
        </section>

        <section name="op" title="Output parameters">
            <param argument="--outputsbfiles" type="boolean" truevalue="--outputsbfiles true" falsevalue="" label="Output strand bias files?"/> <!-- TODO additional output files need to be fetched -->
            <param argument="log" type="boolean" checked="true" label="Create log file?"/> <!-- -->
        </section>
    </inputs>
    <outputs>
        <collection name="out_results" type="list" label="${tool.name} on ${on_string}: Results">
            <discover_datasets pattern="(?P&lt;designation&gt;.+)\.vcf" ext="tabular" visible="false" directory="results"/>
        </collection>
        <data name="out_log" format="txt" label="${tool.name} on ${on_string}: Log">
            <filter>op['log']</filter>
        </data>
    </outputs>
    <tests>
        <!-- #1 default -->
        <test expect_num_outputs="1">
            <param name="genome" value="genome.fasta"/>
            <param name="genome_description" value="Human (hg19) "/>
            <param name="b" value="sample1.bam,sample2.bam"/>
            <output name="out_log">
                <assert_contents>
                    <has_text_matching expression=".+"/>
                </assert_contents>
            </output>
        </test>
        <!-- #2 -->
        <test expect_num_outputs="1">
            <param name="genome" value="genome.fasta"/>
            <param name="genome_description" value="Human (hg19) "/>
            <param name="b" value="sample1.bam,sample2.bam"/>
            <section name="cp">
                <param name="i"/>
                <conditional name="mode_cond">
                    <param name="mode_sel" value="--crushvcf true"/>
                </conditional>
                <conditional name="callmnvs_cond">
                    <param name="callmnvs_sel" value="yes"/>
                    <param name="maxmnvlength" value="4"/>
                    <param name="maxgapbetweenmnv" value="2"/>
                </conditional>                
                <conditional name="collapse_cond">
                    <param name="collapse_sel" value="yes"/>
                    <!-- param name="priorspath" value=""/-->
                    <param name="trimmnvpriors" value="true"/>
                    <param name="collapsefreqthreshold" value="0.1"/>
                    <param name="collapsefreqratiothreshold" value="0.6"/>
                </conditional>
                <param name="coveragemethod" value="exact"/>
                <param name="usestitchedxd" value="true"/>
                <param name="trackedanchorsize" value="6"/>
                <param name="chrfilter" value="ChrM"/>
            </section>
            <section name="bfp">
                <param name="minbq" value="21"/>
                <param name="minmq" value="2"/>
                <param name="filterduplicates" value="false"/>
                <param name="pp" value="true"/>
            </section>
            <section name="vcp">
                <param name="minvq" value="21"/>
                <param name="mindp" value="11"/>
                <conditional name="ploidy_cond">
                    <param name="ploidy_sel" value="somatic"/>
                    <param name="minvf" value="0.02"/>
                    <param name="targetlodfrequency" value="0.1"/> <!-- TODO not sure which value -->
                </conditional>
                <param name="vqfilter" value="31"/>
                <param name="vffilter" value="0.1"/> <!-- TODO not sure which value -->
                <param name="gqfilter" value="1"/> <!-- TODO not sure which value -->
                <param name="mindpfilter" value="1"/> <!-- TODO not sure which value -->
                <param name="ssfilter" value="true"/>
                <param name="nl" value="20"/> <!-- TODO not sure which value -->
                <!--param name="- -adaptivegenotypeparameters_fromfile"/-->
                <param name="adaptivegenotypeparameters_snvmodel" value="0.038,0.438,0.978"/>
                <param name="adaptivegenotypeparameters_indelmodel" value="0.038,0.448,0.908"/>
                <param name="adaptivegenotypeparameters_snvprior" value="0.758,0.158,0.0918"/>
                <param name="adaptivegenotypeparameters_indelprior" value="0.968,0.0268,0.0118"/>
                <param name="sbmodel" value="poisson"/>
                <param name="minvq" value="21"/>
                <param name="maxvq" value="101"/>
                <param name="mingq" value="1"/>
                <param name="maxgq" value="101"/>
                <param name="maxgp" value="3001"/>
                <param name="sbfilter" value="0.6"/>
                <param name="noisemodel" value="window"/>
                <param name="gender" value="true"/>
                <param name="rmxnfilter" value="6,10,0.21"/>
                <param name="ncfilter" value="0.1"/> <!-- TODO not sure which value -->
                <param name="abfilter" value="0.1"/> <!-- TODO not sure which value -->
            </section>
            <section name="vcfp">
                <param name="gvcf" value="true"/>
                <param name="reportnocalls" value="true"/>
                <param name="reportrccounts" value="true"/>
                <param name="reporttscounts" value="true"/>
                <param name="reportsuspiciouscoveragefraction" value="true"/>
            </section>
            <section name="op">
                <param name="outputsbfiles" value="true"/>
                <param name="log" value="true"/>
            </section>
            <output name="out_log">
                <assert_contents>
                    <has_text_matching expression=".+"/>
                </assert_contents>
            </output>
        </test>
        <!-- #3 -->
        <test expect_num_outputs="1">
            <param name="genome" value="genome.fasta"/>
            <param name="genome_description" value="Human (hg19) "/>
            <param name="b" value="sample1.bam,sample2.bam"/>
            <section name="vcp">
                <param name="minvq" value="21"/>
                <param name="mindp" value="11"/>
                <conditional name="ploidy_cond">
                    <param name="ploidy_sel" value="diploid"/>
                    <param name="diploidsnvgenotypeparameters" value="0.21,0.71,0.81"/>
                    <param name="diploidindelgenotypeparameters" value="0.21,0.71,0.81"/>
                </conditional>
                <param name="gender" value="false"/>
            </section>
            <output name="out_log">
                <assert_contents>
                    <has_text_matching expression=".+"/>
                </assert_contents>
            </output>
        </test>
        <!-- #4 -->
        <!--test expect_num_outputs="1">
            <param name="genome" value="genome.fasta"/>
            <param name="genome_description" value="Human (hg19) "/>
            <param name="b" value="sample1.bam,sample2.bam"/>
            <section name="cp">
                <conditional name="mode_cond">
                    <param name="mode_sel" value="- -forcedalleles"/> TODO
                    <param name="forcedalleles" value=""/>
                </conditional>
            </section>
            <output name="out_log">
                <assert_contents>
                    <has_text_matching expression=".+"/>
                </assert_contents>
            </output>
        </test-->
    </tests>
    <help><![CDATA[
.. class:: infomark

**What it does**

Pisces is a variant calling application, tuned for amplicons and enrichment panels. By default, it calls low frequency somatic variants, but it also supports germline calling.

**Input**

Pisces requires one or more BAM files as input. These BAM files are assumed to be sorted, i.e. alignment reads should be sorted by mapped reference position. Positions in BAM files are expected to use 0-based coordinate system.

Pisces does not perform denovo variant calling. Therefore, it also requires a reference genome for each BAM file.

Optionally, the user can specify genomic regions of interest for which Pisces should produce allele calls. This is done by providing Picard-style interval files. This format lists intervals defined as a chromosome, and start and end positions, inclusive. Positions in interval files are expected to use 1-based coordinate system. An example of a line in an interval file is as follows, where the entries between brackets describe typical hidden characters.

... list optional input files ... there are a lot of optional PATH variables

::

    chr1    11299989    11300989

**Output**

Any variants found by the algorithms are reported to the output VCF files.

... possible optional output files?

.. class:: infomark

**References**

More information are available on `GitHub <https://github.com/Illumina/Pisces/>`_ and the `user guide <https://github.com/Illumina/Pisces/wiki>`_.
    ]]></help>
    <citations>
        <citation type="doi">10.1101/291641</citation>
        <citation type="doi">10.1093/bioinformatics/bty849</citation>
    </citations>
</tool>