<?xml version="1.0"?>
<tool id="pisces_gemini" name="Pisces Gemini" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@">
    <description>pair-aware indel realigner and read stitcher</description>    
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <expand macro="version_command"/>
    
    <command detect_errors="exit_code"><![CDATA[
## preprocessing
@GENOMESIZE@
## process samples
mkdir data &&
ln -s '${bam}' 'data/sample.bam' &&
ln -s '${current.metadata.bam_index}' 'data/sample.bam.bai' &&

## run
@DOTNET@ Gemini.dll ## TODO
## required
--bam 'data/sample.bam'
--genome 'genome' ## folder
--samtools samtools
--outfolder 'results'
## common
--chromrefid $co.chromrefid
--minbasecallquality $co.minbasecallquality
$co.filterduplicates
--debug true
$co.filterpairunmapped
$co.filterforproperpairs
$co.nifydisagreement
$co.debugsummary
--numthreads ## TODO
--maxreadlength $co.maxreadlength
$co.dontstitchrepeatoverlap
$co.ignorereadsabovemaxlength
--maxindelsize $co.maxindelsize
$co.allowrescoringorigzero
$co.maskpartialinsertion
--minimumunanchoredinsertionlength $co.minimumunanchoredinsertionlength
--minpreferredsupport $co.minpreferredsupport
--minpreferredanchor $co.minpreferredanchor
--minrequiredindelsupport $co.minrequiredindelsupport
--minrequiredanchor $co.minrequiredanchor
--maxmessthreshold $co.maxmessthreshold
--binsize $co.binsize
$co.keepbothsidesoftclips
$co.trustsoftclips
$co.keepprobe
$co.checksoftclipsformismatches
$co.trackmismatches

--categoriestorealign <LIST>
--categoriestosnowball <LIST>

--numshardstosnowball $co.numshardstosnowball
$co.pairawareeverything
$co.deferindelstitch
--maxnumdisagreeingstitchedbases $co.maxnumdisagreeingstitchedbases
$co.keepunmerged
--intermediatedir <PATH>
$co.indexperchrom
$co.mode
$co.softclipunknownindels

## postprocessing

    ]]></command>
    <inputs>
        <!-- CreateGenomeSizeFile.dll -->
        <expand macro="genome"/>
        <expand macro="genome_description"/>
        <!-- Gemini.dll -->
        <param argument="--bam" type="data" format="bam" label="Select input file"/>
        <section name="co" title="Common options">
            <param argument="--chromrefid" type="integer" min="" max="" value="" label="Set chromosome RefId to filter on"/>
            <param argument="--minbasecallquality " type="integer" min="" max="" value="" label="Set minimum basecall quality" help="Cutoff for which, in case of a stitching conflict, bases with qscore less than this value will automatically be disregarded in favor of the mate's bases."/>
            <param argument="--filterduplicates" type="boolean" truevalue="--filterduplicates true" falsevalue="--filterduplicates false" checked="true" label="Filter duplicates?" help="Indicating whether reads marked as duplicates shall be filtered."/>            
            <param argument="--filterpairunmapped" type="boolean" truevalue="--filterpairunmapped true" falsevalue="--filterpairunmapped false" label="Filter read pairs if one or both reads are not mapped?"/>
            <param argument="--filterforproperpairs" type="boolean" truevalue="--filterforproperpairs true" falsevalue="--filterforproperpairs false" label="Filter reads that are marked as not proper pairs?"/>
            <param argument="--nifydisagreement" type="boolean" truevalue="--nifydisagreement true" falsevalue="--nifydisagreement false" checked="true" label="Turn high-quality disagreeing overlap bases to Ns?"/>
            <param argument="--maxreadlength" type="integer" min="" max="" value="1024" label="Set max read length" help="Indicating the maximum expected length of individual reads, used to determine the maximum expected stitched read length (2*len - 1). For optimal performance, set as low as appropriate (i.e. the actual single-read length) for your data."/>
            <param argument="--dontstitchrepeatoverlap" type="boolean" truevalue="--dontstitchrepeatoverlap true" falsevalue="--dontstitchrepeatoverlap false" checked="true" label="Stitch read pairs whos overlap is a repeating sequence?"/>
            <param argument="--ignorereadsabovemaxlength" type="boolean" truevalue="--ignorereadsabovemaxlength true" falsevalue="--ignorereadsabovemaxlength false" label="Passively ignore read pairs that would be above the max stitched length?" help="E.g. extremely long deletions."/>
            <param argument="--maxindelsize" type="integer" min="" max="" value="100" label="Set maximum allowed indel size for realignment?"/>
            <param argument="--allowrescoringorigzero" type="boolean" truevalue="--allowrescoringorigzero true" falsevalue="--allowrescoringorigzero false" checked="true" label="Allow rescoringorig of zeros?" help="Option to allow setting mapq of perfectly realigned reads (0 mismatch) to 40 even if original mapq was 0. If false, perfectly realigned reads with original mapq between 1-20 are still assigned mapq of 40, but those with 0 are left at 0."/>
            <param argument="--maskpartialinsertion" type="boolean" truevalue="--maskpartialinsertion true" falsevalue="--maskpartialinsertion false" label="Mask partial insertion?" help="Option to softclip a partial insertion at the end of a realigned read (a complete but un-anchored insertion is allowed)."/>
            <param argument="--minimumunanchoredinsertionlength " type="integer" min="" max="" value="0" label="Set minimumun anchored insertion length" help="I.e. no flanking reference base on one side allowed in a realigned read. Insertions shorter than the specified length will be softclipped. If set to 0 unanchored insertions of any length are allowed."/>
            <param argument="--minpreferredsupport" type="integer" min="" max="" value="3" label="Set minimum preferreds upport" help="Instances of a found variant before it can be considered to realign around."/>
            <param argument="--minpreferredanchor" type="integer" min="" max="" value="1" label="Set minimum preferred anchor" help="Minimum anchor around indel to count an observation toward good evidence."/>
            <param argument="--minrequiredindelsupport" type="integer" min="" max="" value="0" label="Set minimum required indel support" help="Don't even allow otherwise strong indels that we attempt to rescue in if they have num observations below this."/>
            <param argument="--minrequiredanchor" type="integer" min="" max="" value="0" label="Set minimum required anchor" help="Don't even allow otherwise strong indels that we attempt to rescue in if they have min anchor below this."/>
            <param argument="--maxmessthreshold " type="integer" min="" max="" value="20" label="Set maximum mess threshold" help="Don't allow indels with average mess above this value."/>
            <param argument="--binsize" type="integer" min="" max="" value="0" label="Set bin size" help="Size of bin within which to compare indels to determine if a region is too messy to realign around. Set to 0 to skip clean up."/>
            <param argument="--keepbothsidesoftclips" type="boolean" truevalue="--keepbothsidesoftclips true" falsevalue="--keepbothsidesoftclips false" label="Trust that both-side softclips are probe and should stay softclipped?"/>
            <param argument="--trustsoftclips" type="boolean" truevalue="--trustsoftclips true" falsevalue="--trustsoftclips false" label="Trust softclips?" help="If true, having softclips doesn't automatically trigger indel realignment. Also, won't try to stitch the softclips."/>
            <param argument="--keepprobe" type="boolean" truevalue="--keepprobe true" falsevalue="--keepprobe false" label="Keep probe?" help="Whether to trust that probe-side softclips are probe and should stay softclipped."/>
            <param argument="--checksoftclipsformismatches" type="boolean" truevalue="--checksoftclipsformismatches true" falsevalue="--checksoftclipsformismatches false" label="Count mismatches in softclips toward total mismatches?"/>
            <param argument="--trackmismatches" type="boolean" truevalue="--trackmismatches true" falsevalue="--trackmismatches false" label="Track and compare mismatches when realigning?"/>
            <param argument="--categoriestorealign" type="select" multiple="true" label="Select category names that should be attempted to realign?">
                <option value="" selected="true">ImperfectStitched</option>
                <option value="" selected="true">FailStitch</option>
                <option value="" selected="true">UnstitchIndel</option>
                <option value="" selected="true">Unstitchable</option>
                <option value="" selected="true">Split</option>
                <option value="" selected="true">Disagree</option>
            </param>
            <param argument="--categoriestosnowball" type="text" value="" label="" help="Category names that should be attempted to snowball."/> todo
            <param argument="--numshardstosnowball" type="integer" min="" max="" value="--numshardstosnowball" label="" help="For multithreaded samples, the number of shards from which to gather evidence in snowballing."/> todo 
            <param argument="--pairawareeverything" type="boolean" truevalue="--pairawareeverything true" falsevalue="--pairawareeverything false" label="Pass everything through pair aware realignment?" help="Or just the expected categories."/>
            <param argument="--deferindelstitch " type="boolean" truevalue="--deferindelstitch true" falsevalue="--deferindelstitch false" label="Stitch non-disagreeing indel reads to start?" help="Or wait til realignment?"/>
            <param argument="--maxnumdisagreeingstitchedbases" type="integer" min="" max="" value="" label="Set maximum number of stitched bases that can disagree between the two reads before a stitched read is rejected."/> TODO int.MaxValue.
            <param name="mode" type="select" multiple="true" label="Select mode">
                <option value="" selected="true">Stich and realign</option>
                <option value="--stitchonly true" selected="true">Stitch</option>
                <option value="--realignonly true" selected="true">Realign</option>
            </param>
            <param argument="--softclipunknownindels " type="boolean" truevalue="--softclipunknownindels true" falsevalue="--softclipunknownindels false" label="Softclip out unknown indels?"/>
        </section>       
        <section name="oo" title="Output options">
            <param name="out" type="select" multiple="true" optional="false" label="Select output file(s)" help="">
                <option value="" selected="true"></option>
                <option value=""></option>
                <option value="log">Log</option>
            </param>            
        </section>
    </inputs>
    <outputs>

    </outputs>
    <tests>
        <!-- #1 default -->

        <!-- #2 -->
    
    </tests>
    <help><![CDATA[
.. class:: infomark

...

**Input**

Gemini requires as input one BAM file and the path to a genome build. The BAM file is assumed to be sorted, i.e. alignment reads should be sorted by mapped reference position. This assumption allows Gemini to process BAMs in one pass without a large memory footprint. Most standard aligners produce sorted BAM files. Positions in BAM files are expected to use 0-based coordinate system.

For performance, Gemini requires each BAM file to have an accompanying BAI index file. The index file allows Gemini to efficiently jump to chromosomes it is configured to call.

**Output**

Gemini outputs a new sorted, stitched, indel realigned bam and the bai file.

.. class:: infomark

**References**

@REFERENCES@
    ]]></help>
    <expand macro="citations"/>
</tool>