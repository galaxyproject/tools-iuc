<?xml version="1.0"?>
<tool id="pisces_reformatvcf" name="Pisces ReformatVcf" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="18.01">
    <description>from uncrushed to crushedfor gVCF file</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <expand macro="version_command"/>
    <command detect_errors="exit_code"><![CDATA[
## initialize 
mkdir data &&
ln -s '${vcf}' 'data/variants.vcf' &&

## run
/home/stephan/Projects/tools/pisces/All_5.3.0.0/ReformatVcf ## TODO
## required
--vcf 'data/variants.vcf'
## common
--outfolder 'results' ## -o, --out

## TODO
&& ls results -lisa
&& ls data -lisa
    ]]></command>
    <inputs>
        <expand macro="vcf"/>
        <section name="oo" title="Output options" expanded="true">
            <param name="out" type="select" multiple="true" optional="false" label="Select output file(s)">
                <option value="ao">Applied options</option>                
                <option value="l">Log</option>
                <option value="u" selected="true">Uncrushed variants (VCF)</option>
            </param>
        </section>
    </inputs>
    <outputs>
        <expand macro="out_ao" tool="ReformatVcf"/>
        <expand macro="out_l" filename="ReformatVcfLogs/ReformatVcfLog.txt"/>
        <data name="out_u" format="txt" from_work_dir="data/variants.uncrushed.vcf" label="${tool.name} on ${on_string}: Uncrushed variants">
            <filter>'u' in oo['out']</filter>
        </data>
    </outputs>
    <tests>
        <!-- #1 default -->
        <test expect_num_outputs="3">
            <param name="vcf" value="control.vcf"/>
            <section name="oo">
                <param name="out" value="ao,l,u"/>
            </section>
            <output name="out_ao">
                <assert_contents>
                    <has_size value="2444"/>
                </assert_contents>
            </output>       
            <output name="out_l">
                <assert_contents>
                    <has_text_matching expression=".+Ending.+"/>
                </assert_contents>
            </output>
            <output name="out_u">
                <assert_contents>
                    <has_n_lines n="16077"/>
                    <has_text_matching expression="chrM.+"/>
                </assert_contents>
            </output>
        </test>                                                   
    </tests>
    <help><![CDATA[
.. class:: infomark

**What it does**

@WID@

Pisces ReformatVcf reformats a VCF from uncrushed to crushed.

**Input**

- uncrushed variants (VCF)

**Output**

- Applied options
- Log
- crushed variants (VCF)

.. class:: infomark

**References**

@REFERENCES@
    ]]></help>
    <expand macro="citations"/>
</tool>