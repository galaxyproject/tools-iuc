<tool id="gem_flux_variability_analysis" name="Flux variability analysis (FVA)" version="@VERSION@" profile="@PROFILE@">
    <description>
        on a GEM
    </description>
    <macros>
        <import>gem_macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <expand macro="version_command_cobra"/>
    <command>
        python '$__tool_directory__/gem_flux_variability_analysis.py'
            --cb_model_location '${cb_model_location}'
            --output '${output}'
            --fraction '${fraction_of_optimum}'
            --uptake_constraints_file '${uptake_constraints_file}'
    </command>
    <inputs>
        <expand macro="input_model"/>
        <param name="fraction_of_optimum" min="0" max="1" type="float" value="0.99" label="Fraction of optimum required in FVA solutions"/>
        <expand macro="input_uptake_constraints"/>
    </inputs>
    <outputs>
        <expand macro="output"/>
    </outputs>
    <tests>
        <test>
            <param name="cb_model_location" value="textbook_model_cobrapy.xml"/>
            <param name="fraction_of_optimum" value="0.99"/>
            <output name="output">
                <assert_contents>
                    <has_line line="reaction_id;reaction_name;minimum;maximum"/>
                </assert_contents>
            </output>
        </test>
        <test>
            <param name="cb_model_location" value="textbook_model_cobrapy.xml"/>
            <param name="fraction_of_optimum" value="0.99"/>
            <param name="uptake_constraints_file" value="textbook_model_cobrapy_exchange.csv"/>
            <output name="output">
                <assert_contents>
                    <has_line line="reaction_id;reaction_name;minimum;maximum"/>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[
        Flux Variability Analysis (FVA)

        This tool performs Flux Variability Analysis (FVA) on a Genome-scale Metabolic Model (GEM). FVA is a method used to determine the minimum and maximum flux values that each reaction in the network can carry while maintaining a specific objective value.

        Input Parameters

        **Model File**: A GEM in SBML format (.xml) that will be analyzed.

        **Fraction of Optimum**: A value between 0 and 1 that determines how much the objective function can deviate from its optimal value. For example:
        - 1.0: Only solutions achieving 100% of optimal objective value
        - 0.9: Solutions achieving at least 90% of optimal objective value
        - 0.5: Solutions achieving at least 50% of optimal objective value

        **Uptake Constraints File** (optional): A CSV file specifying constraints for exchange reactions. The file should contain columns for exchange reaction IDs and their corresponding bounds.

        Output
        
        The tool generates a CSV file containing:
        - Reaction IDs
        - Minimum flux values
        - Maximum flux values
        for each reaction in the model.

        Common Issues
        
        - Ensure your model is well-formatted and contains no structural errors
        - Check that exchange reactions are properly defined
        - Verify that the model is feasible under the given constraints
        - Large models may require significant computation time
    ]]></help>
    <citations>
        <expand macro="citation_pandas"/>
        <expand macro="citation_cobrapy"/>
    </citations>
</tool>
