<?xml version="1.0"?>
<macros>
    <token name="@TOOL_VERSION@">1.20</token> 

    <token name="@WRAPPER_VERSION@">galaxy0</token> 

    <xml name="requirements">
        <requirements>
            <requirement type="package" version="@TOOL_VERSION@">chromhmm</requirement>
            <yield/>
        </requirements>
    </xml>

    <token name="@DEF@">

## fetch tab separated items of a file header
## $inFile, string, file path
## $outList, list, e.g. ['GM12878', 'chr11']
#def fetchHeader($inFile)
#set $outList = [next(open(str($inFile))) for x in range(1)][0].strip().split("\t")
#return $outList
#end def

## deprecated todo

## the value of numstates is the first value in the header of a model_ file
## $tmpFile, string, file path
## $out, string, e.g. '10'
#def obtainNumstatesFromModel($tmpFile)
#set $out = [next(open(str($tmpFile))) for x in range(1)][0].split("\t")[0].strip()
#return $out
#end def

## _posterior files need a specific name pattern, that can be derived from the header of each file
## $tmpFile, string, file path
## $out, list, e.g. ['GM12878', 'chr11']
#def obtainHeaderFromPosterior($tmpFile)
#set $out = [next(open(str($tmpFile))) for x in range(1)][0].strip().split("\t")
#return $out
#end def

## change filename to use given suffix and extension
## $inFile, string, file path
## $inSuffix, string, e.g. '_model'
## $inExt, string, e.g. 'txt'
## $outFilename, string, e.g. GM12878_chr11_binary.txt.gz
#def changeFilename($inFile, $inPrefix, $inSuffix, $inExt)
#set $outFilename = $inFile[:$inFile.index('.')]
#unless $inSuffix == '' and $inSuffix in $outFilename
#set $outFilename = $outFilename + $inSuffix
#end unless
#unless $inPrefix == '' and $inPrefix in $outFilename
#set $outFilename = $outFilename + $inPrefix
#end unless
#set $outFilename = $outFilename + $inExt
#return $outFilename
#end def
    </token>

    <token name="@RUN@">
ChromHMM.sh
    -Xmx6G
    </token>

    <token name="@RUN_IO@">
input
output
    </token>

    <!-- 
        input elements
    -->

    <xml name="assembly">
        <param argument="assembly" type="select" label="Specify assembly." help="">
            <options from_data_table="chromhmm_assemblies">
                <validator message="No assembly is available" type="no_options"/>
            </options>
        </param>
    </xml>
    <xml name="b">
        <param argument="-b" type="integer" value="200" min="0" label="Set binsize." help="The number of base pairs in a bin determining the resolution of the model learning and segmentation."/>
    </xml>
    <xml name="cellmarkfiletable">
        <param argument="cellmarkfiletable" type="data" format="txt" multiple="false" label="Select file with cell and mark identifiers." help=""/>
    </xml>
    <xml name="e">
        <param argument="-e" type="integer" value="1" label="Specify the amount that should be subtracted from the end coordinate so the coordinate is inclusive and 0 based." help="The default value is 1 corresponding to standard bed convention of the end interval being 0-based and exclusive."/>
    </xml>
    <xml name="f">
        <param argument="-f" type="float" value="0.0" label="Set threshold for the fold enrichment over expected." help="This value must be met or exceeded by the observed count in a bin for a present call. The expectation is determined in the same way as the mean parameter for the poission distribution in terms of being based on a uniform background unless control data is specified. This parameter can be useful when dealing with very deeply and/or unevenly sequenced data."/>
    </xml>
    <xml name="g">
        <param argument="-g" type="float" value="0.0" label="Set a threshold for the signal." help="This value must be met or exceeded by the observed count in a bin for a present call. This parameter can be useful when desiring to directly place a threshold on the signal."/>
    </xml>
    <xml name="p">
        <param argument="-p" type="float" value="0.0001" min="0.0" max="1.0" label="Set tail probability of the poisson distribution." help="Binarization threshold should correspond to this value."/>
    </xml>
    <xml name="s">
        <param argument="-s" type="integer" value="0" min="0" label="Set amount that should be subtracted from the interval start coordinate." help="So that the interval is inclusive and 0 based."/>
    </xml>     
    <xml name="strictthresh">
        <param argument="-strictthresh" type="boolean" truevalue="-strictthresh" falsevalue="" checked="false" label="Should poisson threshold must be strictly greater than the tail probability?" help="Otherwise by default the largest integer count for which the tail includes the poisson threshold probability is used."/>
    </xml>
    <xml name="t">
        <param argument="-t" type="boolean" truevalue="-t" falsevalue="" checked="false" label="Should signal files be created?" help="These files could later be binarized directly at different thresholds with the BinarizeSignal command."/>
    </xml>
    <xml name="u">
        <param argument="-u" type="integer" value="1" label="Set pseudocount." help="Value is uniformly added to every bin in the control data in order to smooth the control data from 0."/>
    </xml>
    
    <!-- 
        output elements
    -->

    <xml name="out_binary">
        <data name="out_binary" format="tabular" label="${tool.name} on ${on_string}: binary, tabular" hidden="true">
            <discover_datasets pattern="(?P&lt;designation&gt;.+)\_binary.txt" ext="tabular" directory="output/data" visible="true" assign_primary_output="false"/>
        </data>
    </xml>
    <xml name="out_signal">
        <data name="out_signal" format="tabular" label="${tool.name} on ${on_string}: signal, tabular" hidden="true">
            <discover_datasets pattern="(?P&lt;designation&gt;.+)\_signal.txt" ext="tabular" directory="output/signal" visible="true" assign_primary_output="false"/>
            <filter>oo['t']</filter>
        </data>
    </xml>

    <!-- 
        datatype descriptions for help section
    -->


    <token name="@HELP_FILETYPE_ANCHOR@">
*anchor file*

Positions are specified by a chromosome and coordinate.
    </token>

    <token name="@HELP_FILETYPE_ANNOTATION@">
The command generates files with transcription start sites (TSS), transcription end sites (TES), gene, exon, and promoter regions annotations. Promoter region annotations are defined based on a window around the TSS. The command also generates files for the TSS with strand information.
    </token>

    <token name="@HELP_FILETYPE_BAM@">
*BAM*

A binary file compressed in the BGZF format with a '.bam' file extension. Details are available 
`here &lt;http://samtools.sourceforge.net/samtools.shtml&gt;`_.

    </token>

    <token name="@HELP_FILETYPE_BED@">
*BED*

Tab delimited format (tabular) file, usually with a '.bed' file extension. Details are available at `UCSC Genome Browser BED specification &lt;http://genome.ucsc.edu/FAQ/FAQformat.html#format1&gt;`_.
    </token>    

    <token name="@HELP_FILETYPE_BINARY@">
*_binary*

Binarized data files usually have '_binary' in the file name. The format for the binarized data files are that the first line contains the name of the cell separated by a tab with the name of the chromosome. The second line contains in tab delimited form the name of each mark. The remaining lines correspond to consecutive bins on the chromosome. The remaining lines in tab delimited form corresponding to each mark, with a '1' for a present call or '0' for an absent call and a '2' if the data is considered missing at that interval for the mark.

::

    Cell chr1
    Mark1   Mark2   Mark3
    0   0   0
    0   1   0
    0   0   1

    </token>

    <token name="@HELP_FILETYPE_CELLMARKFILETABLE@">
*cellmarkfiletable*

A tab delimited file in which each row contains the cell type or other identifier for a groups of marks, then the associated mark, then the name of a bed file, and optionally a corresponding control bed file.

::

    cell1 mark1 cell1_mark1.bed cell1_control.bed
    cell1 mark2 cell1_mark2.bed cell1_control.bed
    cell2 mark1 cell2_mark1.bed cell2_control.bed
    cell2 mark2 cell2_mark2.bed cell2_control.bed

If a mark is missing in one cell type, but not others it will receive a 2 for all entries in the binarization file and -1 in the signal file. If the same cell and mark combination appears on multiple lines, then the union of all the reads across entries is taken except for control data where each unique file is only counted once.
    </token>


    <token name="@HELP_FILETYPE_CONFUSION@">
*confusion matrix*

...
    </token>

    <token name="@HELP_FILETYPE_DENSE@">
*_dense*

...     
    </token>

    <token name="@HELP_FILETYPE_ELIM@">
*elim_*

Represents a nested set of model files, usually prefixed with 'elim\_'.
    </token>

    <token name="@HELP_FILETYPE_EMISSION@">
*emission_*

The emission parameters in table format are printed to text, png, and svg imagefiles. After each iteration across the genome these files are updated.
    </token>

    <token name="@HELP_FILETYPE_EXPANDED@">
*_expanded*

...   
    </token>

<token name="@HELP_FILETYPE_LABELMAPPING@">

*label mapping file*

The format of this file is a two column tab delimited file. The first column contains each state ID with the state ordering letter prefix. The second column contains a descriptive name or mnemonic.

</token>




    <token name="@HELP_FILETYPE_MODEL@">
*model_*

Contains all model parameters in an internal format, usually with prefix 'model\_'.     
    </token>











    <token name="@HELP_FILETYPE_OVERLAP@">
*_overlap*

...        
    </token>

    <token name="@HELP_FILETYPE_OVERLAPENRICHMENT@">
*overlapenrichtment*

...

</token>

    <token name="@HELP_FILETYPE_POSTERIOR@">
*_posterior*

...
    </token>

    <token name="@HELP_FILETYPE_SEGMENTS@">
*_segments*

...
    </token>

    <token name="@HELP_FILETYPE_SIGNAL@">
*_signal*

...
    </token>


    <token name="@HELP_FILETYPE_STATEBYLINE@">
*_statebyline*

...
    </token>


    <token name="@HELP_FILETYPE_TES@">
*_RefSeqTES_neighborhood*

...
    </token>

    <token name="@HELP_FILETYPE_TRANSITIONS@">
*transitions_*

The transition parameters in table format are printed to text, png, and svg imagefiles. After each iteration across the genome these files are updated.   
    </token>


    <token name="@HELP_FILETYPE_TSS@">
*_RefSeqTSS_neighborhood*

...
    </token>

    <token name="@HELP_FILETYPE_UCSC@">
The input format is a tab delimited format with the first set of columns in order being: bin, name, chrom, strand, txStart, txEnd, cdsStart, cdsEnd, exonCount, exonStarts, exonEnds. All coordinates are 0-based.
todo: wie erstellt man die Datei?
    </token>


















    <token name="@HELP_CHROMHMM@">
ChromHMM is software for learning and characterizing chromatin states. ChromHMM can integrate multiple chromatin datasets such as ChIP-seq data of various histone modifications to discover de novo the major re-occuring combinatorial and spatial patterns of marks. ChromHMM is based on a multivariate Hidden Markov Model that explicitly models the presence or absence of each chromatin mark. The resulting model can then be used to systematically annotate a genome in one or more cell types. By automatically computing state enrichments for large-scale functional and annotation datasets ChromHMM facilitates the biological characterization of each state. ChromHMM also produces files with genome-wide maps of chromatin state annotations that can be directly visualized in a genome browser.

More information can be found on the project website http://compbio.mit.edu/ChromHMM/ and github https://github.com/jernst98/ChromHMM.
    </token>

    <token name="@HELP_WID@">
is part of ChromHMM, which is a program for learning and characterizing of chromatin states using a multivariate Hidden Markov Model that models the combinatorial and spatial patterns in data from multiple chromatin marks.
    </token>

    <token name="@HELP_REFERENCES@"><![CDATA[
More information can be found on the `project website <http://compbio.mit.edu/ChromHMM/>`_, the `manual <http://compbio.mit.edu/ChromHMM/ChromHMM_manual.pdf>`_ and `github <https://github.com/jernst98/ChromHMM>`_.
     ]]></token>

     <xml name="citations">
        <citation type="doi">10.1038/nmeth.1906</citation>
        <citation type="doi">10.1038/nprot.2017.124</citation>
        <citation type="doi">10.1038/nbt.1662</citation>
     </xml>
</macros>