<?xml version="1.0"?>
<tool id="chromhmm_reorder" name="chromHMM Reorder" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@">
    <description>the states of a model</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <stdio></stdio>
    <command detect_errors="exit_code"><![CDATA[
        ## initialize 
        @FUNCTIONS@
        @IN_MODEL@

        ## run
        @RUN@
            Reorder
            ## optional parameters
            -stateordering ${ap.stateordering}
            -color '$oo.color'
            $ap.holdcolumnorder
            ## required parameters (specific order)
            'model_${numstates}.txt' ## inputmodel
            'output' ## outputdir
        ]]></command>
    <inputs>
        <expand macro="in_model"/>

        <section name="ap" title="Advanced parameters">
            <expand macro="stateordering"/>
            <expand macro="holdcolumnorder"/>
        </section>

        <section name="oo" title="Output options">
            <expand macro="color"/>
            <expand macro="emissions"/>
            <expand macro="transitions"/>
        </section>
    </inputs>
    <outputs>
        <expand macro="out_model"/>
        <expand macro="out_emissions"/>
        <expand macro="out_transitions"/>
    </outputs>
    <tests>
        <!-- #1; required parameters, all outputs -->
        <test expect_num_outputs="7">
            <param name="in_model" value="model_2.txt"/>
            <section name="oo">
                <param name="emissions" value="txt,png,svg"/>
                <param name="transitions" value="txt,png,svg"/>
            </section>
            <output name="out_emissions_png" file="reorder_emission_test1.png"/>
            <output name="out_emissions_svg">
                <assert_contents>
                    <has_n_lines n="63"/>
                </assert_contents>
            </output>
            <output name="out_emissions_txt">
                <assert_contents>
                    <has_n_lines n="3"/>
                    <has_line_matching expression="state \(Emission order\)&#009;.+"/>
                    <has_line_matching expression="2&#009;.+"/>
                </assert_contents>
            </output>
            <output name="out_transitions_png" file="reorder_transition_test1.png"/>
            <output name="out_transitions_svg">
                <assert_contents>
                    <has_n_lines n="36"/>
                </assert_contents>
            </output>
            <output name="out_transitions_txt">
                <assert_contents>
                    <has_n_lines n="3"/>
                    <has_line_matching expression="state \(from\\to\).+"/>
                    <has_line_matching expression="2&#009;.+"/>
                </assert_contents>
            </output>
            <output name="out_model">
                <assert_contents>
                    <has_n_lines n="47"/>
                    <has_line_matching expression="2&#009;10&#009;E.+"/>
                    <has_line_matching expression="emissionprobs&#009;2&#009;9&#009;WCE&#009;1.+"/>
                </assert_contents>
            </output>
        </test>
        <!-- #2; advanced parameters -->
        <test expect_num_outputs="3">
            <param name="in_model" value="model_2.txt"/>
            <section name="ap">
                <param name="state_sel" value="transition"/>
                <param name="holdcolumnorder" value="true"/>
            </section>
            <section name="oo">
                <param name="color" value="10,190,20"/>
                <param name="emissions" value="txt"/>
                <param name="transitions" value="svg"/>
            </section>
            <output name="out_emissions_txt">
                <assert_contents>
                    <has_n_lines n="3"/>
                    <has_line_matching expression="state \(Emission order\)&#009;.+"/>
                    <has_line_matching expression="2&#009;.+"/>
                </assert_contents>
            </output>
            <output name="out_transitions_svg">
                <assert_contents>
                    <has_n_lines n="36"/>
                </assert_contents>
            </output>
            <output name="out_model">
                <assert_contents>
                    <has_n_lines n="47"/>
                    <has_line_matching expression="2&#009;10&#009;E.+"/>
                    <has_line_matching expression="emissionprobs&#009;2&#009;9&#009;WCE&#009;1.+"/>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[
.. class:: infomark

**What it does**

Reorder @HELP_WID@

@HELP_CHROMHMM@

Reorder allows reordering the states of a model without relearning the model, and outputs a model file, emission and transition tables with the states reordered. The states can be reordered based on the emission or transition parameters or based on a user provided state ordering. Also the columns of the emission parameters can be ordered based on their original order in the data file, based on the correlation of the columns, or a user specified order. If a user provided state ordering is given a user has the option to also specify a bed file that should be reorder based on the provided ordering. Note that this option only reorders a single bed file at a time. If multiple bed files are desired to be reordered, this command can be run multiple times or alternatively MakeSegmentation and/or MakeBrowserFiles can be re-run with the updated model and/or segmentation files. Also note that this command does not reorder the states in any existing analysis file. Reordered analysis files can be obtained by rerunning OverlapEnrichment, NeighborhoodEnrichment, and/or CompareModels on reordered segmentation file(s). In the segmentation files the state number is prefixed by an 'E' if the ordering is based on emissions, 'T' if it was based on the transition parameters, and 'U' if it was user provided. The command can also be used to add descriptive state labels to the parameter heatmaps with the current ordering.

**Input**

@HELP_FILETYPE_MODEL@

**Output**

@HELP_FILETYPE_MODEL@
@HELP_FILETYPE_EMISSION@
@HELP_FILETYPE_TRANSITION@

.. class:: infomark

**References**

@HELP_REFERENCES@
    ]]></help>
    <citations>
        <expand macro="citations"/>
    </citations>
</tool>