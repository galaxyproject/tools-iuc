<?xml version="1.0"?>
<tool id="chromhmm_binarizebam" name="chromHMM BinarizeBam" version="@TOOL_VERSION@+@WRAPPER_VERSION@">
    <description>create binary from bam</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <stdio></stdio>
    <command detect_errors="exit_code"><![CDATA[
        ## initialize
        mkdir -p {input,output}/{data,control} output/signal &&

        ## data, keep name referenced in '$cellmarkfiletable', all located in one folder
        #for $file in $inputbeddir
            ln -s '${file}' 'input/data/${file.name}' &&
        #end for

        ## run
        @RUN@
            BinarizeBam
            ## optional parameters
            #if $oo.t
                -t output/signal
            #end if
            #if $ap.assign_cond.assign_sel == 'shift'
                -n $ap.assign_cond.n
            #else if $ap.assign_cond.assign_sel == 'center'
                -center
            #else if $ap.assign_cond.assign_sel == 'paired'
                -paired
            #else if $ap.assign_cond.assign_sel == 'peak'
                -peak
            #end if
            -b $ap.b
            -e $ap.e
            -f $ap.f
            -g $ap.g
            -p $ap.p
            -s $ap.s
            $ap.strictthresh
            -u $ap.u
            ## required parameters (specific order)
            ${__tool_directory__}/tool-data/CHROMSIZES/${assembly}.txt ## chromosomelengthfile
            input/data ## inputbeddir
            '$cellmarkfiletable' ## cellmarkfiletable
            output/data ## outputbinarydir
        ]]></command>
    <inputs>
        <!-- excluded: -colfields, -gzip, -i, -j, -splitrows -->
        <!-- included via wrapper:  -->

        <param argument="inputbeddir" type="data" format="bam" multiple="true" label="Select bed input file(s)." help="Filenames have to match entries in cellmarkfiletable."/>
        <expand macro="cellmarkfiletable"/>
        <expand macro="assembly"/>

        <section name="ap" title="Advanced parameters">
            <expand macro="b"/>
            <expand macro="e"/>
            <expand macro="f"/>
            <expand macro="g"/>
            <expand macro="p"/>
            <expand macro="s"/>
            <expand macro="strictthresh"/>
            <expand macro="u"/>
            <conditional name="assign_cond">
                <param name="assign_sel" type="select" multiple="false" label="Select mode to determine the bin to assign a read." help="Center can make sense to use if the coordinates are based on already extended reads. If this option is selected, then the strand information of a read and the shift parameter are ignored. By default reads are assigned to a bin based on the position of its 5' end as determined from the strand of the read after shifting an amount determined by the -n option with respect to the strand orientation.. The number of bases a read should be shifted to determine a bin assignment. If bam files should be treated as peak calls, a '1' is called to any bin overlapping, which is not recommend for broad peak calls. If paired is present then reads in the BAM file are treated as pairs, and each pair is counted once with bin assignment is based on shifting half the insert size. (-center, -n, -peaks, -paired)">
                    <option value="shift">Shift</option>
                    <option value="center">Center</option>
                    <option value="peaks">Peaks</option>
                    <option value="paired">Paired</option>
                </param>
                <when value="shift">
                    <param argument="-n" type="integer" value="100" label="Set number of bases a read should be shifted to determine a bin assignment." help="Bin assignment is based on the 5' end of a read shifted this amount with respect to the strand orientation."/>
                </when>
                <when value="center"/>
                <when value="peaks"/>
                <when value="paired"/>
            </conditional>
        </section>
        
        <section name="oo" title="Output options">
            <expand macro="t"/>
        </section>
    </inputs>
    <outputs>
        <!-- one text file per cell identifier and chromosome; designation: <cellidentifier>_<chromosome>; e.g. GM12878_chr11_binary.txt -->
        <expand macro="out_binary"/>
        <!-- one text file per cell identifier and chromosome; designation: <cellidentifier>_<chromosome>; e.g. GM12878_chr11_signal.txt -->
        <expand macro="out_signal"/>
    </outputs>
    <tests> 
        <!-- #1; required parameters -->
        <test>
            <param name="inputbeddir" value="binarizebam_test_1.bam,binarizebam_test_2.bam"/>
            <param name="cellmarkfiletable" value="binarizebam_cellmark.txt"/>
            <param name="assembly" value="hg18"/>
            <output name="out_binary">
                <discovered_dataset designation="cell1_chr18" ftype="">
                    <assert_contents>
                        <has_n_lines n="380587"/>
                        <has_line line="cell1&#009;chr18"/>
                        <has_line line="0"/>
                    </assert_contents>
                </discovered_dataset>
                <discovered_dataset designation="cell2_chr18" ftype="">
                    <assert_contents>
                        <has_n_lines n="380587"/>
                        <has_line line="cell2&#009;chr18"/>
                        <has_line line="0"/>
                    </assert_contents>
                </discovered_dataset>
            </output>            
        </test>
        <!-- #2; advanced parameters, paired -->
        <test>
            <param name="inputbeddir" value="binarizebam_test_1.bam,binarizebam_test_2.bam"/>
            <param name="cellmarkfiletable" value="binarizebam_cellmark.txt"/>
            <param name="assembly" value="hg18"/>
            <section name="ap">
                <param name="b" value="201"/>
                <param name="e" value="2"/>
                <param name="f" value="0.1"/>
                <param name="g" value="0.1"/>
                <param name="p" value="0.0002"/>
                <param name="s" value="1"/>
                <param name="strictthresh" value="true"/>
                <param name="u" value="2"/>
                <conditional name="assign_cond">
                    <param name="assign_sel" value="center"/>
                </conditional>
            </section>
            <section name="oo">
                <param name="t" value="true"/>
            </section>
            <output name="out_binary">
                <discovered_dataset designation="cell1_chr18" ftype="">
                    <assert_contents>
                        <has_n_lines n="378694"/>
                        <has_line line="cell1&#009;chr18"/>
                        <has_line line="0"/>
                    </assert_contents>
                </discovered_dataset>
                <discovered_dataset designation="cell2_chr18" ftype="">
                    <assert_contents>
                        <has_n_lines n="378694"/>
                        <has_line line="cell2&#009;chr18"/>
                        <has_line line="0"/>
                    </assert_contents>
                </discovered_dataset>
            </output>
            <output name="out_signal">
                <discovered_dataset designation="cell1_chr18" ftype="">
                    <assert_contents>
                        <has_n_lines n="378694"/>
                        <has_line line="cell1&#009;chr18"/>
                        <has_line line="0"/>
                    </assert_contents>
                </discovered_dataset>
                <discovered_dataset designation="cell2_chr18" ftype="">
                    <assert_contents>
                        <has_n_lines n="378694"/>
                        <has_line line="cell2&#009;chr18"/>
                        <has_line line="0"/>
                    </assert_contents>
                </discovered_dataset>
            </output>           
        </test>       
    </tests>
    <help><![CDATA[
.. class:: infomark

**What it does**

BinarizeBam @HELP_WID@

This command converts coordinates of aligned reads into binarized data form from which a chromatin state model can be learned. The binarization is based on a poisson background model. If no control data is specified the parameter to the poisson distribution is the global average number of reads per bin. If control data is specified the global average number of reads is multiplied by the local enrichment for control reads as determined by the specified parameters. Optionally intermediate signal files can also be outputted and these signal files can later be directly converted into binary form using the BinarizeSignal command. 

**Input**

@HELP_FILETYPE_BAM@
@HELP_FILETYPE_CELLMARKFILETABLE@

**Output**

@HELP_FILETYPE_BINARY@
@HELP_FILETYPE_SIGNAL@

.. class:: infomark

**References**

@HELP_REFERENCES@
    ]]></help>
    <citations>
        <expand macro="citations"/>
    </citations>
</tool>