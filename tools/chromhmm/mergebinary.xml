<?xml version="1.0"?>
<tool id="chromhmm_mergebinary" name="chromHMM MergeBinary" version="@TOOL_VERSION@+@WRAPPER_VERSION@">
    <description>for binarized data</description>

    <macros>
        <import>macros.xml</import>
    </macros>

    <expand macro="requirements"/>

    <stdio></stdio>  

    <command detect_errors="exit_code"><![CDATA[
        ## initialization
        ## Output filenames depend on input filenames
        ## Requirements: suffix '_binary', extension *.txt, located in one folder inside input folder
        mkdir -p input/data &&
        #for $file in $inputdir
            ## Remove additional extensions like .gz,
            ## add suffix _binary if not present and 
            ## add file extension .txt
            #set $filename = $file.name[:$file.name.index('.')]
            #unless '_binary' in $filename
                #set $filename = $filename + '_binary'
            #end unless            
            #set $filename = $filename + '.txt'
            ln -s '${file}' input/data/${filename} &&
        #end for

        ## run
        @RUN@
            MergeBinary
            #if $ap.split_cond.split_sel == 'yes'
                -splitrows
                -j $ap.split_cond.j
            #end if
            @RUN_IO@

        && ls output -lisa
        ]]></command>
    <inputs>
        <param argument="inputdir" type="data" format="txt" multiple="true" label="Select binary input file(s)." help="Usually files with the suffix '_binary'."/>
        <section name="ap" title="Advanced parameters" expanded="true">            
            <conditional name="split_cond" label="">
                <param name="split_sel" type="select" label="Should chromosome files be splitted accross multiple files?" help="(-splitrows)">
                    <option value="no">No</option>
                    <option value="yes">Yes</option>
                </param>
                <when value="yes">
                    <param argument="-j" type="integer" value="5000" min="1" label="Set maximum number of rows per file." help=""/>
                </when>
                <when value="no"/>
            </conditional>
        </section>
    </inputs>

    <outputs>
        <collection name="out_collection" type="list" label="${tool.name} on ${on_string}: Binary files">
            <discover_datasets pattern="__name_and_ext__" ext="txt" directory="output" visible="false"/>
        </collection>
    </outputs> 

    <tests> 
        <!-- #1 required parameters -->
        <test expect_num_outputs="1">
            <param name="inputdir" value="GM12878_chr11_binary.txt.gz"/>
            <output_collection name="out_collection" type="list" count="1">
                <element name="GM12878_chr11_binary" ftype="txt">
                    <assert_contents>
                        <has_line line="GM12878&#009;chr11"/>
                        <has_n_lines n="672263"/>
                    </assert_contents>
                </element>
            </output_collection>
        </test>
        <!-- #2 advanced parameters -->
        <test>
            <param name="inputdir" value="GM12878_chr11_binary.txt.gz"/>
            <conditional name="split_cond">
                <param name="split_sel" value="yes"/>
                <param name="j" value="100000"/>
            </conditional>
            <output_collection name="out_collection" type="list" count="7">
                <element name="GM12878_chr11.0_binary" ftype="txt">
                    <assert_contents>
                        <has_line line="GM12878&#009;chr11.0"/>
                        <has_n_lines n="100002"/>
                    </assert_contents>
                </element>
            </output_collection>
        </test>
    </tests>
    <help><![CDATA[
.. class:: infomark

**What it does**

MergeBinary @HELP_WID@

The command can do a columnwise merge of binarized data for different mark subsets split across files in multiple subdirectories. Files that are for the same cell type and chromosome are merged. If a chromosome for a cell type is found in one subdirectory, but not another,then a warning message is printed and not present values are used for that chromosome. This command can also be used to do a row split on the input files, including if only one subdirectory is provided and no merging is done.

**Input**

@HELP_FILETYPE_BINARY@

Files need to have the same header.

**Output**

@HELP_FILETYPE_BINARY@

.. class:: infomark

**References**

@HELP_REFERENCES@
    ]]></help>
    <citations>
        <expand macro="citations"/>
    </citations>
</tool>