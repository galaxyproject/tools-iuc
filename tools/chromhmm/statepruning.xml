<?xml version="1.0"?>
<tool id="chromhmm_statepruning" name="chromHMM StatePruning" version="@TOOL_VERSION@+@WRAPPER_VERSION@">
    <description>of learned models</description>
    <macros>
       <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <stdio></stdio>
    <command detect_errors="exit_code"><![CDATA[
        ## initialization
        mkdir 'input' &&

        ## models
        #for $i, $file in enumerate($in_model)
            ln -s '${file}' 'input/model_${i}.txt' &&
        #end for

        ## run
        @RUN@
            StatePruning
            ## optional parameters
            $ap.correlation
            ## required parameters (specific order)
            'input' ## inputdir
            'output' ## outputdir
        ]]></command>
    <inputs>
        <expand macro="in_model" multiple="true" label="Select file(s) of learned models" help="Usually text files with prefix 'model_'. (inputdir)"/>

        <section name="ap" title="Advanced parameters">
            <param argument="-correlation" type="boolean" truevalue="-correlation" falsevalue="" checked="false" label="Use correlation coefficient?" help="Use 1-correlation coefficient to define distance instead of the default of the euclidean distance."/>
        </section>
    </inputs>
    <outputs>
        <collection name="out_models" type="list" label="${tool.name} on ${on_string}: Model files">
            <discover_datasets pattern="__name_and_ext__" directory="output" />
        </collection>
    </outputs>
    <tests>
        <!-- #1; required parameters -->
        <test expect_num_outputs="1">
            <param name="in_model" value="model_10.txt,model_2.txt"/>
            <output_collection name="out_models" type="list">
                <element name="elim_2_model_0" ftype="txt">
                    <assert_contents>
                        <has_line line="2&#009;10&#009;E"/>
                        <has_n_lines n="47"/>
                    </assert_contents>
                </element>
            </output_collection>
        </test>
        <!-- #2; advanced parameters -->
        <test expect_num_outputs="1">
            <param name="in_model" value="model_10.txt,model_2.txt"/>
            <section name="ap">
                <param name="correlation" value="true"/>
            </section>
            <output_collection name="out_models" type="list">
                <element name="elim_2_model_0" ftype="txt">
                    <assert_contents>
                        <has_line line="2&#009;10&#009;E"/>
                        <has_n_lines n="47"/>
                    </assert_contents>
                </element>
            </output_collection>
        </test>
    </tests>
    <help><![CDATA[
.. class:: infomark

**What it does**

StatePruning @HELP_WID@

@HELP_CHROMHMM@

StatePruning takes as input a set of learned models generally learned across different initializations and then generates a nested set of models by pruning states from the highest scored model. The highest score model is the state with the highest estimated log-likelihood. States are greedily pruned from the highest scoring model. The criteria to prune a state is that it causes the least decrease on the total distance for all the states in other models to their nearest state in the pruned model. If there is only one model, then distance to other states in that model are considered. This can be used as one heuristic to initialize model parameters to get a roughly comparable set of models across different number of states while biasing the learning procedure to avoid redundant or non-representative states.

By default ChromHMM uses a simpler single pass method for producing nested initializations.

**Input**

@HELP_FILETYPE_MODEL@

**Output**

@HELP_FILETYPE_ELIM@

.. class:: infomark

**References**

@HELP_REFERENCES@
    ]]></help>
    <citations>
        <expand macro="citations"/>
    </citations>
</tool>