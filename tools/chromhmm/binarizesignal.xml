<?xml version="1.0"?>
<tool id="chromhmm_binarizesignal" name="chromHMM BinarizeSignal" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@">
    <description>create binary from signal</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <stdio></stdio>
    <command detect_errors="exit_code"><![CDATA[
        ## initialize 
        @FUNCTIONS@
        mkdir -p 'input/signal' 'output/binary' &&

        ## signal files, suffix _signal,  extension *.txt, one folder
        ## <celltype>_<chromosome>_signal.txt, e.g. cell1_chr7_signal.txt
        #for $file in $signaldir
            #set $listHeader = $fetchHeader($file)
            #set $filename = $listHeader[0] + '_' + $listHeader[1] + '_signal' + '.txt'
            ln -s '${file}' 'input/signal/${filename}' &&
        #end for

        ## run
        @RUN@
            BinarizeSignal
            ## optional parameters
            -f $ap.f
            -g $ap.g
            -p $ap.p
            $ap.strictthresh
            ## required parameters (specific order)
            'input/signal' ## signaldir
            'output/binary' ## outputdir
        ]]></command>
    <inputs>
        <param argument="signaldir" type="data" format="txt" multiple="true" label="Select signal input file(s)" help="Usually text files with prefix '_suffix'."/>

        <section name="ap" title="Advanced parameters">
            <expand macro="f"/>
            <expand macro="g"/>
            <expand macro="p"/>
            <expand macro="strictthresh"/>
        </section>
    </inputs>
    <outputs>
        <expand macro="out_binary"/>
    </outputs>
    <tests>
        <!-- #1; required parameters -->
        <test expect_num_outputs="1">
            <param name="signaldir" value="cell1_chr11_signal.txt.gz,cell1_chr7_signal.txt.gz,cell2_chr7_signal.txt.gz"/>
            <output name="out_binary">
                <discovered_dataset designation="cell1_chr11" ftype="">
                    <assert_contents>
                        <has_n_lines n="672263"/>
                        <has_line line="cell1&#009;chr11"/>
                        <has_line line="0"/>
                    </assert_contents>
                </discovered_dataset>
                <discovered_dataset designation="cell1_chr7" ftype="">
                    <assert_contents>
                        <has_n_lines n="794109"/>
                        <has_line line="cell1&#009;chr7"/>
                        <has_line line="0"/>
                    </assert_contents>
                </discovered_dataset>
                <discovered_dataset designation="cell2_chr7" ftype="">
                    <assert_contents>
                        <has_n_lines n="794109"/>
                        <has_line line="cell2&#009;chr7"/>
                        <has_line line="0"/>
                    </assert_contents>
                </discovered_dataset>
            </output>
        </test>
        <!-- #2; advanced parameters -->
        <test expect_num_outputs="1">
            <param name="signaldir" value="cell1_chr11_signal.txt.gz,cell1_chr7_signal.txt.gz,cell2_chr7_signal.txt.gz"/>
            <param name="f" value="0.1"/>
            <param name="g" value="0.1"/>
            <param name="p" value="0.0002"/>
            <param name="strictthresh" value="true"/>
            <output name="out_binary">
                <discovered_dataset designation="cell1_chr11" ftype="">
                    <assert_contents>
                        <has_n_lines n="672263"/>
                        <has_line line="cell1&#009;chr11"/>
                        <has_line line="0"/>
                    </assert_contents>
                </discovered_dataset>
                <discovered_dataset designation="cell1_chr7" ftype="">
                    <assert_contents>
                        <has_n_lines n="794109"/>
                        <has_line line="cell1&#009;chr7"/>
                        <has_line line="0"/>
                    </assert_contents>
                </discovered_dataset>
                <discovered_dataset designation="cell2_chr7" ftype="">
                    <assert_contents>
                        <has_n_lines n="794109"/>
                        <has_line line="cell2&#009;chr7"/>
                        <has_line line="0"/>
                    </assert_contents>
                </discovered_dataset>
            </output>
        </test>
    </tests>
    <help><![CDATA[
.. class:: infomark

**What it does**

BinarizeSignal @HELP_WID@

@HELP_CHROMHMM@

BinarizeSignal converts data already processed into signal files into binarized data files. Note the binarization from signal is designed only for signal data which represent counts of reads assigned to bins such as the optional output from the BinarizeBed command. If the signal was computed in other ways, then the binarization based on the poisson distribution may not give meaningful results. '-1' entries in a signal files are considered missing.

**Input**

@HELP_FILETYPE_SIGNAL@
@HELP_FILETYPE_CONTROLSIGNAL@

**Output**

@HELP_FILETYPE_BINARY@

.. class:: infomark

**References**

@HELP_REFERENCES@
    ]]></help>
    <citations>
        <expand macro="citations"/>
    </citations>
</tool>