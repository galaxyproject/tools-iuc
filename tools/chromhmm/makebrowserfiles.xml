<?xml version="1.0"?>
<tool id="chromhmm_makebrowserfiles" name="chromHMM MakeBrowserFiles" version="@TOOL_VERSION@+@WRAPPER_VERSION@">
    <description>from segmentation coordinates</description>

    <macros>
        <import>macros.xml</import>
    </macros>

    <expand macro="requirements"/>

    <stdio></stdio>  

    <command detect_errors="exit_code"><![CDATA[
        ## init
        ln -s '${segmentfile}' segments.bed &&

        ## run
        @RUN@
            MakeBrowserFiles
            ## optional parameters
            #if $op.c
                -c '$op.c'
            #end if
            #if $op.m
                -m '$op.m'
            #end if
            #if $op.n
                -n '$op.n'
            #end if
            ## required parameters (specific order)
            segments.bed
            #unless $segmentationname == ''
                '$segmentationname'
            #else 
                'segments'
            #end unless
            output
        ]]></command>
    <inputs>
        <!-- excluded: gzip-->
        <!-- included via wrapper: segmentationname, outputfileprefix -->
        <!-- required parameters -->
        <param argument="segmentfile" type="data" format="txt" multiple="false" label="Select segmentation file." help="A four column tab delimited segmentation file: chromosome, start, end, and label."/>
        <param argument="segmentationname" type="text" label="Set name for the segmentation that will be given to the segmentation and displayed in the browser." help=""/>
        <!-- optional parameters -->
        <section name="op" title="Optional parameters">
            <param argument="-c" type="data" multiple="false" optional="true" label="Select a file for mapping from state ID to desired color." help="The file is a two column tab delimited file. The first column contains the state number without the state ordering prefix. The second column contains r,g,b integer values between 0 and 255 delimited by commas specifying the colors for each state. If this file is not specified different colors are automatically generated for each state such that states closer in the order have more similar colors."/>
            <param argument="-m" type="data" format="txt" multiple="false" optional="true" label="Select file that maps IDs to descriptive names." help="The descriptive names can be appended to the state IDs when viewing the states in the browser. The format of this file is a two column tab delimited file. The first column contains each state ID with the state ordering letter prefix. The second column contains a descriptive name or mnemonic. If this file is not specified, then just the state IDs are displayed in the browser."/>
            <param argument="-n" type="integer" value="" optional="true" label="Set number of states on which segmentation is based." help="By default the maximum state number is used to indicate how many states there are. This parameter can potentially influence the default state coloring if there are locations in the genome which were not assigned to any state."/>
        </section>
    </inputs>
    <outputs>
        <data name="out_expanded" format="bed" from_work_dir="output_expanded.bed" label="${tool.name} on ${on_string} Expanded, bed"/>
        <data name="out_dense" format="bed" from_work_dir="output_dense.bed" label="${tool.name} on ${on_string} Dense, bed"/>
    </outputs> 

    <tests> 
        <!-- #1 only required parameters, all outputs -->
        <test expect_num_outputs="2">
            <param name="segmentfile" value="GM12878_2_segments.bed.gz"/>
            <param name="segmentationname" value="segmentation_test"/>
            <output name="out_expanded">
                <assert_contents>
                    <has_n_lines n="4"/>
                    <has_line_matching expression="track name=&quot;Expanded_segmentation_test&quot;.+"/>
                    <has_line_matching expression="chr11&#009;0.+"/>
                </assert_contents>
            </output>
            <output name="out_dense">
                <assert_contents>
                    <has_n_lines n="15905"/>
                    <has_line_matching expression="track name=&quot;segmentation_test&quot;.+"/>
                    <has_line_matching expression="chr11&#009;0&#009;.+"/>
                </assert_contents>
            </output>
        </test>
        <!-- #2 all parameters, all outputs
            #todo usage of -c and -m not clear
        -->
    </tests>
    <help><![CDATA[
.. class:: infomark

**What it does**

MakeBrowserFiles @HELP_WID@

This command converts segmentation coordinates in a .bed file into two files that can be viewed as custom tracks in the `UCSC genome browser <http://genome.ucsc.edu>`_. One of the files can give a dense view of the segmentation in a single track with states being differentiated solely by color. The other file gives an expanded view showing one state per track.

**Input**

@HELP_FILETYPE_SEGMENTS@

**Output**

@HELP_FILETYPE_DENSE@
@HELP_FILETYPE_EXPANDED@

.. class:: infomark

**References**

@HELP_REFERENCES@
    ]]></help>
    <citations>
        <expand macro="citations"/>
    </citations>
</tool>