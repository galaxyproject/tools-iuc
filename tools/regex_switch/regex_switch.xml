<tool name="Regex switch" id="regex_switch" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" tool_type="expression">
    <description>boolean from regex on element identifier</description>
    <macros>
        <token name="@TOOL_VERSION@">1.0.0</token>
        <token name="@VERSION_SUFFIX@">0</token>
    </macros>
    <expression type="ecma5.1"><![CDATA[{
        var name = $job.input.name;
        var pat = $job.pattern;
        var matched = false;

        try {
            if (pat !== "") {
                var re = new RegExp(pat);
                matched = re.test(name);
            }
        } catch (e) {
            return { "__error_message": "Invalid regular expression: " + (e && e.message ? e.message : String(e)) };
        }

        return { "matched": matched, "unmatched": !matched };
    }]]></expression>
    <inputs>
        <param name="input" type="data" format="data"
               label="Dataset" />
        <param name="pattern" sanitize="false" type="text" label="Regex pattern"
               help="Example: \.csv$">
              <sanitizer>
                  <valid>
                      <add preset="string.printable"/>
                  </valid>
              </sanitizer>
        </param>
    </inputs>
    <outputs>
        <output type="boolean" name="matched" from="matched" label="Match result"/>
        <output type="boolean" name="unmatched" from="unmatched" label="Unmatched result"/>
    </outputs>
    <tests>
        <test expect_num_outputs="2">
            <param name="input" value="sample.csv"/>
            <param name="pattern" value="\.csv$"/>
            <output name="matched">
                <assert_contents>
                    <has_text text="true"/>
                </assert_contents>
            </output>
            <output name="unmatched">
                <assert_contents>
                    <has_text text="false"/>
                </assert_contents>
            </output>
        </test>
        <test expect_num_outputs="2">
            <param name="input" value="table.tsv"/>
            <param name="pattern" value="\.csv$"/>
            <output name="matched">
                <assert_contents>
                    <has_text text="false"/>
                </assert_contents>
            </output>
            <output name="unmatched">
                <assert_contents>
                    <has_text text="true"/>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[
**Regex switch**

Matches a regular expression against the name of the input file. It emits two booleans:
`matched` (the match result) and `unmatched` (its negation). Connect either to a step's **Conditionally skip step?** input.
]]></help>
</tool>
