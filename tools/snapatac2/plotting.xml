<tool id="snapatac2_plotting" name="Plotting" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@">
    <description>with snapatac2</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <requirements>
    	<expand macro="requirements"/>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
@CMD@
	]]></command>
	<configfiles>
        <configfile name="script_file"><![CDATA[

@CMD_imports@
@CMD_read_inputs@

#if $method.method == 'pl.tsse'
sa.pl.tsse(
    adata = '$method.adata',
    min_fragment = $method.min_fragment,
    @CMD_params_render_plot@
)

#else if $method.method == 'pl.umap'
sa.pl.umap(
	adata = '$method.adata',
	color = $method.color,
	use_rep = '$method.use_rep',
	marker_size = $method.marker_size,
	marker_opacity = $method.marker_opacity,
	sample_size = $method.sample_size,
	@CMD_params_render_plot@
)

#else if $method.method == 'pl.motif_enrichment'
sa.pl.motif_enrichment(
	enrichment = $method.enrichment,
	min_log_fc = $method.min_log_fc,
	max_fdr = $method.maxfdr,
	@CMD_params_render_plot@
)
#else if $method.method == 'pl.regions'
sa.pl.regions(
	adata = $method.adata,
	groupby = $method.groupby,
	peaks = $method.peaks,
	width = $method.width,
	height = $method.height,
	show = $method.show,
	interactive =$method.interactive,
	out_file = '$method.out_file'
)
#else if $method.method == 'pl.spectral_eigenvalues'
sa.pl.spectral_eigenvalues(
	adata = $method.adata,
	width = $method.width,
	height = $method.height,
	show = $method.show,
	interactive =$method.interactive,
	out_file = $method.out_file
)
#else if $method.method == 'pl.network_edge_stat'
sa.pl.network_edge_stat(
	network = $method.network,
	@CMD_params_render_plot@
)
#end if
	]]></configfile>
	</configfiles>
    <inputs>
        <conditional name="method">
			<param name="method" type="select" label="Method used for plotting">
		 	    <option value="pl.tsse">Plot the TSS enrichment vs. number of fragments density figure, using pl.tsse</option>
		 	    <option value="pl.umap">Plot the UMAP embedding, using pl.umap</option>
		 	    <option value="pl.motif_enrichment">Plot the motif enrichment result, using pl.motif_enrichment</option>
		 	    <option value="pl.regions">Plot regions, using pl.regions</option>
		 	    <option value="pl.spectral_eigenvalues">Plot the eigenvalues of spectral embedding, using pl.spectral_eigenvalues</option>
		 	    <option value="pl.network_edge_stat">Network Edge Stat, using pl.network_edge_stat</option>
		 	</param>
		 	<when value="pl.tsse">
		 		<expand macro="inputs_anndata"/>
		 	    <param name="min_fragment" type="integer" value="500" label="Minimum number of unique fragments"/>
		 	    <expand macro="render_plot"/>
		 	</when>
		 	<when value="pl.umap">
				<expand macro="inputs_anndata"/>
		 	    <param name="color" type="text" optional="true" value="" label="Color"/>
				<param name="use_rep" type="text" value="x_umap" optional="flase" label="Use the indicated representation in .obsm"/>
				<param name="marker_size" type="float" value="" label="Size of the dots"/>
				<param name="marker_opacity" type="float" value="" label="Opactiy of the dots"/>
				<param name="sample_size" type="integer" optional="true" label="Number of cells to use"/>
				<expand macro="render_plot"/>
		 	</when>
		 	<when value="pl.motif_enrichment">
		 		<param name="enrichment" type="text" optional="flase" label="Motif enrichment result">
		 			<expand macro="sanitize_query"/>
		 		</param>
				<param name="min_log_fc" type="float" value="1" label="Minimum log2-fold-change"/>
				<param name="max_fdr" type="float" value="0.01" label="Maximum FDR"/>
		 	    <expand macro="render_plot"/>
		 	</when>
		 	<when value="pl.regions">
				<expand macro="inputs_anndata"/>
		 	    <expand macro="param_groupby"/>
				<param name="peaks" type="text" optional="flase" label="Peaks of each group"/>
				<expand macro="dimentions_plot"/>
				<param name="show" type="boolean" checked="true" label="Show the figure"/>
				<param name="interactive" type="boolean" checked="true" label="Make interactive plot"/>
				<expand macro="out_file"/>
		 	</when>
		 	<when value="pl.spectral_eigenvalues">
				<expand macro="inputs_anndata"/>
				<expand macro="dimentions_plot"/>
				<param name="show" type="boolean" checked="true" label="Show the figure"/>
				<param name="interactive" type="boolean" checked="true" label="Make interactive plot"/>
		 	    <expand macro="out_file"/>
		 	</when>
		 	<when value="pl.network_edge_stat">
		 		<expand macro="network"/>
				<expand macro="render_plot"/>
		 	</when>
		</conditional>
    </inputs>
    <outputs>
    	<data name="out_png" format="png" from_working_dir="png" label="PNG plot from ${tool.name} (${method.method}) on ${on_string}">
            <filter>out_file == 'png'</filter>
        </data>
        <data name="out_pdf" format="pdf" label="PDF plot from ${tool.name} (${method.method}) on ${on_string}">
            <filter>out_file == 'pdf'</filter>
        </data>
        <data name="out_svg" format="svg" label="SVG plot from ${tool.name} (${method.method}) on ${on_string}">
            <filter>out_file == 'svg'</filter>
        </data>
        <data name="out_html" format="html" label="HTML plot from ${tool.name} (${method.method}) on ${on_string}">
            <filter>out_file == 'png'</filter>
        </data>
        <data name="hidden_output" format="txt" label="Log file" hidden="true" >
            <filter>advanced_common['show_log']</filter>
        </data>
    </outputs>
	<tests>
		<test expect_num_outputs="2">
            <!-- test 1: pl.tsse -->
            <conditional name="method">
            	<param name="method" value="pl.tsse"/>
            	<param name="adata" value="pbmc5_500_chr.h5ad" />
                <param name="min_fragment" value="500"/>
                <expand macro="render_plot_test"/>
            </conditional>
            <section name="advanced_common">
                <param name="show_log" value="true" />
            </section>
            <output name="hidden_output">
                <assert_contents>
                    <has_text_matching expression="sa.pl.tsse"/>
                    <has_text_matching expression="min_fragment=500" />
                    <expand macro="render_plot_matching_text"/>
                </assert_contents>
            </output>
        </test>
        <test expect_num_outputs="2">
            <!-- test 2: pl.umap -->
            <conditional name="method">
            	<param name="method" value="pl.umap"/>
            	<param name="adata" value="pbmc5_500_chr.h5ad" />
            	<param name="color" value="None"/>
            	<param name="use_rep" value="X_umap"/>
            	<param name="marker_size" value="1"/>
            	<param name="marker_opacity" value="0.8"/>
            	<param name="sample_size" value="100"/>
            	<expand macro="render_plot_test"/>
            	
            </conditional>
            <section name="advanced_common">
                <param name="show_log" value="true" />
            </section>
            <output name="hidden_output">
                <assert_contents>
                    <has_text_matching expression="sa.pl.umap"/>
                    <has_text_matching expression="color=None"/>
                    <has_text_matching expression="use_rep=X_umap"/>
                    <has_text_matching expression="marker_size=1"/>
                    <has_text_matching expression="marker_opactiy=0.8"/>
                    <has_text_matching expression="sample_size=100"/>
                    <expand macro="render_plot_matching_text"/>
                </assert_contents>
            </output>
        </test>
        <test expect_num_outputs="2">
			<!-- test 3: pl.motif_enrichment -->
			<conditional name="method">
				<param name="enrichment" value="tl.moftif_enrichment.result_file"/>
				<param name="method" value="pl.motif_enrichment"/>
				<param name="min_log_fc" value="1"/>
				<param name="max_fdr" value="0.01"/>
				<expand macro="render_plot_test"/>

			</conditional>
			<section name="advanced_common">
				<param name="show_log" value="true" />
			</section>
			<output name="hidden_output">
				<assert_contents>
				    <has_text_matching expression="sa.pl.motif_enrichment"/>
				    <has_text_matching expression="min_log_fc=1"/>
				    <has_text_matching expression="max_fdr=0.01"/>
				    <expand macro="render_plot_matching_text"/>
				</assert_contents>
			</output>
		</test>

		<test expect_num_outputs="2">
			<!-- test 4: pl.regions -->
			<conditional name="method">
				<param name="method" value="pl.regions"/>
				<param name="adata" value="pbmc5_500_chr.h5ad"/>
				<param name="groupby" value="cell_type"/>
				<param name="peaks" value="tl.marker_regions.result_file"/>
				<param name="width" value="600"/>
				<param name="height" value="400"/>
				<param name="show" value="True"/>
				<param name="interactive" value="True"/>
				<param name="out_file" value="png"/>
			</conditional>
			<section name="advanced_common">
				<param name="show_log" value="true" />
			</section>
			<output name="hidden_output">
				<assert_contents>
				    <has_text_matching expression="sa.pl.regions"/>
				    <has_text_matching expression="groupby='cell_type'"/>
				    <has_text_matching expression="width=600"/>
				    <has_text_matching expression="height=400"/>
				    <has_text_matching expression="show=True"/>
				    <has_text_matching expression="interactive=True"/>
				</assert_contents>
			</output>
		</test>

		<test expect_num_outputs="2">
			<!-- test 5: pl.spectral_eigenvalues -->
			<conditional name="method">
				<param name="method" value="pl.spectral_eigenvalues"/>
				<param name="adata" value="pbmc5_500_chr.h5ad"/>
				<param name="width" value="600"/>
				<param name="height" value="400"/>
				<param name="show" value="True"/>
				<param name="interactive" value="True"/>
				<param name="out_file" value="png"/>
			</conditional>
			<section name="advanced_common">
				<param name="show_log" value="true" />
			</section>
			<output name="hidden_output">
				<assert_contents>
				    <has_text_matching expression="sa.pl.spectral_eigenvalues"/>
				    <has_text_matching expression="width=600"/>
				    <has_text_matching expression="height=400"/>
				    <has_text_matching expression="show=True"/>
				    <has_text_matching expression="interactive=True"/>
				</assert_contents>
			</output>
		</test>

		<test expect_num_outputs="2">
			<!-- test 6: pl.network_edge_stat -->
			<conditional name="method">
				<param name="method" value="pl.network_edge_stat"/>
				<param name="network" value="tl.init_network_from_annotaion.result_file"/>
				<expand macro="render_plot_test"/>
			</conditional>
			<section name="advanced_common">
				<param name="show_log" value="true" />
			</section>
			<output name="hidden_output">
				<assert_contents>
				    <has_text_matching expression="sa.pl.network_edge_stat"/>
				    <expand macro="render_plot_matching_text"/>
				</assert_contents>
			</output>
		</test>
	</tests>
    <help><![CDATA[
    SnapATAC2 plotting functions
    ]]></help>
    <expand macro="citations"/>
</tool>
