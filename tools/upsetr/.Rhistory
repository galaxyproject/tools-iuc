a = strsplit("1, 2, 3, 5, 7, 8, 11, 12, 13", ",")
b = strsplit("1, 2, 4, 5, 10", ",")
c = strsplit("1, 5, 6, 7, 8, 9, 10, 12, 13", ",")
list_data = list(one=c(a), two=c(b), three=c(c))
upset(fromList(list_data), order.by = "freq")
library("UpSetR")
upset(fromList(list_data), order.by = "freq")
x = c(a)
x
k = strsplit("1,2,3", " (", ")")
k = unlist(strsplit("1,2,3", " (",") ")
k
k
k = unlist(strsplit("1,2,3", " (",") ")
l
a = strsplit("1,2,3", ",")
a = as.numeric(a)
a
a = as.numeric(as.character(unlist(a)))
a
a = as.numeric(unlist("1,2"))
a = as.numeric(unlist(strsplit("1,2", ",")))
a
a = as.numeric(unlist(strsplit("1, 2, 3, 5, 7, 8, 11, 12, 13", ",")))
b = as.numeric(unlist(strsplit("1, 2, 4, 5, 10", ",")))
c = as.numeric(unlist(strsplit("1, 5, 6, 7, 8, 9, 10, 12, 13", ",")))
list_data = list(one=c(a), two=c(b), three=c(c))
upset(fromList(list_data), order.by = "freq")
a = strsplit("one: 1, 2, 3", ":")
a
listNames = a[1]
listNames
a[[1]]
typeof(a)
a[2]
a[0]
a[1]
a[1][1]
[[1]]
a = list(a)
a
a
a = unlist(strsplit("one: 1,2,3", ":"))
a
a[1]
a[2]
listNames = a[1]
b = unlist(strsplit("two: 3,4", ":"))
b[1]
merged.list = c(a[1], b[1])
print(merged.list)
a = unlist(strsplit("one: 1, 2, 3, 5, 7, 8, 11, 12, 13", ":"))
b = unlist(strsplit("two: 1, 2, 4, 5, 10", ":"))
c = unlist(strsplit("three: 1, 5, 6, 7, 8, 9, 10, 12, 13", ":"))
listNames =  c(a[1], b[1], c[1])
listNames
list1 = as.numeric(unlist(strsplit(a[2], ",")))
list1
list2 = as.numeric(unlist(strsplit(b[2], ",")))
list3 = as.numeric(unlist(strsplit(c[2], ",")))
list_data = list(listNames[1]=list1, listNames[2]=list2, listNames[3]=list3)
list_data = list(list1, list2, list3)
list_data
names(list_data) <- c(listNames)
list_data
upset(fromList(list_data), order.by = "freq")
q()
library("UpSetR")
expressionInput <- c(one = 2, two = 1, three = 2, `one&two` = 1, `one&three` = 4, 
    `two&three` = 1, `one&two&three` = 2)
upset(fromExpression(expressionInput), order.by = "freq")
png("expression_output")
upset(fromExpression(expressionInput), order.by = "freq")
dev.off()
upset(movies, nsets = 6, number.angles = 30, point.size = 3.5, line.size = 2, 
    mainbar.y.label = "Genre Intersections", sets.x.label = "Movies Per Genre", 
    text.scale = c(1.3, 1.3, 1, 1, 2, 0.75)
}
q()
q()
a <- list("a", "b")
a
b <- lapply(a, function(x) strsplit(x, " "))
b
v <- list()
for (i in seq(a)){
v <- append(v, "query")}
v
b
c <- lapply(b, function(x) names(b[[x]][[1]]) <- v)
v[[1]]
b[[1]][[1]]
names(b[[1]][[1]]) <- v[[1]]
b
names(b[[1]]) <- v[[1]]
b
a
b <- lapply(a, function(x) strsplit(x, " "))
c <- lapply(b, function(x) names(b[[x]]) <- v[[x]])
c <- b[[1]]
c
names(c) <- v[[1]]
c
for (i in seq(a)){
names(b[[i]]) <- v[[i]]
}
b
x
x <- list(list(query="a"), list(query="b"))
x
colors <- list("red", "blue")
colors
for (i in seq(colors)){
}
c <- list()
for (i in seq(colors)){
c <- append(c, "color")}
c
library(UpSetR)
movies <- read.csv(system.file("extdata", "movies.csv", package = "UpSetR"), 
    header = T, sep = ";")
upset(movies, queries = list(list(query = intersects, params = list(), color = "orange"), list(query = intersects, params = list("Drama"), color = "", active = F), list(query = intersects, params = list("Action", "Drama"), active = T)))
upset(movies, queries = list(list(query = intersects, params = list(), color = "orange"), list(query = intersects, params = list("Drama"), color = NULL, active = F), list(query = intersects, params = list("Action", "Drama"), active = T)))
upset(movies, queries = list(list(query = intersects, params = list(), color = "orange"), list(query = intersects, params = list("Drama"), color = NA, active = F), list(query = intersects, params = list("Action", "Drama"), active = T)))
c <- list("red", "")
c
for (i in seq(c)){
if (c[[1]] != ""){
}
c
q
#
}
c
w <- list()
for (i in seq(c)){
if (c[[i]] != ""){
names(c[[i]]) <- c("color")
}
}
c
a <- list("a", "b")
a
for (i in seq(a)){
names(a[[i]] <- c("query")
}
for (i in seq(a)){
names(a[[i]]) <- c("query")}
a
l <- list()
for i (in seq(a)){
for (i in seq(a)){
l <- append(l, a[[i]])
}
l
a
b <- lapply(a, function(x) strsplit(x, " "))
b
a <- list("a", "b")
b <- lapply(a, function(x) strsplit(x, " "))
b
for (i in seq(b)){
names(b[[i]]) <- c("query")}
b
x <- list(list(query="a"), list(query="b"))
x
x <- list(list(query="a", color="red"), list(query="b"))
x
c
a
c
b
x
x[[1]]
c
c[[1]]
c[[2]]
b
w <- b
w
x[[1]]
c[[1]]
for (i in seq(c)){
if (c[[i]]) != ""{
for (i in seq(c)){
if (c[[i]]) != ""){
for (i in seq(c)){
if (c[[i]] != ""){
w[[i]] <- append(c[[i]])
}
}
x
w
w[[1]] <- c[[1]]
w
w <- x
f <- list.append(w[[1]], c[[1]])
f <- append(w[[1]], c[[1]])
f
f <- append(w, c[[1]])
f
c[[1]]
n <- list()
w
x
w <- b
w
n <- list()
n <- append(w, c)
n
n <- list()
for (i in seq(w)){
n <- append(w[[i]], c[[i]])
}
n
w
b
x <- list(list(query="a"), list(query="b"))
x
b
w <- b
w
for (i in seq(w)){
w[[i]] <- append(w[[i]], c[[i]])
}
w
x <- list(list(query="a", color="red"), list(query="b"))
x
w <- b
for (i in seq(c)){
}
for (i in seq(w)){
if (c[[i]] != ""){
w[[i]] <- append(w[[i]], c[[i]])
}
}
w
x
x <- list(list(query="a", color="red"), list(query="b"), list(query="c", color="blue"))
x
a <- list("a", "b", "c")
c <- list("red", "", "blue")
b <- lapply(a, function(x) strsplit(x, " "))
for (i in seq(b)){
  names(b[[i]]) <- c("query")}
for (i in seq(c)){
  if (c[[i]] != ""){
    names(c[[i]]) <- c("color")
  }
}
for (i in seq(w)){
  if (c[[i]] != ""){
    b[[i]] <- append(b[[i]], c[[i]])
  }
}
b
b <- lapply(a, function(x) strsplit(x, " "))
b
c
for (i in seq(b)){
  if (c[[i]] != ""){
    b[[i]] <- append(b[[i]], c[[i]])
  }
}
b
x
b
b <- lapply(a, function(x) strsplit(x, " "))
for (i in seq(b)){
  names(b[[i]]) <- c("query")}
b
c
for (i in seq(b)){
  if (c[[i]] != ""){
    b[[i]] <- append(b[[i]], c[[i]])
  }
}
b
x
d <- list("true", "")
for (i in seq(d)){
if (d[[i]] == "true")}
d
d[[1]]
z <- d[[1]]
z
z <- T
z
for (i in seq(d)){
if (d[[i]] == "true"){
d[[i]] <- T}
else {
d[[i]] <- F}
names(d[[i]]) <- c("active")
}
d
b
d <- list("true", "", "")
for (i in seq(d)){
  if (d[[i]] == "true"){
    d[[i]] <- T
  }
  else {
    d[[i]] <- F
  }
  names(d[[i]]) <- c("active")
}
d
x <- list(list(query="a", color="red", active = T), list(query="b", active = F), list(query="c", color="blue", active = F))
x
w <- b
w
for (i in seq(w)){
w[[i]] <- append(w[[i]], d[[i]])
}
w
q()
