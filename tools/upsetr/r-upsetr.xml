<tool id="r-upsetr" name="UpSetR" version="@VERSION@.0">
    <description>visualize set intersections</description>
     <macros>
        <token name="@VERSION@">1.0.3</token>
    </macros>

    <requirements>
        <requirement type="package" version="@VERSION@">r-upsetr</requirement>
    </requirements>

    <command detect_errors="exit_code"><![CDATA[
        Rscript '$script'
    ]]></command>

    <configfiles>
        <configfile name="script"><![CDATA[
## Setup R error handling to go to stderr
options(show.error.messages=F, error=function(){cat(geterrmessage(),file=stderr());q("no",1,F)})
loc <- Sys.setlocale("LC_MESSAGES", "en_US.UTF-8")

## Import library
library("UpSetR")

## List Input

#if str($input_type.input_type_selector) == 'list'
    listInput <- list()
    #for $i in $lists
        listInput <- append(listInput, strsplit("${i.listInput}", ":"))
    #end for

    listNames <- list()
    listElements <- list()
    for(i in seq(listInput)){
        listNames <- append(listNames, listInput[[i]][1])
        listElements <- append(listElements, listInput[[i]][2])
    }

    listElements <- lapply(listElements, function(x){x <- as.numeric(unlist(strsplit(x, ",")))})
    names(listElements) <- listNames
    png("$output")
    upset(fromList(listElements), order.by = "freq")
    dev.off()
#end if

## Expression Input

#if str($input_type.input_type_selector) == 'expression'
    expressionInput <- as.list(unlist(strsplit("$expressionInput", ",")))
    expressionInput <- lapply(expressionInput, function(x){x <- unlist(strsplit(x, "="))})
    expressionName <- list()
    expression <-list()

    for(i in seq(expressionInput)){
        expressionName <- append(expressionName, expressionInput[[i]][1])
        expression <- append(expression, expressionInput[[i]][2])
    }

    expression <- lapply(expression, as.numeric)
    names(expression) <- expressionName
    png("$output2")
    upset(fromExpression(expression), order.by = "freq")
    dev.off()  
#end if


        ]]></configfile>
    </configfiles>

    <inputs>
        <conditional name="input_type">
            <param name="input_type_selector" type="select" label="Input Options" >
                <option value="file">File</option>
                <option value="list">List</option>
                <option value="expression">Expression</option>
            </param>
            <when value="file">
                <param name="inputFile" type="data" format="txt" label="Input File" />
            </when>
            <when value="list">
                <repeat name="lists" title="List of named vectors to be converted to a data frame" >
                    <param name="listInput" type="text" label="Named list" help="The list name is followed by a colon and the elements are seperated are by a comma, e.g. List1: 1, 2, 3, 4, 5" />
                </repeat>
            </when>
            <when value="expression">
                <param name="expressionInput" type="text" label="An vector (expression) to be converted to an input" />
            </when>
        </conditional>


        

        
    </inputs>

    <outputs>
        
        <data name="output" format="png" label="${tool.name} on ${on_string}: List Plot" >
            <filter>input_type['input_type_selector'] == 'list'</filter>
        </data>
        <data name="output2" format="png" label="${tool.name} on ${on_string}: Expression Plot" >
            <filter>input_type['input_type_selector'] == 'expression'</filter>
        </data>
        
    </outputs>

    <tests>
        <test>
            
        </test>
    </tests>

    <help><![CDATA[
        UpSetR generates static UpSet plots. The UpSet technique visualizes set intersections in a matrix layout and introduces aggregates based on groupings and queries. The matrix layout enables the effective representation of associated data, such as the number of elements in the aggregates and intersections, as well as additional summary statistics derived from subset or element attributes.
    ]]></help>

    <citations>
          <citation type="doi">/10.1093/bioinformatics/btx364</citation>
    </citations>

</tool>