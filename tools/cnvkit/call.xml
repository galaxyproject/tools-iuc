<tool id="cnvkit_call" name="CNVkit Call" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="21.05">
    <description>Call copy number variants from segmented log2 ratios</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="xrefs"/>
    <expand macro="requirements"/>
    <command detect_errors="exit_code"><![CDATA[  
        ln -s '$input_sample_file' ./tumor.cns &&
        #if $additional_SNP_allelic_process.vcf
             ln -s '$additional_SNP_allelic_process.vcf' ./vcf_file.vcf &&
        #end if
        cnvkit.py call
            ./tumor.cns
            #if $advanced_settings.method == "threshold"
                #set $method_val = "threshold"
                --method '$method_val'
            #else
                --method '$advanced_settings.method'
            #end if
            #if $advanced_settings.center == "median"
                #set $center_val = "median"
                --center '$center_val'
            #else
                --center '$advanced_settings.center'
            #end if
            #if str($advanced_settings.thresholds)
                --thresholds'$advanced_settings.thresholds'
            #end if
            #if str($advanced_settings.center_at)
                --center-at '$advanced_settings.center_at'
            #end if
            #if str($advanced_settings.add_filter.Filter) == "yes":
                #if '$advanced_settings.add_filter.filter' == "ampdel"
                #set $filter_val = "ampdel"
                --filter '$filter_val'
                #else
                --filter '$advanced_settings.add_filter.filter'
                #end if
            #end if
            #if str($advanced_settings.ploidy)
                --ploidy $advanced_settings.ploidy
            #end if
            #if str($advanced_settings.purity)
                --purity $advanced_settings.purity
            #end if
            $advanced_settings.drop_low_coverage
            #if str($advanced_settings.Sample_sex.sex) == "yes":
                #if '$advanced_settings.Sample_sex.sample_sex' == "Male"
                    #set $sample_sex_val = "Male"
                    --sample-sex '$segment_method_val'
                #else
                    --sample-sex '$advanced_settings.Sample_sex.sample_sex'
                #end if
            #end if
            $advanced_settings.male_reference
            #if $additional_SNP_allelic_process.vcf
                --vcf ./vcf_file.vcf
            #end if
            #if $additional_SNP_allelic_process.sample_id
                --sample-id '$additional_SNP_allelic_process.sample_id'
            #end if
            #if $additional_SNP_allelic_process.normal_id
                --normal-id '$additional_SNP_allelic_process.normal_id'
            #end if
            #if str($additional_SNP_allelic_process.min_variant_depth)
                --min-variant-depth $additional_SNP_allelic_process.min_variant_depth
            #end if
            #if str($additional_SNP_allelic_process.zygosity_freq)
                --zygosity-freq $additional_SNP_allelic_process.zygosity_freq
            #end if
    ]]></command>
    <inputs>
        <param name="input_sample_file" type="data" format="tabular" label="CNS file" help="" />
        <section name="additional_SNP_allelic_process" title="additional SNP b_allele frequencies process" expanded="false">
            <expand macro="additionally_SNP_process" />
        </section>
        <section name="advanced_settings" title="Advanced settings" expanded="false">
            <expand macro="call_optional" />
            <expand macro="sample_sex_condition" />
            <conditional name="add_filter">
                <param name="Filter" type="select" label="Add filters" help="">
                    <option value="yes">Add filters</option>
                    <option value="no" selected="True">don't add filters</option>
                </param>
                <when value="yes">
                    <expand macro="filter" />
                </when>
                <when value="no">
                </when>
            </conditional>
        </section>
    </inputs>
    <outputs>
        <data name="out_sample_Bintest" format="tabular" label="${tool.name} on ${on_string}: Sample Bintest " from_work_dir="tumor.call.cns" />
    </outputs>
    <tests>
        <test expect_num_outputs="1">
            <param name="input_sample_file" ftype="tabular" value="tumor.cns" />
            <param name="zygosity_freq" value="0.25" />
            <param name="min_variant_depth" value="40" />
            <param name="purity" value="1" />
            <output name="out_sample_Bintest">
                <assert_contents><has_text_matching expression="chrM"/></assert_contents>
            </output>
        </test>
        <test expect_num_outputs="1">
            <conditional name="Sample_sex">
                <param name="sex" value="yes" />
            </conditional>
            <param name="input_sample_file" ftype="tabular" value="tumor.cns" />
            <param name="min_variant_depth" value="40" />
            <param name="purity" value="1" />
            <output name="out_sample_Bintest">
                <assert_contents><has_text_matching expression="chrM"/></assert_contents>
            </output>
        </test>        
    </tests>
    <help><![CDATA[
        Given segmented log2 ratio estimates (.cns), derive each segmentâ€™s absolute integer copy number using either:
        A list of threshold log2 values for each copy number state (-m threshold), or rescaling - for a given known
        tumor cell fraction and normal ploidy, then simple rounding to the nearest integer copy number (-m clonal).
        
        The output is Segmented log2 ratios (.cns) file with those columns
        chromosome, Start, end, gene, log2, depth, weight and number of bins covered by the segment (probes)
    ]]></help>
    <expand macro="citations" />
</tool>
