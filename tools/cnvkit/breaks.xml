<tool id="cnvkit_breaks" name="CNVkit Breaks" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="21.05">
    <description>List the targeted genes with segmentaion breakpoint</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="xrefs"/>
    <expand macro="creators_and_zahra"/>
    <expand macro="requirements"/>
    <command detect_errors="exit_code"><![CDATA[  
        ln -s '$input_filename_file' ./sample.cnr &&
        ln -s '$input_segment_file' ./sample.cns &&
        cnvkit.py breaks
            ./sample.cnr
            ./sample.cns 
            --output gene-breaks.txt
            #if $min_probes
                --min-probes $min_probes
            #end if                    
    ]]></command>
    <inputs>
        <param name="input_filename_file" type="data" format="cnr" label="Bin-Level log2 Ratios/Coverages cnr file" help="The output of the CNVkit fix" />
        <param name="input_segment_file" type="data"  format="cns" label="CN segmentation calls cns file" help="The output of the CNVkit segment" />
        <param argument="--min-probes" optional="true" type="integer" label="Minimum propes" value="1" help="Minimum number of covered probes to label a gene" />     
    </inputs>
    <outputs>
        <data name="gene_breaks" format="txt" label="${tool.name} on ${on_string}:genes with copy number breakpoints" from_work_dir="gene-breaks.txt" />
    </outputs>
    <tests>
        <test expect_num_outputs="1">
            <param name="input_filename_file" ftype="cnr" value="sample.cnr" />
            <param name="input_segment_file" ftype="cns" value="sample.cns" />
            <param name="min_probes" value="1" />
            <output name="gene_breaks">
                <assert_contents><has_text text="chromosome"/></assert_contents>
            </output> 
        </test>
    </tests>
    <help><![CDATA[
        
       Identify genes in which: 
       (I) an unbalanced fusion or other structural rearrangement breakpoint occured
       (II) CNV calling is simply difficult due to an inconsistent copy number signal
       
       The breaks output is a text table of tab-separated values, which is amenable to further processing by 
       scripts and standard Unix tools such as grep, sort, cut and awk. 

-----

**Bin-level log2 ratios (.cnr)**

Tabular file containing normalized log2 ratios for small genomic bins (divided regions of the genome). Used to detect raw copy number variations (CNVs) before segmentation.

.. csv-table::
   :header-rows: 0

    "chromosome","Genomic chromosome (e.g., chr1, chrX)"
    "start","Start position of the bin."
    "end","End position of the bin."
    "gene","Gene name(s) overlapping the bin (if applicable)."
    "log2","Normalized log2 ratio (sample coverage / reference coverage)."
    "depth","Average read depth in the bin."
    "weight","Reliability weight of the bin (higher = more reliable)."

-----

**Segmented log2 ratios (.cns)**

Tabular file with smoothed, merged segments of stable copy number, derived from the .cnr file. Represents final CNV calls.

.. csv-table::
   :header-rows: 0

    "chromosome","start, end: Genomic coordinates of the segment"
    "gene","Gene(s) overlapping the segment."
    "log2","Mean log2 ratio of the segment."
    "probes","Mean log2 ratio of the segment."
    "depth","Average read depth."
    "weight","Reliability weight."
    "p_value","Statistical confidence (lower = more significant)."

    ]]></help>
    <expand macro="citations" />
</tool>



 
