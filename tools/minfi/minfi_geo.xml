<tool id="minfi_geo" name="Minfi GEO" version="@MINFI_VERSION@">
    <description>reading Illumina methylation array data from Gene Expression Omnibus</description>
 <macros>
        <import>macros.xml</import>
    </macros>
<expand macro="requirements">
        <requirement type="package" version="2.48.0">bioconductor-geoquery</requirement>
        <requirement type="package" version="0.6.0">bioconductor-illuminahumanmethylation450kanno.ilmn12.hg19</requirement>
    </expand>    
    <command detect_errors="exit_code">
    <![CDATA[
     Rscript '$minfi_geo_script'
    ]]>
    </command>
    <configfiles>
    <configfile name="minfi_geo_script"><![CDATA[
require("minfi", quietly = TRUE)
require("GEOquery", quietly = TRUE)
require("IlluminaHumanMethylation450kanno.ilmn12.hg19", quietly = TRUE)

options(warn = -1)
gset <- getGEO('$input_geoid')

 if(length(gset)==0) stop("Empty list retrieved from GEO.")
    if(length(gset)>1){
        warning("More than one ExpressionSet found:\n",names(gset),"\nUsing entry ",'$no_expset')
        gset <- gset[['$no_expset']]
    } else gset <- gset[[1]]

platform <- annotation(gset)

gr <-  getLocations(IlluminaHumanMethylation450kanno.ilmn12.hg19,orderByLocation = TRUE)

locusNames <- names(gr)

sampleNames(gset) <- gset\$title

common <- intersect(locusNames, featureNames(gset))
if(length(common)==0)
  stop("No rowname matches. 'rownames' need to match IlluminaHumanMethylation450k probe names.")

ind1 <- match(common,fData(gset)\$Name)
ind2 <- match(common,locusNames)

preprocessing <- c(rg.norm=paste0('See GEO ','$input_geoid',' for details'))

what <-'$assoc_genomic_coordinates'
if(what=="Beta"){
out <- GenomicRatioSet(gr=gr[ind2,],
                       Beta=gset[ind1,,drop=FALSE],
                       annotation=c(array = "IlluminaHumanMethylation450k"),
                       preprocessMethod=preprocessing)
} else {
  
out <- GenomicRatioSet(gr=gr[ind2,],
                         M=mat[ind1,,drop=FALSE],
                       annotation=c(array = "IlluminaHumanMethylation450k"),
                       preprocessMethod=preprocessing)
}
save(out, file = '$output_grset')
     ]]> 
    </configfile>
    </configfiles>  
<inputs>
        <param type="text" name="input_geoid" value="GSE42752" label="Enter GEO accession number" help="GEO Accession viewer https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi"/>
        <param type="text" name="no_expset" value="1" label="Number of ExpressionSets" help="Specify if more than one ExpressionSet is found."/>
        <param name="assoc_genomic_coordinates" type="select" label="Select value with associated genomic coordinates" help="This class holds estimate ratio of methylation level Beta value based on intensities between methylated and unmethylated alleles together with associated genomic coordinates. To avoid heteroskedasticity values can be also transformed into the logit - M value." >
            <option value="Beta">Beta</option>
            <option value="M">M</option>
        </param>
    </inputs>
    <outputs>
        <data name="output_grset" format="rdata" />
    </outputs>
    <tests>
        <test>
            <param name="input_geoid" value="GSE42752"/>
            <param name="no_expset" value="1"/>
            <param name="assoc_genomic_coordinates" value="Beta"/>
            <output name="output_grset" file="GRSetfromGEO.rdata"/>
        </test>
    </tests>
    <help><![CDATA[
        This tool downloads data from GEO and then returns a GenomicRatioSet object.
    ]]></help>
    <expand macro="citations" />
</tool>
