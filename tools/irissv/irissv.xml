<?xml version="1.0"?>
<tool id="irissv" name="Iris" version="@TOOL_VERSION@+galaxy1" profile="@PROFILE@">
    <description>Refine insertion sequences</description>
    <macros>
        <import>macros.xml</import>
    </macros>

    <expand macro="requirements"/>
    <expand macro="version_command"/>

    <command detect_errors="exit_code"><![CDATA[
    @REF_FASTA@

    iris
        genome_in=reference
        vcf_in='${in_vcf}'
        reads_in='${in_bam}'
        vcf_out='${out_vcf}'
        threads=\${GALAXY_SLOTS:-4}
        padding_before='${padding_before}'
        padding_after='${padding_after}'
        genome_buffer='${genome_buffer}'
        min_ins_length='${min_ins_length}'
        max_ins_dist='${max_ins_dist}'
        max_out_length='${max_out_length}'
        max_len_change='${max_len_change}'
        '${aligner}'
        '${rerunracon}'
        '${also_deletions}'
        '${keep_long_variants}'
    ]]></command>
    <inputs>
        <!--
            Required arguments
        -->
        <expand macro="reference"/>
        <param name="in_vcf" type="data" format="vcf" label="The VCF file with variant calls/supporting reads"/>
        <param name="in_bam" type="data" format="bam" label="The BAM file containing the reads"/>
        <!--log_out param doesn't seem to produce output for some reason, commenting out.-->
        <!-- <param name="output_log" type="boolean" label="Output log file?" checked="true"/> -->
        <!--
            Optional arguments
        -->
        <param argument="padding_before" type="integer" value="1" min="1" label="The number of bases to output before the variant in REF/ALT fields" />
        <param argument="padding_after" type="integer" value="0" min="0" label="The number of bases to output after the variant in REF/ALT fields" />
        <param argument="genome_buffer" type="integer" value="100000" min="1" label="The genome region on each side of the SV to align assembled reads to" />
        <param argument="min_ins_length" type="integer" value="30" min="1" label="The min length allowed for a refined insertion sequence" />
        <param argument="max_ins_dist" type="integer" value="100" min="0" label="The max distance a refined insertion call can be from its old position" />
        <param argument="max_out_length" type="integer" value="100000" min="0" label="The max length of variant which will be output" />
        <param argument="max_len_change" type="float" value="0.25" min="0.0" label="The max proportion by which a variant's length can change" />
        
        <param name="aligner" type="select">
            <option value="" selected="true">Use minimap2 for mapping</option>
            <option value="--pacbio" selected="true">Use minimap2 for mapping in PacBio mode</option>
            <option value="--hifi">Use minimap2 in hifi mode</option>
        </param>
        <param argument="--rerunracon" type="boolean" truevalue="--rerunracon" falsevalue="" checked="false" label="Use racon twice for consensus finding" />
        <!--
            Flags
        -->
        <param argument="--also_deletions" type="boolean" truevalue="also_deletions" falsevalue="" checked="false" label="also try to refine deletion positions/lengths"/>
        <param argument="--keep_long_variants" type="boolean" truevalue="--keep_long_variants" falsevalue="" checked="false" label="output original VCF line for very long variants instead of ignoring them"/>
    </inputs>
    <outputs>
        <!-- standard -->
        <data name="out_vcf" format="vcf" label="${tool.name} on ${on_string}: Result"/>
        <!--log_out param doesn't seem to produce output for some reason, commenting out.-->
        <!-- <data name="out_log" format="txt" label="${tool.name} on ${on_string}: Log">
            <filter>output_log</filter>
        </data> -->
    </outputs>
    <tests>
        <!-- #1 default -->
        <test expect_num_outputs="1">
            <conditional name="reference_source">
                <param name="reference_source_selector" value="history"/>
                <param name="ref_file" ftype="fasta.gz" value="genome.fa.gz"/>
            </conditional>
            <param name="in_vcf" value="sniffles.vcf"/>
            <param name="in_bam" value="iris.bam"/>
            <output name="out_vcf" file="test_out.vcf"/>
        </test>
        <test expect_num_outputs="1">
            <conditional name="reference_source">
                <param name="reference_source_selector" value="cached"/>
                <param name="ref_file" value="iris"/>
            </conditional>
            <param name="in_vcf" value="sniffles.vcf"/>
            <param name="in_bam" value="iris.bam"/>
            <output name="out_vcf" file="test_out.vcf"/>
        </test>
    </tests>
    <help><![CDATA[
.. class:: infomark

**What it does**

@WID@


**Input**

- FASTA file containing the reference genome

- VCF file with variant calls & supporting reads determined by Sniffles

- BAM file containing the reads

**Output**

- VCF file with refined insertion sequences

**References**

@REFERENCES@
    ]]></help>
    <expand macro="citations"/>
</tool>
