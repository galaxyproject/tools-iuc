<tool id="mlst" name="MLST" version="2.10">
    <requirements>
        <requirement type="package" version="2.10">mlst</requirement>
    </requirements>

    <version_command>mlst --version</version_command>

    <command detect_errors="exit_code"><![CDATA[
        #import re

        #set $named_input_file = re.sub(r'(\s|\(|\))', '_', $input_file.element_identifier)
        ln -s "$input_file" "$named_input_file" &&

        mlst "$named_input_file" --nopath
        #if $settings.advanced == "advanced"
            #if $settings.min_dna_id
                --minid=$settings.min_dna_id
            #end if
            #if $settings.min_dna_cov
                --mincov=$settings.min_dna_cov
            #end if
            #if $settings.scheme
                --scheme=$settings.scheme
            #end if
        #end if
        > "$report"
    ]]></command>

    <inputs>
        <param type="data" name="input_file" format="fasta,genbank" />
        <conditional name="settings">
            <param name="advanced" type="select" label="Specify advanced parameters">
                <option value="simple" selected="true">No, use program defaults.</option>
                <option value="advanced">Yes, see full parameter list.</option>
            </param>
            <when value="simple">
            </when>
            <when value="advanced">
                <param name="min_dna_id" type="integer" label="Minimum DNA identity" value="95" min="0" max="100" help="Minimum DNA identity of full allelle to consider 'similar' (default 95, must be between 0-100)" optional="true" />
                <param name="min_dna_cov" type="integer" label="Minimum DNA coverage" value="10" help="Minimum DNA coverage to report partial allele at all (default 10)" optional="true" />
                <param name="scheme" type="text" area="false" label="PubMLST Scheme" help="Turn off auto-detection and only use this scheme" optional="true" />
            </when>
        </conditional>
    </inputs>

    <outputs>
        <data name="report" format="tabular" />
    </outputs>

    <tests>
        <!-- Basic test - will produce no results. -->
        <test>
            <param name="input_file" value="Acetobacter.fna"/>
            <param name="advanced" value="simple"/>
            <output name="report" ftype="tabular" file="output_noresults.txt" compare="contains"/>
        </test>

        <!-- Basic test - will produce results. -->
        <test>
            <param name="input_file" value="MRSA0252_trimmed.fna"/>
            <param name="advanced" value="simple"/>
            <output name="report" ftype="tabular" file="output_mrsa.txt" compare="contains"/>
        </test>

        <!-- Advanced test - Min DNA Coverage 100 -->
        <test>
            <param name="input_file" value="MRSA0252_trimmed.fna"/>
            <param name="advanced" value="advanced"/>
            <param name="min_dna_cov" value="100"/>
            <output name="report" ftype="tabular" file="output_mincov100.txt" compare="contains"/>
        </test>

        <!-- Advanced test - Min DNA ID 100 -->
        <test>
            <param name="input_file" value="MRSA0252_trimmed.fna"/>
            <param name="advanced" value="advanced"/>
            <param name="min_dna_id" value="100"/>
            <output name="report" ftype="tabular" file="output_minid100.txt" compare="contains"/>
        </test>
    </tests>

    <help><![CDATA[
**What it does**

Given a genome file in FASTA or Genbank format, MLST will scan the file against PubMLST typing schemes.

**Output**

MLST will produce a tab-seperated output file which contains:
- the filename
- the closest PubMLST scheme name
- the ST (sequence type)
- the allele IDs

**Example Output**

::

	genomes/6008.fna        saureus         239  arcc(2)   aroe(3)   glpf(1)   gmk_(1)   pta_(4)   tpi_(4)   yqil(3)

**Without auto-detection**

If you provide the 'scheme' parameter, it will print a fixed tabular output with a heading containing allele names specific to that scheme. To view a list of schemes, use the MLST List tool.

::

	FILE      SCHEME     ST    abcZ  adk  aroE  fumC  gdh  pdhC  pgm
	NM003.fa  neisseria  11    2     3    4     3       8     4    6

**Missing data**
MLST does not just look for exact matches to full length alleles. It attempts to tell you as much as possible about what it found using the notation below:

+--------+---------------------------+
| Symbol | Meaning                   |
+========+===========================+
| n      | Exact intact allele       |
+--------+---------------------------+
| ~n     | Novel allele similar to n |
+--------+---------------------------+
| n,m    | Multiple alleles          |
+--------+---------------------------+
|  *-*   | Allele missing            |
+--------+---------------------------+

Galaxy wrapper maintained by Simon Gladman.
    ]]></help>

    <citations>
        <citation type="bibtex">
            @UNPUBLISHED{Seemann2016,
            author = "Seemann T",
            title = "MLST: Scan contig files against PubMLST typing schemes",
            year = "2016",
            note = "https://github.com/tseemann/mlst"}
        </citation>
    </citations>
</tool>
