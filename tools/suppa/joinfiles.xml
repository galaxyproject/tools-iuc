<?xml version="1.0"?>
<tool id="suppa_joinfiles" name="SUPPA joinFiles" version="@TOOL_VERSION@+@WRAPPER_VERSION@">
    <description>of expression values</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <stdio></stdio>
    <command detect_errors="exit_code"><![CDATA[
        ## initialize 
 
        ## run
        suppa.py
            joinFiles
            #set $i = str($i).replace(',',' ')
            -i $i ## '' not allowed ## todo
            -f '$f'
            -o 'results'
        ]]></command>
    <inputs>
        <param argument="-i" type="data" format="tabular" multiple="true" label="Select expression files" help=""/>
        <param argument="-f" type="select" label="" help="">
            <option value="tpm">tpm</option>
            <option value="psi">psi</option>
        </param>
    </inputs>
    <outputs>
        <data name="out_t" format="tabular" from_work_dir="results.tpm" label="${tool.name} on ${on_string}: join">
            <filter>f == 'tpm'</filter>
        </data>
        <data name="out_p" format="tabular" from_work_dir="results.psi" label="${tool.name} on ${on_string}: join">
            <filter>f == 'psi'</filter>
        </data>
    </outputs> 
    <tests> 
        <!-- #1 -->
        <test expect_num_outputs="1">
            <param name="i" value="expression_part1.tpm,expression_part2.tpm"/>
            <param name="f" value="tpm"/>
            <output name="out_t">
                <assert_contents>
                    <has_n_lines n="1999"/>
                    <has_text_matching expression="hg19_refGene_NR_126502.+"/>
                </assert_contents>
            </output>
        </test>
        <!-- #2 -->
        <test expect_num_outputs="1">
            <param name="i" value="expression_part1.tpm,expression_part2.tpm"/>
            <param name="f" value="psi"/>
            <output name="out_p">
                <assert_contents>
                    <has_n_lines n="1999"/>
                    <has_text_matching expression="hg19_refGene_NR_126502.+"/>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[
.. class:: infomark

**What it does**

@WID@

Transcript expression files used with SUPPA typically come from calculations with multiple samples. To facilitate the generation of a single file with all the transcript expression values for all samples, SUPPA distribution includes a program to combine multiple simple transcript expression files into one single file.

**Input**

Several expression files in the following format can be merged.

::

    sample1 sample2 sample3 sample4
    transcript1 <expression>  <expression>  <expression>  <expression>
    transcript2 <expression>  <expression>  <expression>  <expression>
    transcript3 <expression>  <expression>  <expression>  <expression>

**Output**

A merged file in the same format as the input expression files.

.. class:: infomark

**References**

@REFERENCES@
    ]]></help>
    <expand macro="citations"/>
</tool>