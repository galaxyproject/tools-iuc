<?xml version="1.0"?>
<tool id="suppa_joinfiles" name="SUPPA joinFiles" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@">
    <description>of expression values</description>
    <macros>
        <import>macros.xml</import>
        <token name="@VERSION_SUFFIX@">0</token>
    </macros>
    <expand macro="requirements"/>
    <expand macro="version_command"/>
    <command detect_errors="exit_code"><![CDATA[
suppa.py joinFiles
-i 
#for $current in $i
    '$current'
#end for
-f 'tpm' ## tpm or psi, but output file is the same
-o 'result'
    ]]></command>
    <inputs>
        <param argument="-i" type="data" format="tabular" multiple="true" min="2" label="Select expression files"/> 
    </inputs>
    <outputs>
        <data name="out" format="tabular" from_work_dir="result.tpm" label="${tool.name} on ${on_string}: Merged files"/>
    </outputs>
    <tests> 
        <!-- #1 default -->
        <test expect_num_outputs="1">
            <param name="i" value="joinfiles.tpm,joinfiles.tpm"/>
            <output name="out">
                <assert_contents>
                    <has_n_lines n="10"/>
                    <has_text_matching expression="hg19\_refGene\_NM\_000014.+"/>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[
.. class:: infomark

**What it does**

@WID@

Transcript expression files used with SUPPA typically come from calculations with multiple samples. To facilitate the generation of a single file with all the transcript expression values for all samples, SUPPA distribution includes *joinFiles* to combine multiple simple transcript expression files into one single file.

**Input**

Several expression files in the following format can be merged.

::

    sample1 sample2 sample3 sample4
    transcript1 <expression>  <expression>  <expression>  <expression>
    transcript2 <expression>  <expression>  <expression>  <expression>
    transcript3 <expression>  <expression>  <expression>  <expression>

**Output**

A merged file in the same format as the input expression files.

.. class:: infomark

**References**

@REFERENCES@
    ]]></help>
    <expand macro="citations"/>
</tool>