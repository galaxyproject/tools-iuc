<tool id="salsa" name="SALSA" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="20.01">
    <description>scaffold long read assemblies with Hi-C</description>
    <xrefs>
        <xref type="bio.tools">SALSA</xref>
    </xrefs>
    <macros>
        <token name="@TOOL_VERSION@">2.3</token>
        <token name="@VERSION_SUFFIX@">0</token>
    </macros>
    <requirements>
        <requirement type="package" version="@TOOL_VERSION@">salsa2</requirement>
        <requirement type="package" version="1.11">samtools</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
ln -s '$fasta_in' input.fasta &&
samtools faidx input.fasta &&

run_pipeline.py
-a '$fasta_in'
-l input.fasta.fai
-b '$bed_file'
-e '$enzyme'

#if str($cutoff):
    -c '$cutoff'
#end if
#if $gfa_file:
    -g '$gfa_file'
#end if
#if $iter:
    -i '$iter'
#end if
-o ./out
    ]]></command>
    <inputs>
        <param name="fasta_in" type="data" format="fasta" label="Initial assembly file" help="Headers must not contain ':'."/>
        <param name="bed_file" type="data" format="bed" label="Bed alignment" help="Sorted by read names"/>
        <param name="cutoff" argument="-c" type="integer" min="1" label="Cutoff" optional="true" help="Minimum contig length to scaffold."/>
        <param name="gfa_file" argument="-g" type="data" format="gfa1,gfa2" optional="true" label="Sequence graphs" help="Sequence graphs encoded in GFA format."/>
        <param name="enzyme" argument="-e" type="text" label="Restriction enzyme sequence(s)"
               help="Restriction enzyme sequence. If multiple were used, include all as a comma separated list without spaces (ex. 'GATC,AAGCTT').">
            <validator type="expression" message="Only alphabetical letters and the comma can be used in to define restriction enzym sequences.">value.replace(',', '').isalpha()</validator>
        </param>
        <param name="iter" argument="-i" type="integer" min="0" label="Iterations" optional="true" help="Number of iterations to run"/>
    </inputs>
    <outputs>
        <data name="scaffolds_fasta" format="fasta" from_work_dir="out/scaffolds_FINAL.fasta" label="${tool.name} on ${on_string}: FASTA assembly"/>
        <data name="scaffolds_agp" format="tabular" from_work_dir="out/scaffolds_FINAL.agp" label="${tool.name} on ${on_string}: agp output"/>
    </outputs>
    <tests>
        <test>
            <param name="fasta_in" value="test.fasta"/>
            <param name="length" value="test.fai"/>
            <param name="bed_file" value="test.bed"/>
            <param name="gfa_file" value="test.gfa1"/>
            <param name="enzyme" value="GATC,GANTC"/> 
            <param name="cutoff" value="1000"/>
            <param name="iter" value="3"/>
            <output name="scaffolds_fasta" file="out.fasta"/>
            <output name="scaffolds_agp" file="out.agp"/>
        </test>
        <test>
            <param name="fasta_in" value="test.fasta"/>
            <param name="bed_file" value="test.bed"/>
            <param name="gfa_file" value="test.gfa1"/>
            <param name="enzyme" value="GATC,GANTC"/> 
            <param name="cutoff" value="1000"/>
            <param name="iter" value="3"/>
            <output name="scaffolds_fasta" file="out.fasta"/>
            <output name="scaffolds_agp" file="out.agp"/>
        </test>
    </tests>
    <help><![CDATA[
**What is does**

SALSA (Simple AssembLy ScAffolder) is a scaffolding tool based on a computational method that exploits the genomic proximity
information in Hi-C data sets for long range scaffolding of de novo genome assemblies.

    ]]></help>
    <citations>
        <citation type="doi">10.1101/261149</citation>
        <citation type="doi">10.1186/s12864-017-3879-z</citation>
    </citations>
</tool>
