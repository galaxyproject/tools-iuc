<tool id="tiptoft" name="tiptoft" version="@VERSION@">
    <description>Plasmid replicon and incompatibility group prediction from uncorrected long reads</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <requirements>
        <requirement type="package" version="@VERSION@">tiptoft</requirement>
    </requirements>
    <version_command>tiptoft --version</version_command>

    <command detect_errors="exit_code"><![CDATA[
        tiptoft
        #if str($plasmid_data) != ""
            --plasmid_data '$plasmid_data'
        #end if
        --kmer $kmer
        #if $filtered_reads
            --filtered_reads_file filtered_reads.fq
        #end if
        $no_hc_compression
        $no_gene_filter
        --max_gap $max_gap
        --max_kmer_count $max_kmer_count
        --margin $margin
        --min_block_size $min_block_size
        --min_fasta_hits $min_fasta_hits
        --min_perc_coverage $min_perc_coverage
        --min_kmers_for_onex_pass $min_kmers_for_onex_pass
        '$fastq' > '$output'
    ]]>    </command>

    <inputs>
        <param name="fastq" type="data" format="fastqsanger,fastqsanger.gz" label="Fastq dataset" />
        <param name="plasmid_data" argument="--plasmid_data" type="data" format="fasta" optional="true" label="Plasmid database" help="A fasta file containing plasmid data. Defaults to bundled database"/>
        <param argument="--kmer" type="integer" min="3" value="13" label="K-mer size" />
        <param name="filtered_reads" type="boolean" truevalue="" falsevalue="" checked="false" label="Save filtered reads ?"/>
        <param argument="--no_hc_compression" type="boolean" truevalue="--no_hc_compression" falsevalue="" checked="false" label="Turn off homoploymer compression of k-mers" />
        <param argument="--no_gene_filter" type="boolean" truevalue="--no_gene_filter" falsevalue="" checked="false" label="Dont filter out lower coverage genes from same group" />
        <param argument="--max_gap" type="integer" min="3" value="3" label="Maximum gap for blocks to be contigous, measured in
                        multiples of the k-mer size" />
        <param argument="--max_kmer_count" type="integer" min="2" value="10" label="Exclude k-mers which occur more than this number of
                        times in a sequence" />
        <param argument="--margin" type="integer" min="1" value="10" label="Flanking region around a block to use for mapping" />
        <param argument="--min_block_size" type="integer" min="1" value="50" label="Minimum block size in bases" />
        <param argument="--min_fasta_hits" type="integer" min="1" value="8" label="Minimum No. of kmers matching a read" />
        <param argument="--min_perc_coverage" type="integer" min="10" value="85" label="Minimum percentage coverage of typing sequence to
                        report" />
        <param argument="--min_kmers_for_onex_pass" type="integer" min="1" value="5" label="Minimum No. of kmers matching a read in 1st pass"/>

    </inputs>

    <outputs>
        <data name="output" format="tabular" label="${tool.name} on ${on_string} report file" />
        <data name="filtered_reads" format="fastq" label="${tool.name} on ${on_string}: Filtered reads" from_work_dir="filtered_reads.fq">
            <filter>filtered_reads is True</filter>
        </data>
    </outputs>

    <tests>
        <test expect_num_outputs="1">
            <param name="fastq" value="query_gz.fastq" ftype="fastqsanger"/>
            <param name="plasmid_data" value="plasmid.fa" ftype="fasta"/>
            <output name="output" file="expected_outputfile" ftype="tabular" compare="contains"/>
        </test>
        <test expect_num_outputs="2">
            <param name="fastq" value="query_gz.fastq" ftype="fastqsanger"/>
            <param name="plasmid_data" value="plasmid.fa" ftype="fasta"/>
            <param name="filtered_reads" value="True" />
            <output name="filtered_reads" ftype="fastqsanger" file="filtered_reads.fq" compare="sim_size"/>
        </test>
    </tests>
    <help><![CDATA[

    Given some raw uncorrected long reads, such as those from PacBio or Oxford
    Nanopore, predict which plasmid should be present. Assemblies of long read
    data can often miss out on plasmids, particularly if they are very small or
    have a copy number which is too high/low when compared to the chromosome.
    This software gives you an indication of which plasmids to expect, flagging
    potential issues with an assembly.

    Documentation can be found at `<https://github.com/quadram-institute-bioscience/tiptoft>`_.

    ]]>    </help>
    <citations>
        <citation type="doi">10.21105/joss.01021</citation>
    </citations>
</tool>
