<tool id="hypo" name="Polish an assembly using hypo" version="0.1.0" python_template_version="3.5">
    <requirements>
        <requirement type="package">hypo</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        echo '$fastqs' | sed 's/,/\n/g' > short_reads.txt
        hypo -r @short_reads.txt -d '$assembly' -b '$short_read_bam' -c '$short_reads_coverage' -s '$genome_size'  -t "\${GALAXY_SLOTS:-1}" -o '$output1' -p '$processes' -k '$kind_sr'
        #if $long_read_bam
        -B '$long_read_bam'
        #end if
    ]]></command>
    <inputs>
        <param type="data" name="reads_list" format="txt" label="List of illumina fastq files" help="List of files containing file names in each line can be passed with @ prefix." />
        <param type="data" name="assembly" format="fasta,fasta.gz" label ="Draft genome assembly."/>
        <param type="data" name="fastqs" multiple="true" label="List with short read fastqs." />
        <param type="data" name="long_read_bam" format="bam" optional = "true" label="Bam file with ONT reads aligned" help="Input file name containing the alignments of short reads against the draft (in bam format; must have CIGAR information).The index should also be available."/>
        <param type="data" name="short_read_bam" format="bam" label="Bam file with illumina read alignments." help="Input file name containing the alignments of short reads against the draft (in bam/sam format; must have CIGAR information).The index should also be available."/>
        <param name="short_reads_coverage" type="integer" value="" label="Aproximate mean coverage of the short reads."/>
        <param name="processes" type="integer" value = "1" label="Number of contigs to be processed in one batch." help="Number of contigs to be processed in one batch. Lower value means less memory usage but slower speed."/>
        <param name="genome_size" type="text" label="Aproximate size of the genome." help="Aproximate size of the genome (a number; could be followed by units k/m/g; e.g. 10m, 2.3g)."/>
        <param name="kind_sr" type="select"  label="kind of the short reads." 
        help="Kind of the short reads. 
	[Valid Values] 
		sr	(Corresponding to NGS reads like Illumina reads) 
		ccs	(Corresponding to HiFi reads like PacBio CCS reads) " >
            <option value="sr" selected="true"/>
            <option value="ccs"/>
        </param> 
   </inputs>
    <outputs>
        <data name="output1" format="fasta"/>
    </outputs>
    <tests>
    <test>
        <param name="assembly" value="test2.fasta" ftype="fasta"/>
        <param name="fastqs" value="Illumina.1.fastq.gz,Illumina.2.fastq.gz"/>
        <param name="genome_size" value="10k" />
        <param name="processes" value="1" />
        <param name="short_reads_coverage" value="35"/>
        <param name="short_read_bam" value="Illumina.test2.bam" ftype="bam" />
        <param name="long_read_bam" value="ONT.test2.bam" ftype="bam" />
        <output name="output1" file="hypo_polished.fasta" ftype="fasta" />
    </test>
    </tests>
    <help><![CDATA[
        
 Usage: hypo <args>

 ** Mandatory args:
	-r, --reads-short <str>
	Input file name containing reads (in fasta/fastq format; can be compressed). A list of files containing file names in each line can be passed with @ prefix.

	-d, --draft <str>
	Input file name containing the draft contigs (in fasta/fastq format; can be compressed). 

	-b, --bam-sr <str>
	Input file name containing the alignments of short reads against the draft (in bam/sam format; must have CIGAR information). 

	-c, --coverage-short <int>
	Approximate mean coverage of the short reads. 

	-s, --size-ref <str>
	Approximate size of the genome (a number; could be followed by units k/m/g; e.g. 10m, 2.3g). 


 ** Optional args:
	-B, --bam-lr <str>
	Input file name containing the alignments of long reads against the draft (in bam/sam format; must have CIGAR information). 
	[Only Short reads polishing will be performed if this argument is not given]

	-o, --output <str>
	Output file name. 
	[Default] hypo_<draft_file_name>.fasta in the working directory.

 	-t, --threads <int>
	Number of threads. 
	[Default] 1.

 	-p, --processing-size <int>
	Number of contigs to be processed in one batch. Lower value means less memory usage but slower speed. 
	[Default] All the contigs in the draft.

 	-k, --kind-sr <str>
	Kind of the short reads. 
	[Valid Values] 
		sr	(Corresponding to NGS reads like Illumina reads) 
		ccs	(Corresponding to HiFi reads like PacBio CCS reads) 
	[Default] sr.

 	-m, --match-sr <int>
	Score for matching bases for short reads. 
	[Default] 5.

 	-x, --mismatch-sr <int>
	Score for mismatching bases for short reads. 
	[Default] -4.

 	-g, --gap-sr <int>
	Gap penalty for short reads (must be negative). 
	[Default] -8.

 	-M, --match-lr <int>
	Score for matching bases for long reads. 
	[Default] 3.

 	-X, --mismatch-lr <int>
	Score for mismatching bases for long reads. 
	[Default] -5.

 	-G, --gap-lr <int>
	Gap penalty for long reads (must be negative). 
	[Default] -4.

 	-n, --ned-th <int>
	Threshold for Normalised Edit Distance of long arms allowed in a window (in %). Higher number means more arms allowed which may slow down the execution.
	[Default] 20.

 	-q, --qual-map-th <int>
	Threshold for mapping quality of reads. The reads with mapping quality below this threshold will not be taken into consideration. 
	[Default] 2.

 	-i, --intermed
	Store or use (if already exist) the intermediate files. 
	[Currently, only Solid kmers are stored as an intermediate file.].

 	-h, --help
	Print the usage. 


    ]]></help>
</tool>
