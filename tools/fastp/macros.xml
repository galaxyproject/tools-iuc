<macros>
    <token name="@WRAPPER_VERSION@">0.20.1</token>

    <xml name="adapter_trimming_options">
        <section name="adapter_trimming_options" title="Adapter Trimming Options" expanded="False">
            <param name="disable_adapter_trimming" argument="-A" type="boolean" truevalue="-A" falsevalue="" checked="false" label="Disable adapter trimming" help="Adapter trimming is enabled by default. If this option is specified, adapter trimming is disabled."/>
            <expand macro="adapter_sequence" read_number="1" />
            <yield />
        </section>
        <section name="global_trimming_options" title="Global Trimming Options" expanded="False">
            <param name="trim_front1" argument="-f" type="integer" optional="true" label="Trim front for input 1" help="Trimming how many bases in front for read1, default is 0."/>
            <param name="trim_tail1" argument="-t" type="integer" optional="true" label="Trim tail for input 1" help="Trimming how many bases in tail for read1, default is 0."/>
        </section>
    </xml>

    <xml name="global_trimming_options">
        <section name="global_trimming_options" title="Global trimming options" expanded="False">
            <param name="trim_front1" argument="-f" type="integer" optional="true" label="Trim front for input 1" help="Trimming how many bases in front for read1, default is 0."/>
            <param name="trim_tail1" argument="-t" type="integer" optional="true" label="Trim tail for input 1" help="Trimming how many bases in tail for read1, default is 0."/>
            <yield/>
        </section>
    </xml>

    <xml name="global_trimming_options_paired">
        <expand macro="global_trimming_options">
            <param name="trim_front2" argument="-F" type="integer" optional="true" label="Trim front for input 2" help="Trimming how many bases in front for read2. If it's not specified, it will follow read1's settings."/>
            <param name="trim_tail2" argument="-T" type="integer" optional="true" label="Trim tail for input 2" help="Trimming how many bases in tail for read2. If it's not specified, it will follow read1's settings."/>
        </expand>
    </xml>

    <xml name="adapter_sequence" token_read_number="1">
        <param name="adapter_sequence@READ_NUMBER@" argument="--adapter_sequence@READ_NUMBER@" type="text" optional="true" label="Adapter sequence for input @READ_NUMBER@" help="The adapter for read@READ_NUMBER@. For SE data, if not specified, the adapter will be auto-detected. For PE data, this is used if R1/R2 are found not overlapped.">
            <sanitizer>
                <valid>
                    <add value="A"/>
                    <add value="T"/>
                    <add value="C"/>
                    <add value="G"/>
                </valid>
            </sanitizer>
        </param>
    </xml>

    <xml name="in" token_read_number="1" token_argument="-i">
        <param name="in@READ_NUMBER@" argument="@ARGUMENT@" type="data" format="fastq,fastq.gz" label="Input @READ_NUMBER@" help="Input FASTQ file #@READ_NUMBER@"/>
    </xml>

    <xml name="poly_g_min_len">
        <param name="poly_g_min_len" argument="--poly_g_min_len" type="integer" optional="true" label="PolyG minimum length"
            help="The minimum length to detect polyG in the read tail. 10 by default."/>
    </xml>
</macros>
