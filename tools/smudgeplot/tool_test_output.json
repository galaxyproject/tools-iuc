{"version": "0.1", "tests": [{"id": "functional.test_toolbox.TestForTool_smudgeplot.test_tool_000000", "has_data": true, "data": {"tool_id": "smudgeplot", "tool_version": "0.2.5+galaxy+1", "test_index": 0, "time_seconds": 13.068364143371582, "inputs": {"file|input|input_select": "reads", "file|input|lower_cutoff": "2", "file|input|reads": {"src": "hda", "id": "2891970512fa2d5a"}, "file|input|upper_cutoff": "25"}, "job": {"command_line": "jellyfish count -m 21 -t 4 -s 1M -o 1_counts.jf -C '/tmp/tmp4ugqd3kg/files/4/7/1/dataset_4716eef1-cea5-4090-97ae-f4bec602db89.dat'  && jellyfish histo 1_counts.jf > 1_kmer_k21.hist   && L=2  && U=25   && echo \"Dump with cutoffs L=$L, U=$U\" && jellyfish dump -c -L $L -U $U 1_counts.jf > 2_dump.jf && smudgeplot.py hetkmers -o 2_kmer_pairs 2_dump.jf    && smudgeplot.py plot 2_kmer_pairs_coverages.tsv -o my_genome", "command_version": "", "create_time": "2022-06-26T21:12:21.087471", "dependencies": [], "exit_code": 0, "external_id": "39424", "galaxy_version": "22.01", "history_id": "2891970512fa2d5a", "id": "5729865256bc2525", "inputs": {"file|reads": {"id": "2891970512fa2d5a", "src": "hda", "uuid": "4716eef1-cea5-4090-97ae-f4bec602db89"}, "file|reads1": {"id": "2891970512fa2d5a", "src": "hda", "uuid": "4716eef1-cea5-4090-97ae-f4bec602db89"}}, "job_messages": [], "job_metrics": [], "job_stderr": "", "job_stdout": "", "model_class": "Job", "output_collections": {}, "outputs": {"smudgeplot": {"id": "5729865256bc2525", "src": "hda", "uuid": "c3760507-7178-4e3a-b126-07cca99c183d"}, "smudgeplot_log": {"id": "54f2a3a23292eb07", "src": "hda", "uuid": "8c9997f9-d066-4ee3-90e5-346c639afd82"}}, "params": {"__input_ext": "\"input\"", "chromInfo": "\"/tmp/tmp4ugqd3kg/galaxy-dev/tool-data/shared/ucsc/chrom/?.len\"", "dbkey": "\"?\"", "file": "{\"input\": {\"__current_case__\": 0, \"input_select\": \"reads\", \"lower_cutoff\": \"2\", \"reads\": {\"values\": [{\"id\": 1, \"src\": \"hda\"}]}, \"upper_cutoff\": \"25\"}}", "table_output": "\"false\"", "verbose_output": "\"false\"", "warnings_output": "\"false\""}, "state": "ok", "stderr": "Running smudgeplot v0.2.5\nTask: hetkmers\nKmers and coverages loaded.\nKmer pairs identified.\nKmers in unique kmer pairs identified.\n2_kmer_pairs_families.tsv and 2_kmer_pairs_coverages.tsv files saved.\n\nDone!\nRunning smudgeplot v0.2.5\nTask: plot\nCalling: smudgeplot_plot.R -i \"2_kmer_pairs_coverages.tsv\" -o \"my_genome\" -k 21\n\n######################\n## INPUT PROCESSING ##\n######################\n\n#############\n## SUMMARY ##\n#############\ndetecting two smudges at the same positions, not enough data for this number of bins lowering number of bins to \t35\ndetecting two smudges at the same positions, not enough data for this number of bins lowering number of bins to \t30\ndetecting two smudges at the same positions, not enough data for this number of bins lowering number of bins to \t25\ndetecting two smudges at the same positions, not enough data for this number of bins lowering number of bins to \t20\n!! Warning, your coverage filter on the lower end (L = \t23\t) is higher than half of the 1n coverage estimate ( 1n / 2 = \t12.5\nIf the real 1n coverage is half of your estimate you would not picked it up due to the filtering.\nIf you have sufficient coverage, consider reruning the analysis with lower L (something like (1n / 2) - 5)\nOne good way for verificaiton would be to compare it to GenomeScope estimate of haploid coverage\n\n##########\n## PLOT ##\n##########\n\nDone!\n", "stdout": "Dump with cutoffs L=2, U=25\nnull device \n          1 \nnull device \n          1 \n", "tool_id": "smudgeplot", "tool_stderr": "Running smudgeplot v0.2.5\nTask: hetkmers\nKmers and coverages loaded.\nKmer pairs identified.\nKmers in unique kmer pairs identified.\n2_kmer_pairs_families.tsv and 2_kmer_pairs_coverages.tsv files saved.\n\nDone!\nRunning smudgeplot v0.2.5\nTask: plot\nCalling: smudgeplot_plot.R -i \"2_kmer_pairs_coverages.tsv\" -o \"my_genome\" -k 21\n\n######################\n## INPUT PROCESSING ##\n######################\n\n#############\n## SUMMARY ##\n#############\ndetecting two smudges at the same positions, not enough data for this number of bins lowering number of bins to \t35\ndetecting two smudges at the same positions, not enough data for this number of bins lowering number of bins to \t30\ndetecting two smudges at the same positions, not enough data for this number of bins lowering number of bins to \t25\ndetecting two smudges at the same positions, not enough data for this number of bins lowering number of bins to \t20\n!! Warning, your coverage filter on the lower end (L = \t23\t) is higher than half of the 1n coverage estimate ( 1n / 2 = \t12.5\nIf the real 1n coverage is half of your estimate you would not picked it up due to the filtering.\nIf you have sufficient coverage, consider reruning the analysis with lower L (something like (1n / 2) - 5)\nOne good way for verificaiton would be to compare it to GenomeScope estimate of haploid coverage\n\n##########\n## PLOT ##\n##########\n\nDone!\n", "tool_stdout": "Dump with cutoffs L=2, U=25\nnull device \n          1 \nnull device \n          1 \n", "traceback": null, "update_time": "2022-06-26T21:12:28.393571", "user_email": "test@bx.psu.edu"}, "status": "success"}}, {"id": "functional.test_toolbox.TestForTool_smudgeplot.test_tool_000001", "has_data": true, "data": {"tool_id": "smudgeplot", "tool_version": "0.2.5+galaxy+1", "test_index": 1, "time_seconds": 17.453457355499268, "inputs": {"file|input|input_select": "reads", "file|input|lower_cutoff": "2", "file|input|reads": {"src": "hda", "id": "8155e4b4bf1581ff"}, "file|input|upper_cutoff": "25"}, "job": {"command_line": "jellyfish count -m 21 -t 4 -s 1M -o 1_counts.jf -C '/tmp/tmp4ugqd3kg/files/7/f/a/dataset_7fa292fd-688a-49c1-b8e4-3fd12667d7cb.dat'  && jellyfish histo 1_counts.jf > 1_kmer_k21.hist   && L=2  && U=25   && echo \"Dump with cutoffs L=$L, U=$U\" && jellyfish dump -c -L $L -U $U 1_counts.jf > 2_dump.jf && smudgeplot.py hetkmers -o 2_kmer_pairs 2_dump.jf    && smudgeplot.py plot 2_kmer_pairs_coverages.tsv -o my_genome", "command_version": "", "create_time": "2022-06-26T21:12:34.548065", "dependencies": [{"cacheable": false, "dependency_resolver": {"auto_init": true, "auto_install": true, "can_uninstall_dependencies": true, "ensure_channels": "conda-forge,bioconda,defaults", "model_class": "CondaDependencyResolver", "prefix": "/home/cameron/miniconda3", "read_only": false, "resolver_type": "conda", "resolves_simple_dependencies": true, "use_local": false, "versionless": false}, "dependency_type": "conda", "environment_path": "/home/cameron/miniconda3/envs/mulled-v1-668e9d207c7be2d269a888a67aa512cf0a54b5b5a3c03512ce9510cb6820ea1a", "exact": true, "model_class": "MergedCondaDependency", "name": "smudgeplot", "version": "0.2.5"}, {"cacheable": false, "dependency_resolver": {"auto_init": true, "auto_install": true, "can_uninstall_dependencies": true, "ensure_channels": "conda-forge,bioconda,defaults", "model_class": "CondaDependencyResolver", "prefix": "/home/cameron/miniconda3", "read_only": false, "resolver_type": "conda", "resolves_simple_dependencies": true, "use_local": false, "versionless": false}, "dependency_type": "conda", "environment_path": "/home/cameron/miniconda3/envs/mulled-v1-668e9d207c7be2d269a888a67aa512cf0a54b5b5a3c03512ce9510cb6820ea1a", "exact": true, "model_class": "MergedCondaDependency", "name": "kmer-jellyfish", "version": "2.3.0"}], "exit_code": 0, "external_id": "40549", "galaxy_version": "22.01", "history_id": "5729865256bc2525", "id": "7b55dbb89df8f4e5", "inputs": {"file|reads": {"id": "7b55dbb89df8f4e5", "src": "hda", "uuid": "7fa292fd-688a-49c1-b8e4-3fd12667d7cb"}, "file|reads1": {"id": "7b55dbb89df8f4e5", "src": "hda", "uuid": "7fa292fd-688a-49c1-b8e4-3fd12667d7cb"}}, "job_messages": [], "job_metrics": [], "job_stderr": "", "job_stdout": "", "model_class": "Job", "output_collections": {}, "outputs": {"smudgeplot": {"id": "fa6d20d0fb68383f", "src": "hda", "uuid": "23ddb29c-0f9e-4adc-a8df-bb2374ef792d"}, "smudgeplot_log": {"id": "683bc220e21425bb", "src": "hda", "uuid": "4cb11c13-0205-41db-baf5-55b92d61b61b"}}, "params": {"__input_ext": "\"input\"", "chromInfo": "\"/tmp/tmp4ugqd3kg/galaxy-dev/tool-data/shared/ucsc/chrom/?.len\"", "dbkey": "\"?\"", "file": "{\"input\": {\"__current_case__\": 0, \"input_select\": \"reads\", \"lower_cutoff\": \"2\", \"reads\": {\"values\": [{\"id\": 5, \"src\": \"hda\"}]}, \"upper_cutoff\": \"25\"}}", "table_output": "\"false\"", "verbose_output": "\"false\"", "warnings_output": "\"false\""}, "state": "ok", "stderr": "Running smudgeplot v0.2.5\nTask: hetkmers\nKmers and coverages loaded.\nKmer pairs identified.\nKmers in unique kmer pairs identified.\n2_kmer_pairs_families.tsv and 2_kmer_pairs_coverages.tsv files saved.\n\nDone!\nRunning smudgeplot v0.2.5\nTask: plot\nCalling: smudgeplot_plot.R -i \"2_kmer_pairs_coverages.tsv\" -o \"my_genome\" -k 21\n\n######################\n## INPUT PROCESSING ##\n######################\n\n#############\n## SUMMARY ##\n#############\ndetecting two smudges at the same positions, not enough data for this number of bins lowering number of bins to \t35\ndetecting two smudges at the same positions, not enough data for this number of bins lowering number of bins to \t30\ndetecting two smudges at the same positions, not enough data for this number of bins lowering number of bins to \t25\ndetecting two smudges at the same positions, not enough data for this number of bins lowering number of bins to \t20\n!! Warning, your coverage filter on the lower end (L = \t23\t) is higher than half of the 1n coverage estimate ( 1n / 2 = \t12.5\nIf the real 1n coverage is half of your estimate you would not picked it up due to the filtering.\nIf you have sufficient coverage, consider reruning the analysis with lower L (something like (1n / 2) - 5)\nOne good way for verificaiton would be to compare it to GenomeScope estimate of haploid coverage\n\n##########\n## PLOT ##\n##########\n\nDone!\n", "stdout": "Dump with cutoffs L=2, U=25\nnull device \n          1 \nnull device \n          1 \n", "tool_id": "smudgeplot", "tool_stderr": "Running smudgeplot v0.2.5\nTask: hetkmers\nKmers and coverages loaded.\nKmer pairs identified.\nKmers in unique kmer pairs identified.\n2_kmer_pairs_families.tsv and 2_kmer_pairs_coverages.tsv files saved.\n\nDone!\nRunning smudgeplot v0.2.5\nTask: plot\nCalling: smudgeplot_plot.R -i \"2_kmer_pairs_coverages.tsv\" -o \"my_genome\" -k 21\n\n######################\n## INPUT PROCESSING ##\n######################\n\n#############\n## SUMMARY ##\n#############\ndetecting two smudges at the same positions, not enough data for this number of bins lowering number of bins to \t35\ndetecting two smudges at the same positions, not enough data for this number of bins lowering number of bins to \t30\ndetecting two smudges at the same positions, not enough data for this number of bins lowering number of bins to \t25\ndetecting two smudges at the same positions, not enough data for this number of bins lowering number of bins to \t20\n!! Warning, your coverage filter on the lower end (L = \t23\t) is higher than half of the 1n coverage estimate ( 1n / 2 = \t12.5\nIf the real 1n coverage is half of your estimate you would not picked it up due to the filtering.\nIf you have sufficient coverage, consider reruning the analysis with lower L (something like (1n / 2) - 5)\nOne good way for verificaiton would be to compare it to GenomeScope estimate of haploid coverage\n\n##########\n## PLOT ##\n##########\n\nDone!\n", "tool_stdout": "Dump with cutoffs L=2, U=25\nnull device \n          1 \nnull device \n          1 \n", "traceback": null, "update_time": "2022-06-26T21:12:45.981151", "user_email": "test@bx.psu.edu"}, "status": "success"}}, {"id": "functional.test_toolbox.TestForTool_smudgeplot.test_tool_000002", "has_data": true, "data": {"tool_id": "smudgeplot", "tool_version": "0.2.5+galaxy+1", "test_index": 2, "time_seconds": 13.80789065361023, "inputs": {"file|input|input_select": "reads", "file|input|lower_cutoff": "2", "file|input|reads": {"src": "hda", "id": "a90a30fafe298e1e"}, "file|input|upper_cutoff": "25", "table_output": true, "verbose_output": true, "warnings_output": true}, "job": {"command_line": "jellyfish count -m 21 -t 4 -s 1M -o 1_counts.jf -C '/tmp/tmp4ugqd3kg/files/c/9/4/dataset_c949454b-ff78-49ea-ac22-7e8357644d07.dat'  && jellyfish histo 1_counts.jf > 1_kmer_k21.hist   && L=2  && U=25   && echo \"Dump with cutoffs L=$L, U=$U\" && jellyfish dump -c -L $L -U $U 1_counts.jf > 2_dump.jf && smudgeplot.py hetkmers -o 2_kmer_pairs 2_dump.jf    && smudgeplot.py plot 2_kmer_pairs_coverages.tsv -o my_genome", "command_version": "", "create_time": "2022-06-26T21:12:52.061095", "dependencies": [{"cacheable": false, "dependency_resolver": {"auto_init": true, "auto_install": true, "can_uninstall_dependencies": true, "ensure_channels": "conda-forge,bioconda,defaults", "model_class": "CondaDependencyResolver", "prefix": "/home/cameron/miniconda3", "read_only": false, "resolver_type": "conda", "resolves_simple_dependencies": true, "use_local": false, "versionless": false}, "dependency_type": "conda", "environment_path": "/home/cameron/miniconda3/envs/mulled-v1-668e9d207c7be2d269a888a67aa512cf0a54b5b5a3c03512ce9510cb6820ea1a", "exact": true, "model_class": "MergedCondaDependency", "name": "smudgeplot", "version": "0.2.5"}, {"cacheable": false, "dependency_resolver": {"auto_init": true, "auto_install": true, "can_uninstall_dependencies": true, "ensure_channels": "conda-forge,bioconda,defaults", "model_class": "CondaDependencyResolver", "prefix": "/home/cameron/miniconda3", "read_only": false, "resolver_type": "conda", "resolves_simple_dependencies": true, "use_local": false, "versionless": false}, "dependency_type": "conda", "environment_path": "/home/cameron/miniconda3/envs/mulled-v1-668e9d207c7be2d269a888a67aa512cf0a54b5b5a3c03512ce9510cb6820ea1a", "exact": true, "model_class": "MergedCondaDependency", "name": "kmer-jellyfish", "version": "2.3.0"}], "exit_code": 0, "external_id": "41619", "galaxy_version": "22.01", "history_id": "54f2a3a23292eb07", "id": "683bc220e21425bb", "inputs": {"file|reads": {"id": "a90a30fafe298e1e", "src": "hda", "uuid": "c949454b-ff78-49ea-ac22-7e8357644d07"}, "file|reads1": {"id": "a90a30fafe298e1e", "src": "hda", "uuid": "c949454b-ff78-49ea-ac22-7e8357644d07"}}, "job_messages": [], "job_metrics": [], "job_stderr": "", "job_stdout": "", "model_class": "Job", "output_collections": {}, "outputs": {"genome_summary": {"id": "9ce08b2254e4d5ed", "src": "hda", "uuid": "2e095ea5-a87e-4e99-a889-a7b16839d89b"}, "genome_summary_verbose": {"id": "80b8022ff3f677b7", "src": "hda", "uuid": "5de63b2a-aa63-497a-9a6c-aeddf9335c67"}, "genome_warnings": {"id": "b54fb481e575bccc", "src": "hda", "uuid": "ec89a967-0849-4c0a-a8ff-57753955d39d"}, "smudgeplot": {"id": "b842d972534ccb3e", "src": "hda", "uuid": "78a9c7b7-9616-42f1-b24a-1ac1f94f9466"}, "smudgeplot_log": {"id": "5449172d6ff5669b", "src": "hda", "uuid": "20e23b85-1112-4c9b-9a56-ec5a7e5057e7"}}, "params": {"__input_ext": "\"input\"", "chromInfo": "\"/tmp/tmp4ugqd3kg/galaxy-dev/tool-data/shared/ucsc/chrom/?.len\"", "dbkey": "\"?\"", "file": "{\"input\": {\"__current_case__\": 0, \"input_select\": \"reads\", \"lower_cutoff\": \"2\", \"reads\": {\"values\": [{\"id\": 8, \"src\": \"hda\"}]}, \"upper_cutoff\": \"25\"}}", "table_output": "\"true\"", "verbose_output": "\"true\"", "warnings_output": "\"true\""}, "state": "ok", "stderr": "Running smudgeplot v0.2.5\nTask: hetkmers\nKmers and coverages loaded.\nKmer pairs identified.\nKmers in unique kmer pairs identified.\n2_kmer_pairs_families.tsv and 2_kmer_pairs_coverages.tsv files saved.\n\nDone!\nRunning smudgeplot v0.2.5\nTask: plot\nCalling: smudgeplot_plot.R -i \"2_kmer_pairs_coverages.tsv\" -o \"my_genome\" -k 21\n\n######################\n## INPUT PROCESSING ##\n######################\n\n#############\n## SUMMARY ##\n#############\ndetecting two smudges at the same positions, not enough data for this number of bins lowering number of bins to \t35\ndetecting two smudges at the same positions, not enough data for this number of bins lowering number of bins to \t30\ndetecting two smudges at the same positions, not enough data for this number of bins lowering number of bins to \t25\ndetecting two smudges at the same positions, not enough data for this number of bins lowering number of bins to \t20\n!! Warning, your coverage filter on the lower end (L = \t23\t) is higher than half of the 1n coverage estimate ( 1n / 2 = \t12.5\nIf the real 1n coverage is half of your estimate you would not picked it up due to the filtering.\nIf you have sufficient coverage, consider reruning the analysis with lower L (something like (1n / 2) - 5)\nOne good way for verificaiton would be to compare it to GenomeScope estimate of haploid coverage\n\n##########\n## PLOT ##\n##########\n\nDone!\n", "stdout": "Dump with cutoffs L=2, U=25\nnull device \n          1 \nnull device \n          1 \n", "tool_id": "smudgeplot", "tool_stderr": "Running smudgeplot v0.2.5\nTask: hetkmers\nKmers and coverages loaded.\nKmer pairs identified.\nKmers in unique kmer pairs identified.\n2_kmer_pairs_families.tsv and 2_kmer_pairs_coverages.tsv files saved.\n\nDone!\nRunning smudgeplot v0.2.5\nTask: plot\nCalling: smudgeplot_plot.R -i \"2_kmer_pairs_coverages.tsv\" -o \"my_genome\" -k 21\n\n######################\n## INPUT PROCESSING ##\n######################\n\n#############\n## SUMMARY ##\n#############\ndetecting two smudges at the same positions, not enough data for this number of bins lowering number of bins to \t35\ndetecting two smudges at the same positions, not enough data for this number of bins lowering number of bins to \t30\ndetecting two smudges at the same positions, not enough data for this number of bins lowering number of bins to \t25\ndetecting two smudges at the same positions, not enough data for this number of bins lowering number of bins to \t20\n!! Warning, your coverage filter on the lower end (L = \t23\t) is higher than half of the 1n coverage estimate ( 1n / 2 = \t12.5\nIf the real 1n coverage is half of your estimate you would not picked it up due to the filtering.\nIf you have sufficient coverage, consider reruning the analysis with lower L (something like (1n / 2) - 5)\nOne good way for verificaiton would be to compare it to GenomeScope estimate of haploid coverage\n\n##########\n## PLOT ##\n##########\n\nDone!\n", "tool_stdout": "Dump with cutoffs L=2, U=25\nnull device \n          1 \nnull device \n          1 \n", "traceback": null, "update_time": "2022-06-26T21:12:59.619213", "user_email": "test@bx.psu.edu"}, "status": "success"}}, {"id": "functional.test_toolbox.TestForTool_smudgeplot.test_tool_000003", "has_data": true, "data": {"tool_id": "smudgeplot", "tool_version": "0.2.5+galaxy+1", "test_index": 3, "time_seconds": 12.977770328521729, "inputs": {"file|input|dump": {"src": "hda", "id": "1ae74d26531588b0"}, "file|input|input_select": "dump"}, "job": {"command_line": "smudgeplot.py hetkmers -o 2_kmer_pairs '/tmp/tmp4ugqd3kg/files/e/d/b/dataset_edbf69f2-ace4-4850-b384-45d119e6c8ef.dat'    && smudgeplot.py plot 2_kmer_pairs_coverages.tsv -o my_genome", "command_version": "", "create_time": "2022-06-26T21:13:05.674513", "dependencies": [{"cacheable": false, "dependency_resolver": {"auto_init": true, "auto_install": true, "can_uninstall_dependencies": true, "ensure_channels": "conda-forge,bioconda,defaults", "model_class": "CondaDependencyResolver", "prefix": "/home/cameron/miniconda3", "read_only": false, "resolver_type": "conda", "resolves_simple_dependencies": true, "use_local": false, "versionless": false}, "dependency_type": "conda", "environment_path": "/home/cameron/miniconda3/envs/mulled-v1-668e9d207c7be2d269a888a67aa512cf0a54b5b5a3c03512ce9510cb6820ea1a", "exact": true, "model_class": "MergedCondaDependency", "name": "smudgeplot", "version": "0.2.5"}, {"cacheable": false, "dependency_resolver": {"auto_init": true, "auto_install": true, "can_uninstall_dependencies": true, "ensure_channels": "conda-forge,bioconda,defaults", "model_class": "CondaDependencyResolver", "prefix": "/home/cameron/miniconda3", "read_only": false, "resolver_type": "conda", "resolves_simple_dependencies": true, "use_local": false, "versionless": false}, "dependency_type": "conda", "environment_path": "/home/cameron/miniconda3/envs/mulled-v1-668e9d207c7be2d269a888a67aa512cf0a54b5b5a3c03512ce9510cb6820ea1a", "exact": true, "model_class": "MergedCondaDependency", "name": "kmer-jellyfish", "version": "2.3.0"}], "exit_code": 0, "external_id": "42686", "galaxy_version": "22.01", "history_id": "8155e4b4bf1581ff", "id": "b842d972534ccb3e", "inputs": {"file|dump": {"id": "1ae74d26531588b0", "src": "hda", "uuid": "edbf69f2-ace4-4850-b384-45d119e6c8ef"}}, "job_messages": [], "job_metrics": [], "job_stderr": "", "job_stdout": "", "model_class": "Job", "output_collections": {}, "outputs": {"smudgeplot": {"id": "440a6c2b5d9efe20", "src": "hda", "uuid": "da422886-37eb-4fc7-be5f-4aa0807a0a10"}, "smudgeplot_log": {"id": "ea0b941dfbe636f8", "src": "hda", "uuid": "7065c58a-6664-4375-be03-ed43ad21503e"}}, "params": {"__input_ext": "\"input\"", "chromInfo": "\"/tmp/tmp4ugqd3kg/galaxy-dev/tool-data/shared/ucsc/chrom/?.len\"", "dbkey": "\"?\"", "file": "{\"input\": {\"__current_case__\": 1, \"dump\": {\"values\": [{\"id\": 14, \"src\": \"hda\"}]}, \"input_select\": \"dump\"}}", "table_output": "\"false\"", "verbose_output": "\"false\"", "warnings_output": "\"false\""}, "state": "ok", "stderr": "Running smudgeplot v0.2.5\nTask: hetkmers\nKmers and coverages loaded.\nKmer pairs identified.\nKmers in unique kmer pairs identified.\n2_kmer_pairs_families.tsv and 2_kmer_pairs_coverages.tsv files saved.\n\nDone!\nRunning smudgeplot v0.2.5\nTask: plot\nCalling: smudgeplot_plot.R -i \"2_kmer_pairs_coverages.tsv\" -o \"my_genome\" -k 21\n\n######################\n## INPUT PROCESSING ##\n######################\n\n#############\n## SUMMARY ##\n#############\ndetecting two smudges at the same positions, not enough data for this number of bins lowering number of bins to \t35\ndetecting two smudges at the same positions, not enough data for this number of bins lowering number of bins to \t30\ndetecting two smudges at the same positions, not enough data for this number of bins lowering number of bins to \t25\ndetecting two smudges at the same positions, not enough data for this number of bins lowering number of bins to \t20\n!! Warning, your coverage filter on the lower end (L = \t23\t) is higher than half of the 1n coverage estimate ( 1n / 2 = \t12.5\nIf the real 1n coverage is half of your estimate you would not picked it up due to the filtering.\nIf you have sufficient coverage, consider reruning the analysis with lower L (something like (1n / 2) - 5)\nOne good way for verificaiton would be to compare it to GenomeScope estimate of haploid coverage\n\n##########\n## PLOT ##\n##########\n\nDone!\n", "stdout": "null device \n          1 \nnull device \n          1 \n", "tool_id": "smudgeplot", "tool_stderr": "Running smudgeplot v0.2.5\nTask: hetkmers\nKmers and coverages loaded.\nKmer pairs identified.\nKmers in unique kmer pairs identified.\n2_kmer_pairs_families.tsv and 2_kmer_pairs_coverages.tsv files saved.\n\nDone!\nRunning smudgeplot v0.2.5\nTask: plot\nCalling: smudgeplot_plot.R -i \"2_kmer_pairs_coverages.tsv\" -o \"my_genome\" -k 21\n\n######################\n## INPUT PROCESSING ##\n######################\n\n#############\n## SUMMARY ##\n#############\ndetecting two smudges at the same positions, not enough data for this number of bins lowering number of bins to \t35\ndetecting two smudges at the same positions, not enough data for this number of bins lowering number of bins to \t30\ndetecting two smudges at the same positions, not enough data for this number of bins lowering number of bins to \t25\ndetecting two smudges at the same positions, not enough data for this number of bins lowering number of bins to \t20\n!! Warning, your coverage filter on the lower end (L = \t23\t) is higher than half of the 1n coverage estimate ( 1n / 2 = \t12.5\nIf the real 1n coverage is half of your estimate you would not picked it up due to the filtering.\nIf you have sufficient coverage, consider reruning the analysis with lower L (something like (1n / 2) - 5)\nOne good way for verificaiton would be to compare it to GenomeScope estimate of haploid coverage\n\n##########\n## PLOT ##\n##########\n\nDone!\n", "tool_stdout": "null device \n          1 \nnull device \n          1 \n", "traceback": null, "update_time": "2022-06-26T21:13:13.252067", "user_email": "test@bx.psu.edu"}, "status": "success"}}], "summary": {"num_tests": 4, "num_failures": 0, "num_errors": 0, "num_skips": 0}, "exit_code": 0}