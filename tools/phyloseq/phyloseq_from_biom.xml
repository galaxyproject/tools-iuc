<tool id="phyloseq_from_biom" name="Create phyloseq object" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="@PROFILE@">
  <description>from a BIOM file</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="bio_tools"/>
    <expand macro="requirements"/>
    <command detect_errors="exit_code"><![CDATA[
Rscript '${__tool_directory__}/phyloseq_from_biom.R' 
    --BIOMfilename '$BIOMfilename'
    #if $treefilename
        --treefilename '$treefilename'
        --parseFunction $parseFunction
    #end if
    #if $refseqfilename
        --refseqfilename '$refseqfilename'
    #end if
    --output '$output'
    ]]></command>
    <inputs>
        <param argument="BIOMfilename" type="data" format="biom1,biom2" label="BIOM file" help=""/>
        <param argument="treefilename" type="data" format="nex,newick" optional="true" label="Phylogeny" help=""/>
        <param name="parseFunction" type="select" label="Tree label parser" help="">
            <option value="parse_taxonomy_default">Default</option>
            <option value="parse_taxonomy_greengenes">Greengenes</option>
            <option value="parse_taxonomy_qiime">Qiime</option>
        </param>
        <param argument="refseqfilename" type="data" format="fasta" optional="true" label="Sequences" help=""/>
    </inputs>
    <outputs>
        <data name="output" format="phyloseq"/>
    </outputs>
    <tests>
        <test>
            <param name="BIOMfilename" value="rich_dense_otu_table.biom" ftype="biom1"/>
            <output name="output">
                <assert_contents>
                    <has_size value="880" delta="100"/>
                </assert_contents>
            </output>
            <assert_stdout>
                <has_line line="phyloseq-class experiment-level object"/>
                <has_line line="otu_table()   OTU Table:         [ 5 taxa and 6 samples ]"/>
                <has_line line="sample_data() Sample Data:       [ 6 samples by 4 sample variables ]"/>
                <has_line line="tax_table()   Taxonomy Table:    [ 5 taxa by 7 taxonomic ranks ]"/>
                <has_n_lines n="4"/>
            </assert_stdout>
        </test>
        <test>
            <param name="BIOMfilename" value="rich_dense_otu_table.biom2" ftype="biom2"/>
            <output name="output">
                <assert_contents>
                    <has_size value="880" delta="100"/>
                </assert_contents>
            </output>
            <assert_stdout>
                <has_line line="phyloseq-class experiment-level object"/>
                <has_line line="otu_table()   OTU Table:         [ 5 taxa and 6 samples ]"/>
                <has_line line="sample_data() Sample Data:       [ 6 samples by 4 sample variables ]"/>
                <has_line line="tax_table()   Taxonomy Table:    [ 5 taxa by 7 taxonomic ranks ]"/>
                <has_n_lines n="4"/>
            </assert_stdout>
        </test>
        <test>
            <param name="BIOMfilename" value="rich_dense_otu_table.biom" ftype="biom1"/>
            <param name="treefilename" value="biom-tree.phy"/>
            <param name="parseFunction" value="parse_taxonomy_greengenes"/>
            <param name="refseqfilename" value="biom-refseq.fasta"/>
            <output name="output">
                <assert_contents>
                    <has_size value="1880" delta="200"/>
                </assert_contents>
            </output>
            <assert_stdout>
                <has_line line="phyloseq-class experiment-level object"/>
                <has_line line="otu_table()   OTU Table:         [ 5 taxa and 6 samples ]"/>
                <has_line line="sample_data() Sample Data:       [ 6 samples by 4 sample variables ]"/>
                <has_line line="tax_table()   Taxonomy Table:    [ 5 taxa by 7 taxonomic ranks ]"/>
                <has_line line="phy_tree()    Phylogenetic Tree: [ 5 tips and 4 internal nodes ]"/>
                <has_line line="refseq()      DNAStringSet:      [ 5 reference sequences ]"/>
                <has_n_lines n="6"/>
            </assert_stdout>
        </test>
    </tests>
    <help>
**What it does**

Read a BIOM file (and optionally sequences and a phylogeny) and store them in a phyloseq object.
    </help>
    <expand macro="citations"/>
</tool>

