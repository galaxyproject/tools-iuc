<tool id="confound_ccrem" name="ccRemover" version="@VERSION@.0">
    <!-- TODO:
         - Help text
         -->
    <description>performs confounder removal by reducing expression from cell-cycle effects</description>
    <macros>
        <import>macros.xml</import>
    </macros>

    <expand macro="requirements" >
            <requirement type="package" version="1.0.4">r-ccremover</requirement>
    </expand>

    <command detect_errors="exit_code"><![CDATA[
    Rscript '@SCRIPT_DIR@/ccremover_confounder.R' '@SCRIPT_DIR@' '$rconf_confound' &&
    mv sce_out.rds '${out_rdat}' &&
    mv sce_log.txt '${out_log}'
    ]]></command>

    <configfiles>
        <configfile name="rconf_confound" >
# General Args
sce = readRDS( '$inp_rdat' )

regex_genenames = "(.+)-[^-]+"
regex_extract = "\\1"
regex_perform = as.logical('$genenames.custom.value')

#if '$genenames.custom.value' == "T":
regex_genenames = "$genenames.regex_genenames.value"
regex_extract = "$genenames.regex_extract.value"
#end if

nspecies = '$nspecies.value'
ntype = '$ntype.value'

## ccRem opts
ncutoff = 3
nmaxit = 4
nnboot = 200
nntop = 10

#if '$ccopts.custom.value' == 'advanced':
ncutoff = as.numeric('$ccopts.ncutoff')
nmaxit = as.integer('$ccopts.nmaxit')
nnboot = as.integer('$ccopts.nnboot')
nntop = as.integer('$ccopts.nntop')
#end if
        </configfile>
    </configfiles>
    <inputs>
        <expand macro="input_rdat" />
        <param name="nspecies" type="select" label="Species to check genes against">
            <option value="mouse" selected="true" >Mouse</option>
            <option value="human">Human</option>
        </param>

        <param name="ntype" type="select" label="Gene name type" >
            <option value="ensembl" selected="true" >Ensembl</option>
            <option value="symbol">Symbol</option>
            <option value="entrez">Entrez</option>
            <option value="unigene">UniGene</option>
        </param>

        <conditional name="genenames" >
            <param name="custom" type="select" label="Use regex to extract gene names?" >
                <option value="F" selected="true" >No</option>
                <option value="T">Yes</option>
            </param>

            <when value="F" />
            <when value="T" >
                <param name="regex_genenames" type="text" value="" label="Regex to extract genenames" help="e.g. 'Gnai3-201' 'H19-202' can be extracted using the expression '(.+)-[^-]+'" />
                <param name="regex_extract" type="text" value="" label="Replacement string" help="e.g. prepending 'ENS' to every extracted gene using the above expression would be performed via 'ENS\\1' where \\1 refers to anything matched in the first brackets (.+)" />
            </when>
        </conditional>

        <conditional name="ccopts" >
            <param name="custom" type="select" label="ccRemover Parameters">
                <option value="defaults" selected="true">Use Defaults</option>
                <option value="advanced">Advanced Parameters</option>
            </param>

            <when value="defaults" />
            <when value="advanced" >
                <param name="ncutoff" type="float" min="1e-5" value="3" label="Cut Off" help="The significance cutoff for identifying sources of variation related to the cell-cycle. The default value is 3, which roughly corresponds to a p-value of 0.01" />
                <param name="nmaxit" type="integer" min="1" value="4" label="Max iteratincutoff = 3
nmaxit = 4
nnboot = 200
nntop = 10
oons" />
                <param name="nnboot" type="integer" min="1" value="200" label="Bootstraps" help="The number of bootstrap repetitions to be carried out on each iteration to determine the significance of each component." />
                <param name="nntop" type="integer" min="1" value="10" label="Test components" help="The number of components considered tested at each iteration as cell-cycle effects." />
            </when>
        </conditional>
    </inputs>

    <outputs>
        <expand macro="output_rdat" />
        <data name="out_log" format="txt" label="${tool.name} on ${on_string} : Log" />
    </outputs>

    <tests>
        <test>
            <param name="inp_rdat" value="filtered_out_none.rds" />
            <conditional name="genenames." >
                <param name="custom" value="advanced" />
                <param name="regex_genenames" value="(.+)-[^-]+" />
                <param name="regex_extract" value="\\1" />
            </conditional>
            <output name="out_rdat" value="out_ccremover.rds" />
            <output name="out_log" value="out_ccremover.log" compare="diff" lines_diff="20" />
        </test>
    </tests>

    <help>
        Performs ccRemoval using expression from logcounts
    </help>
    <expand macro="citations" />
</tool>
