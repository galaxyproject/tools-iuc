<tool id="drawrnajs" name="DrawRNAjs" version="..">
    <description>Draw RNA 2D Structures</description>
    <!--
    <requirements>
        <requirement type="package" version="1.2.6">drawrnajs</requirement>
    </requirements>
    -->
    <command><![CDATA[
        cp '$html_template' '$output' ;
        sed -i.bak 's@__UID_PLACEHOLDER__@${__app__.security.encode_id($input.id)}@g' '$output'
    ]]></command>
    <configfiles>
        <configfile name="html_template"><![CDATA[<meta charset="UTF-8">
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
        
        <link type="text/css" rel="stylesheet" href="http://workmen.biojs.net/github/bene200/drawrnajs/master/style/bootstrap.css">
        <link type="text/css" rel="stylesheet" href="http://workmen.biojs.net/github/bene200/drawrnajs/master/style/spectrum.css">
        <link type="text/css" rel="stylesheet" href="http://workmen.biojs.net/github/bene200/drawrnajs/master/style/style.css">

        <script src="https://wzrd.in/bundle/drawrnajs@1.2.6"></script>
        
        <body>
        The server was not configured to disable HTML santization for this particular tool. Please ask the Galaxy administrator to do so.
        
        <div class="input"/>
        <div id='snippetDiv'/>

        <script>
            function draw_sequence_selector(sequence_index)
            {
                var keys = Object.keys(sequence_index);
                var n = keys.length;
                
                ///@todo use \$().data() to link idx and app
                var select = \$('<select class="textbox" onchange="' +
                                    'var sid=\$(\'.textbox option:selected\').val();' +
                                    'var skeys=Object.keys(idx);' +
                                    'var skey=skeys[sid];' +
                                    'var sob=idx[skey];' +
                                    'app.remove();' +
                                    'app = new Rna({' +
                                        'el: yourDiv,' +
                                        'seq: sob[\'sequence\'],' +
                                        'dotbr: sob[\'structure\'],' +
                                        'layout: \'naview\',' +
                                        'seqpanel: true,' +
                                        'optspanel: true,' +
                                        'resindex: true' +
                                    '});' +
                                    'app.render();' +
                                '" />');
                
                for(var i = 0; i < n; i++)
                {
                    var option = \$('<option />');
                    option.attr('value',i);
                    option.text((i+1)+'. '+keys[i]);
                    
                    select.append(option);
                }
                
                \$( ".input" ).prepend(select);
            }
            function get_dotbracket_index(dotbracket_content)
            {
                // Gaurentees that the last sequence will be parsed even if no "\n" is the last char
                if(dotbracket_content[dotbracket_content.length-1] != "\n")
                {
                    dotbracket_content = dotbracket_content + "\n";
                }
                
                idx = {};
                
                var state = 0;
                var name = '';
                
                for(var i = 0; i < dotbracket_content.length; i++)
                {
                    var val = dotbracket_content[i];
                    if(state == 0)
                    {
                        if(val == ">")
                        {
                            name = '';
                        }
                        else if(val != "\n")
                        {
                            name += val;
                        }
                        else
                        {
                            idx[name] = {'sequence':'','structure':''};
                            state = 1
                        }
                    }
                    else if(state == 1)
                    {
                        if(val != "\n")///@todo more sophisticated regex?
                        {
                            idx[name]['sequence'] += val;
                        }
                        else
                        {
                            state = 2;
                        }
                    }
                    else if(state == 2)
                    {
                        if(val != "\n")
                        {
                            idx[name]['structure'] += val;
                        }
                        else
                        {
                            state = 0;
                        }
                    }
                }
                
                return idx;
            }
        
        yourDiv = document.getElementById('snippetDiv');
        var Rna = require("drawrnajs");
        var url = '/api/histories/__UID_PLACEHOLDER__/contents/__UID_PLACEHOLDER__/display';
        
        \$( document ).ready(function() {
                
                // Remove error message that sanitization was not disabled
                var textNode = \$("body").contents().first();
                textNode.replaceWith("");
                
                \$.ajax(url,
                {
                    success: function(dotbracket_file)
                    {
                        idx = get_dotbracket_index(dotbracket_file);
                        draw_sequence_selector(idx);
                        
                        app = new Rna({
                            el: yourDiv,
                            seq: idx[Object.keys(idx)[0]]['sequence'],
                            dotbr: idx[Object.keys(idx)[0]]['structure'],
                            layout: "naview",
                            seqpanel: true,
                            optspanel: true,
                            resindex: true
                        });
                        app.render();
                    }
                });
        });
        
        </script>
        </body>
    ]]></configfile>
    </configfiles>

    <inputs>
        <param name="input"
               type="data"
               format="dbn,ct"
               label="Select RNA 2D structure" />
        
        <!-- @todo
        select HTML or SVG
         -->
    </inputs>

    <outputs>
        <data format="html" name="output" label="DrawRNAjs on $on_string"/>
    </outputs>
<help>
    help!
</help>
</tool>