<tool id="ampvis2_export_otu" name="ampvis2 export otu" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="@PROFILE@" license="MIT">
    <description></description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="header"/>
    <command detect_errors="exit_code"><![CDATA[
        Rscript '$rscript'
    ]]></command>
    <configfiles>
        <configfile name="rscript"><![CDATA[
            library(ampvis2, quietly = TRUE)
            data <- readRDS("$data")
            amp_export_otutable(data, filename = "$otu_long", sep = "\t", extension = "tsv", normalise = "$norm", quote = FALSE)

            ## get only tax table (first column OTU ID)
            tax_table <- data$tax
            tax_table <- tax_table[,c(8,(ncol(tax_table)-6):(ncol(tax_table) - 1))]
            write.table(tax_table, "$tax", sep = "\t", row.names=FALSE, quote = FALSE)

            ## get only otu table (first column OTU ID)
            #if $norm
                data_norm <- normaliseTo100(data)
                otu_table <- data_norm$abund
            #else
                otu_table <- data_norm$abund
            #end if

            otu_table <- cbind(OTU = rownames(otu_table), otu_table)

            ## add index col manually: https://stackoverflow.com/questions/2478352/write-table-writes-unwanted-leading-empty-column-to-header-when-has-rownames
            ## otu_table <- data.frame("OTU"=rownames(otu_table), otu_table)
            write.table(otu_table, "$otu_short", sep = "\t", row.names=FALSE, quote = FALSE)

            ## get metadata
            meta_data = data$metadata
            write.table(meta_data, "$meta", sep = "\t", row.names=FALSE, quote = FALSE)

        ]]></configfile>
    </configfiles>
    <inputs>
        <expand macro="rds_input_macro"/>
        <param argument="norm" type="boolean" truevalue="TRUE" falsevalue="FALSE" checked="false" label="Transform the OTU read counts to be in percent per sample"/>
    </inputs>
    <outputs>
        <data name="otu_long" format="tabular"/>
        <data name="otu_short" format="tabular"/>
        <data name="tax" format="tabular"/>
        <data name="meta" format="tabular"/>
    </outputs>
    <tests>
        <!-- defaults -->
        <test expect_num_outputs="1">
            <param name="data" value="AalborgWWTPs-complete.rds" ftype="ampvis2"/> 
            <output name="output" value="AalborgWWTPs.fa" ftype="fasta"/>
        </test>
        <!-- tax -->
        <test expect_num_outputs="1">
            <param name="data" value="AalborgWWTPs-complete.rds" ftype="ampvis2"/> 
            <param name="tax" value="true"/> 
            <output name="output" ftype="fasta">
                <assert_contents>
                    <has_text text=">OTU_2397; k__Bacteria; p__Chloroflexi; c__Anaerolineae; o__Anaerolineales; f__Anaerolineaceae; g__uncultured; s__"/>
                    <has_size value="125478"/>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[
What it does
============

Export sequences from an ampvis2 object and optionally add taxonomy to the fasta header lines.

The Galaxy tool calls the `amp_export_fasta
<https://kasperskytte.github.io/ampvis2/reference/amp_export_fasta.html>`_ function
of the ampvis2 package.

Input
=====

@HELP_RDS_INPUT@

In order to work the ampvis2 rds data set needs to contain sequence information.

Output
======

The sequences contained in the input as fasta.

    ]]></help>
    <expand macro="citations"/>
</tool>