<?xml version="1.0" ?>
<tool id="tbvcfreport" name="TB Variant Report" version="@TOOL_VERSION@+galaxy0">
  <description>- generate HTML report from SnpEff annotated M.tb VCF(s)</description>
  <macros>
    <token name="@TOOL_VERSION@">0.1.8</token>
  </macros>
  <requirements>
    <requirement type="package" version="@TOOL_VERSION@">tbvcfreport</requirement>
  </requirements>
  <command detect_errors="exit_code">
    <![CDATA[
    #if $adv.database_uri
        export DATABASE_URI='${adv.database_uri}' &&
    #end if
    
    #if not '.vcf' in str($input_vcf.element_identifier)
        #set $input_vcf_filename = str($input_vcf.element_identifier).replace(' ', '') + '.vcf'
    #else
        #set $input_vcf_filename = str($input_vcf.element_identifier).replace(' ', '')
    #end if

    ln -s '${input_vcf}' '${input_vcf_filename}' &&
    
    #set vcf_name = os.path.splitext(os.path.basename($input_vcf_filename))[0]
    
    #if $tbprofiler_json
        #if not '.json' in str($tbprofiler_json.element_identifier)
          #set $tbprofiler_report = str($tbprofiler_json.element_identifier).replace(' ', '') + '.json'
        #else
            #set $tbprofiler_report = str($tbprofiler_json.element_identifier).replace(' ', '')
        #end if
        ln -s '${tbprofiler_json}' '${tbprofiler_report}' &&
    #end if

    tbvcfreport generate

    $filter_udi
    
    #if $tbprofiler_json
        --tbprofiler-report '${tbprofiler_report}'
    #end if
    
    '${input_vcf_filename}' &&

    #set variants_report = str(vcf_name) + '_variants_report'
    #set html_variants_report = variants_report + '.html'
    #set txt_variants_report = variants_report + '.txt'

    mv '${html_variants_report}' '$variants_report_html' &&
    mv '${txt_variants_report}' '$variants_report_txt'

    #if $tbprofiler_json
        #set drug_resistance_report = str(vcf_name) + '_drug_resistance_report'
        #set html_drug_resistance_report = drug_resistance_report + '.html'
        #set txt_drug_resistance_report = drug_resistance_report + '.txt'
        
        && mv '${html_drug_resistance_report}' '$drug_resistance_report_html'
        && mv '${txt_drug_resistance_report}' '$drug_resistance_report_txt'
    #end if
    ]]>
  </command>
  <inputs>
    <param name="input_vcf" type="data" format="vcf" label="Input SnpEff annotated M.tuberculosis VCF(s)" />
    <param name="tbprofiler_json" type="data" format="json" optional="true" label="TBProfiler Drug Resistance Report (Optional)" help="--tbprofiler-report" />
    <param name="filter_udi" argument="--filter-udi" type="boolean" truevalue="--filter-udi" falsevalue="--no-filter-udi" checked="true" label="Filter UPSTREAM, DOWNSTREAM and INTERGENIC variants" />
    <section name="adv" title="Advanced options" expanded="false">
      <param name="database_uri" type="text" optional="true" value="neodb.sanbi.ac.za" label="Specify on-premise COMBAT-TB-NeoDB URI" help="For people with an on-premise deployment of COMBAT-TB-NeoDB" />
    </section>
  </inputs>
  <outputs>
    <data name="variants_report_html" format="html" label="${tool.name} variants report (html) on ${on_string}" />
    <data name="variants_report_txt" format="txt" label="${tool.name} variants report (text) on ${on_string}" />
    <data name="drug_resistance_report_html" format="html" label="${tool.name} drug resistance report (html) on ${on_string}">
      <filter>tbprofiler_json</filter>
    </data>
    <data name="drug_resistance_report_txt" format="txt" label="${tool.name} drug resistance report (text) on ${on_string}">
      <filter>tbprofiler_json</filter>
    </data>
  </outputs>
  <tests>
    <test>
      <param name="input_vcf" value="rif_resistant.vcf" ftype="vcf" />
      <output name="variants_report_html" compare="diff" lines_diff="2" file="rif_resistant_variants_report.html" ftype="html" />
      <output name="variants_report_txt" compare="diff" lines_diff="2" file="rif_resistant_variants_report.txt" ftype="txt" />
    </test>
    <test>
      <param name="input_vcf" value="rif_resistant.vcf" ftype="vcf" />
      <param name="tbprofiler_json" value="rif_resistant.results.json" ftype="json" />
      <output name="variants_report_html" compare="diff" lines_diff="2" file="rif_resistant_variants_report_with_lineage.html" ftype="html" />
      <output name="variants_report_txt" compare="diff" lines_diff="2" file="rif_resistant_variants_report_with_lineage.txt" ftype="txt" />
      <output name="drug_resistance_report_html" file="rif_resistant_drug_resistance_report.html" lines_diff="2" ftype="html" />
      <output name="drug_resistance_report_txt" compare="diff" lines_diff="2" file="rif_resistant_drug_resistance_report.txt" ftype="txt" />
    </test>
  </tests>
  <help>
    <![CDATA[
    **tbvcfreport - @TOOL_VERSION@**

    **tbvcfreport** takes SnpEff annotated M.tuberculosis VCF file(s) and generates an HTML-based report with data from Combat-TB-NeoDB (https://neodb.sanbi.ac.za) 
    and links to Combat-TB-eXplorer (https://explorer.sanbi.ac.za/).

    **tbvcfreport** will generate an HTML-based Drug Resistance report if provided with a TBProfiler json report.
    
    Drug resistance predictions are for **Research Purposes Only** and are produced by TBProfiler (https://github.com/jodyphelan/TBProfiler)
    
    **Inputs**

        - SnpEff annotated M.tuberculosis VCF file(s) - vcf - **required**
        
        - TBProfiler Drug Resistance JSON Report - json - **optional**

    **Outputs**

        - Variant Report in HTML and TXT format
        
        - Drug Resistance Report in HTML and TXT format if provided with a TBProfiler json report
          
        
    **Advanced options**:

        - database_uri - String - Use an on-premise COMBAT-TB-NeoDB (default 'neodb.sanbi.ac.za') - **optional**

    **Further information**
    
    For more on the **COMBAT-TB Project**, see https://combattb.org.

    For more on **tbvcfreport**, see https://github.com/COMBAT-TB/tbvcfreport.
    
    For more on **COMBAT-TB-NeoDB**, see https://github.com/COMBAT-TB/combat-tb-neodb.
    ]]>
  </help>
  <citations>
    <citation type="bibtex">
@misc{githubtbvcfreport,
  author = {COMBAT-TB},
  year = {2019},
  title = {tbvcfreport},
  publisher = {GitHub},
  journal = {GitHub repository},
  url = {https://github.com/COMBAT-TB/tbvcfreport},
}</citation>
  </citations>
</tool>
