<?xml version="1.0" ?>
<tool id="tbvcfreport" name="TB Variant Report" version="@TOOL_VERSION@+galaxy3">
  <description>- generate interactive HTML report from M.tb SnpEff VCF(s)</description>
  <macros>
    <token name="@TOOL_VERSION@">0.1.7</token>
  </macros>
  <requirements>
    <requirement type="package" version="@TOOL_VERSION@">tbvcfreport</requirement>
  </requirements>
  <command detect_errors="exit_code">
    <![CDATA[
    #if str($database.use_neodb) == "no"
        export DATABASE_URI="${database.database_uri}" &&
    #end if
    
    #if not ".vcf" in str($input_vcf.element_identifier)
        #set $input_vcf_filename = str($input_vcf.element_identifier).replace(' ', '') + ".vcf"
    #else
        #set $input_vcf_filename = str($input_vcf.element_identifier).replace(' ', '')
    #end if

    ln -s "${input_vcf}" "${input_vcf_filename}" &&
    
    #set vcf_name = os.path.splitext(os.path.basename($input_vcf_filename))[0]
    
    #if str($tbprofiler.use_tbp) == "yes"
        #if not ".json" in str($tbprofiler_json.element_identifier)
          #set $tbprofiler_report = str($tbprofiler_json.element_identifier).replace(' ', '') + ".json"
        #else
            #set $tbprofiler_report = str($tbprofiler_json.element_identifier).replace(' ', '')
        #end if
        ln -s "${tbprofiler_json}" "${tbprofiler_report}" &&
    #end if

    tbvcfreport generate

    #if str($variants.filter_udi) == "no"
        --no-filter-udi
    #end if
    #if str($tbprofiler.use_tbp) == "yes"
        --tbprofiler-report "${tbprofiler_report}"
    #end if
    
    "${input_vcf_filename}" &&

    #set variants_report = str(vcf_name) + "_variants_report"
    #set html_variants_report = variants_report + ".html"
    #set txt_variants_report = variants_report + ".txt"

    mv "${html_variants_report}" $variants_report_html &&
    mv "${txt_variants_report}" $variants_report_txt

    #if str($tbprofiler.use_tbp) == "yes"
        #set drug_resistance_report = str(vcf_name) + "_drug_resistance_report"
        #set html_drug_resistance_report = drug_resistance_report + ".html"
        #set txt_drug_resistance_report = drug_resistance_report + ".txt"
        
        && mv "${html_drug_resistance_report}" $drug_resistance_report_html
        && mv "${txt_drug_resistance_report}" $drug_resistance_report_txt
    #end if
    ]]>
  </command>
  <inputs>
    <param name="input_vcf" type="data" format="vcf" label="Input SnpEff annotated VCF" />
    <conditional name="tbprofiler">
      <param name="use_tbp" type="select" label="Use TBProfiler Drug Resistance Report">
        <option value="yes">Yes</option>
        <option value="no" selected="true">No</option>
      </param>
      <when value="no"></when>
      <when value="yes">
        <param name="tbprofiler_json" type="data" format="json" label="TBProfiler (JSON) resistance report" />
      </when>
    </conditional>
    <conditional name="variants">
      <param name="filter_udi" type="select" label="Filter UPSTREAM, DOWNSTREAM and INTERGENIC variants">
        <option value="yes" selected="true">Yes</option>
        <option value="no">No</option>
      </param>
      <when value="yes"></when>
      <when value="no"></when>
    </conditional>
    <conditional name="database">
      <param name="use_neodb" type="select" label="Use default COMBAT-TB-NeoDB Database (https://neodb.sanbi.ac.za)">
        <option value="yes" selected="true">Yes</option>
        <option value="no">No</option>
      </param>
      <when value="yes"></when>
      <when value="no">
        <param name="database_uri" type="text" value="localhost" label="Specify database URI" />
      </when>
    </conditional>
  </inputs>
  <outputs>
    <data name="variants_report_html" format="html" label="${tool.name} variants report (html) on ${on_string}" />
    <data name="variants_report_txt" format="txt" label="${tool.name} variants report (text) on ${on_string}" />
    <data name="drug_resistance_report_html" format="html" label="${tool.name} drug resistance report (html) on ${on_string}">
      <filter>tbprofiler['use_tbp'] == "yes"</filter>
    </data>
    <data name="drug_resistance_report_txt" format="txt" label="${tool.name} drug resistance report (text) on ${on_string}">
      <filter>tbprofiler['use_tbp'] == "yes"</filter>
    </data>
  </outputs>
  <tests>
    <test>
      <param name="input_vcf" value="rif_resistant.vcf" ftype="vcf" />
      <param name="use_tbp" value="no" />
      <output name="variants_report_html" compare="diff" lines_diff="2" file="rif_resistant_variants_report.html" ftype="html" />
      <output name="variants_report_txt" compare="diff" lines_diff="2" file="rif_resistant_variants_report.txt" ftype="txt" />
    </test>
    <test>
      <param name="input_vcf" value="rif_resistant.vcf" ftype="vcf" />
      <param name="use_tbp" value="yes" />
      <param name="tbprofiler_json" value="rif_resistant.results.json" ftype="json" />
      <output name="variants_report_html" compare="diff" lines_diff="2" file="rif_resistant_variants_report.html" ftype="html" />
      <output name="variants_report_txt" compare="diff" lines_diff="2" file="rif_resistant_variants_report.txt" ftype="txt" />
      <output name="drug_resistance_report_html" file="rif_resistant_drug_resistance_report.html" lines_diff="2" ftype="html" />
      <output name="drug_resistance_report_txt" compare="diff" lines_diff="2" file="rif_resistant_drug_resistance_report.txt" ftype="txt" />
    </test>
  </tests>
  <help>
    <![CDATA[
    This tool generates an interactive HTML-based VCF report from a SnpEff annotated VCF file.
    ]]>
  </help>
  <citations>
    <citation type="bibtex">
@misc{githubtbvcfreport,
  author = {SANBI-SA},
  year = {2019},
  title = {tbvcfreport},
  publisher = {GitHub},
  journal = {GitHub repository},
  url = {https://github.com/COMBAT-TB/tbvcfreport},
}</citation>
  </citations>
</tool>
