<?xml version="1.0" encoding="utf-8"?>
<tool id="scanpy-scale-data" name="Scanpy ScaleData" version="0.0.2">
  <macros>
    <import>scanpy_macros.xml</import>
  </macros>
  <expand macro="requirements"/>
  <command detect_errors="exit_code"><![CDATA[
ln -s $input_obj_file input.h5;
scanpy-scale-data.py -i input.h5
                     -f $input_format
                     -o output.h5
                     -F $output_format
#if $scale_max
                     -x $scale_max
#end if
#if $var_regress
                     -V $var_regress
#end if
#if $do_log
                     --do-log
#end if
#if $zero_center
                     --zero-center
#end if
]]></command>

  <inputs>
    <expand macro="input_object_params"/>
    <expand macro="output_object_params"/>
    <param name="do_log" type="boolean" label="Do log(x+1) transformation" checked="true"/>
    <param name="zero_center" type="boolean" label="Zero center data before scaling" checked="true"/>
    <param name="var_regress" type="text" label="Variable(s) to regress out" optional="true">
      <option value="n_counts">n_counts</option>
    </param>
    <param name="scale_max" type="float" label="Truncate to this value after scaling" optional="true"/>
  </inputs>

  <outputs>
    <data name="output_h5" format="h5" label="" from_work_dir="output.h5"/>
  </outputs>

  <tests>
    <test>
      <param name="input_obj_file" value="find_variable_genes.h5"/>
      <param name="input_format" value="anndata"/>
      <param name="output_format" value="anndata"/>
      <param name="do_log" value="true"/>
      <param name="zero_center" value="true"/>
      <param name="var_regress" value="n_counts"/>
      <param name="scale_max" type="float" label="Truncate to this value after scaling" optional="true"/>
      <output name="output_h5" file="scale_data.h5" ftype="h5" compare="sim_size"/>
    </test>
  </tests>

  <help><![CDATA[
usage: scanpy-scale-data.py [options]

optional arguments:
  -h, --help            show this help message and exit

  --debug               Print debug information.

  -i INPUT_OBJECT_FILE, --input-object-file INPUT_OBJECT_FILE
                        Path to anndata or loom file.

  -f {loom,anndata,auto-detect}, --input-format {loom,anndata,auto-detect}
                        Format for input object: loom/anndata/[auto-detect].

  -o OUTPUT_OBJECT_FILE, --output-object-file OUTPUT_OBJECT_FILE
                        File name in which to store serialized python object.

  -F {loom,anndata,auto-detect}, --output-format {loom,anndata,auto-detect}
                        Format for output object: loom/anndata/[auto-detect].

  -g, --do-log          Log-transform the data: log(x+1)

  -V VAR_TO_REGRESS, --var-to-regress VAR_TO_REGRESS
                        Variables to regress out

  -z, --zero-center     Zero-center the data. See also --no-zero-center. If
                        neither --zero-center nor --no-zero-center is set,
                        automatically set to FALSE if input is sparse,
                        otherwise TRUE.

  -Z, --no-zero-center  Do not zero-center the data to handle sparse data
                        efficiently. See also --zero-center.

  -x SCALE_MAX, --scale-max SCALE_MAX
                        Truncate to this value after scaling. Do not truncate
                        if None. Default: None


]]></help>
  <expand macro="citations"/>
</tool>
