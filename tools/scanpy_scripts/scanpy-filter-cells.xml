<tool id="scanpy-filter-cells" name="Scanpy FilterCells" version="0.0.2">
  <macros>
    <import>scanpy_macros.xml</import>
  </macros>
  <expand macro="requirements"/>
  <command detect_errors="exit_code"><![CDATA[
ln -s $input_obj_file input.h5;
scanpy-filter-cells.py -i input.h5
                       -f $input_format
                       -o output.h5
                       -F $output_format
#if $parameters
#set pars = ','.join([str($p['name']) for $p in $parameters])
                       -p '${pars}'
#set mins = ','.join([str($p['min']) for $p in $parameters])
                       -l '${mins}'
#set maxs = ','.join([str($p['max']) for $p in $parameters])
                       -j '${maxs}'
#end if
#if $subset
                       -s $subset
#end if
]]></command>

  <inputs>
    <expand macro="input_object_params"/>
    <expand macro="output_object_params"/>
    <repeat name="parameters" title="Parameters used to filter cells" min="1">
      <param name="name" type="text" value="n_genes" label="Name of parameter to filter on">
	<option value="n_genes">n_genes</option>
	<option value="n_counts">n_counts</option>
      </param>
      <param name="min" type="float" label="Min value" value="-1e9"/>
      <param name="max" type="float" label="Max value" value="1e9"/>
    </repeat>
    <param name="subset" type="data" format="tsv" label="" optional="true"/>
  </inputs>

  <outputs>
    <data name="output_h5" format="h5" label="" from_work_dir="output.h5"/>
  </outputs>

  <tests>
    <test>
      <param name="input_obj_file" value="read_10x.h5"/>
      <param name="input_format" value="anndata"/>
      <param name="output_format" value="anndata"/>
      <repeat name="parameters">
	<param name="name" value="n_genes"/>
	<param name="min" value="200"/>
	<param name="max" value="2500"/>
      </repeat>
      <repeat name="parameters">
	<param name="name" value="n_counts"/>
	<param name="min" value="-1e9"/>
	<param name="max" value="1e9"/>
      </repeat>
      <repeat name="parameters">
      </repeat>
      <output name="output_h5" file="filter_cells.h5" ftype="h5" compare="sim_size"/>
    </test>
  </tests>

  <help><![CDATA[
usage: scanpy-filter-cells.py [options]

optional arguments:
  -h, --help            show this help message and exit

  --debug               Print debug information.

  -i INPUT_OBJECT_FILE, --input-object-file INPUT_OBJECT_FILE
                        Path to anndata or loom file.

  -f {loom,anndata,auto-detect}, --input-format {loom,anndata,auto-detect}
                        Format for input object: loom/anndata/[auto-detect].

  -o OUTPUT_OBJECT_FILE, --output-object-file OUTPUT_OBJECT_FILE
                        File name in which to store serialized python object.

  -F {loom,anndata,auto-detect}, --output-format {loom,anndata,auto-detect}
                        Format for output object: loom/anndata/[auto-detect].

  -p PARAMETER_NAMES, --parameter-names PARAMETER_NAMES
                        Parameters to subset on.

  -l LOW_THRESHOLDS, --low-thresholds LOW_THRESHOLDS
                        Low cutoffs for the parameters (default is -Inf).

  -j HIGH_THRESHOLDS, --high-thresholds HIGH_THRESHOLDS
                        High cutoffs for the parameters (default is Inf).

  -s SUBSET_LIST, --subset-list SUBSET_LIST
                        Comma-separated list of entries to use as a subset.
                        Alternatively, text file with one entry per line.  


]]></help>
  <expand macro="citations"/>
</tool>
