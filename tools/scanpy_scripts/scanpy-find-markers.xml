<?xml version="1.0" encoding="utf-8"?>
<tool id="scanpy-find-markers" name="Scanpy FindMarkers" version="@TOOL_VERSION@+galaxy0">
  <description>to find differentially expressed genes between groups</description>
  <macros>
    <import>scanpy_macros.xml</import>
  </macros>
  <expand macro="requirements"/>
  <command detect_errors="exit_code"><![CDATA[
ln -s '${input_obj_file}' input.h5;
scanpy-find-markers.py -i input.h5
                       -f '${input_format}'
                       -o output.h5
                       -F '${output_format}'
                       -n '${n_genes}'
#if $output_markers
                       --output-text-file output.csv
#end if
#if $settings.default == "false"
                       -g '${settings.group_by}'
                       --reference '${settings.reference}'
                       --method '${settings.method}'
    #if $settings.use_raw == "false"
                       --no-raw
    #end if
    #if $settings.use_abs
                       --rankby_abs
    #end if
    #if $settings.groups
                       --groups '${settings.groups}'
    #end if
#end if
]]></command>

  <inputs>
    <expand macro="input_object_params"/>
    <expand macro="output_object_params"/>
    <param name="n_genes" argument="--n-genes" type="integer" value="50" label="Number of top genes to show per group/cluster"/>
    <param name="output_markers" type="boolean" checked="true" label="Output markers table in csv format"/>
    <conditional name="settings">
      <param name="default" type="boolean" checked="true" label="Use programme defaults"/>
      <when value="true"/>
      <when value="false">
        <param name="group_by" argument="--groupby" type="text" value="louvain" label="The sample grouping/clustering to use."/>
        <param name="use_raw" type="boolean" checked="true" label="Use raw attribute if present"/>
        <param name="reference" argument="--reference" type="text" value="rest" label="If 'rest', compare to the union of the rest of the group/cluster. If a group identifier, compare to that group">
          <option value="rest">rest</option>
        </param>
        <param name="method" argument="--method" type="select" label="Method for testing differentially expressed genes">
          <option value="t-test_overestim_var" selected="true">t-test with over-estimated variance</option>
          <option value="t-test">t-test</option>
          <option value="wilcoxon">wilcoxon test, currently broken don't use</option>
          <option value="logreg">logistic regression</option>
        </param>
        <param name="use_abs" argument="--use-abs" type="boolean" checked="false" label="Rank by absolute value of the scores instead of the scores"/>
        <param name="groups" argument="--groups" optional="true" type="text" label="Subset of groups/clusters to which comparisons shell be restricted."/>
      </when>
    </conditional>
  </inputs>

  <outputs>
    <data name="output_h5" format="h5" from_work_dir="output.h5" label="${tool.name} on ${on_string}: Marker object"/>
    <data name="output_csv" format="csv" from_work_dir="output.csv" label="${tool.name} on ${on_string}: Marker table">
      <filter>output_markers</filter>
    </data>
  </outputs>

  <tests>
    <test>
      <param name="input_obj_file" value="find_cluster.h5"/>
      <param name="input_format" value="anndata"/>
      <param name="output_format" value="anndata"/>
      <param name="output_csv" value="true"/>
      <param name="n_genes" value="50"/>
      <param name="output_markers" value="false"/>
      <param name="default" value="false"/>
      <param name="group_by" value="louvain"/>
      <param name="method" value="t-test_overestim_var"/>
      <param name="use_abs" value="false"/>
      <output name="output_h5" file="find_markers.h5" ftype="h5" compare="sim_size"/>
    </test>
  </tests>

  <help><![CDATA[
@HELP@
]]></help>
  <expand macro="citations"/>
</tool>
