<?xml version="1.0" encoding="utf-8"?>
<tool id="scanpy-find-cluster" name="Scanpy FindCluster" version="0.0.2">
  <macros>
    <import>scanpy_macros.xml</import>
  </macros>
  <expand macro="requirements"/>
  <command detect_errors="exit_code"><![CDATA[
ln -s $input_obj_file input.h5;
scanpy-find-cluster.py -i input.h5
                       -f $input_format
                       -o output.h5
                       -F $output_format
#if $output_cluster
                       --output-text-file output.tsv
#end if
#if $settings.default == "false"
                       --flavor $settings.flavour
                       --key-added $settings.key
                       -s $settings.seed
    #if $settings.flavour == "vtraag"
                       --resolution $settings.resolution
    #end if
## comment out as "--restrict-to" needs fixing in the python script
##    #if $settings.restrict
##                       --restrict-to $settings.restrict
##    #end if
    #if $settings.use_weights
                       --use-weights
    #end if
#end if
]]></command>

  <inputs>
    <expand macro="input_object_params"/>
    <expand macro="output_object_params"/>
    <param name="output_cluster" type="boolean" label="Output cluster in two column text format" checked="true"/>
    <conditional name="settings">
      <param name="default" type="boolean" label="Use programme defaults" checked="true"/>
      <when value="true"/>
      <when value="false">
	<param name="flavour" type="select" label="Use the indicated representation">
	  <option value="vtraag" selected="true">vtraag</option>
	  <option value="igraph">igraph</option>
	</param>
	<param name="resolution" type="float" label="Resolution, high value for more and smaller clusters" value="1.0"/>

	<param name="restrict" type="text" label="Restrict clustering to certain sample categories" optional="true"/>
	<param name="key" type="text" label="Key under which to add the cluster labels (do not change unless you know what you are doing)" value="louvain"/>
	<param name="use_weights" type="boolean" label="Use weights from knn graph" checked="false"/>
	<param name="seed" type="integer" label="Seed for random number generator" value="0"/>
      </when>
    </conditional>
  </inputs>

  <outputs>
    <data name="output_h5" format="h5" label="" from_work_dir="output.h5"/>
    <data name="output_txt" format="tsv" label="" from_work_dir="output.tsv">
      <filter>output_cluster</filter>
    </data>
  </outputs>

  <tests>
    <test>
      <param name="input_obj_file" value="compute_graph.h5"/>
      <param name="input_format" value="anndata"/>
      <param name="output_format" value="anndata"/>
      <param name="output_txt" value="true"/>
      <param name="default" value="false"/>
      <param name="flavour" value="vtraag"/>
      <param name="resolution" value="1.0"/>
      <param name="seed" value="0"/>
      <output name="output_h5" file="find_cluster.h5" ftype="h5" compare="sim_size"/>
      <output name="output_txt" file="find_cluster.txt" ftype="tsv"/>
    </test>
  </tests>

  <help><![CDATA[
usage: scanpy-find-cluster.py [options]

optional arguments:
  -h, --help            show this help message and exit

  --debug               Print debug information.

  -i INPUT_OBJECT_FILE, --input-object-file INPUT_OBJECT_FILE
                        Path to anndata or loom file.

  -f {loom,anndata,auto-detect}, --input-format {loom,anndata,auto-detect}
                        Format for input object: loom/anndata/[auto-detect].

  -o OUTPUT_OBJECT_FILE, --output-object-file OUTPUT_OBJECT_FILE
                        File name in which to store serialized python object.

  -F {loom,anndata,auto-detect}, --output-format {loom,anndata,auto-detect}
                        Format for output object: loom/anndata/[auto-detect].

  --output-text-file OUTPUT_TEXT_FILE
                        File name in which to store text format set of clusters

  --flavor {vtraag,igraph}
                        Choose between two packages for computing the clustering."vtraag" is much more
                        powerful, and the default.

  --resolution RESOLUTION
                        For the default flavor "vtraag", you can provide a resolution (higher resolution means
                        finding more and smaller clusters). Default: 1.0

  --restrict-to RESTRICT_TO
                        Restrict the clustering to the categories within the key for sample annotation, tuple
                        needs to contain (obs key, list of categories).

  --key-added KEY_ADDED
                        Key under which to add the cluster labels. Default: louvain

  --use-weights         Use weights from knn graph.

  -s RANDOM_SEED, --random-seed RANDOM_SEED
                        The seed used to initialise optimisation. Default: 0


]]></help>
  <expand macro="citations"/>
</tool>
