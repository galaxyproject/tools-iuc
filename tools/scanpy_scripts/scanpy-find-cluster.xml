<?xml version="1.0" encoding="utf-8"?>
<tool id="scanpy-find-cluster" name="Scanpy FindCluster" version="@VERSION@+galaxy0">
    <description>based on community detection on KNN graph</description>
    <macros>
        <import>scanpy_macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <command detect_errors="exit_code"><![CDATA[
ln -s '${input_obj_file}' input.h5;
scanpy-find-cluster.py
    -i input.h5
    -f '${input_format}'
    -o output.h5
    -F '${output_format}'
    #if $output_cluster
        --output-text-file output.tsv
    #end if
    #if $settings.default == "false"
        --flavor '${settings.flavour}'
        --key-added '${settings.key}'
        -s '${settings.seed}'
        #if $settings.flavour == "vtraag"
            --resolution '${settings.resolution}'
        #end if
        #if $settings.restrict
            --restrict-to '${settings.restrict}'
        #end if
        #if $settings.use_weights
            --use-weights
        #end if
    #end if
    ]]></command>

    <inputs>
        <expand macro="input_object_params"/>
        <expand macro="output_object_params"/>
        <param name="output_cluster" type="boolean" checked="true" label="Output cluster in two column text format"/>
        <conditional name="settings">
            <param name="default" type="boolean" checked="true" label="Use programme defaults"/>
            <when value="true"/>
            <when value="false">
                <param name="flavour" argument="--flavor" type="select" label="Use the indicated representation">
                    <option value="vtraag" selected="true">vtraag</option>
                    <option value="igraph">igraph</option>
                </param>
                <param name="resolution" argument="--resolution" type="float" value="1.0" label="Resolution, high value for more and smaller clusters"/>
                <param name="restrict" argument="--restrict-to" type="text" optional="true" label="Restrict clustering to certain sample categories"/>
                <param name="key" argument="--key-added" type="text" value="louvain" label="Key under which to add the cluster labels (do not change unless you know what you are doing)"/>
                <param name="use_weights" argument="--use-weights" type="boolean" checked="false" label="Use weights from knn graph"/>
                <param name="seed" argument="--random-seed" type="integer" value="0" label="Seed for random number generator"/>
            </when>
        </conditional>
    </inputs>

    <outputs>
        <data name="output_h5" format="h5" from_work_dir="output.h5" label="${tool.name} on ${on_string}: Cluster object"/>
        <data name="output_txt" format="tsv" from_work_dir="output.tsv" label="${tool.name} on ${on_string}: Cluster table">
            <filter>output_cluster</filter>
        </data>
    </outputs>

    <tests>
        <test>
            <param name="input_obj_file" value="compute_graph.h5"/>
            <param name="input_format" value="anndata"/>
            <param name="output_format" value="anndata"/>
            <param name="output_txt" value="true"/>
            <param name="default" value="false"/>
            <param name="flavour" value="vtraag"/>
            <param name="resolution" value="1.0"/>
            <param name="seed" value="0"/>
            <output name="output_h5" file="find_cluster.h5" ftype="h5" compare="sim_size"/>
            <output name="output_txt" file="find_cluster.tsv" ftype="tsv"/>
        </test>
    </tests>

    <help><![CDATA[
@HELP@
    ]]></help>
    <expand macro="citations"/>
</tool>
