<?xml version="1.0" encoding="utf-8"?>
<tool id="scanpy-run-umap" name="Scanpy RunUMAP" version="@TOOL_VERSION@+galaxy0">
    <description>visualise cell clusters using UMAP</description>
    <macros>
        <import>scanpy_macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <command detect_errors="exit_code"><![CDATA[
ln -s '${input_obj_file}' input.h5;
scanpy-run-umap.py
    -i input.h5
    -f '${input_format}'
    -o output.h5
    -F '${output_format}'
    #if $embeddings
        --output-embeddings-file embeddings.csv
    #end if

    #if $settings.default == "false"
        -n '${settings.n_comp}'
        --min-dist '${settings.min_dist}'
        --spread '${settings.spread}'
        --alpha '${settings.alpha}'
        --gamma '${settings.gamma}'
        --negative-sample-rate '${settings.neg_sample_rate}'
        #if $settings.init_pos
            --init-pos '${settings.init_pos}'
        #end if
        #if $settings.maxiter
            --maxiter '${settings.maxiter}'
        #end if
        #if $settings.A
            -a '${settings.A}'
        #end if
        #if $settings.B
            -b '${settings.B}'
        #end if
        #if $settings.seed is not None
            -s '${settings.seed}'
        #end if
   #end if

@PLOT_OPTS@
]]></command>

    <inputs>
        <expand macro="input_object_params"/>
        <expand macro="output_object_params"/>
        <param name="embeddings" type="boolean" checked="true" label="Output embeddings in csv format"/>
        <conditional name="settings">
            <param name="default" type="boolean" checked="true" label="Use programme defaults"/>
            <when value="true"/>
            <when value="false">
                <param name="n_comp" argument="--n-components" type="integer" value="2" label="The number of dimensions of the embedding"/>
                <param name="min_dist" argument="--min-dist" type="float" value="0.5" label="The effective minimum distance between embedded points"/>
                <param name="spread" argument="--spread" type="float" value="1.0" label="The effective spread of embedded points"/>
                <param name="alpha" argument="--alpha" type="float" value="1.0" label="Initial learning rate"/>
                <param name="gamma" argument="--gamma" type="float" value="1.0" label="Weighting applied to negative samples"/>
                <param name="neg_sample_rate" argument="--negative-sample-rate" type="integer" value="5" label="The ratio of negative to positive edge in optimisation"/>
                <param name="init_pos" argument="--init-pos" type="text" label="Method to initialise embedding, any key for adata.obsm or choose from the preset methods">
                    <option value="spectral" selected="true">spectral</option>
                    <option value="paga">paga</option>
                    <option value="random">random</option>
                </param>
                <param name="maxiter" argument="--maxiter" type="integer" optional="true" label="Number of iterations of optimisation"/>
                <param name="A" argument="-a" type="float" optional="true" label="More specific parameter controlling embedding, automatically determined from --min-dist and --spread if unset"/>
                <param name="B" argument="-b" type="float" optional="true" label="More specific parameter controlling embedding, automatically determined from --min-dist and --spread if unset"/>
                <param name="seed" argument="--random-seed" type="integer" value="0" label="Seed for numpy random number generator"/>
            </when>
        </conditional>
        <conditional name="do_plotting">
            <param name="plot" type="boolean" checked="false" label="Make UMAP plot"/>
            <when value="true">
                <expand macro="output_plot_params"/>
                <param name="color_by" argument="--color-by" type="text" value="louvain" label="Color by attributes, comma separated strings"/>
            </when>
            <when value="false"/>
        </conditional>
    </inputs>

    <outputs>
        <data name="output_h5" format="h5" from_work_dir="output.h5" label="${tool.name} on ${on_string}: UMAP object"/>
        <data name="output_png" format="png" from_work_dir="output.png" label="${tool.name} on ${on_string}: UMAP plot">
            <filter>do_plotting['plot']</filter>
        </data>
        <data name="output_embed" format="csv" from_work_dir="embeddings.csv" label="${tool.name} on ${on_string}: UMAP embeddings">
            <filter>embeddings</filter>
        </data>
    </outputs>

    <tests>
        <test>
            <param name="input_obj_file" value="find_cluster.h5"/>
            <param name="input_format" value="anndata"/>
            <param name="output_format" value="anndata"/>
            <param name="default" value="false"/>
            <param name="embeddings" value="false"/>
            <param name="seed" value="0"/>
            <param name="plot" value="true"/>
            <param name="color_by" value="louvain"/>
            <output name="output_h5" file="run_umap.h5" ftype="h5" compare="sim_size"/>
            <output name="output_png" file="run_umap.png" ftype="png" compare="sim_size"/>
        </test>
    </tests>

    <help><![CDATA[
@HELP@
    ]]></help>
    <expand macro="citations"/>
</tool>
