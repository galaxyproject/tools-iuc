<?xml version="1.0" encoding="utf-8"?>
<tool id="scanpy-run-umap" name="Scanpy RunUMAP" version="0.0.2">
  <macros>
    <import>scanpy_macros.xml</import>
  </macros>
  <expand macro="requirements"/>
  <command detect_errors="exit_code"><![CDATA[
ln -s $input_obj_file input.h5;
scanpy-run-umap.py -i input.h5
                   -f $input_format
                   -o output.h5
                   -F $output_format
#if $embeddings
                   --output-embeddings-file embeddings.csv
#end if

#if $settings.default == "false"
                   -n $settings.n_comp
		   --min-dist $settings.min_dist
		   --spread $settings.spread
		   --alpha $settings.alpha
		   --gamma $settings.gamma
		   --negative-sample-rate $settings.neg_sample_rate
    #if $settings.init_pos
                   --init-pos $settings.init_pos
    #end if
    #if $settings.maxiter
                   --maxiter $settings.maxiter
    #end if
    #if $settings.A
                   -a $settings.A
    #end if
    #if $settings.B
                   -b $settings.B
    #end if
    #if $settings.seed
                   -s $settings.seed
    #end if
#end if

@PLOT_OPTS@
]]></command>

  <inputs>
    <expand macro="input_object_params"/>
    <expand macro="output_object_params"/>

    <param name="embeddings" type="boolean" label="Output embeddings in csv format" checked="true"/>

    <conditional name="settings">
      <param name="default" type="boolean" label="Use programme defaults" checked="true"/>
      <when value="true"/>
      <when value="false">
	<param name="n_comp" type="integer" label="The number of dimensions of the embedding" value="2"/>
	<param name="min_dist" type="float" label="The effective minimum distance between embedded points" value="0.5"/>
	<param name="spread" type="float" label="The effective spread of embedded points" value="1.0"/>
	<param name="alpha" type="float" label="Initial learning rate" value="1.0"/>
	<param name="gamma" type="float" label="Weighting applied to negative samples" value="1.0"/>
	<param name="neg_sample_rate" type="integer" label="The ratio of negative to positive edge in optimisation" value="5"/>
	<param name="init_pos" type="text" label="Method to initialise embedding, any key for adata.obsm or choose from the preset methods">
	  <option value="spectral" selected="true">spectral</option>
	  <option value="paga">paga</option>
	  <option value="random">random</option>
	</param>
	<param name="maxiter" type="integer" label="Number of iterations of optimisation" optional="true"/>
	<param name="A" type="float" label="More specific parameter controlling embedding, automatically determined from --min-dist and --spread if unset" optional="true"/>
	<param name="B" type="float" label="More specific parameter controlling embedding, automatically determined from --min-dist and --spread if unset" optional="true"/>
	<param name="seed" type="integer" label="Seed for numpy random number generator" value="0"/>
      </when>
    </conditional>

    <conditional name="do_plotting">
      <param name="plot" type="boolean" label="Make PCA plot" checked="false"/>
      <when value="true">
	<expand macro="output_plot_params"/>
	<param name="color_by" type="text" label="Color by attributes, comma separated strings" value="louvain" argument="--color"/>
      </when>
      <when value="false"/>
    </conditional>
  </inputs>

  <outputs>
    <data name="output_h5" format="h5" label="" from_work_dir="output.h5"/>
    <data name="output_png" format="png" label="UMAP plot" from_work_dir="output.png">
      <filter>do_plotting['plot']</filter>
    </data>
    <data name="output_embed" format="csv" label="UMAP embeddings" from_work_dir="embeddings.csv">
      <filter>embeddings</filter>
    </data>
  </outputs>

  <tests>
    <test>
      <param name="input_obj_file" value="find_cluster.h5"/>
      <param name="input_format" value="anndata"/>
      <param name="output_format" value="anndata"/>
      <param name="default" value="false"/>
      <param name="embeddings" value="true"/>
      <param name="seed" value="0"/>
      <param name="plot" value="true"/>
      <param name="color_by" value="louvain"/>
      <output name="output_h5" file="run_umap.h5" ftype="h5" compare="sim_size"/>
      <output name="output_png" file="run_umap.png" ftype="png" compare="sim_size"/>
      <output name="output_embed" file="run_umap.embeddings.csv" ftype="csv"/>
    </test>
  </tests>

  <help><![CDATA[
usage: scanpy-run-umap.py [options]

Run UMAP on data with neighborhood graph computed

optional arguments:
  -h, --help            show this help message and exit

  --debug               Print debug information.

  -i INPUT_OBJECT_FILE, --input-object-file INPUT_OBJECT_FILE
                        Path to anndata or loom file.

  -f {loom,anndata,auto-detect}, --input-format {loom,anndata,auto-detect}
                        Format for input object: loom/anndata/[auto-detect].

  -o OUTPUT_OBJECT_FILE, --output-object-file OUTPUT_OBJECT_FILE
                        File name in which to store serialized python object.

  -F {loom,anndata,auto-detect}, --output-format {loom,anndata,auto-detect}
                        Format for output object: loom/anndata/[auto-detect].

  --output-embeddings-file OUTPUT_EMBEDDINGS_FILE
                        File name in which to store a csv-format UMAP embeddings table with coordinates by
                        cell.

  --min-dist MIN_DIST   The effective minimum distance between embedded points. Default: 0.5

  --spread SPREAD       The effective scale of embedded points. Default: 1.0

  -n N_COMPONENTS, --n-components N_COMPONENTS
                        The number of dimensions of the embedding. Default: 2

  --maxiter MAXITER     The number of iterations of the optimisation. Default: None

  --alpha ALPHA         The initial learning rate for the embedding optimisation. Default: 1.0

  --gamma GAMMA         Weighting applied to negative samples in low dimensional embedding optimisation.
                        Default: 1.0

  --negative-sample-rate NEGATIVE_SAMPLE_RATE
                        The number of negative edge/1-simplex samples to use per positive edge/1-simplex
                        sample in optimising the low dimensional embedding. Default: 5

  --init-pos INIT_POS   How to initialise the low dimensional embedding. Choices are: any key for adata.obsm,
                        "paga", "spectral", or "random". Default: spectral

  -s RANDOM_SEED, --random-seed RANDOM_SEED
                        The seed used by the random number generator. Default: 0

  -a A                  More specific parameters controlling the embedding. If None, these values are set
                        automatically as determined by --min-dist and --spread. Default: None

  -b B                  More specific parameters controlling the embedding. If None, these values are set
                        automatically as determined by --min-dist and --spread. Default: None

  -P OUTPUT_PLOT, --output-plot OUTPUT_PLOT
                        Save plot in the specified file

  --color COLOR         String or list of strings. Default: []

  --use-raw             Use raw attribute of adata if present. Default: False

  --edges               Show edges. Default: False.

  --arrows              Show arrwos (requires to run rna_velocity() before). Default: False.

  --no-sort-order       For continuous annotations used as color parameter, by default plot data points with
                        higher values on top of others. Disable this behavior if set.

  --groups GROUPS       Restrict to a few categories in observation annotation.

  --projection {2d,3d}  Projection of plot. Default: 2d

  --components COMPONENTS
                        Components to plot. To plot all available components use "all". Default: "1,2"

  --palette PALETTE     Colors to use for plotting categorical annotation groups. Can be a valid
                        matplotlib.pyplot.colormap name. Default: None

  --frameoff            Do not draw a frame around the scatter plot. Draw by default.


]]></help>
  <expand macro="citations"/>
</tool>
