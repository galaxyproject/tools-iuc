<tool id="scanpy-read-10x" name="Scanpy Read10x" version="0.0.2">
  <macros>
    <import>scanpy_macros.xml</import>
  </macros>
  <expand macro="requirements"/>
  <command detect_errors="exit_code"><![CDATA[
ln -s "$matrix" matrix.mtx;
ln -s "$genes" genes.tsv;
ln -s "$barcodes" barcodes.tsv;
scanpy-read-10x.py -d . -o read_10x.h5 -F $output_format
]]></command>

  <inputs>
    <param name="matrix" type="data" format="txt"/>
    <param name="genes" type="data" format="tsv"/>
    <param name="barcodes" type="data" format="tsv"/>
    <expand macro="output_object_params"/>
  </inputs>

  <outputs>
    <data name="output_h5" format="h5" label="" from_work_dir="read_10x.h5"/>
  </outputs>

  <tests>
    <test>
      <param name="matrix" value="matrix.mtx"/>
      <param name="genes" value="genes.tsv"/>
      <param name="barcodes" value="barcodes.tsv"/>
      <param name="output_format" value="anndata"/>
      <output name="output_h5" file="read_10x.h5" ftype="h5" compare="sim_size"/>
    </test>
  </tests>

  <help><![CDATA[
usage: scanpy-read-10x.py [options]

optional arguments:
  -h, --help            show this help message and exit

  --debug               Print debug information.

  -d DATA_DIR, --data-dir DATA_DIR
                        Directory containing the matrix.mtx, genes.tsv, and
                        barcodes.tsv files provided by 10X.

  -o OUTPUT_OBJECT_FILE, --output-object-file OUTPUT_OBJECT_FILE
                        File name in which to store serialized python object.

  -F {loom,anndata,auto-detect}, --output-format {loom,anndata,auto-detect}
                        Format for output object: loom/anndata/[auto-detect].


]]></help>
  <expand macro="citations"/>
</tool>
