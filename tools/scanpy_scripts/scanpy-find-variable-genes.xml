<?xml version="1.0" encoding="utf-8"?>
<tool id="scanpy-find-variable-genes" name="Scanpy FindVariableGenes" version="0.0.2">
  <macros>
    <import>scanpy_macros.xml</import>
  </macros>
  <expand macro="requirements"/>
  <command detect_errors="exit_code"><![CDATA[
ln -s $input_obj_file input.h5;
scanpy-find-variable-genes.py -i input.h5
                              -f $input_format
                              -o output.h5
                              -F $output_format
                              --flavor $flavor
                              -b $n_bin
#if $parameters
#set pars = ','.join([str($p['name']) for $p in $parameters])
                              -p '${pars}'
#set mins = ','.join([str($p['min']) for $p in $parameters])
                              -l '${mins}'
#set maxs = ','.join([str($p['max']) for $p in $parameters])
                              -j '${maxs}'
#end if
#if $n_top_gene
                              -n $n_top_gene
#end if
]]></command>

  <inputs>
    <expand macro="input_object_params"/>
    <expand macro="output_object_params"/>

    <param name="flavor" type="select" label="Flavor of computing normalised dispersion" value="seurat">
    	<option value="seurat">Seurat</option>
    	<option value="cell_ranger">Cell-ranger</option>
    </param>

    <repeat name="parameters" title="Parameters used to find variable genes" min="1">
      <param name="name" type="select" label="Name of parameter to filter on">
    	<option value="mean">Mean of expression</option>
    	<option value="disp">Dispersion of expression</option>
      </param>
      <param name="min" type="float" label="Min value" value="0"/>
      <param name="max" type="float" label="Max value" value="1e9"/>
    </repeat>

    <param name="n_bin" type="integer" label="Number of bins for binning the mean expression" value="20"/>
    <param name="n_top_gene" type="integer" label="Number of top variable genes to keep" optional="true"/>
  </inputs>

  <outputs>
    <data name="output_h5" format="h5" label="" from_work_dir="output.h5"/>
  </outputs>

  <tests>
    <test>
      <param name="input_obj_file" value="normalise_data.h5"/>
      <param name="input_format" value="anndata"/>
      <param name="output_format" value="anndata"/>
      <param name="flavor" value="seurat"/>
      <param name="n_bin" value="20"/>
      <repeat name="parameters">
	<param name="name" value="mean"/>
	<param name="min" value="0.0125"/>
	<param name="max" value="3"/>
      </repeat>
      <repeat name="parameters">
	<param name="name" value="disp"/>
	<param name="min" value="0.5"/>
	<param name="max" value="1e9"/>
      </repeat>
      <output name="output_h5" file="find_variable_genes.h5" ftype="h5" compare="sim_size"/>
    </test>
  </tests>

  <help><![CDATA[
usage: scanpy-find-variable-genes.py [options]

optional arguments:
  -h, --help            show this help message and exit

  --debug               Print debug information.

  -i INPUT_OBJECT_FILE, --input-object-file INPUT_OBJECT_FILE
                        Path to anndata or loom file.

  -f {loom,anndata,auto-detect}, --input-format {loom,anndata,auto-detect}
                        Format for input object: loom/anndata/[auto-detect].

  -o OUTPUT_OBJECT_FILE, --output-object-file OUTPUT_OBJECT_FILE
                        File name in which to store serialized python object.

  -F {loom,anndata,auto-detect}, --output-format {loom,anndata,auto-detect}
                        Format for output object: loom/anndata/[auto-detect].

  -P OUTPUT_PLOT, --output-plot OUTPUT_PLOT
                        Save plot in the specified file

  --flavor {seurat,cell_ranger}
                        Choose the flavor for computing normalised dispersion. Default: seurat

  -p PARAMETER_NAMES, --parameter-names PARAMETER_NAMES
                        Parameters to subset on. Choose from ['mean', 'disp']

  -l LOW_THRESHOLDS, --low-thresholds LOW_THRESHOLDS
                        Low cutoffs for the parameters (default is -Inf).

  -j HIGH_THRESHOLDS, --high-thresholds HIGH_THRESHOLDS
                        High cutoffs for the parameters (default is Inf).

  -b N_BINS, --n-bins N_BINS
                        Number of bins for binning the mean gene expression. Normalisation is done with respect to each bin.
                        Default: 20

  -n N_TOP_GENES, --n-top-genes N_TOP_GENES
                        Number of highly variable genes to keep, ignoring --subset-parameters when set. Default: None


]]></help>
  <expand macro="citations"/>
</tool>
