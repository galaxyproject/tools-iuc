<tool id="commet" name="Commet" version="24.7.14+galaxy0" profile="@PROFILE@">
    <description>COmpare Multiple METagenomes</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <requirements>
        <requirement type="package" version="24.7.14">commet</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        #for $i, $set in enumerate($sets):
            echo "set${i}: ${ ','.join(['%s' % read for read in $set.reads]) }" >> commet_input_sets.txt &&
        #end for
        Commet.py
        -k ${k}
        -t ${t}
        -l ${l}
        -e ${e}
        #if str($options_advanced.options_advanced_selector) == "advanced":
            -m ${options_advanced.m}
            -n ${options_advanced.n}
        #end if
        commet_input_sets.txt
    ]]></command>
    <inputs>
        <repeat name="sets" title="Read sets" min="1">
            <param name="reads" type="data" multiple="true" format="fasta,fasta.gz,fastq,fastq.gz" label="Dataset" help="Accept fasta/fastq"/>
        </repeat>
        <param argument="-k" type="integer" label="Size of kmers" value="33" help="Set the length of used kmers." />
        <param argument="-t" type="integer" label="Mini shared kmers" value="2" help="Minimal number of shared kmers." />
        <param argument="-l" type="integer" label="Read mini length" value="66" help="Minimal length a read should have to be kept." />
        <param argument="-e" type="float" label="Mini Shannon index" value="0" min="0" max="2.32" help="Minimal Shannon index a read should have to be kept." />
        <conditional name="options_advanced">
            <param name="options_advanced_selector" type="select" label="Reads filter options" help="By default, all reads are kept with no Ns limitation">
                <option value="default" selected="true">default</option>
                <option value="advanced">advanced</option>
            </param>
            <when value="default" />
            <when value="advanced">
                <param argument="-m" type="integer" value="-1" label="Maximum number of selected reads in sets" help="Maximum number of selected reads in sets. If a set is composed by 3 read files, and this option = 600, then the first 200 reads from each read file will be treated. (-1 = any)" />
                <param argument="-n" type="integer" value="-1" label="Read maxi number of Ns" help="Maximal number of Ns a read should contain to be kept. (-1 = all)" />
            </when>
        </conditional>
        <param name="normalized_outputs" label="Generate normalized files" type="boolean" checked="true"/>
        <param name="plain_outputs" label="Generate plain files" type="boolean" checked="false"/>
        <param name="percentage_outputs" label="Generate percentage files" type="boolean" checked="false"/>
    </inputs>
    <outputs>
        <data format="csv" name="matrix_plain" from_work_dir="output_commet/matrix_plain.csv" label="Matrix plain with ${tool.name} on ${on_string}" >
            <filter>plain_outputs</filter>
        </data>
        <data format="csv" name="matrix_percentage" from_work_dir="output_commet/matrix_percentage.csv" label="Matrix percentage with ${tool.name} on ${on_string}" >
            <filter>percentage_outputs</filter>
        </data>
        <data format="csv" name="matrix_normalized" from_work_dir="output_commet/matrix_normalized.csv" label="Matrix normalized with ${tool.name} on ${on_string}" >
            <filter>normalized_outputs</filter>
        </data>
        <data format="png" name="dendrogram_normalized" from_work_dir="output_commet/dendrogram_normalized.png" label="Dendrogram ${tool.name} on ${on_string}" />
        <data format="png" name="heatmap_normalized" from_work_dir="output_commet/heatmap_normalized.png" label="Heatmap normalized with ${tool.name} on ${on_string}" >
            <filter>normalized_outputs</filter>
        </data>
        <data format="png" name="heatmap_percentage" from_work_dir="output_commet/heatmap_percentage.png" label="Heatmap percentage with ${tool.name} on ${on_string}" >
            <filter>percentage_outputs</filter>
        </data>
        <data format="png" name="heatmap_plain" from_work_dir="output_commet/heatmap_plain.png" label="Heatmap Plain with ${tool.name} on ${on_string}" >
            <filter>plain_outputs</filter>
        </data>
    </outputs>
    <tests>
        <test>
            <param name="input_type" value="list" />
            <repeat name="sets">
                <param name="reads" value="commet/A.fa.gz" ftype="fasta.gz" />
            </repeat>
            <repeat name="sets">
                <param name="reads" value="commet/B.fa.gz,commet/C.fa.gz" ftype="fasta.gz" />
            </repeat>
            <repeat name="sets">
                <param name="reads" value="commet/D.fa.gz" ftype="fasta.gz" />
            </repeat>
            <param name="plain_outputs" value="True"/>
            <output name="dendrogram_normalized" file="commet/dendrogram.png" compare="sim_size" delta="10000"/>
            <output name="matrix_plain" file="commet/matrix_plain.csv"/>
        </test>
    </tests>
    <help><![CDATA[

**Description**

COMMET (COmpare Multiple METagenomes”) provides a global similarity overview between all datasets of a large metagenomic project.

Directly from non-assembled reads, all against all comparisons are performed through an efficient indexing strategy. Then, results are stored as bit vectors, a compressed representation of read files, that can be used to further combine read subsets by common logical operations. Finally, COMMET computes a clusterization of metagenomic datasets, which is visualized by dendrogram and heatmaps.


-------

**Web site**

http://colibread.inria.fr/commet/

    ]]></help>
    <expand macro="citations">
        <citation type="doi">10.1186/1471-2105-13-S19-S10</citation>
    </expand>
</tool>
