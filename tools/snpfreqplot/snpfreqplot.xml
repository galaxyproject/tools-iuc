<tool id="snpfreqplot" name="SNP Frequency Plot" version="@VERSION@+galaxy@GALAXY_VERSION@" profile="20.09"
      license="GPL-3.0-or-later" >
    <description>Generates a heatmap of allele frequencies grouped by variant type for SnpEFF annotated SARS-CoV-2 data</description>
    <macros>
        <token name="@VERSION@">1.0</token>
        <token name="@GALAXY_VERSION@">0</token>
    </macros>
    <requirements>
        <requirement type="package" version="1.0.12">r-pheatmap</requirement>
        <requirement type="package" version="1.1_2">r-rcolorbrewer</requirement>
        <requirement type="package" version="1.3.0">r-tidyverse</requirement>
        <requirement type="package" version="1.36.0">bioconductor-variantannotation</requirement>
    </requirements>
    <edam_topics>
        <edam_topic>topic_0797</edam_topic>
        <edam_topic>topic_0092</edam_topic>
    </edam_topics>
    <edam_operations>
        <edam_operation>operation_3436</edam_operation>
    </edam_operations>
    <command detect_errors="exit_code"><![CDATA[
touch '$__tool_directory__/helperFunctions.R'
&& touch '$__tool_directory__/snpEffExtract.R'
&& touch '$__tool_directory__/heatmap_for_variants.R'
&& Rscript '$configscript'
    ]]>
    </command>
    <configfiles>
        <configfile name="configscript"><![CDATA[
## 1. Set Sample Inputs
##    ------------------
##    Create a dataframe of sample ids, filetypes, and filenames
##    from the input collection. At this point, the list could be
##    of mixed type (vcf and tabular), though maybe Galaxy
##    restricts that.
samples = list(ids = c(), exts= c(), files = c())
#for $i, $file in enumerate($sinputs):
samples\$ids = c(samples\$ids, '${file.element_identifier}')
samples\$exts = c(samples\$exts, '${file.extension}')
samples\$files = c(samples\$files, '${file}')
#end for
samples = data.frame(samples, stringsAsFactors=F)

## 2. Input Conversion (external script)
##    ----------------------------------
##    We source the input conversion script *after* the samples
##    have been populated, so that it performs an inplace replacement
##    of the vcf inputs with their converted tabular counterparts.
##
##    All samples are all tabular after this point
source('$__tool_directory__/helperFunctions.R')
source('$__tool_directory__/snpEffExtract.R')

## 3. Galaxy Params
##    --------------
##    Set the general script parameters from the UI
variant.frequency <- as.numeric( '$varfreq' )
brewer.color_gene_annotation <- as.character( '$advanced.color' )

#if str($clustering.do) == "TRUE":
pheat.clustering <- TRUE
pheat.clustering_method <- as.character( '$clustering.method' )
pheat.number_of_clusters <- as.integer( '$clustering.nclust' )
#else
pheat.clustering <- FALSE
#end if

cell.width = as.integer('$advanced.cellwidth')
cell.height = as.integer('$advanced.cellheight')
if (cell.width == 0 ){ cell.width = NA}
if (cell.height == 0 ){ cell.height = NA}

out.type = '$advanced.output_type'
#if str($advanced.output_type) == 'PDF'
out.file <- '$outpdf'
#else if str($advanced.output_type) == 'PNG'
out.file <- '$outpng'
#else if str($advanced.output_type) == 'SVG'
out.file <- '$outsvg'
#else if str($advanced.output_type) == 'TIFF'
out.file <- '$outtiff'
#else if str($advanced.output_type) == 'BMP'
out.file <- '$outbmp'
#else if str($advanced.output_type) == 'JPEG'
out.file <- '$outjpeg'
#else
#raise RuntimeError("No such output type")
#end if

## 4. Generate Heatmap (external script)
##    ----------------------------------
source('$__tool_directory__/heatmap_for_variants.R')

]]>
        </configfile>
    </configfiles>
    <inputs>
        <param name="sinputs" format="tabular,vcf" type="data" multiple="true"
               collection_type="list" label="Sample Inputs"
               help="The dataset names within the collection will be used as sample identifiers." />
        <param name="varfreq" type="float" min="0" max="1"
               value="0.1" label="Variant Frequency Threshold" />
        <section name="advanced" title="Image Properties" >
            <param name="output_type" type="select" label="Output Format" >
                <option value="PDF" selected="true" />
                <option value="PNG" />
                <option value="SVG" />
                <option value="TIFF" />
                <option value="BMP" />
                <option value="JPEG" />
            </param>
            <param name="cellwidth" label="Cell Width" type="integer"
                   min="0" value="0"
                   help="Individual Cell Width in points. If set to 0, then the values depend on the size of plotting window." />
            <param name="cellheight" label="Cell Height" type="integer"
                   min="0" value="0"
                   help="Individual Cell Height in points. If set to 0, then the values depend on the size of plotting window." />
            <param name="color" type="select" label="Color Gene Annotation" >
                <option value="Set1" />
                <option value="Set2" />
                <option value="Set3" selected="true" />
                <option value="Pastel2" />
                <option value="Pastel1" />
                <option value="Paired" />
                <option value="Dark2" />
                <option value="Accent" />
                <option value="YlOrRd" />
                <option value="YlOrBr" />
                <option value="YlGnBu" />
                <option value="YlGn" />
                <option value="Reds" />
                <option value="RdPu" />
                <option value="Purples" />
                <option value="PuRd" />
                <option value="PuBuGn" />
                <option value="PuBu" />
                <option value="OrRd" />
                <option value="Oranges" />
                <option value="Greys" />
                <option value="Greens" />
                <option value="GnBu" />
                <option value="BuPu" />
                <option value="BuGn" />
                <option value="Blues" />
                <option value="Spectral" />
                <option value="RdYlGn" />
                <option value="RdYlBu" />
                <option value="RdGy" />
                <option value="RdBu" />
                <option value="PuOr" />
                <option value="PRGn" />
                <option value="PiYG" />
                <option value="BrBG" />
            </param>
        </section>
        <conditional name="clustering">
            <param name="do" type="select" label="Perform Clustering?" >
                <option value="TRUE">Yes</option>
                <option value="FALSE" selected="true">No</option>
            </param>
            <when value="TRUE" >
                <param name="nclust" type="integer"
                       min="1" value="5" label="Number of Cluster" />
                <param name="method" type="select" label="Clustering Method" >
                    <option value="ward.D" />
                    <option value="ward.D2" selected="true" />
                    <option value="single" />
                    <option value="complete" />
                    <option value="average" >average (UPGMA)</option>
                    <option value="mcquitty" >mcquitty (WPGMA)</option>
                    <option value="median" >median (WPGMC)</option>
                    <option value="centroid" >centroid (UPGMC)</option>
                </param>
            </when>
            <when value="FALSE" />
        </conditional>
    </inputs>
    <outputs>
        <!-- <data name="outfile" format="${advanced.output_type}" -->
        <!--       label="SNP Frequency Plot on ${on_string}: ${advanced.output_type}" />  -->
        <data name="outpdf" format="pdf" label="SNP Frequency Plot on ${on_string}: PDF" >
            <filter>advanced["output_type"] == "PDF"</filter>
        </data>
        <data name="outpng" format="png" label="SNP Frequency Plot on ${on_string}: PNG" >
            <filter>advanced["output_type"] == "PNG"</filter>
        </data>
        <data name="outsvg" format="svg" label="SNP Frequency Plot on ${on_string}: SVG" >
            <filter>advanced["output_type"] == "SVG"</filter>
        </data>
        <data name="outtiff" format="tiff" label="SNP Frequency Plot on ${on_string}: TIFF" >
            <filter>advanced["output_type"] == "TIFF"</filter>
        </data>
        <data name="outbmp" format="bmp" label="SNP Frequency Plot on ${on_string}: BMP" >
            <filter>advanced["output_type"] == "BMP"</filter>
        </data>
        <data name="outjpeg" format="jpeg" label="SNP Frequency Plot on ${on_string}: JPEG" >
            <filter>advanced["output_type"] == "JPEG"</filter>
        </data>
    </outputs>
    <tests>
        <test expect_num_outputs="1">
            <!-- defaults, tabular inputs -->
            <param name="sinputs" ftype="tabular" >
                <collection type="list">
                    <element name="436" value="input436.tabular" />
                    <element name="437" value="input437.tabular" />
                    <element name="438" value="input438_date-01-06-2007.tabular" />
                    <element name="439" value="input439_date-02-06-2007.tabular" />
                    <element name="440" value="input440_date-01-07-2007.tabular" />
                    <element name="441" value="input441_date-20-05-2007.tabular" />
                    <element name="442" value="input442_date-20-05-2006.tabular" />
                    <element name="443" value="input443.tabular" />
                    <element name="444" value="input444.tabular" />
                </collection>
            </param>
            <output name="outpdf" value="heatmap.default.pdf" compare="sim_size" delta="250" />
        </test>
        <test expect_num_outputs="1">
            <!-- small data, non-numeric IDS, image options -->
            <param name="sinputs" ftype="tabular" >
                <collection type="list">
                    <element name="MyID1" value="input436.tabular" />
                    <element name="MyID2" value="input437.tabular" />
                    <element name="MyID3" value="input443.tabular" />
                    <element name="MyID4" value="input444.tabular" />
                </collection>
            </param>
            <param name="varfreq" value="0.5" />
            <section name="advanced" >
                <param name="multiplier_width" value="0.8" />
                <param name="multiplier_height" value="1" />
                <param name="color" value="Spectral" />
            </section>
            <output name="outpdf" value="heatmap.imageopts.pdf" compare="sim_size" delta="250" />
        </test>
        <test expect_num_outputs="1">
            <!-- clustering defaults -->
            <param name="sinputs" ftype="tabular" >
                <collection type="list">
                    <element name="438" value="input438_date-01-06-2007.tabular" />
                    <element name="439" value="input439_date-02-06-2007.tabular" />
                    <element name="440" value="input440_date-01-07-2007.tabular" />
                    <element name="441" value="input441_date-20-05-2007.tabular" />
                    <element name="442" value="input442_date-20-05-2006.tabular" />
                </collection>
            </param>
            <conditional name="clustering">
                <param name="do" value="TRUE" />
            </conditional>
            <section name="advanced" >
                <param name="color" value="Greys" />
                <param name="output_type" value="SVG" />
            </section>
            <output name="outsvg" value="heatmap.clustering.svg" compare="sim_size" delta="500" />
        </test>
        <test expect_num_outputs="1">
            <!-- clustering extras, mixed alphanumeric labels -->
            <param name="sinputs" ftype="tabular" >
                <collection type="list">
                    <element name="labelA" value="input436.tabular" />
                    <element name="labelB" value="input443.tabular" />
                    <element name="438" value="input438_date-01-06-2007.tabular" />
                    <element name="444" value="input444.tabular" />
                </collection>
            </param>
            <conditional name="clustering">
                <param name="do" value="TRUE" />
                <param name="nclust" value="2" />
                <param name="method" value="centroid" />
            </conditional>
            <section name="advanced" >
                <param name="color" value="Purples" />
                <param name="multiplier_width" value="0.4" />
                <param name="output_type" value="PNG" />
            </section>
            <output name="outpng" value="heatmap.clustering2.png" compare="sim_size" delta="250" />
        </test>
        <test expect_num_outputs="1">
            <!-- vcf test -->
            <param name="sinputs" ftype="vcf" >
                <collection type="list">
                    <element name="123" value="snpeff.123.vcf" />
                    <element name="456" value="snpeff.456.vcf" />
                    <element name="789" value="snpeff.789.vcf" />
                </collection>
            </param>
            <section name="advanced" >
                <param name="color" value="PuBuGn" />
                <param name="multiplier_width" value="0.4" />
                <param name="output_type" value="PNG" />
            </section>
            <output name="outpng" value="heatmap.clustering_vcf.png" compare="sim_size" delta="250" />
        </test>
    </tests>
    <help><![CDATA[
TODO: Fill me with info
    ]]></help>
    <citations>
        <!-- <citation type="doi"></citation> -->
    </citations>
</tool>
