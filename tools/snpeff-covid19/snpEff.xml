<tool id="snpeff_sars_cov_2" name="SnpEff eff:" version="@WRAPPER_VERSION@">
    <description> annotate variants for SARS-CoV-2</description>
    <macros>
        <import>snpEff_macros.xml</import>
    </macros>
    <requirements>
        <expand macro="requirement" />
    </requirements>
    <expand macro="stdio" />
    <expand macro="version_command" />
    <command><![CDATA[
        snpEff @JAVA_OPTIONS@ eff
        -i $inputFormat -o ${outputConditional.outputFormat} -upDownStreamLen $udLength
        #if $annotations and str($annotations) != '':
          #echo " "
          #echo ' '.join(str($annotations).split(','))
        #end if
        #if $filterOut and str($filterOut) != '':
          #echo " "
          #echo ' '.join(str($filterOut).split(','))
        #end if
        #if $filter.specificEffects == 'yes' and $filter.effects:
          #for $eff in str($filter.effects).split(','):
            -no $eff
          #end for
        #end if
        #if $transcripts
          -onlyTr '$transcripts'
        #end if
        #if $intervals     ### fix this for multiple dataset input
          -interval '$intervals'
        #end if
        #if $statsFile:
          -stats '$statsFile'
        #end if
        #if $csvStats:
            -csvStats '$csvFile'
        #end if
        #if str($offset) != 'default':
          ${offset}
        #end if
        #if str($chr).strip() != '':
          -chr '$chr'
        #end if
          $noLog

        $genome_version

        '$input' > '$snpeff_output'

        #if $statsFile:
            &&
            #import os
            #if $csvStats:
                #set $genes_file = str($csvFile) + '.genes.txt'
            #else
                #set $genes_file = str($statsFile) + '.genes.txt'
            #end if
            #set $genes_file_name = os.path.split($genes_file)[-1]
            mkdir '$statsFile.files_path' &&
            mv '$genes_file' '#echo os.path.join($statsFile.files_path, $genes_file_name)#'
        #end if
        #if $outputConditional.outputFormat == 'gatk' and $outputConditional.gatk_v1
          &&
          ## Replace real SnpEff version with 2.0.5 to prevent this GATK 1.x error: "The version of SnpEff used to generate the SnpEff input file (x.x) is not currently supported by the GATK. Supported versions are: [2.0.5]"
          sed -i.bak -e 's/^\#\#SnpEffVersion="\(\S*\s\)/\#\#SnpEffVersion="2.0.5 - real is \1/' '$snpeff_output'
        #end if
    ]]></command>
    <inputs>
        <param name="input" type="data" format="vcf,bed" label="Sequence changes (SNPs, MNPs, InDels)"/>

        <param name="inputFormat" type="select" label="Input format">
            <option value="vcf" selected="true">VCF</option>
            <option value="bed">BED (Deprecated)</option>
        </param>

        <param name="genome_version" type="select" label="Select an annotated Coronavirus genome">
            <option value="NC_045512.2">NC_045512.2: COVID19 Severe acute respiratory syndrome coronavirus 2 isolate Wuhan-Hu-1</option>
            <option value="DQ648856.1">DQ648856.1: Bat coronavirus (BtCoV/273/2005), complete genome.</option>
            <option value="DQ648857.1">DQ648857.1: Bat coronavirus (BtCoV/279/2005), complete genome.</option>
            <option value="JX993988.1">JX993988.1: Bat coronavirus Cp/Yunnan2011, complete genome.</option>
            <option value="MN996532.1">MN996532.1: Bat coronavirus RaTG13, complete genome.</option>
            <option value="JX993987.1">JX993987.1: Bat coronavirus Rp/Shaanxi2011, complete genome.</option>
            <option value="GQ153545.1">GQ153545.1: Bat SARS coronavirus HKU3-10, complete genome.</option>
            <option value="GQ153546.1">GQ153546.1: Bat SARS coronavirus HKU3-11, complete genome.</option>
            <option value="GQ153547.1">GQ153547.1: Bat SARS coronavirus HKU3-12, complete genome.</option>
            <option value="DQ022305.2">DQ022305.2: Bat SARS coronavirus HKU3-1, complete genome.</option>
            <option value="DQ084199.1">DQ084199.1: bat SARS coronavirus HKU3-2, complete genome.</option>
            <option value="DQ084200.1">DQ084200.1: bat SARS coronavirus HKU3-3, complete genome.</option>
            <option value="GQ153539.1">GQ153539.1: Bat SARS coronavirus HKU3-4, complete genome.</option>
            <option value="GQ153540.1">GQ153540.1: Bat SARS coronavirus HKU3-5, complete genome.</option>
            <option value="GQ153541.1">GQ153541.1: Bat SARS coronavirus HKU3-6, complete genome.</option>
            <option value="GQ153542.1">GQ153542.1: Bat SARS coronavirus HKU3-7, complete genome.</option>
            <option value="GQ153543.1">GQ153543.1: Bat SARS coronavirus HKU3-8, complete genome.</option>
            <option value="GQ153544.1">GQ153544.1: Bat SARS coronavirus HKU3-9, complete genome.</option>
            <option value="FJ588686.1">FJ588686.1: Bat SARS CoV Rs672/2006, complete genome.</option>
            <option value="KC881006.1">KC881006.1: Bat SARS-like coronavirus Rs3367, complete genome.</option>
            <option value="KC881005.1">KC881005.1: Bat SARS-like coronavirus RsSHC014, complete genome.</option>
            <option value="KF367457.1">KF367457.1: Bat SARS-like coronavirus WIV1, complete genome.</option>
            <option value="KP886808.1">KP886808.1: Bat SARS-like coronavirus YNLF_31C, complete genome.</option>
            <option value="KP886809.1">KP886809.1: Bat SARS-like coronavirus YNLF_34C, complete genome.</option>
            <option value="KJ473812.1">KJ473812.1: BtRf-BetaCoV/HeB2013, complete genome.</option>
            <option value="KJ473811.1">KJ473811.1: BtRf-BetaCoV/JL2012, complete genome.</option>
            <option value="KJ473813.1">KJ473813.1: BtRf-BetaCoV/SX2013, complete genome.</option>
            <option value="KJ473815.1">KJ473815.1: BtRs-BetaCoV/GX2013, complete genome.</option>
            <option value="KJ473814.1">KJ473814.1: BtRs-BetaCoV/HuB2013, complete genome.</option>
            <option value="KJ473816.1">KJ473816.1: BtRs-BetaCoV/YN2013, complete genome.</option>
            <option value="KF569996.1">KF569996.1: Rhinolophus affinis coronavirus isolate LYRa11, complete genome.</option>
            <option value="AY687354.1">AY687354.1: SARS coronavirus A001 spike glycoprotein gene, complete cds.</option>
            <option value="AY687355.1">AY687355.1: SARS coronavirus A013 spike glycoprotein gene, complete cds.</option>
            <option value="AY687356.1">AY687356.1: SARS coronavirus A021 spike glycoprotein gene, complete cds.</option>
            <option value="AY686863.1">AY686863.1: SARS coronavirus A022, complete genome.</option>
            <option value="AY687357.1">AY687357.1: SARS coronavirus A030 spike glycoprotein gene, complete cds.</option>
            <option value="AY687358.1">AY687358.1: SARS coronavirus A031 spike glycoprotein gene, complete cds.</option>
            <option value="AY427439.1">AY427439.1: SARS coronavirus AS, complete genome.</option>
            <option value="AY687359.1">AY687359.1: SARS coronavirus B012 spike glycoprotein gene, complete cds.</option>
            <option value="AY687360.1">AY687360.1: SARS coronavirus B024 spike glycoprotein gene, complete cds.</option>
            <option value="AY687361.1">AY687361.1: SARS coronavirus B029 spike glycoprotein gene, complete cds.</option>
            <option value="AY687362.1">AY687362.1: SARS coronavirus B033 spike glycoprotein gene, complete cds.</option>
            <option value="AY686864.1">AY686864.1: SARS coronavirus B039, complete genome.</option>
            <option value="AY687364.1">AY687364.1: SARS coronavirus B040 spike glycoprotein gene, complete cds.</option>
            <option value="AY278488.2">AY278488.2: SARS coronavirus BJ01, complete genome.</option>
            <option value="AY279354.2">AY279354.2: SARS coronavirus BJ04, complete genome.</option>
            <option value="AY864805.1">AY864805.1: SARS coronavirus BJ162, complete genome.</option>
            <option value="EU371564.1">EU371564.1: SARS coronavirus BJ182-12, complete genome.</option>
            <option value="EU371562.1">EU371562.1: SARS coronavirus BJ182-4, complete genome.</option>
            <option value="EU371563.1">EU371563.1: SARS coronavirus BJ182-8, complete genome.</option>
            <option value="EU371560.1">EU371560.1: SARS coronavirus BJ182a, complete genome.</option>
            <option value="EU371561.1">EU371561.1: SARS coronavirus BJ182b, complete genome.</option>
            <option value="AY864806.1">AY864806.1: SARS coronavirus BJ202, complete genome.</option>
            <option value="AY340092.1">AY340092.1: SARS coronavirus BJ2232 RNA polymerase gene, partial cds.</option>
            <option value="AY714217.1">AY714217.1: SARS Coronavirus CDC#200301157, complete genome.</option>
            <option value="AY572034.1">AY572034.1: SARS coronavirus civet007, complete genome.</option>
            <option value="AY572035.1">AY572035.1: SARS coronavirus civet010, complete genome.</option>
            <option value="AY572038.1">AY572038.1: SARS coronavirus civet020, complete genome.</option>
            <option value="AY345986.1">AY345986.1: SARS coronavirus CUHK-AG01, complete genome.</option>
            <option value="AY345987.1">AY345987.1: SARS coronavirus CUHK-AG02, complete genome.</option>
            <option value="AY345988.1">AY345988.1: SARS coronavirus CUHK-AG03, complete genome.</option>
            <option value="AY282752.2">AY282752.2: SARS coronavirus CUHK-Su10, complete genome.</option>
            <option value="AY278554.2">AY278554.2: SARS coronavirus CUHK-W1, complete genome.</option>
            <option value="AY310120.1">AY310120.1: SARS coronavirus FRA, complete genome.</option>
            <option value="AY278489.2">AY278489.2: SARS coronavirus GD01, complete genome.</option>
            <option value="AY313906.1">AY313906.1: SARS coronavirus GD69, complete genome.</option>
            <option value="DQ640652.1">DQ640652.1: SARS coronavirus GDH-BJH01, complete genome.</option>
            <option value="AY390556.1">AY390556.1: SARS coronavirus GZ02, complete genome.</option>
            <option value="AY568539.1">AY568539.1: SARS coronavirus GZ0401, complete genome.</option>
            <option value="AY613947.1">AY613947.1: SARS coronavirus GZ0402, complete genome.</option>
            <option value="AY304495.1">AY304495.1: SARS coronavirus GZ50, complete genome.</option>
            <option value="AY394978.1">AY394978.1: SARS coronavirus GZ-B, complete genome.</option>
            <option value="AY394979.1">AY394979.1: SARS coronavirus GZ-C, complete genome.</option>
            <option value="AY515512.1">AY515512.1: SARS coronavirus HC/SZ/61/03, complete genome.</option>
            <option value="JQ316196.1">JQ316196.1: SARS coronavirus HKU-39849 isolate UOB, complete genome.</option>
            <option value="AY323977.2">AY323977.2: SARS coronavirus HSR 1, complete genome.</option>
            <option value="AY595412.1">AY595412.1: SARS coronavirus LLJ-2004, complete genome.</option>
            <option value="AY508724.1">AY508724.1: SARS coronavirus NS-1, complete genome.</option>
            <option value="FJ882963.1">FJ882963.1: SARS coronavirus P2, complete genome.</option>
            <option value="AY350750.1">AY350750.1: SARS coronavirus PUMC01, complete genome.</option>
            <option value="AY357075.1">AY357075.1: SARS coronavirus PUMC02, complete genome.</option>
            <option value="AY357076.1">AY357076.1: SARS coronavirus PUMC03, complete genome.</option>
            <option value="AY463059.1">AY463059.1: SARS coronavirus ShanghaiQXC1, complete genome.</option>
            <option value="AY463060.1">AY463060.1: SARS coronavirus ShanghaiQXC2, complete genome.</option>
            <option value="AY485277.1">AY485277.1: SARS coronavirus Sino1-11, complete genome.</option>
            <option value="AY485278.1">AY485278.1: SARS coronavirus Sino3-11, complete genome.</option>
            <option value="AY304488.1">AY304488.1: SARS coronavirus SZ16, complete genome.</option>
            <option value="AY304486.1">AY304486.1: SARS coronavirus SZ3, complete genome.</option>
            <option value="AY338174.1">AY338174.1: SARS coronavirus Taiwan TC1, complete genome.</option>
            <option value="AY338175.1">AY338175.1: SARS coronavirus Taiwan TC2, complete genome.</option>
            <option value="AY348314.1">AY348314.1: SARS coronavirus Taiwan TC3, complete genome.</option>
            <option value="AY654624.1">AY654624.1: SARS coronavirus TJF, complete genome.</option>
            <option value="AY502923.1">AY502923.1: SARS coronavirus TW10, complete genome.</option>
            <option value="AY502924.1">AY502924.1: SARS coronavirus TW11, complete genome.</option>
            <option value="AY291451.1">AY291451.1: SARS coronavirus TW1, complete genome.</option>
            <option value="AY502925.1">AY502925.1: SARS coronavirus TW2, complete genome.</option>
            <option value="AY502926.1">AY502926.1: SARS coronavirus TW3, complete genome.</option>
            <option value="AY502927.1">AY502927.1: SARS coronavirus TW4, complete genome.</option>
            <option value="AY502928.1">AY502928.1: SARS coronavirus TW5, complete genome.</option>
            <option value="AY502929.1">AY502929.1: SARS coronavirus TW6, complete genome.</option>
            <option value="AY502930.1">AY502930.1: SARS coronavirus TW7, complete genome.</option>
            <option value="AY502931.1">AY502931.1: SARS coronavirus TW8, complete genome.</option>
            <option value="AY502932.1">AY502932.1: SARS coronavirus TW9, complete genome.</option>
            <option value="AP006557.1">AP006557.1: SARS coronavirus TWH genomic RNA, complete genome.</option>
            <option value="AP006558.1">AP006558.1: SARS coronavirus TWJ genomic RNA, complete genome.</option>
            <option value="AP006559.1">AP006559.1: SARS coronavirus TWK genomic RNA, complete genome.</option>
            <option value="AP006560.1">AP006560.1: SARS coronavirus TWS genomic RNA, complete genome.</option>
            <option value="AP006561.1">AP006561.1: SARS coronavirus TWY genomic RNA, complete genome.</option>
            <option value="AY278741.1">AY278741.1: SARS coronavirus Urbani, complete genome.</option>
            <option value="MK062181.1">MK062181.1: SARS coronavirus Urbani isolate icSARS-C3, complete genome.</option>
            <option value="MK062182.1">MK062182.1: SARS coronavirus Urbani isolate icSARS-C3-MA, complete genome.</option>
            <option value="MK062183.1">MK062183.1: SARS coronavirus Urbani isolate icSARS-C7, complete genome.</option>
            <option value="MK062184.1">MK062184.1: SARS coronavirus Urbani isolate icSARS-C7-MA, complete genome.</option>
            <option value="MK062179.1">MK062179.1: SARS coronavirus Urbani isolate icSARS, complete genome.</option>
            <option value="MK062180.1">MK062180.1: SARS coronavirus Urbani isolate icSARS-MA, complete genome.</option>
            <option value="AY772062.1">AY772062.1: SARS coronavirus WH20, complete genome.</option>
            <option value="EU371559.1">EU371559.1: SARS coronavirus ZJ02, complete genome.</option>
            <option value="DQ182595.1">DQ182595.1: SARS coronavirus ZJ0301 from China, complete genome.</option>
        </param>

        <conditional name="outputConditional">
            <param name="outputFormat" type="select" label="Output format">
                <option value="vcf" selected="true">VCF (only if input is VCF)</option>
                <option value="gatk">GATK-compatible VCF (only if input is VCF)</option>
                <option value="bed">BED</option>
                <option value="bedAnn">BED annotations</option>
            </param>
            <when value="vcf" />
            <when value="gatk">
                <param name="gatk_v1" type="boolean" checked="true" label="Compatible with GATK 1.x" />
            </when>
            <when value="bed" />
            <when value="bedAnn" />
        </conditional>
        <param name="csvStats" type="boolean" truevalue="-csvStats" falsevalue="" checked="false" label="Create CSV report, useful for downstream analysis (-csvStats)" />

        <param name="udLength" argument="-ud" type="select" label="Upstream / Downstream length">
            <option value="0" selected="true">No upstream / downstream intervals (0 bases)</option>
            <option value="10">10 bases</option>
            <option value="50">50 bases</option>
            <option value="100">100 bases</option>
            <option value="200">200 bases</option>
            <option value="500">500 bases</option>
            <option value="1000">1000 bases</option>
            <option value="2000">2000 bases</option>
            <option value="5000">5000 bases</option>
        </param>

        <param name="annotations" type="select" display="checkboxes" multiple="true" label="Annotation options">
            <option value="-formatEff">Use 'EFF' field compatible with older versions (instead of 'ANN')</option>
            <option value="-classic">Use Classic Effect names and amino acid variant annotations (NON_SYNONYMOUS_CODING vs missense_variant and G180R vs p.Gly180Arg/c.538G>C)</option>
            <option value="-sequenceOntology">Override classic and use Sequence Ontolgy terms for effects (missense_variant vs NON_SYNONYMOUS_CODING)</option>
            <option value="-hgvs">Override classic and use HGVS annotations for amino acid annotations (p.Gly180Arg/c.538G>C vs G180R)</option>
            <option value="-hgvsOld">Old notation style notation: E.g. 'c.G123T' instead of 'c.123G>T' and 'X' instead of '*'</option>
            <option value="-hgvs1LetterAa">Use one letter Amino acid codes in HGVS notation. E.g. p.R47G instead of p.Arg47Gly</option>
            <option value="-hgvsTrId">Use transcript ID in HGVS notation. E.g. ENST00000252100:c.914C>G instead of c.914C>G</option>
            <option value="-noShiftHgvs">Do not shift variants according to HGVS notation (most 3prime end)</option>
            <option value="-noHgvs">Do not add HGVS annotations</option>
            <option value="-canon">Only use canonical transcripts</option>
            <option value="-onlyProtein">Only use protein coding transcripts</option>
            <option value="-geneId">Use gene ID instead of gene name (VCF output)</option>
            <option value="-noExpandIUB">Disable IUB code expansion in input variants</option>
            <option value="-oicr">Add OICR tag in VCF file</option>
            <option value="-noLof">Do not add LOF and NMD annotations</option>
            <option value="-noInteraction">Disable interaction annotations</option>
        </param>
        <!-- -cancerSamples <file>           : Two column TXT file defining 'oringinal \t derived' samples. -->
        <param name="intervals" argument="-interval" type="data" format="bed" optional="true" label="Use custom interval file for annotation" />
        <param name="transcripts" type="data" format="tabular" optional="true" label="Only use the transcripts in this file" help="Format is one transcript ID per line"/>
        <param name="filterOut" type="select" display="checkboxes" multiple="true" label="Filter output">
            <option value="-no-downstream">Do not show DOWNSTREAM changes</option>
            <option value="-no-intergenic">Do not show INTERGENIC changes</option>
            <option value="-no-upstream">Do not show UPSTREAM changes</option>
            <option value="-no-utr">Do not show 5_PRIME_UTR or 3_PRIME_UTR changes</option>
        </param>
        <conditional name="filter">
            <param name="specificEffects" type="select" label="Filter out specific Effects">
                <option value="no">No</option>
                <option value="yes">Yes</option>
            </param>
            <when value="no"/>
            <when value="yes">
                <param name="effects" type="select" display="checkboxes" multiple="true" label="Filter output: do not report these Effects">
                    <option value="CDS">CDS  (coding_sequence_variant) The variant hits a CDS.  MODIFIER</option>
                    <option value="CHROMOSOME_LARGE_DELETION">CHROMOSOME_LARGE_DELETION  (chromosome) A large parte (over 1%) of the chromosome was deleted.  HIGH</option>
                    <option value="CODON_CHANGE">CODON_CHANGE  (coding_sequence_variant) One or many codons are changed e.g.: An MNP of size multiple of 3  MODERATE</option>
                    <option value="CODON_INSERTION">CODON_INSERTION  (inframe_insertion) One or many codons are inserted e.g.: An insert multiple of three in a codon boundary  MODERATE</option>
                    <option value="CODON_CHANGE_PLUS_CODON_INSERTION">CODON_CHANGE_PLUS_CODON_INSERTION  (disruptive_inframe_insertion) One codon is changed and one or many codons are inserted e.g.: An insert of size multiple of three, not at codon boundary  MODERATE</option>
                    <option value="CODON_DELETION">CODON_DELETION  (inframe_deletion) One or many codons are deleted e.g.: A deletion multiple of three at codon boundary  MODERATE</option>
                    <option value="CODON_CHANGE_PLUS_CODON_DELETION">CODON_CHANGE_PLUS_CODON_DELETION  (disruptive_inframe_deletion) One codon is changed and one or more codons are deleted e.g.: A deletion of size multiple of three, not at codon boundary  MODERATE</option>
                    <option value="DOWNSTREAM">DOWNSTREAM  (downstream_gene_variant) Downstream of a gene (default length: 5K bases)  MODIFIER</option>
                    <option value="EXON">EXON  (exon_variant) The variant hits an exon (from a non-coding transcript) or a retained intron.  MODIFIER</option>
                    <option value="EXON_DELETED">EXON_DELETED  (exon_loss_variant) A deletion removes the whole exon.  HIGH</option>
                    <option value="FRAME_SHIFT">FRAME_SHIFT  (frameshift_variant) Insertion or deletion causes a frame shift e.g.: An indel size is not multple of 3  HIGH</option>
                    <option value="GENE">GENE  (gene_variant) The variant hits a gene.  MODIFIER</option>
                    <option value="INTERGENIC">INTERGENIC  (intergenic_region) The variant is in an intergenic region  MODIFIER</option>
                    <option value="INTERGENIC_CONSERVED">INTERGENIC_CONSERVED  (conserved_intergenic_variant) The variant is in a highly conserved intergenic region  MODIFIER</option>
                    <option value="INTRAGENIC">INTRAGENIC  (intragenic_variant) The variant hits a gene, but no transcripts within the gene  MODIFIER</option>
                    <option value="INTRON">INTRON  (intron_variant) Variant hits and intron. Technically, hits no exon in the transcript.  MODIFIER</option>
                    <option value="INTRON_CONSERVED">INTRON_CONSERVED  (conserved_intron_variant) The variant is in a highly conserved intronic region  MODIFIER</option>
                    <option value="MICRO_RNA">MICRO_RNA  (miRNA) Variant affects an miRNA  MODIFIER</option>
                    <option value="NON_SYNONYMOUS_CODING">NON_SYNONYMOUS_CODING  (missense_variant) Variant causes a codon that produces a different amino acid e.g.: Tgg/Cgg, W/R  MODERATE</option>
                    <option value="NON_SYNONYMOUS_START">NON_SYNONYMOUS_START  (initiator_codon_variant) Variant causes start codon to be mutated into another start codon (the new codon produces a different AA).  e.g.: Atg/Ctg, M/L (ATG and CTG can be START codons)  LOW</option>
                    <option value="NON_SYNONYMOUS_STOP">NON_SYNONYMOUS_STOP  (stop_retained_variant) Variant causes stop codon to be mutated into another stop codon (the new codon produces a different AA).  e.g.: Atg/Ctg, M/L (ATG and CTG can be START codons)  LOW</option>
                    <option value="RARE_AMINO_ACID">RARE_AMINO_ACID  (rare_amino_acid_variant) The variant hits a rare amino acid thus is likely to produce protein loss of function  HIGH</option>
                    <option value="SPLICE_SITE_ACCEPTOR">SPLICE_SITE_ACCEPTOR  (splice_acceptor_variant) The variant hits a splice acceptor site (defined as two bases before exon start, except for the first exon).  HIGH</option>
                    <option value="SPLICE_SITE_DONOR">SPLICE_SITE_DONOR  (splice_donor_variant) The variant hits a Splice donor site (defined as two bases after coding exon end, except for the last exon).  HIGH</option>
                    <option value="SPLICE_SITE_REGION">SPLICE_SITE_REGION  (splice_region_variant) A sequence variant in which a change has occurred within the region of the splice site, either within 1-3 bases of the exon or 3-8 bases of the intron.  LOW</option>
                    <option value="SPLICE_SITE_BRANCH">SPLICE_SITE_BRANCH  (splice_region_variant) A varaint affective putative (Lariat) branch point, located in the intron.  LOW</option>
                    <option value="SPLICE_SITE_BRANCH_U12">SPLICE_SITE_BRANCH_U12  (splice_region_variant) A varaint affective putative (Lariat) branch point from U12 splicing machinery, located in the intron.  MODERATE</option>
                    <option value="STOP_LOST">STOP_LOST  (stop_lost) Variant causes stop codon to be mutated into a non-stop codon e.g.: Tga/Cga, */R  HIGH</option>
                    <option value="START_GAINED">START_GAINED  (5_prime_UTR_premature start_codon_gain_variant) A variant in 5'UTR region produces a three base sequence that can be a START codon.  LOW</option>
                    <option value="START_LOST">START_LOST  (start_lost) Variant causes start codon to be mutated into a non-start codon.  e.g.: aTg/aGg, M/R  HIGH</option>
                    <option value="STOP_GAINED">STOP_GAINED  (stop_gained) Variant causes a STOP codon e.g.: Cag/Tag, Q/*  HIGH</option>
                    <option value="SYNONYMOUS_CODING">SYNONYMOUS_CODING  (synonymous_variant) Variant causes a codon that produces the same amino acid e.g.: Ttg/Ctg, L/L  LOW</option>
                    <option value="SYNONYMOUS_START">SYNONYMOUS_START  (start_retained) Variant causes start codon to be mutated into another start codon.  e.g.: Ttg/Ctg, L/L (TTG and CTG can be START codons)  LOW</option>
                    <option value="SYNONYMOUS_STOP">SYNONYMOUS_STOP  (stop_retained_variant) Variant causes stop codon to be mutated into another stop codon.  e.g.: taA/taG, */*  LOW</option>
                    <option value="TRANSCRIPT">TRANSCRIPT  (transcript_variant) The variant hits a transcript.  MODIFIER</option>
                    <option value="REGULATION">REGULATION  (regulatory_region_variant) The variant hits a known regulatory feature (non-coding).  MODIFIER</option>
                    <option value="UPSTREAM">UPSTREAM  (upstream_gene_variant) Upstream of a gene (default length: 5K bases)  MODIFIER</option>
                    <option value="UTR_3_PRIME">UTR_3_PRIME  (3_prime_UTR_variant) Variant hits 3'UTR region  MODIFIER</option>
                    <option value="UTR_3_DELETED">UTR_3_DELETED  (3_prime_UTR_truncation + exon_loss) The variant deletes an exon which is in the 3'UTR of the transcript  MODERATE</option>
                    <option value="UTR_5_PRIME">UTR_5_PRIME  (5_prime_UTR_variant) Variant hits 5'UTR region  MODIFIER</option>
                    <option value="UTR_5_DELETED">UTR_5_DELETED  (5_prime_UTR_truncation + exon_loss_variant) The variant deletes an exon which is in the 5'UTR of the transcript  MODERATE</option>
                </param>
            </when>
        </conditional>

        <param name="offset" type="select" display="radio" label="Chromosomal position">
            <option value="default" selected="true">Use default (based on input type)</option>
            <option value="-0">Force zero-based positions (both input and output)</option>
            <option value="-1">Force one-based positions (both input and output)</option>
        </param>
        <param argument="-chr" type="text" label="Text to prepend to chromosome name">
            <help>
               By default SnpEff simplifies all chromosome names. For instance 'chr1' is just '1'.
               You can prepend any string you want to the chromosome name
            </help>
            <validator type="regex" message="No whitespace allowed">^\S*$</validator>
        </param>
        <param name="generate_stats" argument="-noStats" type="boolean" truevalue="" falsevalue="-noStats" checked="true" label="Produce Summary Stats" />
        <param argument="-noLog" type="boolean" truevalue="-noLog" falsevalue="" checked="true" label="Suppress reporting usage statistics to server" />
    </inputs>
    <outputs>
        <data name="snpeff_output" format="vcf">
            <change_format>
                <when input="outputConditional.outputFormat" value="bed" format="bed" />
                <when input="outputConditional.outputFormat" value="bedAnn" format="bed" />
            </change_format>
        </data>
        <data name="statsFile" format="html" label="${tool.name} on ${on_string} - HTML stats">
            <filter>generate_stats == True</filter>
        </data>
        <data name="csvFile" format="csv" label="${tool.name} on ${on_string} - CSV stats">
            <filter>csvStats == True</filter>
        </data>
    </outputs>
    <tests>
        <test>
            <param name="input" ftype="vcf" value="input.vcf"/>
            <param name="inputFormat" value="vcf"/>
            <param name="outputFormat" value="vcf"/>
            <param name="genome_version" value="NC_045512.2" />
            <param name="udLength" value="0"/>
            <param name="generate_stats" value="false"/>
            <output name="snpeff_output" file="output.vcf" lines_diff="2"/>
        </test>
    </tests>
    <help><![CDATA[
**What it does**

**This is a special edition of SnpEff tweaked for SARS-CoV-2 variant annotation.**

SnpEff is a variant annotation and effect prediction tool. It annotates and predicts the effects of genetic variants (such as amino acid changes).

A typical SnpEff use case would be:

 - **Input**: The inputs are predicted variants (SNPs, insertions, deletions and MNPs). The input file is usually obtained as a result of a sequencing experiment, and it is usually in variant call format (VCF).
 - **Output**: SnpEff analyzes the input variants. It annotates the variants and calculates the effects they produce on known genes (e.g. amino acid changes).

@SNPEFF_IN_GALAXY_INFO@
@EXTERNAL_DOCUMENTATION@
]]>
    </help>
    <expand macro="citations" />
</tool>
