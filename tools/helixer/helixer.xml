<?xml version="1.0"?>
<tool id="helixer" name="Helixer" version="@TOOL_VERSION@+galaxy0" profile="21.05">
    <description>Setup and train models for de novo prediction of gene structure</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <requirements>
        <requirement type="package" version="@TOOL_VERSION@">helixer</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        Helixer.py 
        -t \${GALAXY_SLOTS:-1}
        --fasta-path '$genomic_fasta'
        --species '$species'
        --gff-output-path '$output'
        --batch-size $predictions_parameters.batch-size
        --window-size $Post-processing.window-size
        --min-coding-length $Post-processing.min-coding-length
        --edge-threshold $Post-processing.edge-threshold
        --peak-threshold $Post-processing.peak-threshold
        #if str( $lineage.lineages ) == "none":
        #elif str( $lineage.lineages ) == "land_plant":
            --subsequence-length $lineage.subsequence-length
            --overlap-offset $lineage.overlap-offset
            --overlap-core-length $lineage.overlap-core-length
        #elif str( $lineage.lineages ) == "vertebrate":
            --subsequence-length $lineage.subsequence-length
            --overlap-offset $lineage.overlap-offset
            --overlap-core-length $lineage.overlap-core-length
        #elif str( $lineage.lineages ) == "invertebrate":
            --subsequence-length $lineage.subsequence-length
            --overlap-offset $lineage.overlap-offset
            --overlap-core-length $lineage.overlap-core-length
        #elif str( $lineage.lineages ) == "fungi":
            --subsequence-length $lineage.subsequence-length
            --overlap-offset $lineage.overlap-offset
            --overlap-core-length $lineage.overlap-core-length
        #end if
'$output']]></command>
    <inputs>
        <param argument="--fasta-path" name="genomic_fasta" type="data" format="fasta,fasta.gz" label="Genomic sequence (FASTA)"></param>
        <conditional name="lineage">
            <param argument="--lineage" name="lineages" type="select" label="Available ineages" help="Choose model to use fot he annotation between  land plant, vertebrates, invertebrates and fungi">
                <option value="none" selected="true">None</option>
                <option value="land_plant">land plant</option>
                <option value="vertebrate">vertebrate </option>
                <option value="invertebrate">invertebrate </option>
                <option value="fungi">fungi </option>
            </param>
            <when value="land_plant">
                <param argument="--subsequence-length" name="subsequence-length" type="integer" min="0" max="213840" value="106920" label="" help="For genomes with large genes (>20kpb) it is recommended to increase this paramter. PArticularly common in vertebrates and invertebrates"></param>
                <param argument="--overlap-offset" name="overlap-offset" type="integer" min="0" value="53460" label="overlap-offset" help=""></param>
                <param argument="--overlap-core-length" name="overlap-core-length" type="integer" min="0" value="80190" label="overlap-core-length" help="Smaller values may lead to better ' 'predictions but will take longer. "></param>
            </when>
            <when value="vertebrate">
                <param argument="--subsequence-length" name="subsequence-length" type="integer" min="0" max="213840" value="213840" label="" help="For genomes with large genes (>20kpb) it is recommended to increase this paramter. PArticularly common in vertebrates and invertebrates"></param>
                <param argument="--overlap-offset" name="overlap-offset" type="integer" min="0" value="106920" label="overlap-offset" help=""></param>
                <param argument="--overlap-core-length" name="overlap-core-length" type="integer" min="0" value="160380" label="overlap-core-length" help="Smaller values may lead to better ' 'predictions but will take longer. "></param>
            </when>
            <when value="invertebrate">
                <param argument="--subsequence-length" name="subsequence-length" type="integer" min="0" max="213840" value="213840" label="" help="For genomes with large genes (>20kpb) it is recommended to increase this paramter. PArticularly common in vertebrates and invertebrates"></param>
                <param argument="--overlap-offset" name="overlap-offset" type="integer" min="0" value="106920" label="overlap-offset" help=""></param>
                <param argument="--overlap-core-length" name="overlap-core-length" type="integer" min="0" value="160380" label="overlap-core-length" help="Smaller values may lead to better ' 'predictions but will take longer. "></param>
            </when>
            <when value="fungi">
                <param argument="--subsequence-length" name="subsequence-length" type="integer" min="0" max="213840" value="21384" label="" help="For genomes with large genes (>20kpb) it is recommended to increase this paramter. PArticularly common in vertebrates and invertebrates"></param>
                <param argument="--overlap-offset" name="overlap-offset" type="integer" min="0" value="106920" label="overlap-offset" help=""></param>
                <param argument="--overlap-core-length" name="overlap-core-length" type="integer" min="0" value="160380" label="overlap-core-length" help="Smaller values may lead to better ' 'predictions but will take longer. "></param>
            </when>
        </conditional>
        <param argument="--species" type="text" value="" label="Species" help="Enter the species">
            <sanitizer invalid_char="">
                <valid initial="string.letters,string.digits">
                    <add value="_" />
                </valid>
            </sanitizer>
            <validator type="regex">[0-9a-zA-Z_]+</validator>
        </param>
        <section name="predictions_parameters" title="Predictions parameters">
            <param argument="--batch-size" name="batch-size" type="integer" min="0" max="100" value="8" label="batch-size" help="The batch size for the raw predictions in TensorFlow"></param>
            <conditional name="option_overlap">
                <param name="Option_overlaps" type="select" label="Advanced options for overlaps parameters" >
                    <option value="yes">Show</option>
                    <option value="no">Hide</option>
                </param>
                <when value="no">
                    <param argument="--no-overlap" name="no-overlap" type="boolean" truevalue="--no-overlap" falsevalue="" checked="false" label="No overlaps" />
                </when>
                <when value="yes">
                    <section name="Overlap" title="Overlap parameters">
                        <param argument="--overlap-offset" name="overlap-offset" type="integer" label="Offset of the overlap processing" help="Smaller values may lead to better predictions but will take longer.The subsequence_length should be evenly divisible by this value. (Default is subsequence_length / 2)" />
                        <param argument="--overlap-core-length" name="overlap-core-length" type="integer" label="Overlap core length" help="Smaller values may lead to better predictions but will take longer. Has to be smaller than subsequence_length (Default is subsequence_length * 3 / 4)" />
                    </section>
                </when>
        </conditional>
        </section>
        <section name="Post-processing" title="Post-processing">
            <param argument="--window-size" name="window-size" type="integer" min="0" value="100" label="window size" />
            <param argument="--min-coding-length" name="min-coding-length" type="integer"  min="0" value="100" label="Minimum coding length" />
            <param argument="--edge-threshold" name="edge-threshold" type="float" min="0" max="1" value="0.1" label="Edge threshold" />
            <param argument="--peak-threshold" name="peak-threshold" type="float" min="0" max="1" value="0.8" label="Peak threshold" />
        </section>
        <param argument="--gff-output-path" name="output" type="data" format="gff3" label="GFF3 output"></param>
    </inputs>
    <outputs>
        <data name="output" format="gff3">
            <change_format>
                <when input="output_format" value="fasta" format="fasta,fasta.gz"></when>
            </change_format>
        </data>
    </outputs>
    <tests>
        <test expect_num_outputs="1">
            <param name="genomic_fasta" value="fasta"/>
            <param name="species" value=""/>
            <param name="output" value="gff3"/>
            <section name="predictions_parameters">
                <param name="batch-size" value="8"/>
            </section>
            <section name="Post-processing">
                <param name="window-size" value="100"/>
                <param name="min-coding-length" value="100"/>
                <param name="edge-threshold" value="0.1"/>
                <param name="peak-threshold" value="0.8"/>
            </section>
            <conditional name="lineage">
                <param name="lineages" value="land_plant"/>
                <param name="subsequence-length" value="106920"/>
                <param name="overlap-offset" value="53460"/>
                <param name="overlap-core-length" value="80190"/>
            </conditional>
            <output name="output" ftype="gff3">
                <assert_contents>
                    <has_text text="ID=_8_000001.1.three_prime_UTR.1;Parent=_8_000001.1"/>
                    <has_text text="ID=_8_002420.1.exon.3;Parent=_8_002420.1"/>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[
    
        helixer_  Setup and train models for de novo prediction of gene structure. 
        That is, to perform "gene calling" and identify which base pairs in a genome 
        belong to the UTR/CDS/Intron of genes. Train one model for a wide variety of genomes.
        .. _helixer: https://github.com/weberlab-hhu/Helixer
    ]]></help> 
    <expand macro="citation"></expand>
</tool>