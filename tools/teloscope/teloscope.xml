<?xml version="1.0"?>
<tool id="teloscope" name="Teloscope" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="@PROFILE@">
    <description>Assembly telomere annotation</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <stdio>
        <exit_code range="1:" level="fatal"/>
    </stdio>
    <version_command>teloscope -v</version_command>
    <command detect_errors="exit_code"><![CDATA[
        mkdir -p output &&
        teloscope
            --input-sequence '$input_sequence'
            --output output
            --canonical '$canonical'
            --patterns '$patterns'
            --window '$window'
            --step '$step'
            --threads \${GALAXY_SLOTS:-2}
            --min-block-length '$min_block_length'
            --max-block-distance '$max_block_distance'
            --max-match-distance '$max_match_distance'
            --min-block-density '$min_block_density'
            --terminal-limit '$terminal_limit'
            $out_win_repeats
            $out_gc
            $out_entropy
            $out_matches
            $out_its
            $ultra_fast
            $verbose
            > output/${input_sequence.name}.telo.report
    ]]></command>
    <inputs>
        <param argument="--input-sequence" type="data" format="fasta,fasta.gz" label="Input assembly."/>
        <param argument="--canonical" type="text" value="TTAGGG" optional="true" label="Canonical telomeric pattern.">
            <sanitizer>
                <valid initial="string.printable">
                    <remove value=" "/>
                    <remove value="\t"/>
                    <remove value="\r"/>
                    <remove value="\n"/>
                </valid>
            </sanitizer>
            <validator type="regex" message="Canonical must contain only A,C,G,T.">^[ACGTacgt]+$</validator>
        </param>

        <param argument="--patterns" type="text" value="TTAGGG,CCCTAA" optional="true" label="Patterns to explore (comma-separated), IUPAC allowed.">
            <sanitizer>
                <valid initial="string.printable">
                    <remove value=" "/>
                    <remove value="\t"/>
                    <remove value="\r"/>
                    <remove value="\n"/>
                </valid>
            </sanitizer>
            <validator type="regex" message="Use IUPAC letters ACGTRYSWKMBDHVN; comma-separated.">
                ^[ACGTRYSWKMBDHVNacgtryswkmbdhvn]+(,[ACGTRYSWKMBDHVNacgtryswkmbdhvn]+)*$
            </validator>
        </param>

        <param argument="--window" type="integer" min="100" value="1000" optional="true" label="Sliding window size"/>
        <param argument="--step" type="integer" min="100" value="500" optional="true" label="Sliding window step"/>
        <param argument="--terminal-limit" type="integer" min="10000" value="50000" optional="true" label="Terminal limit (bp) in contigs"/>
        <param argument="--max-match-distance" type="integer" min="0" value="50" optional="true" label="Maximum distance (bp) for merging matches"/>
        <param argument="--max-block-distance" type="integer" min="0" value="200" optional="true" label="Maximum block distance for merging"/>
        <param argument="--min-block-length" type="integer" min="0" value="500" optional="true" label="Minimum block length"/>
        <param argument="--min-block-density" type="float" min="0" max="1" value="0.5" optional="true" label="Minimum block density (0â€“1)"/>

        <param argument="--out-win-repeats" type="boolean" truevalue="--out-win-repeats" falsevalue="" checked="false" optional="true" label="Window repeat counts"/>
        <param argument="--out-gc" type="boolean" truevalue="--out-gc" falsevalue="" checked="false" optional="true" label="Window GC"/>
        <param argument="--out-entropy" type="boolean" truevalue="--out-entropy" falsevalue="" checked="false" optional="true" label="Window Shannon entropy"/>
        <param argument="--out-matches" type="boolean" truevalue="--out-matches" falsevalue="" checked="false" optional="true" label="Canonical/NonCanonical Matches"/>
        <param argument="--out-its" type="boolean" truevalue="--out-its" falsevalue="" checked="false" optional="true" label="Interstitial telomeres (ITSs)"/>
        <param argument="--ultra-fast" type="boolean" truevalue="--ultra-fast" falsevalue="" checked="true" optional="true" label="Ultra-fast mode (terminal regions only)"/>
        <param argument="--verbose" type="boolean" truevalue="--verbose" falsevalue="" checked="false" optional="true" label="Verbose output"/>
    </inputs>

    <outputs>
        <!-- BASIC OUTFILES -->
        <data name="terminal_telomeres" format="bed" from_work_dir="output/terminal_telomeres.bed" label="Terminal telomeres from ${tool.name}"/>
        <data name="telo_report" format="tabular" from_work_dir="output/${input_sequence.name}.telo.report" label="Summary report from ${tool.name}"/>

        <!-- OPTIONAL OUTFILES -->
        <data name="interstitial_telomeres" format="bed" from_work_dir="output/interstitial_telomeres.bed" label="Interstitial telomeres from ${tool.name}">
            <filter>out_its</filter>
        </data>
        <data name="canonical_matches" format="bed" from_work_dir="output/canonical_matches.bed" label="Canonical matches from ${tool.name}">
            <filter>out_matches</filter>
        </data>
        <data name="noncanonical_matches" format="bed" from_work_dir="output/noncanonical_matches.bed" label="Noncanonical matches from ${tool.name}">
            <filter>out_matches</filter>
        </data>
        <data name="window_metrics" format="bedgraph" from_work_dir="output/window_metrics.bedgraph" label="Window metrics from ${tool.name}">
            <filter>out_gc or out_entropy or out_win_repeats</filter>
        </data>
    </outputs>
    <tests>
    <!-- 1) Contig-ends scan: terminal telomeres + stdout report -->
    <test>
        <param name="input_sequence" value="genome.fasta.gz" ftype="fasta.gz"/>
        <!-- rely on default ultra_fast=true, no genome-wide flags -->
        <output name="terminal_telomeres"/>
        <output name="telo_report"/>
    </test>

    <!-- 2) Genome-wide scan: -g -e -r -m -i (ignore -u) -->
    <test>
        <param name="input_sequence" value="genome.fasta.gz" ftype="fasta.gz"/>
        <param name="out_gc" value="true"/>
        <param name="out_entropy" value="true"/>
        <param name="out_win_repeats" value="true"/>
        <param name="out_matches" value="true"/>
        <param name="out_its" value="true"/>
        <param name="ultra_fast" value="false"/>
        <output name="terminal_telomeres"/>
        <output name="interstitial_telomeres"/>
        <output name="canonical_matches"/>
        <output name="noncanonical_matches"/>
        <output name="window_metrics">
        <assert_contents>
            <!-- At least one bedGraph-like row: chrom, start, end, value -->
            <has_line_matching expression="^\S+\t\d+\t\d+\t"/>
        </assert_contents>
        </output>
        <output name="telo_report"/>
    </test>
    </tests>

    <help><![CDATA[
        Teloscope is a tool for telomere annotation in genome assemblies. 
        It scans for user-specified telomeric repeat patterns across assembly paths, contigs and windows.
        Teloscope annotates terminal and interstitial telomeres, canonical/noncanonical matches and genome-wide metrics such as GC content, Shannon entropy, and repeat counts.
        It generates a detailed telomere summary report for paths, telomere statistics, and chromosome labels to assess telomere completeness.
        Teloscope can be used for both complete and fragmented assemblies, providing valuable information for genome manual curation and analysis.
    ]]></help>
    <expand macro="citations"/>
</tool>
