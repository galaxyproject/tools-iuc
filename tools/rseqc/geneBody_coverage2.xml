<tool id="rseqc_geneBody_coverage2" name="Gene Body Coverage (Bigwig)" version="@WRAPPER_VERSION@.1">
    <description>
        Read coverage over gene body
    </description>

    <macros>
        <import>rseqc_macros.xml</import>
    </macros>

    <expand macro="requirements" />

    <expand macro="stdio" />

    <version_command><![CDATA[geneBody_coverage2.py --version]]></version_command>

    <command><![CDATA[
        geneBody_coverage2.py -i '${input}' -r '${refgene}' -o output
        ]]>
    </command>

    <inputs>
        <param name="input" type="data" label="Input bigwig file" format="bigwig" />
        <expand macro="refgene_param" />
    </inputs>

    <outputs>
        <expand macro="pdf_output_data" filename="output.geneBodyCoverage.pdf" />
        <data name="outputtxt" format="txt" from_work_dir="output.geneBodyCoverage.txt" label="${tool.name} on ${on_string} (text)" />
        <expand macro="rscript_output_data" filename="output.geneBodyCoverage_plot.r" />
    </outputs>

    <tests>
        <test>
            <param name="input" value="pairend_strandspecific_51mer_hg19_chr1_1-100000.bigwig" />
            <param name="refgene" value="hg19_RefSeq_chr1_1-100000.bed" />
            <param name="rscript_output" value="true" />
            <output name="outputpdf" file="output.geneBodyCoverage2.curves.pdf" compare="sim_size" />
            <output name="outputr" file="output.geneBodyCoverage2.r" />
            <output name="outputtxt" file="output.geneBodyCoverage2.txt" />
        </test>
    </tests>

    <help><![CDATA[
geneBody_coverage2.py
+++++++++++++++++++++

Similar to geneBody_coverage.py. This module takes bigwig instead of BAM as input, and thus
requires much less memory. The BigWig file could be arbitrarily large.


Inputs
++++++++++++++

Input BAM/SAM file
    Alignment file in BAM/SAM format.

Reference gene model
    Gene Model in BED format.


Outputs
++++++++++++++

Read coverage over gene body. This module is used to check if reads coverage is uniform and if there is any 5’/3’ bias. This module scales all transcripts to 100 nt and calculates the number of reads covering each nucleotide position. Finally, it generates a plot illustrating the coverage profile along the gene body. NOTE: this module requires lots of memory for large BAM files, because it load the entire BAM file into memory. We add another script "geneBody_coverage2.py" into v2.3.1 which takes bigwig (instead of BAM) as input. It only use 200M RAM, but users need to convert BAM into WIG, and then WIG into BigWig.

Example output:
    .. image:: $PATH_TO_IMAGES/geneBody_coverage.png
        :height: 600 px
        :width: 600 px
        :scale: 80 %

@ABOUT@

]]>
    </help>

    <expand macro="citations" />

</tool>
