<tool id="gtftobed12" name="Convert GTF to BED12" version="357">
    <requirements>
        <requirement type="package" version="357">ucsc-gtftogenepred</requirement>
        <requirement type="package" version="357">ucsc-genepredtobed</requirement>
    </requirements>
    <command detect_errors="aggressive"><![CDATA[
        gtfToGenePred
            #if $advanced_options.advanced_options_selector == "advanced":
                $advanced_options.ignoreGroupsWithoutExons
                $advanced_options.simple
                $advanced_options.allErrors
                $advanced_options.impliedStopAfterCds
                $advanced_options.includeVersion
                #if $advanced_options.infoOut:
                    -infoOut='${transcript_info_file}'
                #end if
                #for $prefix in $advanced_options.sourcePrefixes
                    -sourcePrefix='${prefix.sourcePrefix}'
                #end for
            #end if
            '${gtf_file}'
            'temp.genePred' &&
        genePredToBed 'temp.genePred' '${bed_file}'
        ]]>
    </command>
    <inputs>
        <param name="gtf_file" type="data" format="gtf" label="GTF File to convert" />
        <conditional name="advanced_options">
            <param name="advanced_options_selector" type="select" label="Advanced options"
                help="Advanced options for gtfToGenePred.">
                <option value="default" selected="true">Use default options</option>
                <option value="advanced">Set advanced options</option>
            </param>
            <when value="default" />
            <when value="advanced">
                <repeat name="sourcePrefixes" title="Source Prefixes"
                    help="Only process entries where the source name has the specified prefixes">
                    <param argument="-sourcePrefix" label="Source prefix"
                        type="text" />
                </repeat>
                <param argument="-ignoreGroupsWithoutExons" label="Ignore groups without exons"
                    help="Ignore groups that do not have exons, otherwise they will cause an error."
                    type="boolean" truevalue="-ignoreGroupsWithoutExons" falsevalue="" checked="false" />
                <param argument="-simple" label="Skip hierarchy check"
                    help="Only check column validity, not heirarchy, may result in invalid output."
                    type="boolean" truevalue="-simple" falsevalue="" checked="false" />
                <param argument="-allErrors" label="Skip all errors"
                    help="Skip groups with errors rather than aborting. Useful for getting information
                    about as many errors as possible."
                    type="boolean" truevalue="-allErrors" falsevalue="" checked="false" />
                <param argument="-impliedStopAfterCds" label="Implied stop codon in after CDS"
                    help="Assume there is an implied stop codon after CDS."
                    type="boolean" truevalue="-impliedStopAfterCds" falsevalue="" checked="false" />
                <param argument="-includeVersion" label="Include gene and transcript version"
                    help="If gene_version and/or transcript_version attributes exist, include the version
                    in the corresponding identifiers."
                    type="boolean" truevalue="-includeVersion" falsevalue="" checked="false" />
                <param argument="-infoOut" label="Output transcript information file"
                    help="Outputs a file with information about each transcript."
                    type="boolean" checked="false" />
            </when>
        </conditional>
    </inputs>
    <outputs>
        <data name="bed_file" format="bed12" metadata_source="gtf_file" label="${tool.name} on ${on_string}: BED12"/>
        <data name="transcript_info_file" format="tabular" metadata_source="gtf_file" label="${tool.name} on ${on_string}: Table">
            <filter>(advanced_options['advanced_options_selector'] == 'advanced') and (advanced_options['infoOut'])</filter>
        </data>
    </outputs>
    <tests>
        <test expect_num_outputs="1" >
            <param name="gtf_file" value="gtf2bed_test.gtf"/>
            <output name="bed_file" file="gtf2bed_test.bed" ftype="bed12"/>
        </test>
        <test expect_num_outputs="1" >
            <param name="gtf_file" value="gtf2bed_test_missing_exon.gtf"/>
            <param name="advanced_options_selector" value="advanced" />
            <param name="ignoreGroupsWithoutExons" value="true" />
            <output name="bed_file" file="gtf2bed_test_missing_exon.bed" ftype="bed12"/>
        </test>
        <test expect_num_outputs="1" >
            <param name="gtf_file" value="gtf2bed_test.gtf"/>
            <param name="advanced_options_selector" value="advanced" />
            <param name="includeVersion" value="true" />
            <output name="bed_file" file="gtf2bed_test_include_version.bed" ftype="bed12"/>
        </test>
        <test expect_num_outputs="2" >
            <param name="gtf_file" value="gtf2bed_test.gtf"/>
            <param name="advanced_options_selector" value="advanced" />
            <param name="infoOut" value="true" />
            <output name="bed_file" file="gtf2bed_test.bed" ftype="bed12"/>
            <output name="transcript_info_file" file="gtf2bed_test_transcript_info.txt" ftype="tabular"/>
        </test>
        <test expect_num_outputs="1" >
            <param name="gtf_file" value="gtf2bed_test.gtf"/>
            <param name="advanced_options_selector" value="advanced" />
            <repeat name="sourcePrefixes">
                <param name="sourcePrefix" value="hav" />
            </repeat>
            <output name="bed_file" file="gtf2bed_test_havana.bed" ftype="bed12"/>
        </test>
        <test expect_num_outputs="1" >
            <param name="gtf_file" value="gtf2bed_test.gtf"/>
            <param name="advanced_options_selector" value="advanced" />
            <repeat name="sourcePrefixes">
                <param name="sourcePrefix" value="hav" />
            </repeat>
            <repeat name="sourcePrefixes">
                <param name="sourcePrefix" value="ens" />
            </repeat>
            <output name="bed_file" file="gtf2bed_test.bed" ftype="bed12"/>
        </test>
    </tests>
    <help><![CDATA[
Converts a GTF_ file to a BED12_ formatted file using UCSC tools from Jim Kent.

``gtfToGenePred``, followed by ``genePredToBed``

.. _GTF: https://genome.ucsc.edu/FAQ/FAQformat.html#format4
.. _BED12: https://genome.ucsc.edu/FAQ/FAQformat.html#format1
        ]]>
    </help>

    <citations>
        <citation type="doi">10.1101/gr.229102</citation>
    </citations>
</tool>
