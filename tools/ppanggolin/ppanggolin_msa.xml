<tool id="ppanggolin_msa" name="PPanGGOLiN msa" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="21.05">
    <description>compute multiple sequence alignment of the gene families in any partition of the pangenome.</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="xrefs"/>
    <expand macro="requirements"/>
    
    <command detect_errors="exit_code"><![CDATA[
        
        mkdir -p "./tmp_ppanggolin/msa" &&
        mkdir -p "./tmp_ppanggolin/tmpdir_msa" &&
        
        ppanggolin msa
        --pangenome $pangenome_h5
        --output ./tmp_ppanggolin/msa
        --tmpdir ./tmp_ppanggolin/tmpdir_msa
        --force
        --cpu "\${GALAXY_SLOTS:-4}"
        --disable_prog_bar
        --partition $choice_partition
        #if str($input_choose_partition.choice_partition) == "softcore"
            --soft_core $choice_soft_core
        #end if
        
        --source $choice_source        
        #if str($do_phylo) == "true"
            --phylo
        #end if     
        #if str($do_single_copy) == "true"
            --single_copy
        #end if
        --translation_table $translation_table
        
        #set base_msa_protein = "msa_" + str($input_choose_partition.choice_partition) + "_protein"
        #set base_genome_alignment = str($input_choose_partition.choice_partition) + "_genome_alignment.aln"
        #if str($input_choose_partition.choice_partition) == "softcore"
            #set base_genome_alignment = str($input_choose_partition.choice_partition) + "_" + str($choice_soft_core) + "_genome_alignment.aln"
        #end if
        
        && tar -cvf ./tmp_ppanggolin/msa/archive_${base_msa_protein}.tar ./tmp_ppanggolin/msa/${base_msa_protein}
        && gzip ./tmp_ppanggolin/msa/archive_${base_msa_protein}.tar
        && mv ./tmp_ppanggolin/msa/archive_${base_msa_protein}.tar.gz '${archive_msa_partition_protein}'
        
        #if str($do_phylo) == "true"
            && mv ./tmp_ppanggolin/msa/${base_genome_alignment} '${partition_genome_alignment}'
        #end if     
        
    ]]></command>

    <inputs>
    
        <param argument="--pangenome" name="pangenome_h5" type="data" format="h5" label="Input pangenome h5 file"/>

        <conditional name="input_choose_partition">
            <param argument="--partition" name="choice_partition" type="select" label="Partition">
                <option value="core" selected="true">Core</option>
                <option value="persistent">Persistent</option>
                <option value="shell">Shell</option>
                <option value="cloud">Cloud</option>
                <option value="softcore">Softcore</option>
                <option value="accessory">Accessory</option>
                <option value="all">All</option>
            </param>
            <when value="softcore">
                <param argument="--soft_core" name="choice_soft_core" type="float" value="0.95" min="0" max="1" label="Soft core threshold to use if 'softcore' partition is chosen"/>
            </when>
        </conditional>

        <param argument="--source" name="choice_source" type="select" label="Source">
            <option value="protein" selected="true">Protein</option>
            <option value="dna">DNA</option>
        </param>
        
        <param name="do_phylo" type="boolean" checked="true" label="Writes a whole genome msa file for additional phylogenetic analysis"/>

        <param name="do_single_copy" type="boolean" checked="false" label="Use report gene families that are considered 'single copy'"/>
            
        <param argument="--translation_table" name="translation_table" type="select" label="Translation table">
            <option value="1" selected="true">1 - Standard Code</option>
            <option value="2">2 - Vertebrate Mitochondrial</option>
            <option value="3">3 - Yeast Mitochondrial</option>
            <option value="4">4 - Mold, Protozoan, and Coelenterate Mitochondrial</option>
            <option value="5">5 - Invertebrate Mitochondrial</option>
            <option value="6">6 - Ciliate Nuclear</option>
            <option value="9">9 - Echinoderm Mitochondrial</option>
            <option value="10">10 - Euplotid Nuclear</option>
            <option value="11">11 - Bacterial and Plant Plastid</option>
            <option value="12">12 - Alternative Yeast Nuclear</option>
            <option value="13">13 - Ascidian Mitochondrial</option>
            <option value="14">14 - Flatworm Mitochondrial</option>
            <option value="15">15 - Blepharisma Nuclear</option>
            <option value="16">16 - Chlorophycean Mitochondrial</option>
            <option value="21">21 - Trematode Mitochondrial</option>
            <option value="22">22 - Scenedesmus obliquus Mitochondrial</option>
            <option value="23">23 - Thraustochytrium Mitochondrial</option>
            <option value="24">24 - Pterobranchia Mitochondrial</option>
            <option value="25">25 - Candidate Division SR1 and Gracilibacteria</option>
            <option value="26">26 - Pachysolen tannophilus Nuclear</option>
            <option value="27">27 - Karyorelict Nuclear</option>
            <option value="28">28 - Condylostoma Nuclear</option>
            <option value="29">29 - Mesodinium Nuclear</option>
            <option value="30">30 - Peritrich Nuclear</option>
            <option value="31">31 - Blastocrithidia Nuclear</option>
            <option value="32">32 - Balanophoraceae Plastid</option>
            <option value="33">33 - Cephalodiscidae Mitochondrial</option>
        </param>
        
    </inputs>

    <outputs>
        <data name="archive_msa_partition_protein" format="tar.gz" label="PPanGGOLiN msa on ${on_string}: archive msa ${choice_partition} protein" />
        <data name="partition_genome_alignment" format="aln" label="PPanGGOLiN msa on ${on_string}: ${choice_partition} genome alignment" >
          <filter>do_phylo is True</filter>
        </data>
    </outputs>

    <tests>
        <test>
            <param name="do_phylo" value="true"/>
            <param name="pangenome_h5" value="h5/test_data.h5" ftype="fasta"/>
            
            <output name="partition_genome_alignment" >
                <assert_contents>
                    <has_text text=">" />
                </assert_contents>
            </output>
            
        </test>
    </tests>
        
    <help><![CDATA[
    
        PPanGGOLiN_ (Gautreau et al. 2020) is a software suite used to create and manipulate prokaryotic pangenomes from a set of either assembled 
        genomic DNA sequences or provided genome annotations. PPanGGOLiN builds pangenomes through a graphical model and a statistical method to partition gene 
        families in persistent, shell and cloud genomes. It integrates both information on protein-coding genes and their genomic neighborhood to build a graph 
        of gene families where each node is a gene family, and each edge is a relation of genetic contiguity. 

	The `ppanggolin msa` command computes multiple sequence alignment of any partition of the pangenome. The command uses mafft with default options to perform the alignment. Please see the documentation_ on how parameters can be tuned for this command.

        .. _PPanGGOLiN: https://github.com/labgem/PPanGGOLiN
        .. _documentation: https://ppanggolin.readthedocs.io/en/latest/user/MSA.html
        
    ]]></help>
    
</tool>
        
        
        
        
        
