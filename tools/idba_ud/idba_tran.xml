<tool id="idba_tran" name="IDBA-TRAN" version="@IDBA_VERSION@">
    <description>
        Iterative de Bruijn Graph Assembler for transcriptome data
    </description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <command detect_errors="aggressive"><![CDATA[
    idba_tran

    @MAIN_INPUT@
    @KMER_OPTIONS@
    @FILTER_OPTIONS@
    --min_transcript $min_transcript
    --max_isoforms $max_isoforms
    --max_component_size $max_component_size
    @OTHER_OPTIONS@
    @THREADS@
    ]]></command>
    <inputs>
        <expand macro="main_input"/>
        <expand macro="kmer_options" maxk_default="60" step_default="10"/>
        <expand macro="filter_options"/>
        <param argument="--min_transcript" type="integer" value="300" label="Minimum size of transcript"/>
        <param argument="--max_isoforms" type="integer" value="3" label="Maximum number of isoforms"/>
        <param argument="--max_component_size" type="integer" value="30" label="Maximum size of component"/>
        <expand macro="other_options"/>
    </inputs>
    <outputs>
        <data name="output" from_work_dir="out/scaffold.fa" format="fasta"/>
    </outputs>
    <tests>
        <!-- basic test + tool specific defaults -->
        <test>
            <param name="read" value="merged.fa" ftype="fasta"/>
            <assert_command>
                <has_text text="--maxk 60" />
                <has_text text="--step 10" />
                <has_text text="--min_transcript 300" />
                <has_text text="--max_isoforms 3" />
                <has_text text="--max_component_size 30" />
            </assert_command>
            <output name="output" file="out/scaffold.fa" ftype="fasta" compare="sim_size"/>
        </test>
        <!-- tool specific parameters -->
        <test>
            <param name="read" value="merged.fa" ftype="fasta"/>
            <param name="min_transcript" value="299"/>
            <param name="max_isoforms" value="2"/>
            <param name="max_component_size" value="29"/>
            <assert_command>
                <has_text text="--min_transcript 299" />
                <has_text text="--max_isoforms 2" />
                <has_text text="--max_component_size 29" />
            </assert_command>
            <output name="output" file="out/scaffold.fa" ftype="fasta" compare="sim_size"/>
        </test>
    </tests>
    <expand macro="help" more_help="IDBA-Tran is an iterative De Bruijn Graph De Novo short read assembler for transcriptome. It is purely de novo assembler based on only RNA sequencing reads. IDBA-Tran uses local assembly to reconstructing missing k-mers in low-expressed transcripts and then employs progressive cutoff on contigs to seperate the graph into components. Each component corresponds to one gene in most cases and contains not many transcripts. A heuristic algorithm based on pair-end reads is then used to find the isoforms."/>
    <expand macro="citations">
       <citation type="doi">10.1093/bioinformatics/btt219</citation>
    </expand>
</tool>
