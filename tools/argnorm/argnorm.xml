<tool id="argnorm" name="argNorm" version="@VERSION@+galaxy@VERSION_SUFFIX@" profile="23.0">
    <description>a tool to normalize antibiotic resistance genes (ARGs) by mapping them to the antibiotic resistance ontology (ARO)</description>
    <macros>
        <token name="@VERSION@">1.0.0</token>
        <token name="@VERSION_SUFFIX@">0</token>
    </macros>
    <xrefs>
       <xref type="bio.tools">argnorm</xref>
    </xrefs>
    <requirements>
        <requirement type="package" version="@VERSION@">argnorm</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
    argnorm
        '$choose_tool.tool'
        #if $choose_tool.tool == "abricate" or $choose_tool.tool == "groot"
        --db '$db'
        #end if
        -i '$input' 
        -o '$output'
        #if $choose_tool.tool == "hamronization"
        $hamronized
        #end if
    ]]></command>
    <inputs>
        <param type="data" name="input" format="tsv,txt" label="Specify input file" help="-i" />
        <conditional name="choose_tool">
            <param type="select" name="tool" label="The tool used to do ARG annotation" help="" >
                <option value="deeparg" selected="true">DeepARG</option>
                <option value="argsoap">ARGs-OAP</option>
                <option value="abricate">ABRicate</option>
                <option value="resfinder">ResFinder</option>
                <option value="amrfinderplus">AMRFinderPlus</option>
                <option value="groot">Groot</option>
                <option value="hamronization">hAMRonization</option>
            </param>
            <when value="deeparg">
            </when>
            <when value="argsoap">
            </when>
            <when value="abricate">
                <param type="select" argument="--db" label="The database you used to do ARG annotation">
                    <option value="sarg" selected="true">SARG</option>
                    <option value="ncbi">NCBI</option>
                    <option value="resfinder">ResFinder</option>
                    <option value="resfinderfg">ResFinder FG</option>
                    <option value="deeparg" selected="true">DeepARG</option>
                    <option value="megares">MEGARes</option>
                    <option value="argannot">ARG-ANNOT</option>
                </param>
            </when>
            <when value="resfinder">
            </when>
            <when value="amrfinderplus">
            </when>
            <when value="groot">
                <param type="select" argument="--db" label="The database you used to do ARG annotation">
                    <option value="groot-resfinder">Groot ResFinder database </option>
                    <option value="groot-argannot">Groot ARG-ANNOT database </option>
                    <option value="groot-card">Groot CARD database </option>
                    <option value="groot-db">Groot DB (combining all sequences in ResFinder, ARG-annot and CARD)</option>
                    <option value="groot-core-db">Groot Core DB (combining sequences that are present in each of ResFinder, ARG-annot and CARD databases)</option>
                </param>
            </when>
            <when value="hamronization">
                <param name="hamronized" type="boolean" label="Skip rows with unsupported tools" truevalue="--hamronization_skip_unsupported_tool" falsevalue="" checked="false" help="Combined hAMRonization results can have ARGs detected by unsupported tools (e.g. staramr), --hamronization_skip_unsupported_tool allows to skip rows with unsupported tools"/>
            </when>
        </conditional>
    </inputs>
    <outputs>
        <data name="output" format="tsv" label="${tool.name} on ${on_string} : ARG normalized table" />
    </outputs>
    <tests>
        <!-- Test 1 : input : tsv, output : tsv, tool : groot -->
        <test>
            <param name="input" value="resfinder_PSM7J199_R2.report"/>
            <conditional name="choose_tool">
                <param name="tool" value="groot"/>
                <param name="db" value="groot-resfinder"/>
            </conditional>
            <output name="output" file="groot-resfinder-results.tsv"/>
        </test>
        <!-- Test 2 : input : txt, output : tsv, tool : argsoap -->
        <test>
            <param name="input" value="blastout.filtered.txt"/>
            <conditional name="choose_tool">
                <param name="tool" value="argsoap"/>
            </conditional>
            <output name="output" file="blastout.filtered.argnorm.tsv"/>
        </test>
        <!-- Test 3 : input : tsv, output : tsv, tool : deeparg, hamronize -->
        <test>
            <param name="input" value="deeparg_hamronize.tsv"/>
            <conditional name="choose_tool">                
                <param name="tool" value="hamronization"/>
                <param name="hamronized" value="true"/>
            </conditional>
            <output name="output" file="deeparg_hamronize_argnorm_results.tsv"/>
        </test>
    </tests>
    <help><![CDATA[

argNorm is a tool to normalize antibiotic resistance genes (ARGs) by mapping them to the antibiotic resistance ontology (ARO) created by the CARD database.

argNorm also enhances antibiotic resistance gene annotations by providing drug categorization of the drugs that antibiotic resistance genes confer resistance to.

    ]]></help>
    <citations>
        <citation type="doi">https://github.com/BigDataBiology/argNorm</citation>
    </citations>
</tool>
