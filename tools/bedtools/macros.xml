<macros>
    <xml name="requirements">
        <requirements>
            <requirement type="package" version="2.26.0gx">bedtools</requirement>
            <yield/>
        </requirements>
    </xml>
    <token name="@WRAPPER_VERSION@">2.26.0</token>
    <xml name="stdio">
        <stdio>
            <!-- Anything other than zero is an error -->
            <exit_code range="1:" />
            <exit_code range=":-1" />
            <!-- In case the return code has not been set propery check stderr too -->
            <regex match="Error:" />
            <regex match="Exception:" />
        </stdio>
        <version_command>bedtools --version</version_command>
    </xml>
    <xml name="reciprocal">
        <param name="reciprocal" type="boolean" checked="false" truevalue="-r" falsevalue=""
            label="Require that the fraction of overlap be reciprocal for A and B"
            help="In other words, if -f is 0.90 and -r is used, this requires that B overlap at least 90% of A and that A also overlaps at least 90% of B. (-r)" />
    </xml>
    <xml name="overlap">
        <param name="overlap" type="float" value="0.000000001" label="Minimum overlap required as a fraction of A" help="Default is 1E-9, i.e. 1bp. (-f)"/>
    </xml>
    <xml name="strand2">
        <param name="strand" type="select" label="Calculation based on strandedness?">
            <option value="" selected="True">Overlaps on either strand</option>
            <option value="-s">Only overlaps occurring on the **same** strand.</option>
            <option value="-S">Only overlaps occurring on the **opposite** strand.</option>
        </param>
    </xml>
    <xml name="seed">
        <conditional name="seed">
            <param name="seed_choose" type="select" label="Choose Seed?" help="(-seed)">
                <option value="False" selected="True">Random Shuffling</option>
                <option value="True">Choose fixed seed</option>
            </param>
            <when value="True">
                <param name="seed" type="integer" value="12345" label="Enter Seed" />
            </when>
            <when value="False" />
        </conditional>
    </xml>
    <xml name="split">
        <param name="split" type="boolean" checked="false" truevalue="-split" falsevalue=""
            label="Treat split/spliced BAM or BED12 entries as distinct BED intervals when computing coverage."
            help="If set, the coverage will be calculated based the spliced intervals only. For BAM files, this inspects the CIGAR N operation to infer the blocks for computing coverage. For BED12 files, this inspects the BlockCount, BlockStarts, and BlockEnds fields (i.e., columns 10,11,12). If this option is not set, coverage will be calculated based on the interval's START/END coordinates, and would include introns in the case of RNAseq data. (-split)" />
    </xml>
    <xml name="genome">
        <param format="tabular" name="genome" type="data" label="Genome file" />
        <!--TODO: make use of: ${chromInfo} -->
    </xml>
    <xml name="closest_D_option">
        <param name="iu" type="boolean" checked="false" truevalue="-iu" falsevalue=""
            label="Ignore features in B that are upstream of features in A"
            help="This option requires -D and follows its orientation rules for determining what is 'upstream'. (-iu)" />

        <param name="id" type="boolean" checked="false" truevalue="-id" falsevalue=""
            label="Ignore features in B that are downstream of features in A"
            help="This option requires -D and follows its orientation rules for determining what is 'downstream'. (-id)" />

        <param name="fu" type="boolean" checked="false" truevalue="-fu" falsevalue=""
            label="Choose first from features in B that are upstream of features in A"
            help="This option requires -D and follows its orientation rules for determining what is 'upstream'. (-fu)" />

        <param name="fd" type="boolean" checked="false" truevalue="-fd" falsevalue=""
            label="Choose first from features in B that are downstream of features in A"
            help="This option requires -D and follows its orientation rules for determining what is 'downstream'. (-fd)" />
    </xml>
    <xml name="addition">
        <conditional name="addition">
            <param name="addition_select" type="select" label="Choose what you want to do">
                <option value="b" selected="True">Increase the BED/GFF/VCF entry by the same number base pairs in each direction.</option>
                <option value="lr">Increase by Start Coordinate and End Coordinate</option>
            </param>
            <when value="b">
                <param name="b" value="1" label="Number of base pairs" type="integer" />
            </when>
            <when value="lr">
                <param name="l" type="integer" value="0" label="The number of base pairs to subtract from the start coordinate" />
                <param name="r" type="integer" value="0" label="The number of base pairs to add to the end coordinate" />
            </when>
        </conditional>
    </xml>
    <xml name="print_header">
        <param name="header" type="boolean" checked="False" truevalue="-header" falsevalue=""
            label="Print the header from the A file prior to results" help="(-header)" />
    </xml>
    <!-- TODO this is currently not used, but we should make use of it -->
    <xml name="genome_validator">
        <validator type="unspecified_build" />
        <validator type="dataset_metadata_in_data_table" table_name="fasta_indexes" metadata_name="dbkey" metadata_column="1" message="Sequences are not currently available for the specified build." />
    </xml>

    <!-- ToDo column_picker -->
    <xml name="choose_columns">
        <param name="cols" type="text" value=""
            label="Specify the column(s) that should be summarized"
            help="comma separated (-c)">
            <sanitizer invalid_char="">
                <valid initial="string.digits"><add value=","/></valid>
            </sanitizer>
        </param>
    </xml>

    <token name="@C_AND_O_ARGUMENT@">
        #set $col = list()
        #set $op = list()
        #for $item in $c_and_o_argument_repeat:
            #silent $col.append( str($item.col) )
            #silent $op.append( str($item.operation) )
        #end for
        #if $col:
            -c #echo ','.join($col)#
            -o #echo ','.join($op)#
        #end if
    </token>

    <xml name="c_and_o_argument">
        <repeat name="c_and_o_argument_repeat" title="Applying operations to columns from merged intervals" min="0">
            <yield />
            <expand macro="choose_operations">
                <expand macro="math_options" />
                <expand macro="additional_math_options" />
            </expand>
        </repeat>
    </xml>

    <xml name="choose_operations">
        <param name="operation" type="select" label="Specify the operation">
            <yield />
        </param>
    </xml>

    <xml name="math_options">
        <option value="sum" selected="True">Sum - numeric only</option>
        <option value="min">Min - numeric only</option>
        <option value="max">Max - numeric only</option>
        <option value="absmin">AbsMin - numeric only</option>
        <option value="absmax">AbsMax - numeric only</option>
        <option value="mean">Mean - numeric only</option>
        <option value="median">Median - numeric only</option>
        <option value="mode">Mode - numeric only</option>
        <option value="antimode">Antimode - numeric only</option>
        <option value="collapse">collapse (i.e., print a comma separated list) - numeric or text</option>
    </xml>
    <xml name="additional_math_options">
        <option value="count">Count - numeric or text</option>
        <option value="count_disctinct">Count Distinct - numeric or text</option>
        <option value="distinct">distinct (i.e., print a comma separated list) - numeric or text</option>
        <option value="concat">concat (i.e., print a comma separated list) - numeric or text</option>
    </xml>
    <token name="@REFERENCES@">
<![CDATA[
------

This tool is part of the `bedtools package`_ from the `Quinlan laboratory`_.

.. _bedtools package: https://github.com/arq5x/bedtools2
.. _Quinlan laboratory: http://quinlanlab.org


**Citation**

If you use this tool in Galaxy, please cite:

Bjoern A. Gruening (2014), `Galaxy wrapper <https://github.com/bgruening/galaxytools>`_
]]>
    </token>
    <xml name="citations">
        <citations>
            <citation type="doi">10.1093/bioinformatics/btq033</citation>
            <yield />
        </citations>
    </xml>
</macros>
