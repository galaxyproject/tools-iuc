<?xml version='1.0' encoding='utf-8'?>
<tool name="bcftools @EXECUTABLE@" id="bcftools_@EXECUTABLE@" version="@TOOL_VERSION@">
    <description>Create intersections, unions and complements of VCF files</description>
    <macros>
        <token name="@EXECUTABLE@">isec</token>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <expand macro="version_command" />
    <command detect_errors="aggressive"><![CDATA[
@PREPARE_ENV@
@PREPARE_INPUT_FILES@
#set $section = $sec_restrict
@PREPARE_TARGETS_FILE@
@PREPARE_REGIONS_FILE@

bcftools @EXECUTABLE@

## Default section
#set $section = $sec_default
${section.complement}
#if $section.nfiles:
  --nfiles "${section.nfiles}"
#end if

#set $section = $sec_restrict
@REGIONS@
@TARGETS@
@COLLAPSE@
@APPLY_FILTERS@
@INCLUDE@
@EXCLUDE@

@OUTPUT_TYPE@
@THREADS@

## Primary Input/Outputs
@INPUT_FILES@
> '$output_file'

]]>
    </command>
    <inputs>
        <expand macro="macro_inputs" />
        <section name="sec_restrict" expanded="false" title="Restrict to">
            <expand macro="macro_collapse" />
            <expand macro="macro_include" />
            <expand macro="macro_exclude" />
            <expand macro="macro_apply_filters" />
            <expand macro="macro_restrict" />
            <expand macro="macro_restrict" type="target" label_type="Target" />
        </section>
        <section name="sec_default" expanded="true" title="Isec Options">
            <param name="nfiles" type="text" label="Nfiles" optional="True" 
                 help="Output positions present in this many (=), this many or more (+), this many or fewer (-), the exact (~) files" >
                <validator type="regex" message="bitmask zero or one">^([=+-]?\d+|~[01]+)?$</validator>
            </param>
            <param name="complement" type="boolean" truevalue="--complement" falsevalue="" label="Complement" 
                   help="Output positions present only in the first file but missing in the others" />
            <param name="prefix" type="boolean" truevalue="--prefix subset" falsevalue="" checked="false" label="subset each of the input files" 
                   help="(-p)" />
            <param name="write" type="text" label="Files to write" optional="True" 
                 help="(-write) The output files to write " >
                <validator type="regex" message="">^([=+-]?\d+|~[01]+)?$</validator>
            </param>
        </section>
        <expand macro="macro_select_output_type" />
    </inputs>
    <outputs>
        <expand macro="macro_vcf_output"/>
    </outputs>
    <tests>
        <test>
            <param name="input_files" ftype="vcf" value="isec.b.vcf,isec.a.vcf" />
            <param name="nfiles" value="=2" />
            <param name="output_type" value="v" />
            <output name="output_file">
                <assert_contents>
                    <has_text text="3157410" />
                    <has_text text="3162006" />
                    <not_has_text text="3062915" />
                </assert_contents>
            </output>
        </test>

    </tests>
    <help><![CDATA[
=====================================
 bcftools @EXECUTABLE@
=====================================

Create intersections, unions and complements of VCF files.

@COLLAPSE_HELP@
@REGIONS_HELP@
@TARGETS_HELP@
@EXPRESSIONS_HELP@

@BCFTOOLS_MANPAGE@#@EXECUTABLE@

@BCFTOOLS_WIKI@
]]>
    </help>
    <expand macro="citations" />
</tool>
