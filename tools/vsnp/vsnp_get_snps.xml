<tool id="vsnp_get_snps" name="vSNP: get SNPs" version="@WRAPPER_VERSION@.0" profile="@PROFILE@">
    <description></description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <requirements>
        <requirement type="package" version="0.25.3">pandas</requirement>
        <requirement type="package" version="0.6.8">pyvcf</requirement>
        <requirement type="package" version="1.2.0">xlrd</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
#import re

#set input_vcf_dir = 'input_vcf_dir'
mkdir -p $input_vcf_dir &&
mkdir -p 'output_json_avg_mq_dir' &&
mkdir -p 'output_json_snps_dir' &&
mkdir -p 'output_snps_dir' &&

#set reference = '?'
#for $i in $input_vcf_collection:
    #if str($reference) != $i.metadata.dbkey:
        #set reference = $i.metadata.dbkey
    #end if
    #set vcf_identifier = re.sub('[^\s\w\-]', '_', str($i.element_identifier))
    ln -s '${i}' '$input_vcf_dir/${vcf_identifier}' &&
#end for
#set zc_vcf_identifier = re.sub('[^\s\w\-]', '_', str($input_zc_vcf.element_identifier))
ln -s '${input_zc_vcf}' '$input_vcf_dir/${zc_vcf_identifier}' &&
#if str($input_excel_cond.input_excel_param) == 'yes':
    #if str($input_excel_cond.excel_source_cond.excel_source) == 'cached':
        #set excel_file = $input_excel_cond.excel_source_cond.input_excel.fields.path
    #else:
        #set excel_file = $input_excel_cond.excel_source_cond.input_excel
    #end if
#end if
python '$__tool_directory__/vsnp_get_snps.py'
--ac $ac
--input_zc_vcf '$input_zc_vcf'
#if str($input_excel_cond.input_excel_param) == 'yes':
    --input_excel '$excel_file'
#end if
$all_isolates
--min_mq $min_mq
--min_quality_score $min_quality_score
--output_summary '$output_summary'
--quality_score_n_threshold $quality_score_n_threshold
--reference '$reference'
]]></command>
    <inputs>
        <param name="input_zc_vcf" type="data" format="vcf" label="Zero coverage VCF file"/>
        <param name="input_vcf_collection" format="vcf" type="data_collection" collection_type="list" label="Collection of zero coverage VCF files with SNPs found in closely related isolate groups"/>
        <param name="ac" type="integer" min="0" value="2" label="Allele count value" help="SNPs must have at least 1 position with this value"/>
        <param name="min_mq" type="integer" min="0" value="56" label="Minimum map quality value" help="SNPs must have at least 1 position with a higher MQ value"/>
        <param name="min_quality_score" type="integer" min="0" value="150" label="Minimum quality score value" help="SNPs must have at least 1 position with a higher quality score value"/>
        <param name="quality_score_n_threshold" type="integer" min="0" value="150" label="Minimum quality score N value for alleles" help="Alleles are marked as N for SNPs with quality scores between this value and the minimum quality score value above"/>
        <conditional name="input_excel_cond">
            <param name="input_excel_param" type="select" label="Use Excel file for grouping and filtering?">
                <option value="yes" selected="true">Yes</option>
                <option value="no">No</option>
            </param>
            <when value="yes">
                <conditional name="excel_source_cond">
                    <param name="excel_source" type="select" label="Choose the source for the Excel file">
                        <option value="cached">locally cached</option>
                        <option value="history">from history</option>
                    </param>
                    <when value="cached">
                        <param name="input_excel" type="select" label="Excel file">
                            <options from_data_table="vsnp_excel">
                                <filter type="data_meta" column="value" key="value" ref="input_zc_vcf"/>
                                <validator type="no_options" message="No built-in Excel grouping and filtering datasets are available"/>
                            </options>
                        </param>
                    </when>
                    <when value="history">
                        <param name="input_excel" type="data" format="xlsx" label="Excel file">
                            <validator type="no_options" message="The current history does not include an xlsx dataset that can be used for grouping and filtering"/>
                        </param>
                    </when>
                </conditional>
            </when>
            <when value="no"/>
        </conditional>
        <param argument="all_isolates" type="boolean" truevalue="--all_isolates" falsevalue="" checked="false" label="Create a group containing all isolates?"/>
    </inputs>
    <outputs>
        <collection name="snps" type="list" label="${tool.name} on ${on_string} (SNPs)">
            <discover_datasets pattern="__name_and_ext__" directory="output_snps_dir"/>
        </collection>
        <collection name="json_avg_mq" type="list" label="${tool.name} on ${on_string} (average mq)">
            <discover_datasets pattern="__name_and_ext__" directory="output_json_avg_mq_dir"/>
        </collection>
        <collection name="json_snps" type="list" label="${tool.name} on ${on_string} (SNPs as json)">
            <discover_datasets pattern="__name_and_ext__" directory="output_json_snps_dir"/>
        </collection>
        <data name="output_summary" format="html" label="${tool.name} on ${on_string} (summary)"/>
    </outputs>
    <tests>
        <test expect_num_outputs="4">
            <param name="input_zc_vcf" value="input_zc_vcf.vcf" ftype="vcf" dbkey="89"/>
            <param name="input_vcf_collection">
                <collection type="list">
                    <element name="SRR8073662_zc.vcf" value="SRR8073662_zc.vcf" dbkey="89"/>
                    <element name="SRR1792272_zc.vcf" value="SRR1792272_zc.vcf" dbkey="89"/>
                </collection>
            </param>
            <param name="input_excel_param" value="no"/>
            <output_collection name="snps" type="list">
                <element name="all_vcf" file="all_vcf.fasta" ftype="fasta" compare="contains"/>
            </output_collection>
            <output_collection name="json_avg_mq" type="list">
                <element name="all_vcf" file="json_avg_mq_all_vcf.json" ftype="json" compare="contains"/>
            </output_collection>
            <output_collection name="json_snps" type="list">
                <element name="all_vcf" file="json_all_vcf.json" ftype="json" compare="contains"/>
            </output_collection>
            <output name="output_summary" file="output_summary.html" ftype="html" compare="contains"/>
        </test>
    </tests>
    <help>
**What it does**

Accepts a zero coverage VCF file produced by the **vSNP: add zero coverage** tool along with a collection
of zero coverage VCF files that have been aligned with the same reference and contain SNPs called between
closely related isolate groups.  The tool produces fasta files containing SNP alignments, json files
containing the SNP positions and additional json files containing the average map quality values.  An Excel
spreadsheet containing specified SNPs can optiomally be used to filter desired SNP positions by group.
Users can choose a locally cached Excel spreadsheet or one from their current history.

A SNP is added to a group if it has at least one position with a specified allele count value, a quality score
greater than a specified value, and a map quality greater than a specified value.

If the allele count equals the specified value (2) and the quality score for a SNP position is greater than
the minimum quality score value (150), the alternate allele is called.

However, if the allele count is 1, the position is called ambiguous.  Deletions are called when the alternate
allele is a gap.  If the quality score is less than or equal to the minimum quality score N value for alleles
(150), the allele is marked "N".

**Required Options**

 * **Zero coverage VCF file** - Select the zero coverage VCF file from the current history.
 * **Collection of zero coverage VCF files with SNPs found in closely related isolate groups** - Select a dataset collection of zero coverage vcf files from the current history.

**Additional Options**

 * **Allele count value** - A SNP is added to a group if it has at least one position with this value (2 is optimal).
 * **Minimum map quality value** - A SNP is added to a group if it has at least one position with a map quality greater than this value (56 is optimal).
 * **Minimum quality score value** - A SNP is added to a group if it has at least one position with a quality score greater than this value (150 is optimal).
 * **Minimum quality score N value for alleles** - If none of the avove 3 requirements is met and the quality score is less than or equal to the minimum quality score N value for alleles, the allele is marked "N" (150 is optimal).
 * **Use Excel file for grouping and filtering?** - select Yes to filter desired SNP positions by group.  A cached Excel spreadsheet provides the most widely used SNP positions for grouping, but a custom spreadhseet can be selected from the current history.
 * **Create a group containing all isolates?** - select Yes to output an additional group containing of all isolates.
</help>
    <expand macro="citations"/>
</tool>

