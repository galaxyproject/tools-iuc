<tool id="csaw_clusterWindows" name="clusterWindows" version="@VERSION@.0">
    <description>clusters DB windows</description>
    <macros>
       <import>csaw_macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <command detect_errors="exit_code"><![CDATA[
        Rscript '$script'
    ]]></command>
    <configfiles>
        <configfile name="script"><![CDATA[
## Setup R error handling to go to stderr
options(show.error.messages=F, error=function(){cat(geterrmessage(),file=stderr());q("no",1,F)})
loc <- Sys.setlocale("LC_MESSAGES", "en_US.UTF-8")

## Import library
library(csaw)

@GRANGES@

tab <- read.table("$tab")
clust_target <- as.numeric("$target")
@COLNAMES@
tol <- as.numeric("$tol")
grid_length <- as.numeric("$grid_length")
iterations <- as.numeric("$iterations")

#if str($weight_select.weight_selector) == "yes"
    weight <- scan("$weight_select.weight", what=numeric())
#else
    weight <- NULL
#end if

#if str($mergeWindows_select.mergeWindows_selector) == "yes"
    #if str($mergeWindows_select.sign_select.sign_selector) == "yes"
        sign <- scan("$mergeWindows_select.sign_select.sign", what=logical())
    #else 
        sign <- NULL
    #end if

    #if str($mergeWindows_select.max_width) != ""
        max_width <- as.numeric("$mergeWindows_select.max_width")
    #else
        max_width <- NULL
    #end if

    #if str($mergeWindows_select.ignore_strand) == "yes"
        ignore_strand <- TRUE
    #else
        ignore_strand <- FALSE
    #end if

    result <- clusterWindows(regions, tab, clust_target, pval.col=pval_col, fc.col=fc_col, tol, max.width=max_width, ignore.strand=ignore_strand, weight=weight, grid.length=grid_length, iterations=iterations)
#else
    result <- clusterWindows(regions, tab, clust_target, pval.col=pval_col, fc.col=fc_col, tol, weight=weight, grid.length=grid_length, iterations=iterations)
#end if

write.table(result[[1]], file="$id_output", quote=FALSE, row.names=FALSE, col.names=FALSE)
write.table(result[[2]], file="$region_output", quote=FALSE, row.names=FALSE, col.names=FALSE)
write.table(result[[3]], file="$fdr_output", quote=FALSE, row.names=FALSE, col.names=FALSE)

]]>
        </configfile>
    </configfiles>
    <inputs>
        <expand macro="gRanges" />
        <param name="tab" type="data" format="tabular" label="Dataframe of results with a PValue field for each window" />
        <param name="target" type="float" value="" label="Desired cluster-level FDR" />
        <expand macro="col_names" />
        <param name="tol" type="float" value="" optional="true" label="Maximum distance between adjacent windows"/>
        <conditional name="weight_select">
            <param name="weight_selector" type="select" label="Specify frequency weights?" help="The specification is assumed to contain frequency weights of significant tests/windows. For example, a weight of 2 for a test would be equivalent to repeating that test (i.e., repeating the same window so it shows up twice in your analysis). These weights should be the same as those used during weighted FDR control to compute adjusted p-values. In general, you should not set this argument unless you know what youâ€™re doing.">
                <option value="yes">Yes</option>
                <option value="no" selected="true">No</option>
            </param>
            <when value="yes">
                <param name="weight" type="data" format="tabular" label="Frequency weights" help="A dataframe of a column of weights" />
            </when>
            <when value="no"> </when>
        </conditional>
        <expand macro="mergeWindows_select" />
        <param name="grid_length" type="integer" value="21" label="Specify the number of points to use in the grid search" />
        <param name="iterations" type="integer" value="4" label="Specify the number of iterations of the grid search" />
    </inputs>

    <outputs>
        <data name="id_output" format="txt" label="${tool.name} on ${on_string}: clusterWindows id output" />
        <data name="region_output" format="txt" label="${tool.name} on ${on_string}: clusterWindows region output" />
        <data name="fdr_output" format="txt" label="${tool.name} on ${on_string}: clusterWindows FDR output" />
    </outputs>

    <tests>
        <test>
            <param name="GRanges" value="gRange_region3.tabular" />
            <param name="named" value="false" />
            <param name="tab" value="tab.tabular" />
            <param name="target" value="0.05" />
            <param name="pval_col" value="PValue" />
            <param name="fc_col" value="logFC" />
            <param name="tol" value="10" />
            <conditional name="weight_select">
                <param name="weight_selector" value="yes" />
                <param name="weight" value="emFDR_w.tabular" />
            </conditional>
            <conditional name="mergeWindows_select" >
                <param name="mergeWindows_selector" value="no" />
            </conditional>
            <param name="grid_length" value="21" />
            <param name="iterations" value="4" />
            <output name="id_output" file="clusterWindows_id_output0.txt"/>
            <output name="region_output" file="clusterWindows_region_output0.txt"/>
            <output name="fdr_output" file="clusterWindows_FDR_output0.txt"/>
        </test>
        <test>
            <param name="GRanges" value="gRange_region3.tabular" />
            <param name="named" value="false" />
            <param name="tab" value="tab.tabular" />
            <param name="target" value="0.05" />
            <param name="pval_col" value="PValue" />
            <param name="fc_col" value="logFC" />
            <param name="tol" value="10" />
            <conditional name="weight_select">
                <param name="weight_selector" value="no" />
            </conditional>
            <conditional name="mergeWindows_select" >
                <param name="mergeWindows_selector" value="no" />
            </conditional>
            <param name="grid_length" value="21" />
            <param name="iterations" value="4" />
            <output name="id_output" file="clusterWindows_id_output1.txt"/>
            <output name="region_output" file="clusterWindows_region_output1.txt"/>
            <output name="fdr_output" file="clusterWindows_FDR_output1.txt"/>
        </test>
        <test>
            <param name="GRanges" value="gRange_region3.tabular" />
            <param name="tab" value="tab.tabular" />
            <param name="target" value="0.05" />
            <param name="pval_col" value="PValue" />
            <param name="fc_col" value="logFC" />
            <param name="tol" value="10" />
            <conditional name="weight_select">
                <param name="weight_selector" value="no" />
            </conditional>
            <conditional name="mergeWindows_select" >
                <param name="mergeWindows_selector" value="yes" />
                <conditional name="sign_select">
                    <param name="sign_selector" value="no" />
                </conditional>
                <param name="max_width" value="10" />
                <param name="ignore_strand" value="true" />
            </conditional>
            <param name="grid_length" value="21" />
            <param name="iterations" value="4" />
            <output name="id_output" file="clusterWindows_id_output2.txt"/>
            <output name="region_output" file="clusterWindows_region_output2.txt"/>
            <output name="fdr_output" file="clusterWindows_FDR_output2.txt"/>
        </test>
        <test>
            <param name="GRanges" value="gRange_region3.tabular" />
            <param name="tab" value="tab.tabular" />
            <param name="target" value="0.05" />
            <param name="pval_col" value="PValue" />
            <param name="fc_col" value="logFC" />
            <param name="tol" value="10" />
            <conditional name="weight_select">
                <param name="weight_selector" value="no" />
            </conditional>
            <conditional name="mergeWindows_select" >
                <param name="mergeWindows_selector" value="yes" />
                <conditional name="sign_select">
                    <param name="sign_selector" value="yes" />
                    <param name="sign" value="mergeW_sign.tabular" />
                </conditional>
                <param name="max_width" value="10" />
                <param name="ignore_strand" value="true" />
            </conditional>
            <param name="grid_length" value="21" />
            <param name="iterations" value="4" />
            <output name="id_output" file="clusterWindows_id_output3.txt"/>
            <output name="region_output" file="clusterWindows_region_output3.txt"/>
            <output name="fdr_output" file="clusterWindows_FDR_output3.txt"/>
        </test>
    </tests>

    <help><![CDATA[
        Clusters significant windows into clusters while controlling the cluster-level FDR.
    ]]></help>
    <expand macro="citations" />
</tool>