<tool id="csaw_extractReads" name="extractReads" version="@VERSION@.0">
    <description>extracts reads from BAM file</description>
     <macros>
       <import>csaw_macros.xml</import>
    </macros>
     <expand macro="requirements" />
    <command detect_errors="exit_code"><![CDATA[
        Rscript '$script'
    ]]></command>
    <configfiles>
        <configfile name="script"><![CDATA[
## Setup R error handling to go to stderr
options(show.error.messages=F, error=function(){cat(geterrmessage(),file=stderr());q("no",1,F)})
loc <- Sys.setlocale("LC_MESSAGES", "en_US.UTF-8")

## Import library
library(csaw)
library(Rsamtools)
   
bamFile <- "$bam_file"
indexBam(bamFile)

@GRANGES@

#if str($ext_select.ext_selector) == "yes"
    #if str($ext_select.ext_type_select.ext_type_selector) == "integer"
        ext <- as.numeric("$ext_select.ext_type_select.ext")
    #else
        ext1 <- as.numeric("$ext_select.ext_type_select.ext1")
        ext2 <- as.numeric("$ext_select.ext_type_select.ext2")
        ext <- list(ext1, ext2)
    #end if
#else
    ext <- NA
#end if

#if str($as_reads) == "true"
    as_reads <- TRUE
#else
    as_reads <- FALSE
#end if

@READPARAM@

result <- extractReads(bamFile, regions, ext=ext, param=p, as.reads=as_reads)

write.table(result, file = "$output", quote = FALSE, col.names = TRUE, row.names=FALSE)

]]>
        </configfile>
    </configfiles>
    <inputs>
        <param name="bam_file" type="data" format="bam" label="BAM file" />
        <param name="GRanges" type="data" format="tabular" label="GRanges" help="Upload as a dataframe with one row where the first column is the sequence names, the second column is the start position of the range, and the third column is the end position of the range." />
        <param name="named" type="boolean" truevalue="true" falsevalue="" checked="false" label="Are the columns of the dataframe named?" />
        <conditional name="ext_select">
            <param name="ext_selector" type="select" label="Specify the fragment length for directional read extension?" >
                <option value="yes">Yes</option>
                <option value="no" selected="true">No</option>
            </param>
            <when value="yes">
                <conditional name="ext_type_select">
                    <param name="ext_type_selector" type="select" label="Specify sinlge or multiple fragment length(s)?">
                        <option value="integer" selected="true">Single fragment length</option>
                        <option value="list">Multiple fragment lengths</option>
                    </param>
                    <when value="integer">
                        <param name="ext" type="integer" value="" label="Specify the fragment length" />
                    </when>
                    <when value="list">
                        <param name="ext1" type="integer" value="" label="Specify the fragment length" />
                        <param name="ext2" type="integer" value="" label="Specify the fragment length" />
                    </when>
                </conditional>
            </when>
            <when value="no"> </when>
        </conditional>
        <expand macro="readParam_select" />
        <param name="as_reads" type="boolean" truevalue="true" falsevalue="" checked="false" label="Return reads instead of fragments for paired-end data?" />        
    </inputs>
    <outputs>
        <data name="output" format="txt" label="${tool.name} on ${on_string}: extractReads output" />
    </outputs>

    <tests>
        <test>
            <param name="bam_file" value="rep1.bam" ftype="bam" />
            <param name="GRanges" value="extractReads_region.tabular" />
            <param name="named" value="true" />
            <conditional name="ext_select">
                <param name="ext_selector" value="no" />
            </conditional>
            <conditional name="readParam_select">
                <param name="readParam_selector" value="no" />
            </conditional>
            <param name="as_reads" value="false" />
            <output name="output" value="extractReads_output1.txt" />
        </test>
        <test>
            <param name="bam_file" value="rep1.bam" ftype="bam" />
            <param name="GRanges" value="extractReads_region.tabular" />
            <param name="named" value="true" />
            <conditional name="ext_select">
                <param name="ext_selector" value="yes" />
                <conditional name="ext_type_select">
                    <param name="ext_type_selector" value="integer" />
                    <param name="ext" value="100" />
                </conditional>
            </conditional>
            <conditional name="readParam_select">
                <param name="readParam_selector" value="yes" />
                <param name="pe" value="none" />
                <param name="max_frag" value="500" />
                <param name="dedup" value="false" />
                <param name="minq" value="1" />
                <param name="forward" value="NA" />
                <param name="restrict" value="chrA" />
                <conditional name="discard_select">
                    <param name="discard" value="no" />
                </conditional>
            </conditional>
            <param name="as_reads" value="false" />
            <output name="output" value="extractReads_output2.txt" />
        </test>
        <test>
            <param name="bam_file" value="rep1.bam" ftype="bam" />
            <param name="GRanges" value="extractReads_region.tabular" />
            <param name="named" value="true" />
            <conditional name="ext_select">
                <param name="ext_selector" value="yes" />
                <conditional name="ext_type_select">
                    <param name="ext_type_selector" value="list" />
                    <param name="ext1" value="50" />
                    <param name="ext2" value="100" />
                </conditional>
            </conditional>
            <conditional name="readParam_select">
                <param name="readParam_selector" value="yes" />
                <param name="pe" value="none" />
                <param name="max_frag" value="500" />
                <param name="dedup" value="false" />
                <param name="minq" value="1" />
                <param name="forward" value="NA" />
                <param name="restrict" value="chrA" />
                <conditional name="discard_select">
                    <param name="discard" value="yes" />
                    <param name="GRanges" value="gRange_discard.tabular" />
                    <param name="named" value="false" />
                </conditional>
            </conditional>
            <param name="as_reads" value="false" />
            <output name="output" value="extractReads_output3.txt" />
        </test>
    </tests>

    <help><![CDATA[
Extract reads from a BAM file with the specified parameter settings overlapping a given genomic interval. The aim is to supply the raw data for visualization, in a manner that maintains consistency with the rest of the analysis.

If paired-end data present in the BAM file(s) is both or return reads instead of fragments for paired-end data is not selected, it returns:

- `GRanges object`: containing the read (for singleend data) or fragment intervals (for paired-end data)

If paired-end data present in the BAM file(s) is both or return reads instead of fragments for paired-end data is selected, it returns:

- `GRanges list`: containing the paired reads
    ]]></help>
    <expand macro="citations" />
</tool>