<tool id="csaw_empiricalFDR" name="empiricalFDR" version="@VERSION@.0">
    <description>controls the empirical FDR</description>
     <macros>
       <import>csaw_macros.xml</import>
    </macros>
     <expand macro="requirements" />
    <command detect_errors="exit_code"><![CDATA[
        Rscript '$script'
    ]]></command>
    <configfiles>
        <configfile name="script"><![CDATA[
## Setup R error handling to go to stderr
options(show.error.messages=F, error=function(){cat(geterrmessage(),file=stderr());q("no",1,F)})
loc <- Sys.setlocale("LC_MESSAGES", "en_US.UTF-8")

## Import library
library(csaw)

ids <- scan("$ids", what = integer())
tab <- read.table("$tab", header=T)

#if str($weight_select.weight_selector) == "yes"
    weight <- scan("$weight_select.weight")
#else
    weight <- NULL
#end if

#if str($pval_col) != ''
    pval_col <- as.numeric(gsub("([0-9]+).*$", "\\1", "$pval_col"))
    if (is.na(pval_col)){
        pval_col <- "$pval_col"
    }
#else
    pval_col <- NULL
#end if
#if str($fc_col) != ''
    fc_col <- as.numeric(gsub("([0-9]+).*$", "\\1", "$fc_col"))
    if (is.na(fc_col)){
        fc_col <- "$fc_col"
    }
#else
        fc_col <- NULL
#end if

#if str($neg_down) == 'true'
    neg_down <- TRUE
#else
    neg_down <- FALSE
#end if

empirical <- empiricalFDR(ids, tab, weight=weight, pval.col=pval_col, fc.col=fc_col, neg.down=neg_down)

write.table(empirical, file = "$output", quote = FALSE, col.names = TRUE, row.names=FALSE)

]]>
        </configfile>
    </configfiles>
    <inputs>
        <param name="ids" type="data" format="tabular" label="Data containing the cluster ID for each test" help="A dataframe with a column of the ids" />
        <param name="tab" type="data" format="tabular" label="A dataframe of results with PValue and at least one logFC field for each test" />
        <conditional name="weight_select">
            <param name="weight_selector" type="select" label="Specify weights for each window?" >
                <option value="yes">Yes</option>
                <option value="no" selected="true">No</option>
            </param>
            <when value="yes">
                <param name="weight" type="data" format="tabular" label="Weights for each window" help="A dataframe with a column of the weights. The number of rows is the same as the number of rows of the ids"/>
            </when>
            <when value="no"> </when>
        </conditional>
        <expand macro="col_names" />
        <param name="neg_down" type="boolean" truevalue="true" falsevalue="" checked="true" label="Does the negative log-fold changes correspond to the “wrong” direction?" />
    </inputs>
    <outputs>
        <data name="output" format="txt" label="${tool.name} on ${on_string}: empiricalFDR output" />
    </outputs>

    <tests>
        <test>
            <param name="ids" value="emFDR_ids.tabular" />
            <param name="tab" value="emFDR_tab.tabular" />
            <conditional name="weight_select">
                <param name="weight_selector" value="no" />
            </conditional>
            <param name="pval_col" value="PValue" />
            <param name="fc_col" value="logFC" />
            <param name="neg_down" value="true"/>
            <output name="output" value="empiricalFDR_output1.txt" />
        </test>
        <test>
            <param name="ids" value="emFDR_ids.tabular" />
            <param name="tab" value="emFDR_tab.tabular" />
            <conditional name="weight_select">
                <param name="weight_selector" value="yes" />
                <param name="weight" value="emFDR_w.tabular" />
            </conditional>
            <param name="pval_col" value="PValue" />
            <param name="fc_col" value="logFC" />
            <param name="neg_down" value="true"/>
            <output name="output" value="empiricalFDR_output2.txt" />
        </test>
    </tests>

    <help><![CDATA[
       Control the empirical FDR across clusters for comparisons to negative controls, based on tests that are significant in the wrong direction. Some experiments involve comparisons to negative controls where there should be no signal/binding. In such case, genuine differences should only occur in one direction, i.e., up in the non-control samples. Thus, the number of significant tests that change in the wrong direction can be used as an estimate of the number of false positives. This function converts two-sided p-values in tab[,pval.col] to one-sided counterparts in the wrong direction. It combines the one-sided p-values for each cluster using combineTests. The number of significant clusters at some p-value threshold represents the estimated number of false positive clusters.
       The same approach is applied for one-sided p-values in the right direction, where the number of detected clusters at the threshold represents the total number of discoveries. Dividing the number of false positives by the nmber of discoveries yields the empirical FDR at each p-value threshold. Monotonicity is enforced (i.e., the empirical FDR only decreases with decreasing p-value) as is the fact that the empirical FDR must be below unity
    ]]></help>
    <expand macro="citations" />
</tool>