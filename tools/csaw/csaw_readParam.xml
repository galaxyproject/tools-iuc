<tool id="csaw_readParam" name="Read Parameters" version="@VERSION@.0">
    <description>specify read loading parameters</description>

     <macros>
       <import>csaw_macros.xml</import>
    </macros>

     <expand macro="requirements" />

    <command detect_errors="exit_code"><![CDATA[
        Rscript '$script'
    ]]></command>

    <configfiles>
        <configfile name="script"><![CDATA[
## Setup R error handling to go to stderr
options(show.error.messages=F, error=function(){cat(geterrmessage(),file=stderr());q("no",1,F)})
loc <- Sys.setlocale("LC_MESSAGES", "en_US.UTF-8")

## Import library
library(csaw)

## readParam
    pe <- "$pe"
    max_frag <- as.numeric("$max_frag")

    #if str($dedup) == ''
        ded_up <- F
    #else
        ded_up <- T
    #end if

    #if str($minq) != ''
        min_q <- as.numeric("${minq}")
    #else
        min_q <- NA
    #end if

    #if str($forward) == 'NA'
        forward <- NA
    #else if str($forward) == 'forward'
        forward <- TRUE
    #else if str($forward) == 'reverse'
        forward <- FALSE
    #end if

    restrict <- as.character(unlist(strsplit(gsub(" ", "", "${restrict}", ","), ",")))

    #if str($discard_select) == 'yes'
        dis_gRange <- as.character(unlist(strsplit(gsub(" ", "", "${GRanges}", ","), ",")))
        dis_b <- unlist(strsplit(gsub(" ", "", "${IRanges}", ","), ";"))
        dis_c <- gsub("\\[|\\]", "", dis_b)
        dis_d <- lapply(dis_c, function(x){x <- as.numeric(unlist(strsplit(x, ",")))})
        dis_e <- c()
        dis_f <- c()
        for (i in seq(dis_d)){ 
            dis_e <- c(dis_e, dis_d[[i]][1])
            dis_f <- c(dis_f, dis_d[[i]][2])
        }
        discard <- GRanges(dis_gRange, IRanges(dis_e, dis_f))
    #else
        discard <- GRanges()
    #end if

    sink("$output")
        readParam(pe=pe, max.frag=max_frag, dedup=ded_up, minq=min_q, forward=forward, discard=discard, BPPARAM=SerialParam())
    sink() 
]]>
        </configfile>
    </configfiles>
    <inputs>
    	<expand macro="readParam" />
    </inputs>

    <outputs>
        <data name="output" format="txt" label="${tool.name} on ${on_string}: Output" />
    </outputs>

    <tests>
        <test>
            <param name="readParam_selector" value="yes" />
            <param name="pe" value="both" />
            <param name="max_frag" value="100" />
            <param name="dedup" value="false" />
            <param name="minq" value="20" />
            <param name="forward" value="NA" />
            <param name="restrict" value="mitochondria" />
            <conditional name="discard_select">
                <param name="discard" value="yes" />
                <param name="GRanges" value="chrA" />
                <param name="IRanges" value="range_readParam.tabular" />
            </conditional>
        </test>

    </tests>

    <help><![CDATA[
        Each readParam object stores a number of parameters, each pertaining to the extraction of reads from a BAM file.
    ]]></help>


</tool>