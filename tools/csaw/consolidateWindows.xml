<tool id="csaw_consolidateWindows" name="consolidateWindows" version="@VERSION@.0">
    <description>consolidates window sizes</description>
     <macros>
       <import>csaw_macros.xml</import>
    </macros>
     <expand macro="requirements" />
    <command detect_errors="exit_code"><![CDATA[
        Rscript '$script'
    ]]></command>
    <configfiles>
        <configfile name="script"><![CDATA[
## Setup R error handling to go to stderr
options(show.error.messages=F, error=function(){cat(geterrmessage(),file=stderr());q("no",1,F)})
loc <- Sys.setlocale("LC_MESSAGES", "en_US.UTF-8")

## Import library
library(csaw)
library(Rsamtools)

@WINDOWCOUNTS@

object <- window_counts

]]>
        </configfile>
    </configfiles>
    <inputs>
        <repeat name="data" title="RangedSummarizedExperiment">
            
              <expand macro="windowCounts" />

        </repeat>
        <section name="consolidateWindows" title="Consolidate window sizes" expanded="true">
            <repeat name="db" title="Upload dataframes containing the DB test results for each entry of data">
              <param name="result_list" type="data" format="tabular" label="DB test results" />
            </repeat>
            <param name="equiweight" type="boolean" truevalue="true" falsevalue="" checked="true" label="Enforce equal weighting from each analysis?" help="Some effort is required to equalize the contribution of the results from each analysis. This is done by setting selecting yes, where the weight of each window is inversely proportional to the number of windows from that analysis." />
            <conditional name="mergeWindows_select" >
                <param name="mergeWindows_selector" type="select" label="Additional parameters to pass to mergeWindows?" >
                    <option value="yes">Yes</option>
                    <option value="no" selected="true">No</option>
                </param>
                <when value="yes">
                    <param name="tol" type="float" value="" optional="true" label="Maximum distance between adjacent windows"/>
                <!--Sign doesn't work, no test data
                Error in mergeWindows(regions[sig], tol = tol, sign = sign[sig], ...) : formal argument "sign" matched by multiple actual arguments-->
                    <conditional name="sign_select">
                        <param name="sign_selector" type="select" label="Specify a positive log-FC for each window?" >
                            <option value="yes">Yes</option>
                            <option value="no" selected="true">No</option>
                        </param>
                        <when value="yes">
                            <param name="sign" type="data" format="tabular" label="Positive log-FC for each window" help="Upload as datafame with a column of logical values" />
                        </when>
                        <when value="no"> </when>
                    </conditional>
                    <param name="max_width" type="float" value="" optional="true" label="Maximum size of merged intervals" help="Specification prevents the formation of excessively large clusters when many adjacent regions are present. Any cluster that is wider than the max width is split into multiple subclusters of (roughly) equal size. Specifically, the cluster interval is partitioned into the smallest number of equally-sized subintervals where each subinterval is smaller than max width. Windows are then assigned to each subinterval based on the location of the window midpoints. Suggested values range from 2000 to 10000 bp, but no limits are placed on the maximum size if no value entered." />
                    <param name="ignore_strand" type="boolean" truevalue="true" falsevalue="" checked="true" label="Ignore the strandedness of regions?" help="If no is selected, the entries in regions are split into their separate strands." />
                </when>
                <when value="no"> </when>
            </conditional>
            <conditional name="region_select">
                <param name="region_selector" type="select" label="Specify regions of interest for overlapping with windows?">
                    <option value="yes">Yes</option>
                    <option value="no" selected="true">No</option>
                </param>
                <when value="yes">
                    <expand macro="gRanges" />
                </when>
                <when value="no"> </when>
            </conditional>
            <conditional name="findOverlaps_select">
                <param name="findOverlaps_selector" type="select" label="Pass parameters to findOverlaps?" >
                    <option value="yes">Yes</option>
                    <option value="no" selected="true">No</option>
                </param>
                <when value="yes">
                    <expand macro="findOverlaps" />
                </when>
                <when value="no"> </when>
            </conditional>
            <conditional name="sign_list_select">
                <param name="sign_list_selector" type="select" label="Specify whether the log-fold change is positive for the corresponding windows?">
                    <option value="yes">Yes</option>
                    <option value="no" selected="true">No</option>
                </param>
                <when value="yes">
                    <param name="sign_list" type="data" format="tabular" label="A dataframe with rows of logical values specifying whether the log-fold change is positive for the corresponding window" help="The values in the rowscorresponds to and is of the same length as the GRanges objects." />
                </when>
                <when value="no"> </when>
            </conditional>
        </section>
    </inputs>

    <outputs>
        <data name="id_output" format="txt" label="${tool.name} on ${on_string}: consolidateWindows ids output" />
        <data name="weight_output" format="txt" label="${tool.name} on ${on_string}: consolidateWindows weights output" />
         <data name="region_output" format="txt" label="${tool.name} on ${on_string}: consolidateWindows regions output" />
    </outputs>

    <tests>
        <test>
            <repeat name="gRange_obj">
                <param name="GRanges" value="chrA" />
                <param name="IRanges" value="conClus_range1.tabular" />
            </repeat>
            <repeat name="gRange_obj">
                <param name="GRanges" value="chrA" />
                <param name="IRanges" value="conClus_range1.tabular" />
            </repeat>
            <repeat name="gRange_obj">
                <param name="GRanges" value="chrA" />
                <param name="IRanges" value="conClus_range1.tabular" />
            </repeat>
            <repeat name="db">
                <param name="result_list" value="db1.tabular" />
            </repeat>
            <repeat name="db">
                <param name="result_list" value="db2.tabular" />
            </repeat>
            <repeat name="db">
                <param name="result_list" value="db3.tabular" />
            </repeat>
            <param name="equiweight" value="true" />
            <param name="tol" value="20" />
            <param name="max_width" value="10" />
            <conditional name="mergeWindows_select">
                <param name="mergeWindows_selector" value="no" />
            </conditional>
            <conditional name="combineTest_select">
                <param name="combineTest_selector" value="no" />
            </conditional>
            <conditional name="region_select">
                <param name="region_selector" value="yes" />
                <param name="GRanges" value="chrA" />
                <param name="IRanges" value="range1.tabular" />
            </conditional>
            <conditional name="findOverlaps_select">
                <param name="findOverlaps_selector" value="no" />
            </conditional>
            <output name="id_output" value="conSizes_id_output.txt" />
            <output name="region_output" value="conSizes_region_output.txt" />
            <output name="table_output" value="conSizes_table_output.txt" />
        </test>
        <test>
            <repeat name="gRange_obj">
                <param name="GRanges" value="chrA" />
                <param name="IRanges" value="conClus_range1.tabular" />
            </repeat>
            <repeat name="gRange_obj">
                <param name="GRanges" value="chrA" />
                <param name="IRanges" value="conClus_range1.tabular" />
            </repeat>
            <repeat name="gRange_obj">
                <param name="GRanges" value="chrA" />
                <param name="IRanges" value="conClus_range1.tabular" />
            </repeat>
            <repeat name="db">
                <param name="result_list" value="db1.tabular" />
            </repeat>
            <repeat name="db">
                <param name="result_list" value="db2.tabular" />
            </repeat>
            <repeat name="db">
                <param name="result_list" value="db3.tabular" />
            </repeat>
            <param name="equiweight" value="true" />
            <param name="tol" value="20" />
            <param name="max_width" value="10" />
            <conditional name="mergeWindows_select">
                <param name="mergeWindows_selector" value="yes" />
                <param name="GRanges" value="chrA" />
                <param name="IRanges" value="mW_regions.tabular" />
                <param name="tol" value="100" />
                <conditional name="sign_select">
                    <param name="sign_selector" value="no" />
                </conditional>
                <param name="max_width" value="5" />
            </conditional>
            <conditional name="region_select">
                <param name="region_selector" value="yes" />
                <param name="GRanges" value="chrA" />
                <param name="IRanges" value="range1.tabular" />
            </conditional>
            <conditional name="findOverlaps_select">
                <param name="findOverlaps_selector" value="yes" />
                <param name="query" value="query.tabular" />
                <param name="subject" value="subject.tabular" />
                <param name="maxgap" value="0" />
                <param name="minoverlap" value="0" />
                <param name="type" value="any" />
                <param name="select" value="all" />
            </conditional>
            <output name="id_output" value="conSizes_id_output.txt" />
            <output name="region_output" value="conSizes_region_output.txt" />
            <output name="table_output" value="conSizes_table_output.txt" />
        </test>
    </tests>

    <help><![CDATA[
        Consolidate windows of different sizes into a common set of clusters. 
    ]]></help>
    <expand macro="citations" />
</tool>