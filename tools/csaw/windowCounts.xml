<tool id="csaw_windowCounts" name="Window Counts" version="@VERSION@.0">
    <description>count reads overlapping each window</description>
    <macros>
       <import>csaw_macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <command detect_errors="exit_code"><![CDATA[
        Rscript '$script'
    ]]></command>
    <configfiles>
        <configfile name="script"><![CDATA[
## Setup R error handling to go to stderr
options(show.error.messages=F, error=function(){cat(geterrmessage(),file=stderr());q("no",1,F)})
loc <- Sys.setlocale("LC_MESSAGES", "en_US.UTF-8")

## Import library
library(csaw)
library(Rsamtools)

##calculateCPM

bamFiles <- c()
#for $i in $bam_input
    bamFiles <- c(bamFiles, '${i.bam_file}')
#end for
indexBam(bamFiles)

spacing <- as.numeric("$spacing")
#if str($width) != ''
    width <- as.numeric("$width")
#else
    width <- spacing
#end if
#if str($ext_selector.ext_select) == 'integer'
    ext <- as.numeric("$ext")
#else
    #if "$ext1" != ""
        ext1 <- as.numeric(unlist(strsplit("$ext1", ",")))
    #else
        ext1 <- NA
    #end if
    #if "$ext2" != ""
        ext2 <- as.numeric(unlist(strsplit("$ext2", ",")))
    #else
        ext2 <- NA
    #end if
    ext <- list(ext1, ext2)
#end if
shift <- as.numeric("$shift")
filter <- as.numeric("$filter")
#if str($bin) == "true"
    bin <- TRUE
#else
    bin <- FALSE
#end if

@READPARAM@

counts <- windowCounts(bamFiles, spacing=spacing, width=width, ext=ext, shift=shift, filter=filter, bin=bin, param=p)
counts <- list(counts)
write.table(do.call(rbind, counts), file="$output", quote = FALSE, row.names = c("Counts "), col.names = FALSE)
]]>
        </configfile>
    </configfiles>
    <inputs>
        <repeat name="bam_input" title="Upload indexed BAM files in sorted order" >
            <param name="bam_file" type="data" format="bam" label="BAM file" />
        </repeat>
        <param name="spacing" type="integer" value="50" label="Distance between consecutive windows" help="New windows are defined by sliding the current window to the right by the specified spacing." />
        <param name="width" type="integer" value="" optional="true" label="Width of the window" help="The value of width can be interpreted as the width of the contact area between the DNA and protein. In practical terms, it determines the spatial resolution of the analysis. Larger windows count reads over a larger region which results in larger counts. This results in greater detection power at the cost of resolution." />
        <conditional name="ext_selector">
            <param name="ext_select" type="select" label="Average length(s) of the sequenced fragments in each library" >
                <option value="integer" selected="true">Enter an integer</option>
                <option value="list">Enter two integers or lists</option>
            </param>
            <when value="integer">
                <param name="ext" type="integer" value="100" label="Enter an integer as the average length" />
            </when>
            <when value="list">
               <param name="ext_list1" type="text" optional="true" label="Enter an integer or vector" />
               <param name="ext_list2" type="text" optional="true" label="Enter an integer or vector" />
            </when>
        </conditional>
        <param name="shift" type="integer" value="0" label="Specifying how much the start of each window should be shifted to the left" help="The first window on a chromosome starts at base position 1. Specifying an appropriate value to shift to the left." />
        <param name="filter" type="integer" value="10" label="minimum count sum across libraries for each window" />
        <param name="bin" type="boolean" truevalue="true" falsevalue="" checked="false" label="Perform binning?" help="If yes is selected, settings are internally adjusted so that all reads are counted into non-overlapping adjacent bins of size width." />
        <expand macro="readParam_select" />
    </inputs>

    <outputs>
        <data name="output" format="txt" label="${tool.name} on ${on_string}: calculateCPM output" />
    </outputs>

    <tests>
        <test>
            <repeat name="bam_input">
                <param name="bam_file" value="rep1.bam" ftype="bam" />
            </repeat>
            <repeat name="bam_input">
                <param name="bam_file" value="rep2.bam" ftype="bam" />
            </repeat>
            <param name="spacing" value="50"/>
            <param name="width" value="" />
            <conditional name="ext_selector">
                <param name="ext_select" value="list" />
                <param name="ext_list1" value="50, 100" />
                <param name="ext_list2" value="80" />
            </conditional>
            <param name="shift" value="0" />
            <param name="filter" value="10" />
            <conditional name="readParam_select">
                <param name="readParam_selector" value="no" />
            </conditional>            
        </test>
        <test>
            <repeat name="bam_input">
                <param name="bam_file" value="rep1.bam" ftype="bam" />
            </repeat>
            <repeat name="bam_input">
                <param name="bam_file" value="rep2.bam" ftype="bam" />
            </repeat>
            <param name="spacing" value="50"/>
            <param name="width" value="" />
            <conditional name="ext_selector">
                <param name="ext_select" value="list" />
                <param name="ext_list1" value="50, 100" />
                <param name="ext_list2" value="" />
            </conditional>
            <param name="shift" value="0" />
            <param name="filter" value="10" />
             <conditional name="readParam_select">
                <param name="readParam_selector" value="yes" />
                <param name="pe" value="both" />
                <param name="max_frag" value="100" />
                <param name="dedup" value="false" />
                <param name="minq" value="20" />
                <param name="forward" value="NA" />
                <param name="restrict" value="chrA" />
                <param name="discard" value="no" />
            </conditional>            
        </test>
    </tests>

    <help><![CDATA[
        Count the number of extended reads overlapping a sliding window at spaced positions across the genome. A RangedSummarizedExperiment object is returned containing one integer matrix. 
    ]]></help>
    <expand macro="citations" />
</tool>