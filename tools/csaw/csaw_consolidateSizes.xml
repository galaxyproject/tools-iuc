<tool id="csaw_consolidateSizes" name="Consolidate Sizes" version="@VERSION@.0">
    <description>consolidates window sizes</description>
     <macros>
       <import>csaw_macros.xml</import>
    </macros>
     <expand macro="requirements" />
    <command detect_errors="exit_code"><![CDATA[
        Rscript '$script'
    ]]></command>
    <configfiles>
        <configfile name="script"><![CDATA[
## Setup R error handling to go to stderr
options(show.error.messages=F, error=function(){cat(geterrmessage(),file=stderr());q("no",1,F)})
loc <- Sys.setlocale("LC_MESSAGES", "en_US.UTF-8")

## Import library
library(csaw)

##consolidateSizes
    @DATALIST@
    @RESULTLIST@
    @EQUIWEIGHT@
    cS_tol <- as.numeric("$tol")
    @MAXWIDTH@
    #if str($mergeWindows_select.mergeWindows_selector) == 'yes'
        gRange <- as.character(unlist(strsplit(gsub(" ", "", "${mergeWindows_select.GRanges}", ","), ",")))
        rangeData <- read.table("$mergeWindows_select.IRanges", header=F)
        start <- c(rangeData[[1]])
        end <- c(rangeData[[2]])
        regions <- GRanges(gRange, IRanges(start, end))
        mW_tol <- as.numeric("$tol")
        #if str($mergeWindows_select.max_width) != ''
            maxWidth <- as.numeric("$mergeWindows_select.max_width")
        #else
            maxWidth <- NULL
        #end if
        #if str($mergeWindows_select.ignore_strand) == 'true'
            ignore_strand <- T
        #else
            ignore_strand <- F
        #end if

        merge_args = list(regions = regions, tol = mW_tol, sign=NULL, max.width=maxWidth, ignore.strand=ignore_strand)
    #else
        merge_args=list()
    #end if
    #if str($combineTest_select.combineTest_selector) == 'yes'
        comTest_ids <-scan("$combineTest_select.ids", what = integer())
        comTest_tab <- read.table("$combineTest_select.tab", sep="", header=T)
        #if str($combineTest_select.weight) != ''
            comTest_w <- scan("$combineTest_select.weight", what=numeric())
        #else
            comTest_w <- NULL
        #end if
        #if str($combineTest_select.pval_col) != ''
            pval_col <- as.numeric(gsub("([0-9]+).*$", "\\1", "$combineTest_select.pval_col"))
            if (is.na(pval_col)){
                pval_col <- "$combineTest_select.pval_col"
            }
        #else
            pval_col <- NULL
        #end if
        #if str($combineTest_select.fc_col) != ''
            fc_col <- as.numeric(gsub("([0-9]+).*$", "\\1", "$combineTest_select.fc_col"))
            if (is.na(fc_col)){
                fc_col <- "$combineTest_select.fc_col"
            }
        #else
            fc_col <- NA
        #end if
        combine_args=list(ids = comTest_ids, tab=comTest_tab, weight=comTest_w, pval.col=pval_col, fc.col=fc_col)
    #else
        combine_args=list()
    #end if
    #if str($region_select.region_selector) == 'yes'
        cS_gRange <- as.character(unlist(strsplit(gsub(" ", "", "${region_select.GRanges}", ","), ",")))
        cS_iRange <- read.table("$region_select.IRanges", header=F)
        start <- c(cS_iRange[[1]])
        end <- c(cS_iRange[[2]])
    cS_regions <- GRanges(cS_gRange, IRanges(start,end))
    #else
        cS_regions <-NULL
    #end if

    
    result <- consolidateSizes(dataList, resultList, equiweight=equiweight, merge.args= merge_arg, combine.args = combine_args, region=cS_regions)

    ids = result[[1]]
    lapply(ids, function(x) write.table(x, file="$id_output", quote = FALSE, row.names = FALSE, col.names = TRUE, append=TRUE))
    region <- result[[2]]
    write.table(region, file="$region_output", quote = FALSE, row.names = FALSE)
    table <- result[[3]]
    write.table(table, file="$table_output", row.names = FALSE)

]]>
        </configfile>
    </configfiles>
    <inputs>
    	<expand macro="consolidate_param" />
        <param name="tol" type="float" value="" optional="true" label="Maximum distance between adjacent windows"/>
        <param name="max_width" type="float" value="" optional="true" label="Maximum size of merged intervals"  />
        <conditional name="mergeWindows_select">
            <param name="mergeWindows_selector" type="select" label="Pass parameters to mergeWindows?" >
                <option value="yes">Yes</option>
                <option value="no" selected="true">No</option>
            </param>
            <when value="yes">
                <expand macro="mergeWindows_param" />
            </when>
            <when value="no"> </when>
        </conditional>
         <conditional name="combineTest_select">
            <param name="combineTest_selector" type="select" label="Pass parameters to combineTest?" >
                <option value="yes">Yes</option>
                <option value="no" selected="true">No</option>
            </param>
            <when value="yes">
                <expand macro="combineTest_param" />
            </when>
            <when value="no"> </when>
        </conditional>
        <conditional name="region_select">
            <param name="region_selector" type="select" label="Specify regions of interest for overlapping with windows?">
                <option value="yes">Yes</option>
                <option value="no" selected="true">No</option>
            </param>
            <when value="yes">
                <expand macro="gRanges" />
            </when>
            <when value="no"> </when>
        </conditional>
        <conditional name="findOverlaps_select">
            <param name="findOverlaps_selector" type="select" label="Pass parameters to findOverlaps?" >
                <option value="yes">Yes</option>
                <option value="no" selected="true">No</option>
            </param>
            <when value="yes">
                <expand macro="findOverlaps" />
            </when>
            <when value="no"> </when>
        </conditional>
    </inputs>

    <outputs>
        <data name="id_output" format="txt" label="${tool.name} on ${on_string}: consolidateSizes id output" />
        <data name="region_output" format="txt" label="${tool.name} on ${on_string}: consolidateSizes region output" />
        <data name="table_output" format="txt" label="${tool.name} on ${on_string}: consolidateSizes table output" />
    </outputs>

    <tests>
        <test>
            <repeat name="gRange_obj">
                <param name="GRanges" value="chrA" />
                <param name="IRanges" value="conClus_range1.tabular" />
            </repeat>
            <repeat name="gRange_obj">
                <param name="GRanges" value="chrA" />
                <param name="IRanges" value="conClus_range1.tabular" />
            </repeat>
            <repeat name="gRange_obj">
                <param name="GRanges" value="chrA" />
                <param name="IRanges" value="conClus_range1.tabular" />
            </repeat>
            <repeat name="db">
                <param name="result_list" value="db1.tabular" />
            </repeat>
            <repeat name="db">
                <param name="result_list" value="db2.tabular" />
            </repeat>
            <repeat name="db">
                <param name="result_list" value="db3.tabular" />
            </repeat>
            <param name="equiweight" value="true" />
            <param name="tol" value="20" />
            <param name="max_width" value="10" />
            <conditional name="mergeWindows_select">
                <param name="mergeWindows_selector" value="no" />
            </conditional>
            <conditional name="combineTest_select">
                <param name="combineTest_selector" value="no" />
            </conditional>
            <conditional name="region_select">
                <param name="region_selector" value="yes" />
                <param name="GRanges" value="chrA" />
                <param name="IRanges" value="range1.tabular" />
            </conditional>
            <conditional name="findOverlaps_select">
                <param name="findOverlaps_selector" value="no" />
            </conditional>
            <output name="id_output" value="conSizes_id_output.txt" />
            <output name="region_output" value="conSizes_region_output.txt" />
            <output name="table_output" value="conSizes_table_output.txt" />
        </test>
        <test>
            <repeat name="gRange_obj">
                <param name="GRanges" value="chrA" />
                <param name="IRanges" value="conClus_range1.tabular" />
            </repeat>
            <repeat name="gRange_obj">
                <param name="GRanges" value="chrA" />
                <param name="IRanges" value="conClus_range1.tabular" />
            </repeat>
            <repeat name="gRange_obj">
                <param name="GRanges" value="chrA" />
                <param name="IRanges" value="conClus_range1.tabular" />
            </repeat>
            <repeat name="db">
                <param name="result_list" value="db1.tabular" />
            </repeat>
            <repeat name="db">
                <param name="result_list" value="db2.tabular" />
            </repeat>
            <repeat name="db">
                <param name="result_list" value="db3.tabular" />
            </repeat>
            <param name="equiweight" value="true" />
            <param name="tol" value="20" />
            <param name="max_width" value="10" />
            <conditional name="mergeWindows_select">
                <param name="mergeWindows_selector" value="yes" />
                <param name="GRanges" value="chrA" />
                <param name="IRanges" value="mW_regions.tabular" />
                <param name="tol" value="100" />
                <conditional name="sign_select">
                    <param name="sign_selector" value="no" />
                </conditional>
                <param name="max_width" value="5" />
            </conditional>
            <conditional name="combineTest_select">
                <param name="combineTest_selector" value="yes" />
                <param name="ids" value="comTest_ids.tabular" />
                <param name="tab" value="comTest_tab.tabular" />
                <param name="weight" value="comTest_w.tabular" />
                <param name="pval_col" value="PValue" />
                <param name="fc_col" value="logFC.whee" />
            <output name="output" value="combineTests_output.txt" />
            </conditional>
            <conditional name="region_select">
                <param name="region_selector" value="yes" />
                <param name="GRanges" value="chrA" />
                <param name="IRanges" value="range1.tabular" />
            </conditional>
            <conditional name="findOverlaps_select">
                <param name="findOverlaps_selector" value="yes" />
                <param name="query" value="query.tabular" />
                <param name="subject" value="subject.tabular" />
                <param name="maxgap" value="0" />
                <param name="minoverlap" value="0" />
                <param name="type" value="any" />
                <param name="select" value="all" />
            </conditional>
            <output name="id_output" value="conSizes_id_output.txt" />
            <output name="region_output" value="conSizes_region_output.txt" />
            <output name="table_output" value="conSizes_table_output.txt" />
        </test>
    </tests>

    <help><![CDATA[
        Consolidate DB results from multiple window sizes. A comprehensive detection of DB at a range of spatial resolutions. Windows of all sizes are clustered together and the p-values from all windows in each cluster are combined.
    ]]></help>


</tool>