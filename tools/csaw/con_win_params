@DATALIST@
@RESULTLIST@
@EQUIWEIGHT@
    
#if str($mergeWindows_select.mergeWindows_selector) == 'yes'
    tol <- "$mergeWindows_select.tol"

    ############# Sign parameter not working #######################
    #if str($mergeWindows_select.sign_select.sign_selector) == "yes"
        #if str($sign_select.sign) == "yes"
            sign <- TRUE
        #else
            sign <- FALSE
        #end if
    #else 
        sign <- NULL
    #end if
    ################################################################

    #if str($mergeWindows_select.max_width) != ''
        maxWidth <- as.numeric("$mergeWindows_select.max_width")
    #else
        maxWidth <- NULL
    #end if
    #if str($mergeWindows_select.ignore_strand) == 'true'
        ignore_strand <- T
    #else
        ignore_strand <- F
    #end if

    merge_args = list(tol=tol, sign=NULL, max.width=maxWidth, ignore.strand=ignore_strand)
#else
    merge_args=list()
#end if

#if str($region_select.region_selector) == 'yes'
    gRange <- as.character(unlist(strsplit(gsub(" ", "", "${region_select.GRanges}", ","), ",")))
    iRange <- read.table("$region_select.IRanges", header=F)
    start <- c(iRange[[1]])
    end <- c(iRange[[2]])
    regions <- GRanges(gRange, IRanges(start,end))
#else
    regions <-NULL
#end if

#if str($findOverlaps_select.findOverlaps_selector) == "yes"
    queryData <- read.table("$findOverlaps_selector.query", header=F)
    start <- c(queryData[[1]])
    end <- c(queryData[[2]])
    query <- IRanges(start, end)

    subjectData <- read.table("$findOverlaps_selector.subject", header=F)
    start <- c(subjectData[[1]])
    end <- c(subjectData[[2]])
    subject <- IRanges(start, end)

    maxgap <- as.numeric("$findOverlaps_selector.maxgap")
    minoverlap <- as.numeric("$findOverlaps_selector.minoverlap")
    type <- as.character("$findOverlaps_selector.type")
    select <- as.character("$findOverlaps_selector.select")

    overlap <- list(query=query, subject=subject, maxgap=maxgap, minoverlap=minoverlap, type=type, select=select)
#else
    overlap <- list()
#end if

#if str($sign_list_select.sign_list_selector) == "yes"
    allLines <- readLines(con = "$sign_list_select.sign_list")
    tokenize <- strsplit(allLines, split = ' ')
    sign_list <- lapply(tokenize, FUN = function(x) {as.integer(unlist(x))} )
#else
    sign_list <- NULL
#end if

result <- consolidateWindows(dataList, equiweight=equiweight, merge.args=merge_args, regions, overlap.args=overlap, sign.list=sign_list)

unlisted_ids <- unlist(lapply(result[[1]], function(x) { paste(x, collapse = " ") }), use.names = TRUE)
write.table(unlisted_ids, file = "$id_output", quote = FALSE, sep = "\n", col.names = FALSE, row.names=FALSE)

print(result[[2]])

unlisted_weights <- unlist(lapply(result[[2]], function(x) { paste(x, collapse = " ") }), use.names = TRUE)
write.table(unlisted_ids, file = "$weight_output", quote = FALSE, sep = "\n", col.names = FALSE, row.names=FALSE)

write.table(result[[3]], "$region_output", row.names=FALSE, quote = FALSE)
