<tool id="csaw_SEmethods" name="SEmethods" version="@VERSION@.0">
  <description>convert to DGEList</description>
  <macros>
    <import>csaw_macros.xml</import>
  </macros>
  <expand macro="requirements" />
  <command detect_errors="exit_code"><![CDATA[
    Rscript '$script']]>
  </command>
  <configfiles>
    <configfile name="script"><![CDATA[
## Setup R error handling to go to stderr
options(show.error.messages=F, error=function(){cat(geterrmessage(),file=stderr());q("no",1,F)})
loc <- Sys.setlocale("LC_MESSAGES", "en_US.UTF-8")

## Import library
library(csaw)
library(Rsamtools)

#if str($data_select.data_selector) == "windowCounts"
  @WINDOWCOUNTS_SELECT@
  data <- window_counts
#else
  @REGIONCOUNTS_SELECT@
  data <- region_counts
#end if

assay_id <- as.numeric(gsub("([0-9]+).*$", "\\1", "$assay_id"))
if (is.na(assay_id)){
  assay_id <- "$assay_id"
}
#if str($DGEList_select.DGEList_selector) == "yes"
  #if str($DGEList_select.remove_zeros) == "true"
    remove_zeros <- TRUE
  #else
    remove_zeros <- FALSE
  #end if

  #if str(DGEList_select.group_select.group_selector) == "yes" and str($lib_sizes_select.lib_sizes_selector) == "yes" and str($norm_factors_select.norm_factors_selector) == "yes"

    lib_sizes <- scan("$lib_sizes_select.lib_sizes", what=integer())
    norm_factors <- scan("$norm_factors_select.norm_factors", what=numeric())
    group <- scan("$DGEList_select.group_select.group", what=character())
    result <- asDGEList(data, lib_sizes, norm_factors, assay.id=assay_id, group=group, remove.zeros=remove_zeros)

  #else if str(DGEList_select.group_select.group_selector) == "yes" and str($lib_sizes_select.lib_sizes_selector) == "yes"

    lib_sizes <- scan("$lib_sizes_select.lib_sizes", what=integer())
    group <- scan("$DGEList_select.group_select.group", what=character())
    result <- asDGEList(data, lib_sizes, assay.id=assay_id, group=group, remove.zeros=remove_zeros)

  #else if str(DGEList_select.group_select.group_selector) == "yes" and str($norm_factors_select.norm_factors_selector) == "yes"

    norm_factors <- scan("$norm_factors_select.norm_factors", what=numeric())
    group <- scan("$DGEList_select.group_select.group", what=character())
    result <- asDGEList(data, norm_factors, assay.id=assay_id, group=group, remove.zeros=remove_zeros)

  #else if str(DGEList_select.group_select.group_selector) == "yes"

    group <- scan("$DGEList_select.group_select.group", what=character())
    result <- asDGEList(data, assay.id=assay_id, group=group, remove.zeros=remove_zeros)

  #end if

#else
  #if str($lib_sizes_select.lib_sizes_selector) == "yes" and str($norm_factors_select.norm_factors_selector) == "yes"
    lib_sizes <- scan("$lib_sizes_select.lib_sizes", what=integer())
    norm_factors <- scan("$norm_factors_select.norm_factors", what=numeric())

    result <- asDGEList(data, lib_sizes, norm_factors, assay.id=assay_id)
  #else if str($lib_sizes_select.lib_sizes_selector) == "yes"
    lib_sizes <- scan("$lib_sizes_select.lib_sizes", what=integer())

    result <- asDGEList(data, lib_sizes, assay.id=assay_id)
  #else if str($norm_factors_select.norm_factors_selector) == "yes"
    norm_factors <- scan("$norm_factors_select.norm_factors", what=numeric())

    result <- asDGEList(data, norm_factors, assay.id=assay_id)
  #else
    result <- asDGEList(data, assay.id=assay_id)
  #end if
#end if

write.table(result[[1]], "$output1", quote = FALSE, row.names = FALSE)
write.table(result[[2]], "$output2", quote = FALSE)
]]>
    </configfile>
  </configfiles>
  <inputs>
    <conditional name="data_select">
      <param name="data_selector" type="select" label="Create a RangedSummarizedExperiment object by windowCounts or regionCounts?">
        <option value="windowCounts">windowCounts</option>
        <option value="regionCounts">regionCounts</option>
      </param>
      <when value="windowCounts">
        <expand macro="windowCounts" />
      </when>
      <when value="regionCounts">
        <expand macro="regionCounts" />
      </when>
    </conditional>
    <conditional name="lib_sizes_select">
      <param name="lib_sizes_selector" type="select" label="Specify library sizes?" >
        <option value="yes">Yes</option>
        <option value="no" selected="true">No</option>
      </param>
      <when value="yes">
        <param name="lib_sizes" type="data" format="tabular" optional="true" label="Library sizes" help="Upload a dataframe with one column of library sizes" />
      </when>
      <when value="no"> </when>
    </conditional>
    <conditional name="norm_factors_select">
      <param name="norm_factors_selector" type="select" label="Specify normalization factors?" >
        <option value="yes">Yes</option>
        <option value="no" selected="true">No</option>
      </param>
      <when value="yes">
        <param name="norm_factors" type="data" format="tabular" optional="true" label="Normalization factors" help="Upload a dataframe with one column of normalization factors" />
      </when>
      <when value="no"> </when>
    </conditional>
    <param name="assay_id" type="text" value="counts" label="Indicate which assay in object contains the count matrix." />
    <conditional name="DGEList_select">
      <param name="DGEList_selector" type="select" label="Add additional parameters from DGEList?" >
        <option value="yes">Yes</option>
        <option value="no" selected="true">No</option>
      </param>
      <when value="yes">
        <!--TODO: samples, genes-->
        <conditional name="group_select">
          <param name="group_selector" type="select" label="Specify the experimental group/condition for each sample/library?" >
            <option value="yes">Yes</option>
            <option value="no" selected="true">No</option>
          </param>
          <when value="yes">
            <param name="group" type="text" format="tabular" label="Experimental group/condition for each sample/library" help="Upload as dataframe with one column of groupname" />
          </when>
          <when value="no"> </when>
        </conditional>
        <param name="remove_zeros" type="boolean" optional="true" truevalue="true" falsevalue="" checked="false" label="Remove rows that have 0 total count?" />
      </when>
      <when value="no"> </when>
    </conditional>
  </inputs>
  <outputs>
    <data name="output1" format="txt" label="${tool.name} on ${on_string}: counts output" />
    <data name="output2" format="txt" label="${tool.name} on ${on_string}: normalization output" />
  </outputs>
  <tests>
    <test>
      <conditional name="data_select">
        <param name="data_selector" value="windowCounts" />
        <repeat name="bam_input">
          <param name="bam_file" value="rep1.bam" ftype="bam" />
        </repeat>
        <repeat name="bam_input">
            <param name="bam_file" value="rep2.bam" ftype="bam" />
        </repeat>
        <param name="width" value="100" />
        <param name="filter" value="1" />
      </conditional>
      <conditional name="lib_sizes_select">
        <param name="lib_sizes_selector" value="no" />
      </conditional>
      <conditional name="norm_factors_select">
        <param name="norm_factors_selector" value="no" />
      </conditional>
      <param name="assay_id" value="counts" />
      <output name="output1" value="SEmethods_count_output1.txt" />
      <output name="output2" value="SEmethods_norm_output1.txt" />
    </test>
    <test>
      <conditional name="data_select">
        <param name="data_selector" value="windowCounts" />
        <repeat name="bam_input">
          <param name="bam_file" value="rep1.bam" ftype="bam" />
        </repeat>
        <repeat name="bam_input">
            <param name="bam_file" value="rep2.bam" ftype="bam" />
        </repeat>
        <param name="width" value="100" />
        <param name="filter" value="1" />
      </conditional>
      <conditional name="lib_sizes_select">
        <param name="lib_sizes_selector" value="yes" />
        <param name="lib_sizes" value="SEmethods_lib_size.tabular" />
      </conditional>
      <conditional name="norm_factors_select">
        <param name="norm_factors_selector" value="no" />
      </conditional>
      <param name="assay_id" value="counts" />
      <output name="output1" value="SEmethods_count_output2.txt" />
      <output name="output2" value="SEmethods_norm_output2.txt" />
    </test>
    <test>
      <conditional name="data_select">
        <param name="data_selector" value="windowCounts" />
        <repeat name="bam_input">
          <param name="bam_file" value="rep1.bam" ftype="bam" />
        </repeat>
        <repeat name="bam_input">
            <param name="bam_file" value="rep2.bam" ftype="bam" />
        </repeat>
        <param name="width" value="100" />
        <param name="filter" value="1" />
      </conditional>
      <conditional name="lib_sizes_select">
        <param name="lib_sizes_selector" value="no" />
      </conditional>
      <conditional name="norm_factors_select">
        <param name="norm_factors_selector" value="yes" />
        <param name="norm_factors" value="SEmethods_norm.tabular" />
      </conditional>
      <param name="assay_id" value="counts" />
      <output name="output1" value="SEmethods_count_output3.txt" />
      <output name="output2" value="SEmethods_norm_output3.txt" />
    </test>
    <test>
      <conditional name="data_select">
        <param name="data_selector" value="windowCounts" />
        <repeat name="bam_input">
          <param name="bam_file" value="rep1.bam" ftype="bam" />
        </repeat>
        <repeat name="bam_input">
            <param name="bam_file" value="rep2.bam" ftype="bam" />
        </repeat>
        <param name="width" value="100" />
        <param name="filter" value="1" />
      </conditional>
      <conditional name="lib_sizes_select">
        <param name="lib_sizes_selector" value="yes" />
        <param name="lib_sizes" value="SEmethods_lib_size.tabular" />
      </conditional>
      <conditional name="norm_factors_select">
        <param name="norm_factors_selector" value="yes" />
        <param name="norm_factors" value="SEmethods_norm.tabular" />
      </conditional>
      <param name="assay_id" value="counts" />
      <output name="output1" value="SEmethods_count_output4.txt" />
      <output name="output2" value="SEmethods_norm_output4.txt" />
    </test>

    
  </tests>
  <help><![CDATA[
    Converting a SummarizedExperiment object to a DGEList object for analysis with edgeR.

    Counts are extracted from specified assay matrix in the SummarizedExperiment object and used to construct a DGEList object via DGEList. If not specified, library sizes are taken from the totals field in the column data of object. Warnings will be generated if this field is not present.

    If norm.factors is not specified, asDGEList will attempt to extract normalization factors from object$norm.factors. If this is not available, factors will be set to the default (all unity).
    ]]></help>
  <expand macro="citations" />
</tool>