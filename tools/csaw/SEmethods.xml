<tool id="csaw_SEmethods" name="SEmethods" version="@VERSION@.0">
  <description>converts SummarizedExperiment to DGEList</description>
  <macros>
    <import>csaw_macros.xml</import>
  </macros>
  <expand macro="requirements" />
  <command detect_errors="exit_code"><![CDATA[
    Rscript '$script']]>
  </command>
  <configfiles>
    <configfile name="script"><![CDATA[
## Setup R error handling to go to stderr
options(show.error.messages=F, error=function(){cat(geterrmessage(),file=stderr());q("no",1,F)})
loc <- Sys.setlocale("LC_MESSAGES", "en_US.UTF-8")

## Import library
library(csaw)
library(Rsamtools)

#if str($data_select.data_selector) == "windowCounts"
  @WINDOWCOUNTS_SELECT@
  data <- window_counts
#else
  @REGIONCOUNTS_SELECT@
  data <- region_counts
#end if

assay_id <- as.numeric(gsub("([0-9]+).*$", "\\1", "$assay_id"))
if (is.na(assay_id)){
  assay_id <- "$assay_id"
}

#if str($lib_sizes) != "" and str($norm_factors) != ""
  lib_sizes <- scan("$lib_sizes", what=integer())
  norm_factors <- scan("$norm_factors", what=numeric())
  result <- asDGEList(data, lib_sizes, norm_factors, assay.id=assay_id)
#else if str($lib_sizes) != ""
  lib_sizes <- scan("$lib_sizes", what=integer())
  result <- asDGEList(data, lib_sizes, assay.id=assay_id)
#else if str($norm_factors) != ""
  norm_factors <- scan("$norm_factors", what=numeric())
  result <- asDGEList(data, norm_factors, assay.id=assay_id)
#else
  result <- asDGEList(data, assay.id=assay_id)
#end if


write.table(result[[1]], "$output1", quote = FALSE, row.names = FALSE)

write.table(result[[2]], "$output2", quote = FALSE)

]]>
    </configfile>
  </configfiles>
  <inputs>
    <conditional name="data_select">
      <param name="data_selector" type="select" label="Create a SummarizedExperiment object containing a count matrix with windowCounts or regionCounts?" >
        <option value="windowCounts">windowCounts</option>
        <option value="regionCounts">regionCounts</option>
      </param>
      <when value="windowCounts">
        <section name="windowCounts" title="Count reads overlapping each window" expanded="True">
          <expand macro="windowCounts" />
        </section>
      </when>
      <when value="regionCounts">
        <section name="regionCounts">
          <expand macro="regionCounts" />
        </section>
      </when>
    </conditional>
    <param name="lib_sizes" type="data" format="tabular" optional="true" label="Library sizes" help="Upload a dataframe with one column of library sizes" />
    <param name="norm_factors" type="data" format="tabular" optional="true" label="Normalization factors" help="Upload a dataframe with one column of normalization factors" />
    <param name="assay_id" type="text" value="counts" label="Indicate which assay in object contains the count matrix." />
  </inputs>
  <outputs>
    <data name="output1" format="txt" label="${tool.name} on ${on_string}: SEmethods counts output" />
    <data name="output2" format="txt" label="${tool.name} on ${on_string}: SEmethods normalization output" />
  </outputs>
  <tests>
    <test>
      <conditional name="data_select">
        <param name="data_selector" type="select" label="Create a SummarizedExperiment object containing a count matrix with windowCounts or regionCounts?" >
          <option value="windowCounts">windowCounts</option>
          <option value="regionCounts">regionCounts</option>
        </param>
        <when value="windowCounts">
          <section name="windowCounts" title="Count reads overlapping each window" expanded="True">
            <expand macro="windowCounts" />
          </section>
        </when>
        <when value="regionCounts">
          <section name="regionCounts">
            <expand macro="regionCounts" />
          </section>
        </when>
      </conditional>
      <param name="lib_sizes" value="SEmethods_lib_size.tabular" />
      <param name="norm_factors" value="SEmethods_norm.tabular" />
      <param name="assay_id" value="counts" />
    </test>
  </tests>
  <help><![CDATA[
    Converting a SummarizedExperiment object to a DGEList object for analysis with edgeR.
    ]]></help>
  <expand macro="citations" />
</tool>