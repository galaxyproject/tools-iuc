<tool id="csaw_detailRanges" name="detailRanges" version="@VERSION@.0">
    <description>adds annotation to ranges</description>
     <macros>
       <import>csaw_macros.xml</import>
    </macros>
    <requirements>
        <requirement type="package" version="@VERSION@">bioconductor-csaw</requirement>
        <requirement type="package" version="3.7.0">bioconductor-org.mm.eg.db</requirement>
        <requirement type="package" version="3.7.0">bioconductor-org.Hs.eg.db</requirement>
        <requirement type="package" version="3.7.0">bioconductor-org.dr.eg.db</requirement>
        <requirement type="package" version="3.7.0">bioconductor-TxDb.Mmusculus.UCSC.mm10.knownGene</requirement>
        <requirement type="package" version="3.7.0">bioconductor-TxDb.Hsapiens.UCSC.hg19.knownGene</requirement>
        <requirement type="package" version="3.7.0">bioconductor-TxDb.Drerio.UCSC.danRer10.refGene</requirement>


    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        Rscript '$script'
    ]]></command>
    <configfiles>
        <configfile name="script"><![CDATA[
## Setup R error handling to go to stderr
options(show.error.messages=F, error=function(){cat(geterrmessage(),file=stderr());q("no",1,F)})
loc <- Sys.setlocale("LC_MESSAGES", "en_US.UTF-8")

## Import library
library(csaw)
library(org.Mm.eg.db)
library(org.Hs.eg.db)
library("org.Dr.eg.db")
library(TxDb.Mmusculus.UCSC.mm10.knownGene)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(TxDb.Drerio.UCSC.danRer10.refGene)

data <- read.table("$incoming", header=F)
gRange <- data[[1]]
start <- data[[2]]
end <- data[[3]]
incoming <- GRanges(gRange, IRanges(start, end))

#if str($genome) == "hg19"
    txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
    orgdb <- org.Hs.eg.db
#else if str($genome) == "mm10"
    txdb <- TxDb.Mmusculus.UCSC.mm10.knownGene
    orgdb <- org.Mm.eg.db
#else
    txdb <- TxDb.Drerio.UCSC.danRer10.refGene
    orgdb <- org.Dr.eg.db
#end if

dist <- as.numeric("$dist")
p1 <- as.numeric("$promoter_upstream")
p2 <- as.numeric("$promoter_downstream")
promoter <- c(p1, p2)
key_field <- "$key_field"
name_field <- "$name_field"

#if str($ignore_strand) == 'true'
    ignore_strand <- TRUE
#else
    ignore_strand <- FALSE
#end if

result <- detailRanges(incoming, txdb=txdb, orgdb=orgdb, dist=dist, promoter=promoter, key.field=key_field, name.field=name_field, ignore.strand=ignore_strand)

write.table(result[[1]], file = "$overlap_output", quote = FALSE, col.names = FALSE, row.names=FALSE)
write.table(result[[2]], file = "$left_output", quote = FALSE, col.names = FALSE, row.names=FALSE)
write.table(result[[3]], file = "$right_output", quote = FALSE, col.names = FALSE, row.names=FALSE)

]]>
        </configfile>
    </configfiles>
    <inputs>
        <!--Not sure if the inputs for orgdb and txdb are fixed-->
        <param name="incoming" type="data" format="tabular" label="Data containing the ranges to be annotated" />
        <param name="genome" type="select" label="Genome of interest" >
            <option value="hg38">Human (hg19)</option>
            <option value="mm10">Mouse (mm10)</option>
            <option value="danRer10">Zebrafish (danRer10)</option>
        </param>
        <param name="dist" type="integer" value="5000" label="Specify the flanking distance to annotate" />
        <param name="promoter_upstream" type="integer" value="3000" label="Value defining the promoter as some distance upstream from the TSS" />
        <param name="promoter_downstream" type="integer" value="1000" label="Value defining the promoter as some distance downstream from the TSS" />
        <param name="key_field" type="text" value="ENTREZID" label="Specify the keytype for name extraction" help="Default settings will work for human and mouse genomes, but may not work for other organisms. The keytype should refer to the key type in the OrgDb object, and also correspond to the GENEID of the TxDb object. For example, for S. cerevisiae the keytype should be set to ORF." />
        <param name="name_field" type="text" value="SYMBOL" label="Specify the column to use as the gene name" help="Default settings will work for human and mouse genomes, but may not work for other organisms. For example, for S. cerevisiae the column should be set to GENENAME." />
        <param name="ignore_strand" type="boolean" truevalue="true" falsevalue="" checked="true" label="Ignore strandedness in data?" help="If no is selected, then the annotated features will only be reported if they lie on the same strand as that region" />
    </inputs>
    <outputs>
        <data name="overlap_output" format="txt" label="${tool.name} on ${on_string}: detailRanges overlap output" />
        <data name="left_output" format="txt" label="${tool.name} on ${on_string}: detailRanges left output" />
        <data name="right_output" format="txt" label="${tool.name} on ${on_string}: detailRanges right output" />
    </outputs>

    <tests>
        <test>
            <param name="incoming" value="gRange_detailRanges.tabular" />
            <param name="genome" value="mm10" />
            <param name="dist" value="5000" />
            <param name="promoter_upstream" value="3000" />
            <param name="promoter_downstream" value="1000" />
            <param name="key_field" value="ENTREZID" />
            <param name="name_field" value="SYMBOL" />
            <param name="ignore_strand" value="true" />
            <output name="overlap_output" value="detailRanges_overlap_output.txt" />
            <output name="left_output" value="detailRanges_left_output.txt" />
            <output name="right_output" value="detailRanges_right_output.txt" />
        </test>
    </tests>

    <help><![CDATA[
        Add detailed exon-based annotation to specified genomic regions. This tool adds annotations to a given set of genomic regions in the form of compact character strings specifying the features overlapping and flanking each region. The aim is to determine the genic context of empirically identified regions, for some basic biological interpretation of binding/marking in those regions. All neighboring genes within a specified range are reported, rather than just the closest gene to the region.
    ]]></help>
    <expand macro="citations" />
</tool>