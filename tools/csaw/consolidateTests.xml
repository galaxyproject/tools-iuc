<tool id="csaw_consolidateTests" name="consolidateTests" version="@VERSION@.0">
    <description>consolidate window statistics</description>
    <macros>
       <import>csaw_macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <command detect_errors="exit_code"><![CDATA[
        Rscript '$script'
    ]]></command>
    <configfiles>
        <configfile name="script"><![CDATA[
## Setup R error handling to go to stderr
options(show.error.messages=F, error=function(){cat(geterrmessage(),file=stderr());q("no",1,F)})
loc <- Sys.setlocale("LC_MESSAGES", "en_US.UTF-8")

## Import library
library(csaw)

@RESULTLIST@

#if str($con_select.con_selector) == "tests"
    allLines <- readLines(con = "con_select.id_list")
    tokenize <- strsplit(allLines, split = ' ')
    id_list <- lapply(tokenize, FUN = function(x) {as.integer(unlist(x))} )
#else


#end if


olap_list
weight_list
output

#if str($weight_list) != ""
    TODO
#else
    weight_list <- NULL
#end if

#if str($fun) == "combineTests"
    result <- consolidateTests(id_list, resultList, weight_list, FUN=combineTests, reindex="best")
#else if str($fun) == "combineOverlaps"
    result <- consolidateOverlaps(olap_list, resultList, weight_list, FUN=combineOverlaps, reindex="best")
#else if str($fun) == "getBestTest"
    result <- consolidateOverlaps(olap_list, resultList, weight_list, FUN=getBestTest, reindex="best")
#else if str($fun) == "getBestOverlaps"
    result <- consolidateOverlaps(olap_list, resultList, weight_list, FUN=getBestOverlaps, reindex="best")
#end if


unlisted <- unlist(lapply(X, function(x) { paste(x, collapse = " ") }), use.names = TRUE)
write.table(unlisted, file = "test.txt", quote = FALSE, sep = "\n", col.names = FALSE, row.names=FALSE)


]]>
        </configfile>
    </configfiles>
    <inputs>
        <conditional name="con_select">
            <param name="con_selector" type="select" label="Consolidate statistics with combineTests or combineOverlaps?" >
                <option value="tests">combineTests</option>
                <option value="overlaps">combineOverlaps</option>
            </param>
            <when value="test">
                <param name="id_list" type="data" format="tabular" label="A dataframe with rows specifying the identity of the cluster to which each window in each analysis belongs" help="e.g. id results from consolidateWindows" />
            </when>
            <when value="overlaps">
                <param name="olap_list" type="data" format="tabular" label="A list of Hits objects specifying the overlaps between windows of each analysis and a common set of pre-defined regions." />
            </when>
        </conditional>
        <repeat name="db" title="Upload dataframes containing the DB test results for each analysis.">
            <param name="result_list" type="data" format="tabular" label="DB test results" />
        </repeat>
        <param name="weight_list" type="data" format="tabular" optional="true" label="A list of numeric vectors specifying the weight of each window in id list or overlapping window in olap list." />
        <param name="fun" type="select" label="Specify how the statistics should be consolidated, returning a DataFrame with one row per cluster/region." help="Select combineTests or combineOverlaps consolidate statistics. This will yield a single combined p-value for each cluster or region. Select getBestTest or getBestOverlaps to obtain the best windows in each cluster/region">
            <option value="combineTests">combineTests</option>
            <option value="combineOverlaps">combineOverlaps</option>
            <option value="getBestTest">getBestTest</option>
            <option value="getBestOverlaps">getBestOverlaps</option>
        </param>
        <param name="reindex" type="text" value="best" label="Indicate which fields of the DataFrame returned should be reindexed." />        
    </inputs>
    <outputs>
        <data name="output" format="txt" label="${tool.name} on ${on_string}: consolidateTests output" />
    </outputs>

    <tests>
        <test>
            <conditional name="con_select">
                <param name="con_selector" value="tests" />
                <param name="id_list" value="conTests_id.tabular"/>
            </conditional>
            
            <output name="output" value="" />
        </test>
    </tests>

    <help><![CDATA[
        Consolidate DB statistics from analyses using multiple window sizes.
    ]]></help>
    <expand macro="citations" />
</tool>