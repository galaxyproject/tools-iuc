<tool id="csaw_overlapStats" name="overlapStats" version="@VERSION@.0">
  <description>computes overlap statistics</description>
  <macros>
    <import>csaw_macros.xml</import>
  </macros>
  <expand macro="requirements" />
  <command detect_errors="exit_code"><![CDATA[
    Rscript '$script']]>
  </command>
  <configfiles>
    <configfile name="script"><![CDATA[
## Setup R error handling to go to stderr
options(show.error.messages=F, error=function(){cat(geterrmessage(),file=stderr());q("no",1,F)})
loc <- Sys.setlocale("LC_MESSAGES", "en_US.UTF-8")

## Import library
library(csaw)
library(Rsamtools)

@WINDOWCOUNTS@
data <- window_counts

## Region of interest
#if str($region.named) == "true"
  reg <- read.table("$region.GRanges", header=T)
#else
  reg <- read.table("$region.GRanges", header=F)
#end if
gRange <- reg[[1]]
start <- reg[[2]]
end <- reg[[3]]
regions <- GRanges(gRange, IRanges(start, end))

olap <- findOverlaps(regions, rowRanges(data))
tab <- read.table("$tab", sep="", header=T)

#if str($output_select.output_selector) == 'combineOverlaps'
  @OVERLAPSTATS_W@
  result1 <- combineOverlaps(olap, tab , o.weight=o_weight, i.weight=i_weight)
  write.table(result1, "$output1", quote = FALSE, row.names=FALSE)
#else if str($output_select.output_selector) == 'getBestOverlaps'
  @OVERLAPSTATS_W@
  result2 <- getBestOverlaps(olap, tab, o.weight=o_weight, i.weight=i_weight)
  write.table(result2, "$output2", quote = FALSE, row.names=FALSE)
#else if str($output_select.output_selector) == 'empiricalOverlaps'
  @OVERLAPSTATS_W@
  result3 <- empiricalOverlaps(olap, tab, o.weight=o_weight, i.weight=i_weight)
  write.table(result3, "$output3", quote = FALSE, row.names=FALSE)
#else if str($output_select.output_selector) == 'mixedOverlaps'
  @OVERLAPSTATS_W@
  result4 <- mixedOverlaps(olap, tab, o.weight=o_weight, i.weight=i_weight)
  write.table(result4, "$output4", quote = FALSE, row.names=FALSE)
#else if str($output_select.output_selector) == 'summitOverlaps'
  region_best <- read.table("$output_select.region_best", sep="", header=T)
  #if str($output_select.o_summit_select.o_summit_selector) == 'boolean'
    o_summit <- scan("$output_select.o_summit_select.o_summit", what=logical())
  #else if str($output_select.o_summit_select.o_summit_selector) == 'integer'
    o_summit <- scan("$output_select.o_summit_select.o_summit", what=interger())
  #else
    o_summit <- NULL
  #end if
  #if str($output_select.i_summit_select.i_summit_selector) == 'boolean'
    i_summit <- scan("$output_select.i_summit_select.i_summit", what=logical())
  #else if str($output_select.i_summit_select.i_summit_selector) == 'integer'
    i_summit <- scan("$output_select.i_summit_select.i_summit", what=interger())
  #else
    i_summit <- NULL
  #end if
  result5 <- summitOverlaps(olap, region_best, o.summit=o_summit, i.summit=i_summit)
  write.table(result5, "$output5", quote = FALSE, col.names=FALSE, row.names=FALSE)
#end if
]]>
    </configfile>
  </configfiles>
  <inputs>
    <section name="windowCounts" title="Count reads overlapping each window" expanded="True">
      <expand macro="windowCounts" />
    </section>
    <section name="region" title="Query of overlaps between regions" expanded="True">
      <expand macro="gRanges" />
    </section>
    <param name="tab" type="data" format="tabular" label="Upload a ataframe of DE results for each window" />
    <conditional name="output_select">
      <param name="output_selector" type="select" label="Select the function to compute overlaps between windows and regions" >
        <option value="combineOverlaps">combineOverlaps</option>
        <option value="getBestOverlaps">getBestOverlaps</option>
        <option value="empiricalOverlaps">empiricalOverlaps</option>
        <option value="mixedOverlaps">mixedOverlaps</option>
        <option value="summitOverlaps">summitOverlaps</option>
      </param>
      <when value="combineOverlaps">
        <expand macro="overlapStats_weights" />
      </when>
      <when value="getBestOverlaps">
        <expand macro="overlapStats_weights" />
      </when>
      <when value="empiricalOverlaps">
        <expand macro="overlapStats_weights" />
      </when>
      <when value="mixedOverlaps">
        <expand macro="overlapStats_weights" />
      </when>
      <when value="summitOverlaps">
        <param name="region_best" type="data" format="tabular" label="Specifying the window index that is the summit for each region" help="The data is designed to accept the best field in the output of getBestOverlaps (select create output to be used for summitOverlaps). This contains the index for the individual window that is the summit within each region."/>
        <conditional name="o_summit_select">
          <param name="o_summit_selector" type="select" label="Specify the overlapped windows that are summits by boolean values, integer indices, or none?" >
            <option value="boolean">Boolean Values</option>
            <option value="integer">Integer Indices</option>
            <option value="none" selected="true">None</option>
          </param>
          <when value="boolean">
            <param name="o_summit" type="data" format="tabular" label="Specify the overlapped windows that are summits by boolean values" help="Upload a dataframe with a column of boolean values" />
          </when>
          <when value="integer">
            <param name="o_summit" type="data" format="tabular" label="Specify the overlapped windows that are summits by the corresponding integer indices" help="Upload a dataframe with a column of integer indices" />
          </when>
          <when value="none"> </when>
        </conditional>
        <conditional name="i_summit_select">
          <param name="i_summit_selector" type="select" label="Specify the individual windows that are summits by boolean values, integer indices, or none?" >
            <option value="boolean">Boolean Values</option>
            <option value="integer">Integer Indices</option>
            <option value="none" selected="true">None</option>
          </param>
          <when value="boolean">
            <param name="i_summit" type="data" format="tabular" label="Specify the individual windows that are summits by boolean values" help="Upload a dataframe with a column of boolean values" />
          </when>
          <when value="integer">
            <param name="i_summit" type="data" format="tabular" label="Specify the individual windows that are summits by the corresponding integer indices" help="Upload a dataframe with a column of integer indices" />
          </when>
          <when value="none"> </when>
        </conditional>
      </when>
    </conditional>
  </inputs>
  <outputs>
    <data name="output1" format="txt" label="${tool.name} on ${on_string}: combineOverlaps output" >
      <filter>output_select['output_selector'] == 'combineOverlaps' </filter>
    </data>
    <data name="output2" format="txt" label="${tool.name} on ${on_string}: getBestOverlaps output" >
      <filter>output_select['output_selector'] == 'getBestOverlaps' </filter>
    </data>
    <data name="output3" format="txt" label="${tool.name} on ${on_string}: empiricalOverlaps output" >
      <filter>output_select['output_selector'] == 'empiricalOverlaps' </filter>
    </data>
    <data name="output4" format="txt" label="${tool.name} on ${on_string}:  mixedOverlaps output" >
      <filter>output_select['output_selector'] == 'mixedOverlaps' </filter>
    </data>
    <data name="output5" format="txt" label="${tool.name} on ${on_string}:  summitOverlaps output" >
      <filter>output_select['output_selector'] == 'summitOverlaps' </filter>
    </data>
  </outputs>
  <tests>
    <test>
      <section name="windowCounts">
        <repeat name="bam_input">
          <param name="bam_file" value="rep1.bam" ftype="bam" />
        </repeat>
        <repeat name="bam_input">
          <param name="bam_file" value="rep2.bam" ftype="bam" />
        </repeat>
        <param name="width" value="1" />
        <param name="filter" value="1" />
      </section>
      <section name="region">
        <param name="GRanges" value="overlapStats_regions.tabular" />
        <param name="named" value="true" />
      </section>
      <param name="tab" value="overlapStats_tab.tabular" />
      <conditional name="output_select">
        <param name="output_selector" value="combineOverlaps" />
        <conditional name="o_weight_select">
          <param name="o_weight_selector" value="no" />
        </conditional>
        <conditional name="i_weight_select">
          <param name="i_weight_selector" value="no" />
        </conditional>
      </conditional>
      <output name="output1" value="overlapStats_output1.txt" />
    </test>
    <test>
      <section name="windowCounts">
        <repeat name="bam_input">
          <param name="bam_file" value="rep1.bam" ftype="bam" />
        </repeat>
        <repeat name="bam_input">
          <param name="bam_file" value="rep2.bam" ftype="bam" />
        </repeat>
        <param name="width" value="1" />
        <param name="filter" value="1" />
      </section>
      <section name="region">
        <param name="GRanges" value="overlapStats_regions.tabular" />
        <param name="named" value="true" />
      </section>
      <param name="tab" value="overlapStats_tab.tabular" />
      <conditional name="output_select">
        <param name="output_selector" value="combineOverlaps" />
        <conditional name="o_weight_select">
          <param name="o_weight_selector" value="yes" />
          <param name="o_weight" value="overlapStats_o_weights.tabular" />
        </conditional>
        <conditional name="i_weight_select">
          <param name="i_weight_selector" value="yes" />
          <param name="i_weight" value="overlapStats_i_weights.tabular" />
        </conditional>
      </conditional>
      <output name="output1" value="overlapStats_output2.txt" />
    </test>
    <test>
      <section name="windowCounts">
        <repeat name="bam_input">
          <param name="bam_file" value="rep1.bam" ftype="bam" />
        </repeat>
        <repeat name="bam_input">
          <param name="bam_file" value="rep2.bam" ftype="bam" />
        </repeat>
        <param name="width" value="1" />
        <param name="filter" value="1" />
      </section>
      <section name="region">
        <param name="GRanges" value="overlapStats_regions.tabular" />
        <param name="named" value="true" />
      </section>
      <param name="tab" value="overlapStats_tab.tabular" />
      <conditional name="output_select">
        <param name="output_selector" value="getBestOverlaps" />
        <conditional name="o_weight_select">
          <param name="o_weight_selector" value="yes" />
          <param name="o_weight" value="overlapStats_o_weights.tabular" />
        </conditional>
        <conditional name="i_weight_select">
          <param name="i_weight_selector" value="yes" />
          <param name="i_weight" value="overlapStats_i_weights.tabular" />
        </conditional>
      </conditional>
      <output name="output2" value="overlapStats_output3.txt" />
    </test>
    <test>
      <section name="windowCounts">
        <repeat name="bam_input">
          <param name="bam_file" value="rep1.bam" ftype="bam" />
        </repeat>
        <repeat name="bam_input">
          <param name="bam_file" value="rep2.bam" ftype="bam" />
        </repeat>
        <param name="width" value="1" />
        <param name="filter" value="1" />
      </section>
      <section name="region">
        <param name="GRanges" value="overlapStats_regions.tabular" />
        <param name="named" value="true" />
      </section>
      <param name="tab" value="overlapStats_tab.tabular" />
      <conditional name="output_select">
        <param name="output_selector" value="empiricalOverlaps" />
        <conditional name="o_weight_select">
          <param name="o_weight_selector" value="yes" />
          <param name="o_weight" value="overlapStats_o_weights.tabular" />
        </conditional>
        <conditional name="i_weight_select">
          <param name="i_weight_selector" value="yes" />
          <param name="i_weight" value="overlapStats_i_weights.tabular" />
        </conditional>
      </conditional>
      <output name="output3" value="overlapStats_output4.txt" />
    </test>
    <test>
      <section name="windowCounts">
        <repeat name="bam_input">
          <param name="bam_file" value="rep1.bam" ftype="bam" />
        </repeat>
        <repeat name="bam_input">
          <param name="bam_file" value="rep2.bam" ftype="bam" />
        </repeat>
        <param name="width" value="1" />
        <param name="filter" value="1" />
      </section>
      <section name="region">
        <param name="GRanges" value="overlapStats_regions.tabular" />
        <param name="named" value="true" />
      </section>
      <param name="tab" value="overlapStats_tab.tabular" />
      <conditional name="output_select">
        <param name="output_selector" value="mixedOverlaps" />
        <conditional name="o_weight_select">
          <param name="o_weight_selector" value="yes" />
          <param name="o_weight" value="overlapStats_o_weights.tabular" />
        </conditional>
        <conditional name="i_weight_select">
          <param name="i_weight_selector" value="yes" />
          <param name="i_weight" value="overlapStats_i_weights.tabular" />
        </conditional>
      </conditional>
      <output name="output4" value="overlapStats_output5.txt" />
    </test>
    <test>
      <section name="windowCounts">
        <repeat name="bam_input">
          <param name="bam_file" value="rep1.bam" ftype="bam" />
        </repeat>
        <repeat name="bam_input">
          <param name="bam_file" value="rep2.bam" ftype="bam" />
        </repeat>
        <param name="width" value="1" />
        <param name="filter" value="1" />
      </section>
      <section name="region">
        <param name="GRanges" value="overlapStats_regions.tabular" />
        <param name="named" value="true" />
      </section>
      <param name="tab" value="overlapStats_tab.tabular" />
      <conditional name="output_select">
        <param name="output_selector" value="summitOverlaps" />
        <param name="region_best" value="overlapStats_best.tabular" />
        <conditional name="o_summit_select">
          <param name="o_summit_selector" value="boolean" />
          <param name="o_summit" value="overlapStats_o_summit.tabular" />
        </conditional>
        <conditional name="i_summit_select">
          <param name="i_summit_selector" value="boolean" />
          <param name="i_summit" value="overlapStats_i_summit.tabular" />
        </conditional>
      </conditional>
      <output name="output5" value="overlapStats_output6.txt" />
    </test>
  </tests>
  <help><![CDATA[
      Compute assorted statistics for overlaps between windows and regions in a Hits object.

      The functions provide convenient wrappers around combineTests, getBestTest, empiricalFDR, mixedClusters and upweightSummit for handling overlaps between windows and arbitrary prespecified regions. They accept Hits objects produced by running findOverlaps between regions (as query) and windows (as subject). Each set of windows overlapping a region is defined as a cluster to compute various statistics.

      A wrapper is necessary as a window may overlap multiple regions. If so, the multiple instances of that window are defined as distinct “overlapped” windows, where each overlapped window is assigned to a different region. Each overlapped window is represented by a row of olap. In contrast, the “individual” window just refers to the window itself, regardless of what it overlaps. This is represented by each row of the RangedSummarizedExperiment object and the tab derived from it.
    ]]></help>
  <expand macro="citations" />
</tool>