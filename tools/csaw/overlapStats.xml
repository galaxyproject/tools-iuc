<tool id="csaw_overlapStats" name="overlapStats" version="@VERSION@.0">
  <description>computes overlap statistics</description>
  <macros>
    <import>csaw_macros.xml</import>
  </macros>
  <expand macro="requirements" />
  <command detect_errors="exit_code"><![CDATA[
    Rscript '$script']]>
  </command>
  <configfiles>
    <configfile name="script"><![CDATA[
## Setup R error handling to go to stderr
options(show.error.messages=F, error=function(){cat(geterrmessage(),file=stderr());q("no",1,F)})
loc <- Sys.setlocale("LC_MESSAGES", "en_US.UTF-8")

## Import library
library(csaw)

@WINDOWCOUNTS@

data <- window_counts

## Region of interest
gRange <- as.character(unlist(strsplit(gsub(" ", "", "${of_interest.GRanges}", ","), ",")))
rangeData <- read.table("$of_interest.IRanges", header=F)
start <- c(rangeData[[1]])
end <- c(rangeData[[2]])

regions <- GRanges(gRange, IRanges(start, end))
olap <- findOverlaps(regions, rowRanges(data))
tab <- read.table("$tab", sep="", header=T)

#if str($output_select.output_selector) == 'combineOverlaps'
  @OVERLAPSTATS_W@
  result1 <- combineOverlaps(olap, tab , o.weight=NULL, i.weight=i_weight)
  write.table(result1, "$output1", row.names=FALSE)
#else if str($output_select.output_selector) == 'getBestOverlaps'
  @OVERLAPSTATS_W@
  result2 <- getBestOverlaps(olap, tab, o.weight=NULL, i.weight=i_weight)
  write.table(result2, "$output2", row.names=FALSE)
#else if str($output_select.output_selector) == 'empiricalOverlaps'
  @OVERLAPSTATS_W@
  result3 <- empiricalOverlaps(olap, tab, o.weight=NULL, i.weight=i_weight)
  write.table(result3, "$output3", row.names=FALSE)
#else if str($output_select.output_selector) == 'mixedOverlaps'
  @OVERLAPSTATS_W@
  result4 <- mixedOverlaps(olap, tab, o.weight=NULL, i.weight=i_weight)
  write.table(result4, "$outpu4", row.names=FALSE)
#else if str($output_select.output_selector) == 'summitOverlaps'
  region_best <- read.table("$output_select.region_best", sep="", header=T)

i_summit <- scan("overlapStats_is_summit.tabular", what=logical())

result5 <- summitOverlaps(olap, region_best, o.summit=NULL, i.summit=NULL)

]]>
    </configfile>
  </configfiles>
  <inputs>
    <section name="windowCounts" title="Count reads overlapping each window" expanded="True">
      <expand macro="windowCounts" />
    </section>
    <section name="of_interest" title="Query of overlaps between regions" expanded="True">
      <expand macro="gRanges" />
    </section>
    <param name="tab" type="data" format="tabular" label="Upload a ataframe of DE results for each window" />
    <conditional name="output_select">
      <param name="output_selector" type="select" label="Select the function to compute overlaps between windows and regions" >
        <option value="combineOverlaps">combineOverlaps</option>
        <option value="getBestOverlaps">getBestOverlaps</option>
        <option value="empiricalOverlaps">empiricalOverlaps</option>
        <option value="mixedOverlaps">mixedOverlaps</option>
        <option value="summitOverlaps">summitOverlaps</option>
      </param>
      <when value="combineOverlaps">
        <expand macro="overlapStats_weights" />
      </when>
      <when value="getBestOverlaps">
        <expand macro="overlapStats_weights" />
      </when>
      <when value="empiricalOverlaps">
        <expand macro="overlapStats_weights" />
      </when>
      <when value="mixedOverlaps">
        <expand macro="overlapStats_weights" />
      </when>
      <when value="summitOverlaps">
        <param name="region_best" type="data" format="tabular" label="Specifying the window index that is the summit for each region" />
        <conditional name="o_summit_select">
          <param name="o_summit_selector" type="select" label="Specify the overlapped windows that are summits by boolean values, integer indices, or none?" >
            <option value="boolean">Boolean Values</option>
            <option value="integer">Integer Indices</option>
            <option value="none" selected="true">None</option>
          </param>
          <when value="boolean">
            <param name="o_summit" type="data" format="tabular" label="Specify the overlapped windows that are summits by boolean values" help="Upload a dataframe with a column of of boolean values" />
          </when>
          <when value="integer">
            <param name="o_summit" type="data" format="tabular" label="Specify whether the overlapped windows are summits by the corresponding integer vector of indices for such windows" help="Upload a dataframe with a column of integer indices" />
            
          </when>
          <when value="none"> </when>
        </conditional>
      </when>
    </conditional>


<param name="i_summit" type="data" format="tabular" label="Specify  is a summit" help="Upload a dataframe with a column of of boolean values" />
<param name="i_summit" type="data" format="tabular" label="Specify whether the individual windows are summits by the corresponding integer vector of indices" help="Upload a dataframe with a column of of boolean values or indices" />

  </inputs>
  <outputs>
    <data name="output1" format="txt" label="${tool.name} on ${on_string}: combineOverlaps output" />
    <data name="output2" format="txt" label="${tool.name} on ${on_string}: getBestOverlaps output" />
    <data name="output3" format="txt" label="${tool.name} on ${on_string}: empiricalOverlaps output" />
    <data name="output4" format="txt" label="${tool.name} on ${on_string}: empiricalOverlaps output" />

  </outputs>
  <tests>
    <test>
      <section name="windowCounts">
        <repeat name="bam_input">
          <param name="bam_file" value="rep1.bam" ftype="bam" />
        </repeat>
        <repeat name="bam_input">
          <param name="bam_file" value="rep2.bam" ftype="bam" />
        </repeat>
      </section>
      <section name="of_interest">
        <param name="GRanges" value="chrA, chrA, chrB, chrC" />
        <param name="IRanges" value="range1.tabular" />
      </section>
      <param name="tab" value="overlapStats_tab.tabular" />
      <param name="0_weight" value="overlapStats_o_weights.tabular" />
      <param name="i_weight" value="overlapStats_i_weights.tabular" />

    </test>
  </tests>
  <help><![CDATA[
      Compute assorted statistics for overlaps between windows and regions in a Hits object.
    ]]></help>
  <expand macro="citations" />
</tool>