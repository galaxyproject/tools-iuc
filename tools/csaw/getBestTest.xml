<tool id="csaw_getBestTest" name="getBestTest" version="@VERSION@.0">
  <description>gets the best test in a cluster</description>
  <macros>
    <import>csaw_macros.xml</import>
  </macros>
  <expand macro="requirements" />
  <command detect_errors="exit_code"><![CDATA[
    Rscript '$script'
  ]]></command>
  <configfiles>
    <configfile name="script"><![CDATA[
## Setup R error handling to go to stderr
options(show.error.messages=F, error=function(){cat(geterrmessage(),file=stderr());q("no",1,F)})
loc <- Sys.setlocale("LC_MESSAGES", "en_US.UTF-8")

## Import library
library(csaw)

ids <- scan("$ids", what = integer())
tab <- read.table("$tab", header=TRUE)

#if str($by_pval) == "true"
    by_pval <- TRUE
#else
    by_pval <- FALSE
#end if

#if str($weight_select.weight_selector) == "yes"
    weight <- scan("$weight_select.weight", what = numeric())
#else
    weight <- NULL
#end if

#if str($pval_col) != ''
    pval_col <- as.numeric(gsub("([0-9]+).*$", "\\1", "$pval_col"))
    if (is.na(pval_col)){
        pval_col <- "$pval_col"
    }
#else
    pval_col <- NULL
#end if
#if str($cpm_col) != ''
    cpm_col <- as.numeric(gsub("([0-9]+).*$", "\\1", "$cpm_col"))
    if (is.na(cpm_col)){
        cpm_col <- "$cpm_col"
    }
#else
    cpm_col <- NA
#end if

best <- getBestTest(ids, tab, by.pval=by_pval, weight=weight, pval.col=pval_col, cpm.col=cpm_col)

write.table(best, "$output", quote = FALSE, col.names = TRUE, row.names=FALSE)
]]>
    </configfile>
  </configfiles>
  <inputs>
    <param name="ids" type="data" format="tabular" label="Cluster IDs for each test" />
    <param name="tab" type="data" format="tabular" label="A dataframe of results with a PValue field for each test" />
    <param name="by_pval" type="boolean" truevalue="true" falsevalue="" checked="true" label="Perform selection on corrected p-values" />
    <conditional name="weight_select">
      <param name="weight_selector" type="select" label="Specify weights for each window?">
        <option value="yes">Yes</option>
        <option value="no" selected="true">No</option>
      </param>
      <when value="yes">
        <param name="weight" type="data" format="tabular" label="Weights for each window" help="A dataframe with a column of weights" />
      </when>
      <when value="no"> </when>
    </conditional>
      <param name="pval_col" type="text" optional="true" label="Specify the column of tab containing the p-values" help="Enter a string or integer" >
        <sanitizer>
          <valid>
            <add value="." />
          </valid>
        </sanitizer>
      </param>
      <param name="cpm_col" type="text" optional="true" label="Specify the column of tab containing the log-CPM" help="Enter a string or integer" >
        <sanitizer>
          <valid>
            <add value="." />
          </valid>
        </sanitizer>
      </param>
  </inputs>
  <outputs>
    <data name="output" format="txt" label="${tool.name} on ${on_string}: output" />
  </outputs>

  <tests>
    <test>
      <param name="ids" value="getBestTest_ids.tabular" />
      <param name="tab" value="getBestTest_tab.tabular" />
      <param name="by_pval" value="true" />
      <conditional name="weight_select">
        <param name="weight_selector" value="no"/>
      </conditional>
      <param name="pval_col" value="3" />
      <param name="cpm_col" value="2" />
      <output name="output" value="getBestTest_output1.txt" />
    </test>
    <test>
      <param name="ids" value="getBestTest_ids.tabular" />
      <param name="tab" value="getBestTest_tab.tabular" />
      <param name="by_pval" value="true" />
      <conditional name="weight_select">
        <param name="weight_selector" value="yes" />
        <param name="weight" value="getBestTest_w.tabular" />
      </conditional>
      <param name="pval_col" value="3" />
      <param name="cpm_col" value="2" />
      <output name="output" value="getBestTest_output2.txt" />
    </test>
  </tests>

  <help><![CDATA[
    Find the test with the strongest evidence for rejection of the null in each cluster. 

    Clusters are identified as those tests with the same value of ids (any NA values are ignored). By perfroming selection on corrected p-values, the tool identifies the test with the lowest p-value as that with the strongest evidence against the null in each cluster. The p-value of the chosen test is adjusted using the Bonferroni correction, based on the total number of tests in the parent cluster. This is necessary to obtain strong control of the family-wise error rate such that the best test can be taken from each cluster for further consideration.

    The importance of each window in each cluster can be adjusted by supplying different relative weight values. Each weight is interpreted as a different threshold for each test in the cluster. Larger weights correspond to lower thresholds, i.e., less evidence is needed to reject the null for tests deemed to be more important. This may be useful for upweighting particular tests, e.g., windows containing a motif for the TF of interest.

    Note the difference between this function and combineTests. The latter presents evidence for any rejections within a cluster. This function specifies the exact location of the rejection in the cluster, which may be more useful in some cases but at the cost of conservativeness. In both cases, clustering procedures such as mergeWindows can be used to identify the cluster.

    If perfrom selection on corrected p-values is not selected, the best test is defined as that with the highest log-CPM value. This should be independent of the p-value so no adjustment is necessary. Weights are not applied here. This mode may be useful when abundance is correlated to rejection under the alternative hypothesis, e.g., picking high-abundance regions that are more likely to contain peaks.
    ]]></help>
  <expand macro="citations" />
</tool>