<tool id="csaw_findMaxima" name="findMaxima" version="@VERSION@.0">
    <description>finds the local maxima</description>
     <macros>
       <import>csaw_macros.xml</import>
    </macros>
     <expand macro="requirements" />
    <command detect_errors="exit_code"><![CDATA[
        Rscript '$script'
    ]]></command>
    <configfiles>
        <configfile name="script"><![CDATA[
## Setup R error handling to go to stderr
options(show.error.messages=F, error=function(){cat(geterrmessage(),file=stderr());q("no",1,F)})
loc <- Sys.setlocale("LC_MESSAGES", "en_US.UTF-8")

## Import library
library(csaw)

@GRANGES@

range <- as.numeric("$range")

metric <- scan("$metric", what=numeric())

#if str($ignore_strand) == 'true'
    ignore_strand <- TRUE
#else
    ignore_strand <- FALSE
#end if

result <- findMaxima(regions, range, metric, ignore.strand=ignore_strand)

write.table(result, file = "$output", quote = FALSE, col.names = FALSE, row.names=FALSE)

]]>
        </configfile>
    </configfiles>
    <inputs>
        <expand macro="gRanges" />
        <param name="range" type="integer" value="" label="Specify the range of surrounding regions to consider as local" />
        <param name="metric" type="data" format="tabular" label="Values for which the local maxima is found" help="A dataframe with a column of values" />
        <param name="ignore_strand" type="boolean" truevalue="true" falsevalue="" checked="true" label="Consider the strandedness of regions?" help="If no is selected, then the entries in regions are split into their separate strands." />
    </inputs>
    <outputs>
        <data name="output" format="txt" label="${tool.name} on ${on_string}: output" />
    </outputs>

    <tests>
        <test>
            <param name="GRanges" value="findMax_regions.tabular" />
            <param name="range" value="10" />
            <param name="named" value="true" />
            <param name="metric" value="findMax_metric.tabular" />
            <param name="ignore_strand" value="true" />
            <output name="output" value="findMaxima_output.txt" />
        </test>
    </tests>

    <help><![CDATA[
       Find the local maxima for a given set of genomic regions.

       For each region, this tool will examine all regions within range on either side. It will then determine if the current region has the maximum value of metric across this range. A typical metric to maximize might be the sum of counts or the average abundance across all libraries. 

       Preferably, regions should contain regularly sized and spaced windows or bins, e.g., from windowCounts. In particular, the algorithm will not support nested regions and will fail correspondingly if any are detected. 

       The tool is run separately on the entries for each strand, and the results are collated into a single output. This may be useful for strand-specific applications.
    ]]></help>
    <expand macro="citations" />
</tool>