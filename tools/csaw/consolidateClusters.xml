<tool id="csaw_consolidate" name="consolidate" version="@VERSION@.0">
    <description>consolidate data</description>
    <macros>
       <import>csaw_macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <command detect_errors="exit_code"><![CDATA[
        Rscript '$script'
    ]]></command>
    <configfiles>
        <configfile name="script"><![CDATA[
## Setup R error handling to go to stderr
options(show.error.messages=F, error=function(){cat(geterrmessage(),file=stderr());q("no",1,F)})
loc <- Sys.setlocale("LC_MESSAGES", "en_US.UTF-8")

## Import library
library(csaw)

#if str($method_select.method) == "consolidateClusters"
    ## DATALIST
    gRangeList <- list()
    #for $i in $method_select.gRange_obj
        gRangeList <- append(gRangeList, list(read.table("${i.GRanges}")))
    #end for
    dataList <- c()
    for (i in seq(gRangeList)){
        dataList <- c(dataList, GRanges(gRangeList[[i]][[1]], IRanges(gRangeList[[i]][[2]], gRangeList[[i]][[3]])))
    }

    ## RESULTLIST
    resultList <- list()
    #for $i in $method_select.db
        resultList <- append(resultList, list(read.table("${i.result_list}", header=T)))
    #end for

    #if str($method_select.equiweight) == 'true'
        equiweight <- TRUE
    #else
        equiweight <- FALSE
    #end if

    #if str($method_select.clusterWindows_select.clusterWindows_selector) == "yes"
        target <- as.numeric("$method_select.clusterWindows_select.target")

        #if str($method_select.clusterWindows_select.pval_col) != ''
            pval_col <- as.numeric(gsub("([0-9]+).*$", "\\1", "$method_select.clusterWindows_select.pval_col"))
            if (is.na(pval_col)){
                pval_col <- "$method_select.clusterWindows_select.pval_col"
            }
        #else
            pval_col <- NULL
        #end if
        #if str($method_select.clusterWindows_select.fc_col) != ''
            fc_col <- as.numeric(gsub("([0-9]+).*$", "\\1", "$method_select.clusterWindows_select.fc_col"))
            if (is.na(fc_col)){
                fc_col <- "$method_select.clusterWindows_select.fc_col"
            }
        #else
            fc_col <- NA
        #end if

        tol <- as.numeric("$method_select.clusterWindows_select.tol")
        grid_length <- as.numeric("$method_select.clusterWindows_select.grid_length")
        iterations <- as.numeric("$method_select.clusterWindows_select.iterations")

        #if str($method_select.clusterWindows_select.weight_select.weight_selector) == "yes"
            weight <- scan("$method_select.clusterWindows_select.weight_select.weight", what=numeric())
        #else
            weight <- NULL
        #end if

        #if str($method_select.clusterWindows_select.mergeWindows_select.mergeWindows_selector) == "yes"

            #if str($method_select.clusterWindows_select.mergeWindows_select.sign_select.sign_selector) == "yes"
                sign <- scan("$method_select.clusterWindows_select.mergeWindows_select.sign_select.sign", what=logical())
            #else 
                sign <- NULL
            #end if
            
            #if str($method_select.clusterWindows_select.mergeWindows_select.max_width) != ""
                max_width <- as.numeric("$method_select.clusterWindows_select.mergeWindows_select.max_width")
            #else
                max_width <- NULL
            #end if

            #if str($method_select.clusterWindows_select.mergeWindows_select.ignore_strand) == "yes"
                ignore_strand <- TRUE
            #else
                ignore_strand <- FALSE
            #end if

            result <- consolidateClusters(dataList, resultList, equiweight=equiweight, target=target, pval.col=pval_col, fc.col=fc_col, tol=tol,  max.width=max_width, ignore.strand=ignore_strand, grid.length=grid_length, iterations=iterations)
        #else
            result <- consolidateClusters(dataList, resultList, equiweight=equiweight, target=target, pval.col=pval_col, fc.col=fc_col, tol=tol, grid.length=grid_length, iterations=iterations)
        #end if
    #else
        result <- consolidateClusters(dataList, resultList, equiweight=equiweight)
    #end if

    ids <- result[[1]]
    lapply(ids, cat, "\n", file="$consolidateC_id_output", append=TRUE)
    region <- result[[2]]
    write.table(region, file="$consolidateC_region_output", quote = FALSE, row.names = FALSE, col.names = TRUE)
    f <- list(result[[3]])
    write.table(do.call(rbind, f), file="$consolidateC_fdr_output", quote = FALSE, row.names = c("FDR "), col.names = FALSE)
#else

#end if
]]>
        </configfile>
    </configfiles>
    <inputs>
        <conditional name="method_select">
            <param name="method" type="select" label="Method" >
                <option value="consolidateClusters">Consolidate DB results from multiple analyses with cluster-level FDR control</option>
                <option value="consolidateWindows">Combines p-values across clustered tests using Simes’ method to control the cluster FDR</option>
            </param>
            <when value="consolidateClusters">
                <repeat name="gRange_obj" title="Enter GRanges objects">
                  <expand macro="gRanges" />
                </repeat>
                <repeat name="db" title="Upload dataframes containing the DB test results for each entry of data">
                  <param name="result_list" type="data" format="tabular" label="DB test results" />
                </repeat>
                <param name="equiweight" type="boolean" truevalue="true" falsevalue="" checked="true" label="Enforce equal weighting from each analysis?" help="Some effort is required to equalize the contribution of the results from each analysis. This is done by setting selecting yes, where the weight of each window is inversely proportional to the number of windows from that analysis." />
                <conditional name="clusterWindows_select">
                    <param name="clusterWindows_selector" type="select" label="Specify clusterWindows parameters?" >
                        <option value="yes">Yes</option>
                        <option value="no" selected="true">No</option>
                    </param>
                    <when value="yes">
                        <param name="target" type="float" value="" label="Desired cluster-level FDR" />
                        <expand macro="col_names" />
                        <param name="tol" type="float" value="" optional="true" label="Maximum distance between adjacent windows"/>
                        <expand macro="mergeWindows_select" />
                        <conditional name="weight_select">
                            <param name="weight_selector" type="select" label="Specify frequency weights?" help="The specification is assumed to contain frequency weights of significant tests/windows. For example, a weight of 2 for a test would be equivalent to repeating that test (i.e., repeating the same window so it shows up twice in your analysis). These weights should be the same as those used during weighted FDR control to compute adjusted p-values. In general, you should not set this argument unless you know what you’re doing.">
                                <option value="yes">Yes</option>
                                <option value="no" selected="true">No</option>
                            </param>
                            <when value="yes">
                                <param name="weight" type="data" format="tabular" label="Frequency weights" help="A dataframe of a column of weights" />
                            </when>
                            <when value="no"> </when>
                        </conditional>
                        <param name="grid_length" type="integer" value="21" label="Specify the number of points to use in the grid search" />
                        <param name="iterations" type="integer" value="4" label="Specify the number of iterations of the grid search" />
                    </when>
                    <when value="no"> </when>
                </conditional>
            </when>
            <when value="consolidateWindows"> </when>
        </conditional>
    </inputs>

    <outputs>
        <data name="consolidateC_id_output" format="txt" label="consolidateClusters on ${on_string}: id output">
             <filter>method_select['method'] == 'consolidateClusters'</filter>
        </data>
        <data name="consolidateC_region_output" format="txt" label="consolidateClusters on ${on_string}: region output">
             <filter>method_select['method'] == 'consolidateClusters'</filter>
        </data>
        <data name="consolidateC_fdr_output" format="txt" label="consolidateClusters on ${on_string}: FDR output">
             <filter>method_select['method'] == 'consolidateClusters'</filter>
        </data>

    </outputs>

    <tests>
        <test expect_num_outputs="3">
            <conditional name="method_select">
                <param name="method" value="consolidateClusters" />
                <repeat name="gRange_obj">
                    <param name="GRanges" value="gRange_conclus1.tabular" />
                </repeat>
                <repeat name="gRange_obj">
                    <param name="GRanges" value="gRange_conclus2.tabular" />
                </repeat>
                <repeat name="gRange_obj">
                    <param name="GRanges" value="gRange_conclus3.tabular" />
                </repeat>
                <repeat name="db">
                    <param name="result_list" value="db1.tabular" />
                </repeat>
                <repeat name="db">
                    <param name="result_list" value="db2.tabular" />
                </repeat>
                <repeat name="db">
                    <param name="result_list" value="db3.tabular" />
                </repeat>
                <param name="equiweight" value="true" />
                <conditional name="clusterWindows_select">
                    <param name="clusterWindows_selector" value="no" />
                </conditional>
            </conditional>
            <output name="consolidateC_id_output" file="consolidateClusters_id_output1.txt"/>
            <output name="consolidateC_region_output" file="consolidateClusters_region_output1.txt"/>
            <output name="consolidateC_fdr_output" file="consolidateClusters_FDR_output1.txt"/>
        </test>
        <test expect_num_outputs="3">
            <conditional name="method_select">
                <param name="method" value="consolidateClusters" />
                <repeat name="gRange_obj">
                    <param name="GRanges" value="gRange_conclus1.tabular" />
                </repeat>
                <repeat name="gRange_obj">
                    <param name="GRanges" value="gRange_conclus2.tabular" />
                </repeat>
                <repeat name="gRange_obj">
                    <param name="GRanges" value="gRange_conclus3.tabular" />
                </repeat>
                <repeat name="db">
                    <param name="result_list" value="db1.tabular" />
                </repeat>
                <repeat name="db">
                    <param name="result_list" value="db2.tabular" />
                </repeat>
                <repeat name="db">
                    <param name="result_list" value="db3.tabular" />
                </repeat>
                <param name="equiweight" value="true" />
                <conditional name="clusterWindows_select">
                    <param name="clusterWindows_selector" value="yes" />
                    <param name="target" value="0.05" />
                    <param name="pval_col" value="PValue" />
                    <param name="fc_col" value="logFC" />
                    <param name="tol" value="20" />
                    <conditional name="mergeWindows_select" >
                        <param name="mergeWindows_selector" value="no" />
                    </conditional>
                    <param name="grid_length" value="21" />
                    <param name="iterations" value="4" />
                </conditional>
            </conditional>
            <output name="consolidateC_id_output" file="consolidateClusters_id_output2.txt"/>
            <output name="consolidateC_region_output" file="consolidateClusters_region_output2.txt"/>
            <output name="consolidateC_fdr_output" file="consolidateClusters_FDR_output2.txt"/>
        </test>
        <test expect_num_outputs="3">
            <conditional name="method_select">
                <param name="method" value="consolidateClusters" />
                <repeat name="gRange_obj">
                    <param name="GRanges" value="gRange_conclus1.tabular" />
                </repeat>
                <repeat name="gRange_obj">
                    <param name="GRanges" value="gRange_conclus2.tabular" />
                </repeat>
                <repeat name="gRange_obj">
                    <param name="GRanges" value="gRange_conclus3.tabular" />
                </repeat>
                <repeat name="db">
                    <param name="result_list" value="db1.tabular" />
                </repeat>
                <repeat name="db">
                    <param name="result_list" value="db2.tabular" />
                </repeat>
                <repeat name="db">
                    <param name="result_list" value="db3.tabular" />
                </repeat>
                <param name="equiweight" value="true" />
                <conditional name="clusterWindows_select">
                    <param name="clusterWindows_selector" value="yes" />
                    <param name="target" value="0.05" />
                    <param name="pval_col" value="PValue" />
                    <param name="fc_col" value="PValue" />
                    <param name="tol" value="20" />
                    <conditional name="mergeWindows_select" >
                        <param name="mergeWindows_selector" value="yes" />
                        <conditional name="sign_select">
                            <param name="sign_selector" value="no" />
                        </conditional>
                        <param name="max_width" value="10" />
                        <param name="ignore_strand" value="false" />
                    </conditional>
                    <conditional name="weight_select">
                        <param name="weight_selector" value="no" />
                    </conditional>
                    <param name="grid_length" value="21" />
                    <param name="iterations" value="4" />
                </conditional>
            </conditional>
            <output name="consolidateC_id_output" file="consolidateClusters_id_output3.txt"/>
            <output name="consolidateC_region_output" file="consolidateClusters_region_output3.txt"/>
            <output name="consolidateC_fdr_output" file="consolidateClusters_FDR_output3.txt"/>
        </test>
        <test expect_num_outputs="3">
            <conditional name="method_select">
                <param name="method" value="consolidateClusters" />
                <repeat name="gRange_obj">
                    <param name="GRanges" value="gRange_conclus1.tabular" />
                </repeat>
                <repeat name="gRange_obj">
                    <param name="GRanges" value="gRange_conclus2.tabular" />
                </repeat>
                <repeat name="gRange_obj">
                    <param name="GRanges" value="gRange_conclus3.tabular" />
                </repeat>
                <repeat name="db">
                    <param name="result_list" value="db1.tabular" />
                </repeat>
                <repeat name="db">
                    <param name="result_list" value="db2.tabular" />
                </repeat>
                <repeat name="db">
                    <param name="result_list" value="db3.tabular" />
                </repeat>
                <param name="equiweight" value="true" />
                <conditional name="clusterWindows_select">
                    <param name="clusterWindows_selector" value="yes" />
                    <param name="target" value="0.05" />
                    <param name="pval_col" value="" />
                    <param name="fc_col" value="" />
                    <param name="tol" value="20" />
                    <conditional name="mergeWindows_select" >
                        <param name="mergeWindows_selector" value="yes" />
                        <conditional name="sign_select">
                            <param name="sign_selector" value="yes" />
                            <param name="sign" value="mergeW_sign.tabular" />
                        </conditional>
                        <param name="max_width" value="10" />
                        <param name="ignore_strand" value="false" />
                    </conditional>
                    <conditional name="weight_select">
                        <param name="weight_selector" value="yes" />
                        <param name="weight" value="emFDR_w.tabular" />
                    </conditional>
                    <param name="grid_length" value="21" />
                    <param name="iterations" value="4" />
                </conditional>
            </conditional>
            <output name="consolidateC_id_output" file="consolidateClusters_id_output4.txt"/>
            <output name="consolidateC_region_output" file="consolidateClusters_region_output4.txt"/>
            <output name="consolidateC_fdr_output" file="consolidateClusters_FDR_output4.txt"/>
        </test>
    </tests>

    <help><![CDATA[
        Consolidate DB results from multiple analyses with cluster-level FDR control typically involving different window sizes. The aim is to provide comprehensive detection of DB at a range of spatial resolutions. Significant windows from each analysis are identified and used for clustering with cluster windows. This represents the post-hoc counterpart to consolidateSizes.
    ]]></help>
    <expand macro="citations" />
</tool>