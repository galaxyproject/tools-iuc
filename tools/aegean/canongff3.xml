<tool id='aegean_canongff3' name=' AEGeAn CanonGFF3' version='@TOOL_VERSION@' profile='20.01'>
    <description> pre-process GFF3 files, removing all features not directly related to protein-coding genes</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro='xrefs'/>
    <expand macro='edam_ontology'/>
    <expand macro='requirements'/>
    <version_command>canon-gff3 --version</version_command>
    <command detect_errors='exit_code'>
        <![CDATA[
            canon-gff3 '$gff3file'
            $infer
            #if $source
                -s '$source'
            #end if
            -o '$output'
            ]]>
    </command>
    <inputs>
        <param name='gff3file' type='data' format='gff3' label='GFF3 File'
            help="GFF3 annotation file" multiple='true' />
        <param argument='--infer' type='boolean'
            truevalue='--infer' falsevalue=''
            label='Infer gene feature for transcripts lacking it'            
            help='For transcript features lacking an explicitly declared gene feature as a parent, create this feature on-they-fly'/>
        <param argument='--source' type='text'
            value='' optional='true' 
            label='Reset the source of each feature'
            help='Reset the source of each feature to the given value. Source keywords can be a program (e.g. RepeatMasker) or an organization (like TAIR)'>
          <validator type="regex" message="Please only use letters, numbers or underscores in sample label">^[\w]+$</validator>
        </param>
    </inputs>
    <outputs>
        <data name='output' format='gff3' />
    </outputs>
    <tests>
        <test>
            <param name='gff3file' value='TAIR10_GFF3_genes.gff'/>
            <output name='output' file='canon-output_test1.gff3'/>
        </test>
        <test>
            <param name='gff3file' value='TAIR10_GFF3_genes.gff'/>
            <param name='source' value='test_source'/>
            <output name='output' file='canon-output_test2.gff3'/>
        </test>
        <test>
            <param name='gff3file' value='TAIR10_GFF3_genes.gff'/>
            <param name='infer' value='true'/>
            <output name='output' file='canon-output_test3.gff3'/>
        </test>
    </tests>
    <help>
        <![CDATA[        
.. class:: infomark
            
**Purpose**
            
CanonGFF3 is a program for pre-processing GFF3 data encoding canonical protein-coding genes. It will clean up a GFF3 file, removing all features not directly related to protein-coding genes and inferring features that are not explicitly declared, such as inrons and UTRs. Under the hood, CanonGFF3 essentially applies the same procedure used by ParsEval when it inspects its GFF3 input.
            
-----
            
.. class:: infomark
            
**Input**
            
Input for CanonGFF3 is one or more files in GFF3 forma. Aside from compliance to GFF3 syntax, CanonGFF3 requires only that protein coding genes be described in enough detail that the entire gene structure can be interpreted. 
            
For example, one common convention is to use exon and CDS features to describe the structure. No intron, UTR, or start/stop features are explicitly provided, but these can be inferred from the other features. An alternative convention is to only declare exon and start & stop codon features, which requires the introns, UTRs, and CDS to be inferred. CanonGFF3 is pretty flexible in its handling of these various conventions, assuming the gene structure is described in sufficient detail.
            
-----
            
.. class:: infomark
            
**Output**
            
CanonGFF3 output is a GFF3 file containing protein-coding genes from the provided input file(s).
            
]]>
    </help>
    <expand macro='citations'/>
</tool>
