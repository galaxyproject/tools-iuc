<tool id="rptools_rpextractsink" name="Sink from SBML" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="21.09">
    <description>Generate the RetroPath2.0 sink file from an SBML input</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <stdio>
        <regex match="Could not retreive any species in the compartment" level="fatal" />
    </stdio>
    <command detect_errors="exit_code"><![CDATA[
        python -m rptools.rpextractsink
            '$input'
            '$sink'
            --compartment-id '$compartment_id'
            $adv.remove_dead_end
            $adv.standalone
            --cache-dir "\${TMPDIR:-.}"
    ]]></command>
    <inputs>
        <param name="input" type="data" format="sbml" optional="false" label="Strain" help="The structure of metabolites present in the chosen chassis strain in SBML format" />
        <param name="compartment_id" type="text" value="c" label="SBML compartment ID" help="Specify the compartment from which to extract the sink molecules. The default are for BiGG models (cytosol)" >
            <validator type="empty_field" message="SBML compartment ID is required"/>
        </param>
        <section name="adv" title="Advanced Options" expanded="false">
            <param argument="--remove_dead_end" type="boolean" truevalue="--remove-dead-end" falsevalue="" checked="true" label="Remove dead-end metabolites using FVA evaluation?" help="Perform FVA (Flux Variability Analysis) evaluation to remove dead end metabolites" />
            <param argument="--standalone" type="boolean" truevalue="--standalone" falsevalue="" checked="true" label="Do not connect to Internet" help="If True, do not retrieve InChI from Internet" />
        </section>
    </inputs>
    <outputs>
        <data name="sink" format="csv" metadata_source="input" label="Sink - ${input.name}" />
    </outputs>
    <tests>
        <test>
        <!-- test 1: check if identical outputs are produced with iCN718 model input  -->
            <param name="input" value="iCN718.xml.gz" />
            <output name="sink" md5="5ff3987609142e828ec8e3c97b8dab12" />
        </test>
    </tests>
    <help><![CDATA[
rpExtractSink - Sink from SBML
==============================

Sink refers to the collection of chemical species used by the restrosynthesis algorithm of `RetroPath2.0 <https://doi.org/10.1016/j.ymben.2017.12.002>`_ to finish metabolic route exploration. This tool uses an SBML (Systems Biology Markup Language) file of the desired chassis organism, parses all the molecules within a specified compartment (example: cytosol, Golgi apparatus, nucleus, etc) and uses its MIRIAM (Minimal Information Requested In the Annotation of Models) annotation to find their InChI (International Chemical Identifier) structures. In *Advanced Options*, You can use *Remove dead-end metabolites using FVA evaluation?* to conduct Flux Variability Analysis to remove metabolites that lack the requisite flux that would account for their production or consumption within the metabolic network.

The user can also specify the compartment from which the tool will extract the chemical species. The default is 'c', the BiGG code for the cytosol. If the user wishes to upload an SBML file from another source, then this value must be changed.

The results are written to a RetroPath2.0 friendly CSV file format that can be used as sink input.

Input
-----

Required:

* **Strain**\ : The structure of metabolites present in the chosen chassis strain in SBML format.
* **SBML compartment ID**\ : (string, default: c) Specify the compartment from which to extract the sink molecules. The default are for BiGG models (cytosol).

Advanced options:

* **Remove dead-end metabolites using FVA evaluation?**\ : (boolean, default: True) Perform FVA (Flux Variability Analysis) evaluation to remove dead end metabolites.
* **Do not connect to Internet**: (boolean, default: False) If True, do not retrieve InChI from Internet

Output
------

* **Sink**\ : CSV file containing a collection of chemical species used by the restrosynthesis algorithm of `RetroPath2.0 <https://doi.org/10.1016/j.ymben.2017.12.002>`_.
    ]]></help>
    <expand macro="creator"/>
    <citations>
        <citation type="doi">10.1038/nbt1156</citation>
        <citation type="doi">10.1016/j.ymben.2017.12.002</citation>
        <citation type="doi">10.1186/1752-0509-7-74</citation>
        <citation type="doi">10.1093/bioinformatics/btn051</citation>
        <citation type="doi">10.1038/s41467-022-32661-x</citation>
    </citations>
</tool>
