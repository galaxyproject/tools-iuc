<tool id="baredsc_2d" name="baredSC 2d" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="20.01" license="MIT">
    <description>Compute distribution for a pair of genes</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="edam_topics"/>
    <edam_operations>
        <edam_operation>operation_2495</edam_operation>
        <edam_operation>operation_3463</edam_operation>
    </edam_operations>
    <xrefs>
        <xref type="bio.tools">baredsc</xref>
    </xrefs>
    <expand macro="requirements"/>
    <command detect_errors="exit_code"><![CDATA[
    baredSC_2d
    ## Required inputs:
    @REQUIRED_INPUTS_2D@

    ## Filter cells
    @FILTER_CELLS@
    ## MCMC
    @MCMC_2D@
    @BAREDSC_COMMON@
    ## Plots
    @PLOTS@
    @PRETTYBINS_SPLITY_COLORSCALE_2D@
    ## Advanced
    @ADVANCED_COMMON_X@
    @ADVANCED_COMMON_COMPLEMENT_2D@
    @ADVANCED_BAREDSC_COMMON@
    ## Outputs
    --output output
    --figure baredSC.$plots.image_file_format
    --logevidence logevidence.txt &&
    mkdir QC &&
    mv baredSC_convergence.* QC &&
    mv baredSC_p.$plots.image_file_format QC &&
    mv baredSC_corner.* QC &&
    mkdir output &&
    mv baredSC_neff.txt output &&
    @ORDER_OUTPUTS_2D@
    ]]></command>
    <inputs>
        <expand macro="macro_input_counts"/>
        <expand macro="macro_two_genes"/>
        <expand macro="macro_filter_cells"/>
        <section name="MCMC" title="MCMC parameters">
            <expand macro="macro_MCMC_params_common_axis" axis="x" />
            <expand macro="macro_MCMC_params_common_axis" axis="y" />
            <expand macro="macro_scale_seed"/>
            <expand macro="macro_MCMC_common_baredSC"/>
        </section>
        <section name="plots" title="Customize plots">
            <expand macro="macro_plots"/>
            <expand macro="macro_prettybins_axis" axis="x"/>
            <expand macro="macro_prettybins_axis" axis="y"/>
            <expand macro="macro_colorscale"/>
            <expand macro="macro_splity"/>
        </section>
        <section name="advanced" title="Advanced parameters" expanded="false">
            <expand macro="macro_advanced_common_axis" axis="x" default_osamppdf="4"/>
            <expand macro="macro_advanced_common_axis" axis="y" default_osamppdf="4"/>
            <expand macro="macro_advanced_evidence"/>
            <expand macro="macro_advanced_common_baredSC"/>
            <expand macro="macro_scaleprior"/>
        </section>
    </inputs>
    <outputs>
        <data format="npz" name="output" label="${tool.name} on $getVar('input_counts.input', $getVar('input_counts.inputAnnData', 'shouldNeverHappen')).element_identifier for ${geneXColName} and ${geneYColName}: Numpy archive" from_work_dir="output.npz"/>
        <data format="txt" name="neff" label="${tool.name} on $getVar('input_counts.input', $getVar('input_counts.inputAnnData', 'shouldNeverHappen')).element_identifier for ${geneXColName} and ${geneYColName}: Neff" from_work_dir="output/baredSC_neff.txt"/>
        <collection type="list" name="qc_plots" label="${tool.name} on $getVar('input_counts.input', $getVar('input_counts.inputAnnData', 'shouldNeverHappen')).element_identifier for ${geneXColName} and ${geneYColName}: QC plots">
            <discover_datasets pattern="baredSC_(?P&lt;identifier_0&gt;\S+)\.(?P&lt;ext&gt;.*)" directory="QC"/>
        </collection>
        <data format="tabular" name="pdf2d" label="${tool.name} on $getVar('input_counts.input', $getVar('input_counts.inputAnnData', 'shouldNeverHappen')).element_identifier for ${geneXColName} and ${geneYColName}: mean PDF in matrix format" from_work_dir="output/baredSC_pdf2d.txt"/>
        <data format="tabular" name="pdf2d_flat" label="${tool.name} on $getVar('input_counts.input', $getVar('input_counts.inputAnnData', 'shouldNeverHappen')).element_identifier for ${geneXColName} and ${geneYColName}: PDF with error bar, one bin per line" from_work_dir="output/baredSC_pdf2d_flat.txt">
            <actions>
                <action name="column_names" type="metadata" default="x,y,low,mean,high,median" />
            </actions>
        </data>
        <data format="png" name="plot" label="${tool.name} on $getVar('input_counts.input', $getVar('input_counts.inputAnnData', 'shouldNeverHappen')).element_identifier for ${geneXColName} and ${geneYColName}: plot" from_work_dir="baredSC">
            <change_format>
                <when input="plots.image_file_format" value="png" format="png" />
                <when input="plots.image_file_format" value="svg" format="svg" />
                <when input="plots.image_file_format" value="pdf" format="pdf" />
            </change_format>
        </data>
        <collection type="list" name="other_outputs" label="${tool.name} on $getVar('input_counts.input', $getVar('input_counts.inputAnnData', 'shouldNeverHappen')).element_identifier for ${geneXColName} and ${geneYColName}: plots and txt">
            <discover_datasets pattern="baredSC_(?P&lt;identifier_0&gt;\S+)\.(?P&lt;ext&gt;.*)"/>
        </collection>
        <data format="txt" name="logevidence" label="${tool.name} on $getVar('input_counts.input', $getVar('input_counts.inputAnnData', 'shouldNeverHappen')).element_identifier for ${geneXColName} and ${geneYColName}: Log evidence" from_work_dir="logevidence.txt"/>
    </outputs>
    <tests>
        <!-- First test I decreased the number of samples and bins to make it quicker-->
        <test>
            <conditional name="input_counts">
                <param name="filetype" value="tabular"/>
                <param name="input" value="nih3t3_generated_2d_2.txt"/>
            </conditional>
            <param name="geneXColName" value="0.5_0_0_0.5_x"/>
            <param name="geneYColName" value="0.5_0_0_0.5_y"/>
            <section name="MCMC">
                <param name="nnorm" value="2"/>
                <param name="nx" value="10"/>
                <param name="ny" value="12"/>
                <conditional name="automaticRestart">
                    <param name="set_minNeff" value="no"/>
                </conditional>
                <param name="nsampMCMC" value="20000"/>
            </section>
            <section name="plots">
                <param name="prettyBinsx" value="50"/>
                <param name="prettyBinsy" value="50"/>
            </section>
            <output name="output">
                <assert_contents>
                    <has_size value="524174" delta="50000"/>
                </assert_contents>
            </output>
            <output name="neff">
                <assert_contents>
                    <has_text_matching expression="^1[0-2][0-9]\."/>
                </assert_contents>
            </output>
            <output_collection name="qc_plots" count="3" type="list">
                <element name="convergence" ftype="png">
                    <assert_contents>
                        <has_size value="35116" delta="3000"/>
                    </assert_contents>
                </element>
                <element name="p" ftype="png">
                    <assert_contents>
                        <has_size value="279538" delta="20000"/>
                    </assert_contents>
                </element>
                <element name="corner" ftype="png">
                    <assert_contents>
                        <has_size value="1450978" delta="100000"/>
                    </assert_contents>
                </element>
            </output_collection>
            <output name="pdf2d" ftype="tabular">
                <assert_contents>
                    <has_n_lines n="51"/>
                    <has_line_matching expression="xy\t0\.025\t0\.07500000000000001\t0\.125\t0\.17500000000000002\t0\.225\t0\.275\t0\.32500000000000007\t0\.375\t0\.42500000000000004\t0\.475\t0\.525\t0\.5750000000000001\t0\.625\t0\.675\t0\.7250000000000001\t0\.775\t0\.8250000000000001\t0\.875\t0\.925\t0\.9750000000000001\t1\.025\t1\.0750000000000002\t1\.125\t1\.1750000000000003\t1\.225\t1\.275\t1\.3250000000000002\t1\.375\t1\.4250000000000003\t1\.475\t1\.525\t1\.5750000000000002\t1\.625\t1\.6750000000000003\t1\.725\t1\.775\t1\.8250000000000002\t1\.875\t1\.9250000000000003\t1\.975\t2\.0250000000000004\t2\.075\t2\.125\t2\.175\t2\.225\t2\.2750000000000004\t2\.325\t2\.375\t2\.4250000000000003\t2\.475"/>
                    <has_text_matching expression="2\.5[0-9]+e-02\s+3\.[0-9]+e-02\s+[56]\.[0-9]+e-02"/>
                </assert_contents>
            </output>
            <output name="pdf2d_flat" ftype="tabular">
                <assert_contents>
                    <has_text_matching expression="x\s+y\s+low\s+mean\s+high\s+median"/>
                    <has_n_lines n="2501"/>
                    <has_line_matching expression="0\.025\s+0\.025[0-9]+\s+0\.002[0-9]+\s+0\.03[0-9]+\s+0\.0[67][0-9]+\s+0\.0[12][0-9]+"/>
                </assert_contents>
            </output>
            <output name="plot" ftype="png">
                <assert_contents>
                    <has_size value="40843" delta="4000"/>
                </assert_contents>
            </output>
            <output_collection name="other_outputs" count="4" type="list">
                <element name="p" ftype="txt">
                    <assert_contents>
                       <has_line_matching expression="name\s+low\s+median\s+high"/>
                       <has_line_matching expression="xy_mux[01]\s+0\.3[0-9]+\s+0\.3[0-9]+\s+0\.3[0-9]+"/>
                       <has_text_matching expression="xy_mux[01]\s+0\.9[0-9]+\s+1\.0[0-9]+\s+1\.0[0-9]+" />
                       <has_n_lines n="12"/>
                    </assert_contents>
                </element>
                <element name="corr" ftype="txt">
                    <assert_contents>
                        <has_n_lines n="2"/>
                        <has_line_matching expression="mean\tmedian\tlow\thigh\tpval\terror"/>
                        <has_text_matching expression="0\.9[0-9]+\s+0\.9[0-9]+\s+0\.8[0-9]+\s+0\.9[0-9]+\s+0\.00[7-9][0-9]+\s+0\.00[7-9][0-9]+\s+"/>
                    </assert_contents>
                </element>
                <element name="individuals" ftype="png">
                    <assert_contents>
                        <has_size value="56538" delta="5000"/>
                    </assert_contents>
                </element>
                <element name="median" ftype="png">
                    <assert_contents>
                        <has_size value="40829" delta="4000"/>
                    </assert_contents>
                </element>
            </output_collection>
            <output name="logevidence">
                <assert_contents>
                    <has_text_matching expression="^-81[0-9][0-9]\."/>
                </assert_contents>
            </output>
        </test>
        <!-- Second test pdf filtering cells title log scale-->
        <test>
            <conditional name="input_counts">
                <param name="filetype" value="tabular"/>
                <param name="input" value="nih3t3_generated_2d_2.txt"/>
            </conditional>
            <param name="geneXColName" value="0.5_0_0_0.5_x"/>
            <param name="geneYColName" value="0.5_0_0_0.5_y"/>
            <conditional name="filter">
                <param name="nb" value="1"/>
                <param name="metadata1ColName" value="0_0.5_0.5_0_group"/>
                <param name="metadata1Values" value="1.0"/>
            </conditional>
            <section name="MCMC">
                <param name="xmin" value="-12"/>
                <param name="xmax" value="-7"/>
                <param name="nx" value="25"/>
                <param name="ymin" value="-12"/>
                <param name="ymax" value="-7"/>
                <param name="ny" value="25"/>
                <param name="nnorm" value="2"/>
                <param name="nsampMCMC" value="10000"/>
                <conditional name="automaticRestart">
                    <param name="set_minNeff" value="yes"/>
                    <param name="minNeff" value="200"/>
                </conditional>
                <conditional name="scale">
                    <param name="type" value="log"/>
                </conditional>
            </section>
            <section name="plots">
                <param name="title" value="TEST2"/>
                <param name="image_file_format" value="pdf"/>
                <param name="splity" value="-10.5 -9.5"/>
            </section>
            <output name="output">
                <assert_contents>
                    <has_size value="2690419" delta="200000"/>
                </assert_contents>
            </output>
            <output name="neff">
                <assert_contents>
                    <has_text_matching expression="^(10|9)[0-9][0-9]\."/>
                </assert_contents>
            </output>
            <output_collection name="qc_plots" count="3" type="list">
                <element name="convergence" ftype="pdf">
                    <assert_contents>
                        <has_size value="28184" delta="2000"/>
                    </assert_contents>
                </element>
                <element name="p" ftype="pdf">
                    <assert_contents>
                        <has_size value="800065" delta="80000"/>
                    </assert_contents>
                </element>
                <element name="corner" ftype="pdf">
                    <assert_contents>
                        <has_size value="1431497" delta="200000"/>
                    </assert_contents>
                </element>
            </output_collection>
            <output name="pdf2d" ftype="tabular">
                <assert_contents>
                    <has_n_lines n="26"/>
                    <has_line_matching expression="xy\s+-11\.9\s+-11\.7\s+-11\.5\s+-11\.3\s+-11\.1\s+-10\.9\s+-10\.7\s+-10\.5\s+-10\.3\s+-10\.1\s+-9\.9\s+-9\.7\s+-9\.5\s+-9\.3\s+-9\.1\s+-8\.9\s+-8\.7\s+-8\.5\s+-8\.3\s+-8\.1\s+-7\.9\s+-7\.699999999999999\s+-7\.5\s+-7\.299999999999999\s+-7\.1"/>
                    <has_text_matching expression="-1\.19[0-9]+e\+01\s+"/>
                </assert_contents>
            </output>
            <output name="pdf2d_flat" ftype="tabular">
                <assert_contents>
                    <has_text_matching expression="x\s+y\s+low\s+mean\s+high\s+median"/>
                    <has_n_lines n="626"/>
                </assert_contents>
            </output>
            <output name="plot" ftype="pdf">
                <assert_contents>
                    <has_size value="15541" delta="1000"/>
                </assert_contents>
            </output>
            <output_collection name="other_outputs" count="10" type="list">
                <element name="p" ftype="txt">
                    <assert_contents>
                       <has_line_matching expression="name\s+low\s+median\s+high"/>
                       <has_line_matching expression="xy_mux[01]\s+-8\.6[0-9]+\s+-8\.6[0-9]+\s+-8\.5[0-9]+"/>
                       <has_text_matching expression="xy_mux[01]\s+-10\.2[0-9]+\s+-10\.1[0-9]+\s+-10\.0[0-9]+" />
                       <has_n_lines n="12"/>
                    </assert_contents>
                </element>
                <element name="corr" ftype="txt">
                    <assert_contents>
                        <has_n_lines n="2"/>
                        <has_line_matching expression="mean\tmedian\tlow\thigh\tpval\terror"/>
                        <has_text_matching expression="0\.9[0-9]+\s+0\.9[0-9]+\s+0\.8[0-9]+\s+0\.9[0-9]+\s+0\.00[10|9][0-9]+\s+0\.00[10|9][0-9]+\s+"/>
                    </assert_contents>
                </element>
                <element name="individuals" ftype="pdf">
                    <assert_contents>
                        <has_size value="38594" delta="3000"/>
                    </assert_contents>
                </element>
                <element name="median" ftype="pdf">
                    <assert_contents>
                        <has_size value="15482" delta="1000"/>
                    </assert_contents>
                </element>
                <element name="split-10.5" ftype="pdf">
                    <assert_contents>
                        <has_size value="11801" delta="1000"/>
                    </assert_contents>
                </element>
                <element name="split-10.5_renorm" ftype="pdf">
                    <assert_contents>
                        <has_size value="13138" delta="1000"/>
                    </assert_contents>
                </element>
                <element name="split-10.5_pdf">
                    <assert_contents>
                        <has_text_matching expression="x\s+low1\s+mean1\s+high1\s+low2\s+mean2\s+high2"/>
                        <has_n_lines n="26"/>
                        <has_text_matching expression="-1\.19[0-9]+e\+01"/>
                    </assert_contents>
                </element>
                <element name="split-9.5" ftype="pdf">
                    <assert_contents>
                        <has_size value="11919" delta="1000"/>
                    </assert_contents>
                </element>
                <element name="split-9.5_renorm" ftype="pdf">
                    <assert_contents>
                        <has_size value="13145" delta="1000"/>
                    </assert_contents>
                </element>
                <element name="split-9.5_pdf">
                    <assert_contents>
                        <has_text_matching expression="x\s+low1\s+mean1\s+high1\s+low2\s+mean2\s+high2"/>
                        <has_n_lines n="26"/>
                        <has_text_matching expression="-1\.19[0-9]+e\+01\s+"/>
                    </assert_contents>
                </element>
            </output_collection>
            <output name="logevidence">
                <assert_contents>
                    <has_text_matching expression="^-40[0-9][0-9]\."/>
                </assert_contents>
            </output>
        </test>
    </tests>
    <expand macro="helpcitations"/>
</tool>