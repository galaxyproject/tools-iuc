<tool id="chira_collapse" name="ChiRA collapse" version="@WRAPPER_VERSION@1">
    <description>deduplicate fastq reads</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements" />    
    <command><![CDATA[
        chira_collapse.py
        -i 
        #if $in.ext.endswith(".gz")
            <(gunzip -c '$in')
        #else
            '$in'
        #end if
        -u '$umi_len'
        -o '$out'
    ]]></command>

    <inputs>
        <param format="fastq,fastq.gz" name="in" type="data" label="Input FASTQ file"/>
        <param name="umi_len" type="integer" value="0"
               label="Length of the UMI if present at the 5' end of your reads"/>
    </inputs>
    <outputs>
        <data format="fasta" name="out" label="ChiRA collapse FASTQ on ${on_string}"/>
    </outputs>

    <tests>
        <test expect_num_outputs="1">
            <param name="in" value="reads.fastq.gz" ftype="fastq.gz"/>
            <output name="out" file="reads.fasta" />
        </test>
    </tests>

    <help>

.. class:: infomark

**What it does**

This tool deduplicates the reads from the FASTQ file and writes into a fasta each read once with it's read count.

**Inputs**

* Quality and adapter trimmed FASTQ file

**Outputs**

* FASTA file with unique sequences. The headers of the sequence are in the following format: >sequence_id|UMI|read_count

    </help>
    <expand macro="citations" />
</tool>
