<?xml version="1.0" encoding="UTF-8"?>

<tool id="recentrifuge" name="recentrifuge" version="0.1.0" python_template_version="3.5">
    <requirements>
        <requirement type="package" version="1.5.1">recentrifuge</requirement>
    </requirements>
<!-- Main command for recentrifuge
    First create a subdirectory for output before launch commands -->
    <command detect_errors="exit_code"><![CDATA[
        mkdir '$__tool_directory__/output_dir' &&
        rcf
        #if $db.db_selector == "cached"
          -n '$db.cached_db.fields.path'
        #end if

        #if $file_type.filetype == "centrifuge"
          -f '$input_file'
        #else if $file_type.filetype == "lmat"
          -l '$input_file'
        #else if $file_type.filetype == "clark"
          -r '$input_file'
        #else if $file_type.filetype == "kraken"
          -k '$input_file'
        #end if

        #if '$output_name.modify_name' == "true"
          -o '$__tool_directory__/output_dir/$output_name.file_name'
        #else
          -o "$__tool_directory__/output_dir/rcf.output"
        #end if

        -e '$output_type'

        #if '$adv_options.open_adv' == "true"
          -c '$adv.control_number'
          -s '$adv.scoring'
          -y '$adv.number'
          -m '$adv.mintaxa'
          #if '$adv.taxid_ex.taxex_select' == "true"
            -x '$adv.taxid_ex.taxex'
          #end if
          #if '$adv.taxid_in.taxin_select' == "true"
            -i '$adv.taxid_in.taxin'
          #end if
        #end if

        #if '$fadv_options.open_fadv' == "true"
          -z '$fadv.ctrlminscore'
          -w '$fadv.ctrlmintaxa'
          -u '$fadv.summary'
        #end if
    ]]></command>
    <inputs>
<!-- taxa databases -->
      <conditional name="db">
        <param name="db_selector" type="select" label="Database for recentrifuge">
          <option value="cached" selected="true">Locally cached</option>
          <option value="history">From history</option>
        </param>
          <when value="cached">
            <param name="cached_db" label="Cached database with clade-specific marker genes" type="select">
              <options from_data_table="rcf_database">
                <validator message="No recentrifuge database is available" type="no_options" />
              </options>
                </param>
          </when>
          <when value="history">
            <param name="history_db" type="data" format="dump" label="Database with clade-specific marker genes from history"/>
          </when>
      </conditional>
<!-- INPUT FILES -->
      <param name="input_file" type="data" format="tabular" label="Output from taxonomy assignation" help="Select taxonomy file tabular formated"/>
      <conditional name="file_type">
        <param name="filetype" type="select" label="File type entry" help="Which type of input file (centrifuge, kraken, LMAT, CLARK, Generic), default on Kraken file">
          <option value="centrifuge">centrifuge</option>
          <option value="lmat" >LMAT</option>
          <option value="clark">CLARK</option>
          <option value="kraken" selected="true">kraken</option>
          <option value="generic">generic</option>
        </param>
          <when value="centrifuge"/>
          <when value="lmat"/>
          <when value="clark"/>
          <when value="kraken"/>
          <when value="generic">
        <param name="generictype" type="text" label="GENERIC_FORMAT" help="Format of the output files"/>
          </when>
      </conditional>
<!-- output name -->
      <conditional name="output_name">
        <param name="modify_name" type="boolean" help="modify file name "/>
        <when value="true">
          <param name="file_name" type="text" label="Give a name for file output"> </param>
        </when>
        <when value="false">
        </when>
      </conditional>
<!-- output format input_file type -->
      <param name="output_type" type="select" help="type of extra output to be generated (-e)">
        <option value="FULL">full</option>
        <option value="CSV" selected="true">csv</option>
        <option value="MULTICSV">multicsv</option>
        <option value="TSV">tsv</option>
        <option value="DYNOMICS">dynomics</option>
      </param>
      <conditional name="adv_options">
        <param name="open_adv" type="boolean" help="options"/>
        <when value="true">
          <section name="adv" title="Tuning" expanded="false">
            <param name="scoring" type="select" help="type of scoring to be applied (-s)">
              <option value="SHEL">SHEL</option>
              <option value="LENGTH">LENGTH</option>
              <option value="LOGLENGTH">LOGLENGTH</option>
              <option value="NORMA">NORMA</option>
              <option value="LMAT">LMAT</option>
              <option value="LMCLARK_CAT">CLARK_C</option>
              <option value="CLARK_G">CLARK_G</option>
              <option value="KRAKEN" selected="true">KRAKEN</option>
              <option value="GENERIC">GENERIC</option>
            </param>
            <param name="number" type="integer" min="0" value="0" help="minimum score/confidence of the classification of a read to pass the quality filter; all pass by default(-y)"> </param>
            <param name="mintaxa" type="integer" value="0" help="-m"> </param>
    <!--    conditionnal option to exclude taxa -->
          <conditional name="taxid_ex">
            <param name="taxex_select" type="boolean" label="-x"> </param>
            <when value="true">
              <param name="taxex" type="text" label="NCBI taxid code to exclude a taxon and all underneath"> </param>
            </when>
            <when value="false">
            </when>
          </conditional>
    <!--    conditionnal option to include taxa -->
          <conditional name="taxid_in">
            <param name="taxin_select" type="boolean" label="-i"> </param>
            <when value="true">
              <param name="taxin" type="text" label="NCBI taxid code to include a taxon and all underneath"> </param>
            </when>
            <when value="false">
            </when>
          </conditional>
          <param argument="--avoidcross" type="boolean" truevalue="--avoidcross" falsevalue="" label="avoir cross analysis"> </param>
          </section>
        </when>
        <when value="false">
        </when>
      </conditional>
      <conditional name="fadv_options">
        <param name="open_fadv" type="boolean" help="options"/>
        <when value="true">
<!-- Detailed more fine parameters -->
          <section name="fadv" title="Fine tuning" expanded="false">
            <param name="ctrlminscore" type="integer" value="0" help="(-z)"> </param>
            <param name="ctrlmintaxa"  type="integer" value="0" help="(-w)" > </param>
            <param name="summary" type="select" help="(--summary)">
              <option value="add">add</option>
              <option value="only">only</option>
              <option value="avoid">avoid</option>
            </param>
            <param argument="--takeoutroot" type="boolean" truevalue="--takeoutroot" falsevalue="" label="remove counts directly assigned to the root level (-t)"/>
            <param argument="--nokollapse"  type="boolean" truevalue="--nokollapse" falsevalue="" label="show the cellular organisms taxon"/>
            <param argument="--strain"      type="boolean" truevalue="--strain" falsevalue=""     label="Strain level instead of species as the resolution limit for the robust contamination removal algorithm; use with caution, this is an experimental feature" />
            <param argument="--sequential"  type="boolean" truevalue="--sequential" falsevalue="" label="deactivate parallel processing (--sequential)" />
            <param argument="--debug"       type="boolean" truevalue="--debug" falsevalue=""      label="increase output verbosity and perform additional checks (--debug)" />
            <param argument="--version"     type="boolean" truevalue="--version" falsevalue=""    label=" show program's version number and exit (--version)" />
          </section>
        </when>
        <when value="false">
        </when>
      </conditional>
    </inputs>
<!-- OUTPUT FILE, TYPE DEPENDING ON OUTPUT_TYPE PARAMETER -->
    <outputs>
      <!-- HTML report -->
      <data name="html_report" format="html" from_work_dir="output_dir"/>

      <data name="data_csv" format="csv" from_work_dir="output_dir">
         <filter>output_type and "CSV" in output_type</filter>
      </data>
      <data name="data_tsv" format="tsv" from_work_dir="output_dir">
        <filter>output_type and "TSV" in output_type</filter>
      </data>
      <data name="stat_tsv" format="tsv" from_work_dir="output_dir">
        <filter>output_type and "TSV" in output_type</filter>
      </data>
      <data name="xls_report" format="xlsx" from_work_dir="output_dir">
        <filter>output_type and "XLSX" in output_type or output_type and "DYNOMICS" in output_type </filter>
      </data>
        <data name="stat_csv" format="csv" from_work_dir="output_dir">
          <filter>output_type and "CSV" in output_type or output_type and "MULTICSV" in output_type </filter>
      </data>
    </outputs>

    <tests>
      <test> <!-- Test 1: Basic test with kraken file-->
        <conditional name="db">
          <param name="db_selector" value="cached"/>
          <param name="cached_db" value="test-db-2022"/>
        </conditional>
          <param name="filetype" value="kraken"/>
          <param name="input_file" value="kraken.txt"/>
          <param name="output_type" value="CSV"/>
          <param name="scoring" value="KRAKEN"/>
          <param name="summary" value="avoid"/>

        <output name="data_csv" file="output_dir/rcf.output.data.csv">
        </output>
        <output name="stat_csv" file="output_dir/rcf.output.stat.csv">
        </output>
        <output name="html_report" file="output_dir/rcf.output">
        </output>
      </test>
    </tests>

    <help><![CDATA[
=-= /home/pierre/anaconda3/envs/planemo_tool/bin/rcf =-= v1.5.1 - Feb 2022 =-= by Jose Manuel Martí =-=

usage: rcf [-h] [-V] [-n PATH] [--format GENERIC_FORMAT]
           (-f FILE | -g FILE | -l FILE | -r FILE | -k FILE) [-o FILE]
           [-e OUTPUT_TYPE] [-c CONTROLS_NUMBER] [-s SCORING] [-y NUMBER]
           [-m INT] [-x TAXID] [-i TAXID] [-a] [-z NUMBER] [-w INT]
           [-u OPTION] [-t] [--nokollapse] [-d] [--strain] [--sequential]

Robust comparative analysis and contamination removal for metagenomics

optional arguments:
  -h, --help            show this help message and exit
  -V, --version         show program's version number and exit

input:
  Define Recentrifuge input files and formats

  -n PATH, --nodespath PATH
                        path for the nodes information files (nodes.dmp and
                        names.dmp from NCBI)
  --format GENERIC_FORMAT
                        Format of the output files from a generic classifier
                        included with the option -g. It is a string like
                        "TYP:csv,TID:1,LEN:3,SCO:6,UNC:0" where valid file
                        TYPes are csv/tsv/ssv, and the rest of fields indicate
                        the number of column used (starting in 1) for the
                        TaxIDs assigned, the LENgth of the read, the SCOre
                        given to the assignment, and the taxid code used for
                        UNClassified reads
  -f FILE, --file FILE  Centrifuge output files. If a single directory is
                        entered, every .out file inside will be taken as a
                        different sample. Multiple -f is available to include
                        several Centrifuge samples.
  -g FILE, --generic FILE
                        Output file from a generic classifier. It requires the
                        flag --format (see such option for details). Multiple
                        -g is available to include several generic samples.
  -l FILE, --lmat FILE  LMAT output dir or file prefix. If just "." is
                        entered, every subdirectory under the current
                        directory will be taken as a sample and scanned
                        looking for LMAT output files. Multiple -l is
                        available to include several samples.
  -r FILE, --clark FILE
                        CLARK full-mode output files. If a single directory is
                        entered, every .csv file inside will be taken as a
                        different sample. Multiple -r is available to include
                        several CLARK, CLARK-l, and CLARK-S full-mode samples.
  -k FILE, --kraken FILE
                        Kraken output files. If a single directory is entered,
                        every .krk file inside will be taken as a different
                        sample. Multiple -k is available to include several
                        Kraken (version 1 or 2) samples.

output:
  Related to the Recentrifuge output files

  -o FILE, --outhtml FILE
                        HTML output file (if not given, the filename will be
                        inferred from input files), whose name may also be
                        used as prefix for the extra output files
  -e OUTPUT_TYPE, --extra OUTPUT_TYPE
                        type of extra output to be generated, and can be one
                        of ['FULL', 'CSV', 'MULTICSV', 'TSV', 'DYNOMICS']

tuning:
  Coarse tuning of algorithm parameters

  -c CONTROLS_NUMBER, --controls CONTROLS_NUMBER
                        this number of first samples will be treated as
                        negative controls; default is no controls
  -s SCORING, --scoring SCORING
                        type of scoring to be applied, and can be one of
                        ['SHEL', 'LENGTH', 'LOGLENGTH', 'NORMA', 'LMAT',
                        'CLARK_C', 'CLARK_G', 'KRAKEN', 'GENERIC']
  -y NUMBER, --minscore NUMBER
                        minimum score/confidence of the classification of a
                        read to pass the quality filter; all pass by default
  -m INT, --mintaxa INT
                        minimum taxa to avoid collapsing one level into the
                        parent (if not specified a value will be automatically
                        assigned)
  -x TAXID, --exclude TAXID
                        NCBI taxid code to exclude a taxon and all underneath
                        (multiple -x is available to exclude several taxid)
  -i TAXID, --include TAXID
                        NCBI taxid code to include a taxon and all underneath
                        (multiple -i is available to include several taxid);
                        by default, all the taxa are considered for inclusion
  -a, --avoidcross      avoid cross analysis

fine tuning:
  Fine tuning of algorithm parameters

  -z NUMBER, --ctrlminscore NUMBER
                        minimum score/confidence of the classification of a
                        read in control samples to pass the quality filter; it
                        defaults to "minscore"
  -w INT, --ctrlmintaxa INT
                        minimum taxa to avoid collapsing one level into the
                        parent (if not specified a value will be automatically
                        assigned)
  -u OPTION, --summary OPTION
                        select to "add" summary samples to other samples, or
                        to "only" show summary samples or to "avoid" summaries
                        at all
  -t, --takeoutroot     remove counts directly assigned to the "root" level
  --nokollapse          show the "cellular organisms" taxon

advanced:
  Advanced modes of running

  -d, --debug           increase output verbosity and perform additional
                        checks
  --strain              set strain level instead of species as the resolution
                        limit for the robust contamination removal algorithm;
                        use with caution, this is an experimental feature
  --sequential          deactivate parallel processing

rcf - Release 1.5.1 - Feb 2022

    Copyright (C) 2017–2022, Jose Manuel Martí Martínez

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as
    published by the Free Software Foundation, either version 3 of the
    License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.


    ]]></help>
    <citations>
        <citation type="bibtex">
@misc{renameTODO,
  author = {LastTODO, FirstTODO},
  year = {TODO},
  title = {TODO},
  url = {https://doi.org/10.1371/journal.pcbi.1006967},
}</citation>
    </citations>
</tool>
