<tool id="odgi_build" name="odgi build" version="@TOOL_VERSION@">
    <description>construct a dynamic succinct variation graph</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <command detect_errors="exit_code"><![CDATA[
odgi build
-g '$gfa'
-o '$odgi_output'
$sort
#if $to_gfa:
    --to-gfa > '$gfa_output'
#end if
    ]]></command>
    <inputs>
        <param argument="--gfa" type="data" format="gfa1" label="Construct the graph from this GFA input file" />
        <param argument="--sort" type="boolean" truevalue="--sort" falsevalue="" checked="false"
            label="Topological sort the graph"
            help="Apply generalized topological sort to the graph and set node ids to order." />
        <param argument="--to-gfa" type="boolean" truevalue="--to-gfa" falsevalue="" checked="false"
            label="Output additional GFA file"
            help="" />
    </inputs>
    <outputs>
        <data name="odgi_output" format="odgi" label="${tool.name} on ${on_string}: odgi" />
        <data name="gfa_output" format="gfa1" label="${tool.name} on ${on_string}: GFA">
            <filter>to_gfa</filter>
        </data>
    </outputs>
    <tests>
        <test>
            <param name="gfa" value="t.gfa" />
            <param name="sort" value="true" />
            <param name="to_gfa" value="true" />
            <output name="odgi_output" file="note5_out.og" />
            <output name="gfa_output" file="note5.gfa" />
        </test>
    </tests>
    <help><![CDATA[
optimized dynamic genome/graph implementation (odgi)
----------------------------------------------------

Construct a dynamic succinct variation graph (build)
    ]]></help>
    <expand macro="citations">
    </expand>
</tool>
