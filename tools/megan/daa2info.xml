<tool id="megan_daa2info" name="MEGAN: Get information" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="@PROFILE@">
    <description>about a DIAMOND file</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="bio_tools"/>
    <expand macro="requirements"/>
    <command detect_errors="exit_code"><![CDATA[
#set input_identifier = 'input.' + $input.ext.upper()
ln -s '${input}' '${input_identifier}' &&

daa2info 
--in '${input_identifier}'
#if str($input_is_meganized_cond.input_is_meganized) == 'yes':
    --listMore
    #if str($input_is_meganized_cond.list_class2count_cond.list_class2count) == 'yes':
        --class2count '$input_is_meganized_cond.list_class2count_cond.class2count'
        $input_is_meganized_cond.list_class2count_cond.sum
    #end if
    #if str($input_is_meganized_cond.list_read2class_cond.list_read2class) == 'yes':
        --read2class '$input_is_meganized_cond.list_read2class_cond.read2class'
    #end if
    $input_is_meganized_cond.names
    $input_is_meganized_cond.paths
    $input_is_meganized_cond.prefixRank
    $input_is_meganized_cond.majorRanksOnly
    #if str($input_is_meganized_cond.bo_or_vo) != 'do_not_restrict':
        $input_is_meganized_cond.bo_or_vo
    #end if
    $input_is_meganized_cond.ignoreUnassigned
#else:
    --list
#end if
#if $extractSummaryFile:
    --extractSummaryFile '$output_summary'
#end if
--out '${output}'
]]></command>
    <inputs>
        <param name="input" argument="--in" type="data" format="daa" label="Input DIAMOND file"/>
        <conditional name="input_is_meganized_cond">
            <param name="input_is_meganized" type="select" checked="false" label="Input is meganized?" help="Implies the input file was produced by the MEGAN: DAA Meganizer tool">
                <option value="no" selected="true">No</option>
                <option value="yes">Yes</option>
            </param>
            <when value="no"/>
            <when value="yes">
                <conditional name="list_class2count_cond">
                    <param name="list_class2count" type="select" label="List class to count for named classification(s)?">
                        <option value="no" selected="true">No</option>
                        <option value="yes">Yes</option>
                    </param>
                    <when value="no"/>
                    <when value="yes">
                        <param argument="--class2count" type="select" label="Select class to count for named classification(s)">
                            <expand macro="classification_options"/>
                        </param>
                        <param argument="--sum" type="boolean" truevalue="--sum" falsevalue="" checked="false" label="Use summarized rather than assigned counts when listing class to count?"/>
                    </when>
                </conditional>
                <conditional name="list_read2class_cond">
                    <param name="list_read2class" type="boolean" truevalue="true" falsevalue="false" checked="false" label="List read to class assignments for named classification(s)?"/>
                    <when value="false"/>
                    <when value="true">
                        <param argument="--read2class" type="select" label="Select read to class assignments for named classification(s)">
                            <expand macro="classification_options"/>
                        </param>
                    </when>
                </conditional>
                <param argument="--names" type="boolean" truevalue="--names" falsevalue="" checked="false" label="Report class names rather than class Id numbers?"/>
                <param argument="--paths" type="boolean" truevalue="--paths" falsevalue="" checked="false" label="Report class paths rather than class Id numbers?"/>
                <param argument="--prefixRank" type="boolean" truevalue="--prefixRank" falsevalue="" checked="false" label="When reporting class paths for taxonomy, prefix single letter to indicate taxonomic rank?"/>
                <param argument="--majorRanksOnly" type="boolean" truevalue="--majorRanksOnly" falsevalue="" checked="false" label="Only use major taxonomic ranks?"/>
                <param name="bo_or_vo" type="select" label="Restrict reporting to either bacterial reads or viral reads in taxonomic report">
                    <option value="do_not_restrict" selected="true">Do not restrict</option>
                    <option value="--bacteriaOnly" selected="true">Bacterial reads and counts</option>
                    <option value="--virusOnly">Viral reads and counts</option>
                </param>
                <param argument="--ignoreUnassigned" type="boolean" truevalue="--ignoreUnassigned" falsevalue="" checked="true" label="Don't report on reads that are unassigned?"/>
            </when>
        </conditional>
        <param argument="--extractSummaryFile" type="boolean" truevalue="--extractSummaryFile" falsevalue="" checked="false" label="Output a MEGAN summary file?" help="Contains all classifications, but no reads or alignments"/>
    </inputs>
    <outputs>
        <data name="output" format="txt"/>
        <data name="output_summary" format="txt" label="${tool.name} on ${on_string} (MEGAN summary)">
            <filter>extractSummaryFile</filter>
        </data>
    </outputs>
    <tests>
        <test expect_num_outputs="1">
            <param name="input" value="input.daa" ftype="daa"/>
            <output name="output" file="daa2info_output1.txt" ftype="txt" compare="contains"/>
        </test>
        <test expect_num_outputs="1">
            <param name="input" value="input_meganized.daa" ftype="daa"/>
            <param name="input_is_meganized" value="yes"/>
            <output name="output" file="daa2info_output2.txt" ftype="txt" compare="contains"/>
        </test>
        <test expect_num_outputs="2">
            <param name="input" value="input_meganized.daa" ftype="daa"/>
            <param name="input_is_meganized" value="yes"/>
            <param name="bo_or_vo" value="--virusOnly"/>
            <param name="extractSummaryFile" value="true"/>
            <output name="output" file="daa2info_output2.txt" ftype="txt" compare="contains"/>
            <output name="output_summary" file="daa2info_output_summary2.txt" ftype="txt" compare="contains"/>
        </test>
    </tests>
    <help>
**What it does**

Analyses a DIAMOND (i.e., a Direct Access Archive or DAA) file, a proprietary file format developed by PowerISO Computing
for disk image files, and outputs a text file containing information about the file.  The information includes the following.

 * Number of reads
 * Alignment mode
 * Whether the file is meganized
 * Classifications

If the DIAMOND file is meganized (i.e., it was produced by the MEGAN: DAA Meganizer tool), a summary that includes the
following information (among other items) is included in the output.

 * Content type
 * Names
 * Uids
 * Sizes
 * Additional reads
 * Algorithm
 * Parameters

If the user elects to output a MEGAN summary file, an additional text file that includes the following information (among
other items) is produced.

 * Creator
 * Creation date
 * Content type
 * Blast mode
 * Uids

    </help>
    <expand macro="citations"/>
</tool>

