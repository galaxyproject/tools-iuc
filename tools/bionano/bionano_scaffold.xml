<tool id='bionano_scaffold' name='Bionano Hybrid Scaffold' version='@TOOL_VERSION@+@GALAXY_TOOL_VERSION@' profile='20.01'>
    <description>automates the scaffolding process</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro='edam_ontology' />
    <expand macro='requirements' />
    <version_command>perl /HybridScaffold/hybridScaffold.pl --version</version_command>
    <command detect_errors='exit_code'><![CDATA[
        #set RefAligner = '/usr/local/bin/avx/RefAligner'
        perl '/HybridScaffold/hybridScaffold.pl'
        -n '${ngs_fasta}'
        -b '${bionano_cmap}'
        -c '${config_file}'
        -r $RefAligner
        #if $conflict_resolution
            -M '${conflict_resolution}'
        #end if
        #if not $conflict_resolution
            -B $conflict_filter_genome
            -N $conflict_filter_sequence
        #end if
        ##$align_molecules_options.align_molecules
        ###if $align_molecules_options.align_molecules
        ##    -m $align_molecules_options.bionano_molecules
        ##    -q '${align_molecules_options.optarguments_xml}'
        ##    -p ##/home/bionano/tools/pipeline/1.0/Pipeline/1.0/ 
        ###end if
        ##$quimeric_quality_options.quimeric_quality
        ###if $quimeric_quality_options.quimeric_quality
        ##    -m $align_molecules_options.bionano_molecules
        ##    #if $quimeric_quality_conditional.noise_parameter
        ##        -e '${quimeric_quality_conditional.noise_parameter}'
        ##    #end if
        ###end if
        -f
        -z resuls.zip
        -o ./

    ]]>    </command>
    <inputs>
        <param name="ngs_fasta" type="data" format="fasta" label="NGS FASTA" help="Input NGS FASTA"/>
        <param name="bionano_cmap" type="data" format="cmap" label="BioNano CMAP" help="Input BioNano CMAP"/>
        <param name="config_file" type="data" format="xml" label="Hybrid scaffold configuration file" help="hybrid scaffold configuration file in XML format"/>
        <param name="conflict_resolution" type="data" format="txt" label="Conflict resolution file" optional="True" help="Input a conflict resolution file indicating which NGS and BioNano conflicting contigs to be cut [optional]"/>
        <param name="conflict_filter_genome" type="select" label="Genome maps conflict filter" help="Conflict filter level genome maps [required if not using -M option]">
            <option value="1">No filter</option>
            <option value="2">Cut contig at conflict</option>
            <option value="3">Exclude conflicting contig</option>
        </param>
        <param name="conflict_filter_sequence" type="select" label="Sequences conflict filter" help="Conflict filter level for sequences [required if not using -M option]">
            <option value="1">No filter</option>
            <option value="2">Cut contig at conflict</option>
            <option value="3">Exclude conflicting contig</option>
        </param>
        <!--
        <conditional name="align_molecules_options">
            <param name="align_molecules" type="select" label="Align molecules to hybrid scaffolds and genome maps" help="Flag to generate molecules to hybrid scaffold alignment and molecules to genome map alignment">
                <option value="-x">True</option>
                <option value="" selected="True">False</option>
            </param>
            <when value="-x">
                <param name="bionano_molecules" type="data" format="bnx" label="Bionano molecules" help="Input BioNano molecules BNX [optional; only required for either the -x or -y option]"/>
                <param name="optarguments_xml" type="data" format="xml" label="OptArguments XML script" help="Input de novo assembly pipeline optArguments XML script [optional; only required for -x option]"/>
            </when>
            <when value="">
            </when>
        </conditional>
        <conditional name="quimeric_quality_options">
            <param name="quimeric_quality" type="select" label="Generate quimeric quality score" help="Flag to generate chimeric quality score for the Input BioNano CMAP">
                <option value="-y">True</option>
                <option value="" selected="True">False</option>
            </param>
            <when value="-y">
                <param name="bionano_molecules" type="data" format="bnx" label="Bionano molecules" help="Input BioNano molecules BNX [optional; only required for either the -x or -y option]"/>
                <param name="noise_parameter" type="data" format="txt" optional="True" label="Noise parameter file" help="Input de novo assembly noise parameter .errbin or .err file [optional; recommended for -y option but not required]"/>
            </when>
            <when value="">
            </when>
        </conditional>
        -->
    </inputs>
    <outputs>
        <data name="results" format="zip" from_work_dir="results.zip" label="${tool.name} on ${on_string}: results"/>
    </outputs>
    <tests>
        <test>
            <param name="ngs_fasta" value="assembly_test.fasta"/>
            <param name="bionano_cmap" value="colormaps_test.cmap"/>
            <param name="config_file" value="hybridScaffold_DLE1_config_3.3.xml"/>
            <param name="conflict_filter_genome" value="3"/>
            <param name="conflict_filter_sequence" value="3"/>
            <output name="results" file="results.zip" ftype="zip"/>
        </test>
    </tests>
    <help><![CDATA[
.. class:: infomark

**Purpose**

The Hybrid Scaffold pipeline automates the comprehensive scaffolding process and is consisted of five major steps: 1) generate in silico maps for sequence assembly; 2) align in silico sequence maps against Bionano genome maps to identify and resolve potential conflicts in either data set; 3) merge the non-conflicting maps into hybrid scaffolds; 4) align sequence maps to the hybrid scaffolds; and 5) generate AGP and FASTA files for the scaffolds. 

----
                    
.. class:: infomark
                                        
**Coverage**

For Hybrid Scaffold, we recommend using as input a minimum of 80X effective molecule coverage in order to build an accurate and contiguous consensus genome map assembly for each enzyme. When using nickases, using more coverage does not significantly improve map contiguity. When using a DLS enzyme such as DLE-1, effective coverage up to and beyond 100X has shown improved map contiguities for some plants and animals.

----
                    
.. class:: infomark
                                        
**Input Bionano assembly**

When running the de novo assembly pipeline for hybrid scaffolding applications, users are recommended to use assembly parameters for non-haplotype-aware assembly. The current Hybrid Scaffold pipeline does not explicitly handle haplotype information and assumes there is only one genome map or NGS sequence contig covering a given genomic region. If multiple haplotypes are present, the pipeline may make false positive conflict cuts and incorrectly mix haplotypes in the final scaffolds. We understand that haplotype information is important in many applications, and a fully haplotype-aware Hybrid Scaffold pipeline is in our roadmap for a future release.


    ]]>    </help>
    <expand macro="citations" />
</tool>
