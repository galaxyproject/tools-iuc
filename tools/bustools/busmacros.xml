<macros>
    <token name="@VERSION@">0.39.3.1</token>
    <token name="@GALAXY_VERSION@">galaxy0</token>
    <xml name="requirements">
        <requirements>
            <requirement type="package" version="0.39.3">bustools</requirement>
        </requirements>
    </xml>
    <xml name="citations">
        <citations>
            <citation type="doi">10.1101/472571</citation>
        </citations>
    </xml>
    <xml name="ecfile">
        <param name="ecmap" type="data" format="tabular" label="EC map" help="Equivalence class file for mapping equivalence classes to transcripts"/>
    </xml>
    <xml name="genemapfile">
        <param name="genemap" type="data" format="txt" label="Gene map" help="File for mapping transcripts to genes"/>
    </xml>
    <xml name="txtnamesfile">
        <param name="txtnames" type="data" format="txt" label="Text names" help="Single-column file with names of transcripts"/>
    </xml>
    <xml name="whitelistfile">
        <param name="whitelist" type="data" format="txt" label="File of whitelisted barcodes to correct to"/>
    </xml>
    <token name="@CAPTURE@"><![CDATA[
        bustools capture -o out.capture
        -c '${commandselect.capture}'
        -e '${commandselect.ecmap}'
        -t '${commandselect.txtnames}'
        ${commandselect.complement}
        ${commandselect.ctype}
        '${file}'
            ]]>
    </token>
    <token name="@CORRECT@"><![CDATA[
        bustools correct -o out.corrected.bus
        -w '${commandselect.whitelist}'
        '${file}'
        ]]>
    </token>
    <token name="@COUNT@"><![CDATA[
        bustools count -o countout
        -g '${commandselect.genemap}'
        -e '${commandselect.ecmap}'
        -t '${commandselect.txtnames}'
        $commandselect.genecounts
        $commandselect.multimapping
        '${file}'
            ]]>
    </token>
    <token name="@INSPECT@"><![CDATA[
        bustools inspect
        -o inspect.json
        -e '${commandselect.ecmap}'
        -w '${commandselect.whitelist}'
        '${file}'
        ]]>
    </token>
    <token name="@LINKER@"><![CDATA[
        bustools linker
        -s '${commandselect.start}'
        -e '${commandselect.end}'
        -o linked.bus
        '${file}'
        ]]>
    </token>
    <token name="@PROJECT@"><![CDATA[
        bustools project
        -o projectout
        -g '${commandselect.genemap}'
        -e '${commandselect.ecmap}'
        -t '${commandselect.txtnames}'
        '${file}'
        ]]>
    </token>
    <token name="@SORT@"><![CDATA[
        bustools sort -o out.sorted.bus
        '${file}'
        ]]>
    </token>
    <token name="@TEXT@"><![CDATA[
        bustools text -o out.text.tsv '${file}'
        ]]>
    </token>
    <token name="@WHITELIST@"><![CDATA[
        bustools whitelist
        -o buswhitelist.txt
        -f '${commandselect.threshold}'
        '${file}'
        ]]>
    </token>
    <token name="@help@"><![CDATA[
        Bustools is a program for manipulating BUS files for single cell RNA-Seq datasets. bustools works with BUS files which can be generated efficiently from raw sequencing data, e.g. using kallisto.

        There are currently 9 functions in bustools:

        * **capture:**    Capture reads mapping to a transcript capture list

        * **correct:**    Error correct bus files

        * **count:**      Generate count matrices from bus file

        * **inspect:**    Produce a single report summarizing a BUS file

        * **linker:**     Remove section of barcodes in BUS files

        * **project:**    Project a BUS file to gene sets

        * **sort:**       Sort bus file by barcodes and UMI

        * **text:**       Output as tab separated text file

        * **whitelist:**  Generate a whietlist from a BUS file

        ]]>
    </token>
</macros>
