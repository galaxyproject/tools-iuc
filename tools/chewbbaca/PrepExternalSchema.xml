<tool id="chewbbaca_prepexternalschema" name="chewBBACA PrepExternalSchema" version="@CHEW_VERSION@+galaxy@VERSION_SUFFIX@" profile="@PROFILE@">
    <description>Adapt an external schema to be used with chewBBACA</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <command detect_errors="exit_code"><![CDATA[
        unzip '$input_schema' -d 'schema' &&
        chewBBACA.py PrepExternalSchema
            #if $training_file:
                --ptf '$training_file'
            #end if
            #if $genes_list:
                --gl '$genes_list'
            #end if    
            @COMMON_INPUT@
            $size_filter
            -g 'schema/' -o 'schema_seed' &&
        zip -r PExternalschema_seed.zip 'schema_seed'
    ]]></command>
    <inputs>
        <param format="zip" name="input_schema" type="data" label="Schema Files in zip format" help="The schema directory contains the loci FASTA files and the schema must contain one FASTA file per gene/locus."/>
        <section name="advanced" title="Advanced options">
            <param argument="--training-file" type="data" format="binary" label="Prodigal training file" optional="true" />
            <param argument="--genes-list" type="data" format="txt" label="Gene list" optional="true" />
            <param argument="--minimum-length" type="integer" min="0" value="0" label="Minimum sequence length value"/>
            <expand macro="common_param" />
            <param argument="--size-filter" type="boolean" truevalue="--size-filter" falsevalue="" checked="false" label="Size filter" help="Apply the minimum length and size threshold values to filter out alleles during schema adaptation" />
        </section>
    </inputs>
    <outputs>
        <data format="zip" name="schema" from_work_dir="PExternalschema_seed.zip" label="${tool.name} on ${on_string}: PrepExternal Schema files"/>
    </outputs>
    <tests>
        <test expect_num_outputs="1">
            <param name="input_schema" value="PrepExternal_test.zip"/>
            <param name="size_filter" value="false"/>
            <output name="schema">
                <assert_contents>
                    <has_archive_member path="schema_seed/.*\.fasta" n="204"/>
                    <has_archive_member path="schema_seed/short/.*\.fasta" n="102"/>
                    <has_archive_member path="schema_seed/\.schema_config"/>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help>
        
chewBBACA is a software suite for the creation and evaluation of core genome and whole genome MultiLocus Sequence Typing (cg/wgMLST) schemas and results.

The PrepExternalSchema module enables the adaptation of external schemas so that it is possible to use those schemas with chewBBACA.

    </help>
    <expand macro="citations" />
</tool>
