<tool id="metamdbg" name="metaMDBG" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="@PROFILE@">
    <description>Long reads assembler</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="creator" />
    <expand macro="requirements" />

    <command detect_errors="exit_code"><![CDATA[
        metaMDBG asm
            --out-dir ./
            #if $read_type.type == 'hifi':
                --in-hifi
                #for $r in $read_type.reads:
                    '$r'
                #end for
            #elif $read_type.type == 'ont':
                --in-ont
                #for $r in $read_type.reads:
                    '$r'
                #end for
            #end if
            --threads "\${GALAXY_SLOTS:-1}" ;
        #if str($generate_k_values) == "true":
            metaMDBG gfa --assembly-dir ./ --k 0 > temp_file.txt 2>&1
            ;
            awk '
                NR > 2 {
                    sub(/^[ \t]*-/, "", $0);
                    print $1 "\t" $2 " " $3;
                }
            ' temp_file.txt > k_values.txt ;
            tar -czf tmp_metaMDBG.tar.gz tmp/;
        #end if
    ]]></command>

    <inputs>
        <conditional name="read_type">
            <param name="type" label="Type of input reads" type="select">
                <option value="hifi">PacBio HiFi</option>
                <option value="ont" selected="true">Nanopore ONT</option>
            </param>
            <when value="hifi">
                <param name="reads" type="data" format="fastq,fastq.gz" multiple="true"
                    label="HiFi reads" help="PacBio HiFi read files." />
            </when>
            <when value="ont">
                <param name="reads" type="data" format="fastq,fastq.gz" multiple="true"
                    label="Nanopore ONT reads" help="Nanopore R10.4+ read files." />
            </when>
        </conditional>
        <param name="generate_k_values" type="boolean" checked="false"
            label="Output possible k values for graph generation?"
            help="If enabled, the tool will additionally output a list of valid k values for later graph generation." />
    </inputs>

    <outputs>
        <data name="contigs" format="fasta.gz" from_work_dir="contigs.fasta.gz"
            label="${tool.name} on ${on_string}: assembled contigs" />
        <data name="k_values" format="txt" from_work_dir="k_values.txt"
            label="${tool.name} on ${on_string}: k values for GFA graph">
            <filter>generate_k_values</filter>
        </data>
        <data name="tmp_archive" format="gz" from_work_dir="tmp_metaMDBG.tar.gz"
            label="${tool.name} on ${on_string}: tmp folder archive">
            <filter>generate_k_values</filter>
        </data>
    </outputs>

    <tests>
        <test expect_num_outputs="1">
            <param name="read_type|type" value="ont" />
            <param name="read_type|reads" value="test_ont.fastq.gz" ftype="fastq.gz" />
            <param name="generate_k_values" value="false" />
            <output name="contigs" file="contigs.fasta.gz" ftype="fasta.gz"
                compare="sim_size" delta="100" delta_frac="0.05" />
        </test>
        <test expect_num_outputs="3">
            <param name="read_type|type" value="ont" />
            <param name="read_type|reads" value="test_ont.fastq.gz" ftype="fastq.gz" />
            <param name="generate_k_values" value="true" />
            <output name="contigs" file="contigs.fasta.gz" ftype="fasta.gz"
                compare="sim_size" delta="100" delta_frac="0.05" />

            <output name="k_values" value="test_k_values.txt" />
            <output name="tmp_archive" file="tmp_metaMDBG.tar.gz" compare="sim_size"
                delta="50000" delta_frac="0.05" />
        </test>
    </tests>

    <help><![CDATA[

metaMDBG is a tool for assembling long metagenomic reads using a minimizer-based de Bruijn graph approach. It supports both **PacBio HiFi** and **Nanopore ONT** input data.

Inputs:

- **Read type**: Choose between PacBio HiFi or Nanopore ONT.
- **Read files**: One or more FASTQ/FASTQ.GZ files matching the selected technology.
- **Generate k values?** (optional): If enabled, outputs a list of valid *k* values for downstream graph generation.

Outputs

- **Assembled contigs** (`contigs.fasta.gz`)
- **k values** (`k_values.txt`, optional)

    ]]></help>

    <expand macro="citations" />
</tool>
