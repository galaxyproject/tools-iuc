#!/usr/bin/env python3

from snakemake.remote.HTTP import RemoteProvider as HTTPRemoteProvider
from pathlib import Path

bbmap = 'docker://quay.io/biocontainers/bbmap:39.01--h5c4e2a8_0'
ham = 'docker://quay.io/biocontainers/hifiasm_meta:hamtv0.3--h5b5514e_1'

test_data_url = (
    'https://zenodo.org/record/5908204/files/'
    'zymoD6331std-ecoli-ten-percent.fq.gz')

HTTP = HTTPRemoteProvider()
test_input = HTTP.remote(
    test_data_url,
    keep_local=True)


rule target:
    input:
        expand('output/{subset}.{redundancy}/asm.a_ctg.gfa',
               redundancy=['high', 'normal'],
               subset=['full', 'subset'])


rule hifiasm_meta:
    input:
        'data/zymoD6331std-ecoli-ten-percent.{subset}.fq.gz'
    output:
        'output/{subset}.{redundancy}/asm.a_ctg.gfa',
        'output/{subset}.{redundancy}/asm.p_ctg.gfa'
    params:
        prefix = directory('output/{subset}.{redundancy}/asm'),
        force = lambda wildcards:
            '--force-rs' if wildcards.redundancy == 'high' else ''
    threads:
        workflow.cores
    log:
        'output/logs/hifiasm_meta.{subset}.{redundancy}.log'
    benchmark:
        'output/benchmarks/hifiasm_meta.{subset}.{redundancy}.log'
    container:
        ham
    shell:
        'hifiasm_meta '
        '-t {threads} '
        '{params.force} '
        '-o {params.prefix} '
        '{input} '
        '2> {log}'


rule subset_reads:
    input:
        'data/zymoD6331std-ecoli-ten-percent.full.fq.gz'
    output:
        'data/zymoD6331std-ecoli-ten-percent.subset.fq.gz'
    log:
        'test_pipeline/logs/subset_reads.log'
    threads:
        4
    container:
        bbmap
    shell:
        'reformat.sh '
        'in={input} '
        'out={output} '
        'sampleseed=14 '
        'samplereadstarget=20000 '
        'zl=9 '
        '2> {log}'

rule get_input:
    input:
        test_input
    output:
        'data/zymoD6331std-ecoli-ten-percent.full.fq.gz'
    shell:
        'cp {input} {output}'
