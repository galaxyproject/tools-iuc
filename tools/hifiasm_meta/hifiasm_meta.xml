<tool id="hifiasm_meta" name="Hifiasm_meta" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="@PROFILE@" license="MIT">
    <description>for metagenome assembly using Hifi reads.</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <command detect_errors="exit_code"><![CDATA[
        ##################
        ## SET UP FILES ##
        ##################

        #set reads_fn = 'reads.' + $reads.ext
        ln -s '$reads' '$reads_fn' &&

        #################
        ## RUN HIFIASM ##
        #################

        hifiasm_meta 
        -t \${GALAXY_SLOTS:-4}
        -o asm
        #if '$read_selection.S':
            -S
        #end if
        -r '$overlap_correction.r'
        '$reads_fn'

    ]]></command>
    <inputs>
        <!-- fastq files (could be a repeat or a collection) -->
        <param name="reads" format="fastqsanger,fastqsanger.gz" type="data" label="HiFi reads" help="Input reads for assembly" />
        <section name="read_selection" title="Read selection" expanded="false">
            <param argument='-S' type="boolean" checked="true" label="Enable read selection" help="If enabled, hifiasm_meta will estimate the total number of read overlaps." />
        </section>
        <section name="overlap_correction" title="Overlap/Error correction" expanded="false">
            <param argument='-r' type="integer" value='3' min="1" max="10" label="rounds of correction" />
        </section>
    </inputs>
    <outputs>
        <!-- contig graph files -->
        <collection name="contig_graphs" type="list" label="hifiasm_meta on ${on_string}: contig graphs">
            <data name="Alternate contigs" label="Alternate contigs" from_work_dir="asm.a_ctg.gfa" format="gfa2" />
            <data name="Primary contigs" label="Primary contigs" from_work_dir="asm.p_ctg.gfa" format="gfa2" />
        </collection>
        <!-- unitig graph files -->
        <collection name="unitig_graphs" type="list" label="hifiasm_meta on ${on_string}: unitig graphs">
            <data name="Raw unitigs" label="Raw unitigs" from_work_dir="asm.r_utg.gfa" format="gfa2" />
            <data name="Processed unitigs" label="Processed unitigs" from_work_dir="asm.p_utg.gfa" format="gfa2" />
        </collection>
        <!-- Simplified graphs for visualisation -->
        <collection name="simple_graphs" type="list" label="hifiasm_meta on ${on_string}: graphs for visualisation">
            <discover_datasets pattern="(?P&lt;designation&gt;.+)\.noseq.gfa" format="gfa2" visible="false" />
        </collection>
    </outputs>
    <tests>
        <!-- 01: basic function -->
        <test>
            <param name="reads" value="zymoD6331std-ecoli-ten-percent.42.1.fq.gz" />
            <param name='S' value="False" />
            <param name='r' value="1" />
            <output_collection name="contig_graphs" type="list">
                <element name="Primary contigs" file="asm.p_ctg.gfa"/>
                <element name="Alternate contigs" file="asm.a_ctg.gfa"/>
            </output_collection>
        </test>
    </tests>
        <help><![CDATA[

hifiasm_meta
------------

de novo metagenome assembler, based on hifiasm, a haplotype-resolved de novo assembler for PacBio Hifi reads.


Hifiasm is an ultrafast haplotype-resolved de novo assembler for PacBio
Hifi reads. Unlike most existing assemblers, hifiasm starts from uncollapsed
genome. Thus, it is able to keep the haplotype information as much as possible.
The input of hifiasm is the PacBio Hifi reads in fasta/fastq format, and its
outputs consist of multiple types of assembly graph in GFA format.

Hifiasm_meta is a fork of hifiasm. It comes with a read selection module, which
enables the assembly of dataset of high redundancy without compromising overall
assembly quality, and meta-centric graphcleaning modules. Currently hifiasm_meta 
does not take bining info.

        ]]></help>
</tool>