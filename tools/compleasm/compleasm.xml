<tool id="compleasm" name="compleasm" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="20.01">
    <description>completeness of genome assemblies</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <xrefs>
        <xref type="bio.tools">compleasm</xref>
    </xrefs>
    <requirements>
        <requirement type="package" version="@TOOL_VERSION@">compleasm</requirement>
    </requirements>
    <version_command>compleasm --version</version_command>
    <command><![CDATA[
    mkdir -p 'galaxy_db/' &&
    ln -s '${busco_database.fields.path}/lineages/${lineage_dataset}/' 'galaxy_db/${lineage_dataset}' &&
    ## Create a compleasm-specific empty file to avoid redownloading the lineage data (https://github.com/huangnengCSU/compleasm/blob/0.2.6/compleasm.py#L165)
    touch 'galaxy_db/${lineage_dataset}.done' &&

    compleasm run
    -a '$input'
    -o galaxy_output
    --mode $mode
    -L 'galaxy_db'
    -l '$lineage_dataset'
    -t "\${GALAXY_SLOTS:-1}"

    #if str($specified_contigs) != '':
        --specified_contigs '$specified_contigs'
    #end if

    ]]></command>
    <inputs>
        <param argument="-a" name="input" type="data" format="fasta" label="Input genome file"/>
        <param name="mode" type="select" label="The mode of evaluation" help="If you want to use hmmsearch, select BUSCO mode. Otherwise, select lite mode">
            <option value="busco" selected="true">BUSCO</option>
            <option value="lite">Lite</option>
        </param>

        <param argument="--specified_contigs" type="text" label="Specify the contigs to be evaluated" optional="true" help="e.g. chr1 chr2 chr3. If not specified, all contigs will be evaluated">
            <sanitizer invalid_char="">
                <valid initial="string.letters,string.digits">
                    <add value="_" />
                </valid>
            </sanitizer>
            <validator type="regex">[0-9a-zA-Z_ ]+</validator>
        </param>

        <param name="outputs" type="select" multiple="true" label="Which outputs should be generated">
            <option value="full_table_busco" selected="true">full busco table</option>
            <option value="full_table">full table</option>
            <option value="miniprot">miniprot</option>
            <option value="translated_protein">translated proteins</option>
        </param>

        <param name="busco_database" label="Choose the BUSCO database to be used" type="select" multiple="false">
            <options from_data_table="busco_database"/>
        </param>

        <param name="lineage_dataset" type="select" label="Lineage">
            <expand macro="lineages"/>
        </param>
    </inputs>

    <outputs>
        <data name='full_table_busco' format='tsv' label="${tool.name} on ${on_string}: full table BUSCO" from_work_dir="galaxy_output/*_odb10/full_table_busco_format.tsv">
            <filter>outputs and 'full_table_busco' in outputs</filter>
        </data>
        <data name='full_table' format='tsv' label="${tool.name} on ${on_string}: full table" from_work_dir="galaxy_output/*_odb10/full_table.tsv">
            <filter>outputs and 'full_table' in outputs</filter>
        </data>
        <data name='miniprot' format='gff3' label="${tool.name} on ${on_string}: Miniprot" from_work_dir="galaxy_output/*_odb10/miniprot_output.gff">
            <filter>outputs and 'miniprot' in outputs</filter>
        </data>
        <data name='translated_protein' format='fasta' label="${tool.name} on ${on_string}: Translated protein" from_work_dir="galaxy_output/*_odb10/translated_protein.fasta">
            <filter>outputs and 'translated_protein' in outputs</filter>
        </data>
    </outputs>

    <tests>
        <test expect_num_outputs="4">
            <param name="input" value="small_genome.fasta"/>
            <param name="mode" value="busco"/>
            <param name="outputs" value="full_table_busco,full_table,miniprot,translated_protein"/>
            <param name="busco_database" value="entomoplasmatales_odb10"/>
            <param name="lineage_dataset" value="entomoplasmatales_odb10"/>
            <output name="full_table_busco">
                <assert_contents>
                    <has_text text="Busco id"/>
                    <has_text text="496at186328&#009;Missing"/>
                    <has_text text="165at186328&#009;Complete"/>
                    <has_text text="421at186328&#009;Complete"/>
                    <has_text text="90at186328&#009;Complete"/>
                </assert_contents>
            </output>
            <output name="full_table">
                <assert_contents>
                    <has_text text="Gene&#009;Status"/>
                    <has_text text="496at186328&#009;Missing"/>
                    <has_text text="165at186328&#009;Single"/>
                    <has_text text="421at186328&#009;Single"/>
                    <has_text text="90at186328&#009;Single"/>
                </assert_contents>
            </output>
            <output name="miniprot">
                <assert_contents>
                    <has_text text="##gff-version 3"/>
                </assert_contents>
            </output>
            <output name="translated_protein">
                <assert_contents>
                    <has_text text="EKDFYQELGVSSDASPEEIKRAYRKLARDLHPDANPGNPAA"/>
                    <has_text text="AASITILEGLEAVRKRPGMYIGSTGERGLHHLIWEVVD"/>
                </assert_contents>
            </output>
            <assert_stdout>
                <has_text text="S:1.20%, 4"/>
            </assert_stdout>
        </test>
    </tests>
    <help><![CDATA[

    compleasm_ assesses genome completeness based on genome assembly.

    .. _compleasm: https://github.com/huangnengCSU/compleasm

    ]]>
    </help>
    <expand macro="citation"/>
</tool>
