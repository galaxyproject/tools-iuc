<tool id="isescan" name="ISEScan" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="@PROFILE@">
    <description> Insertion Sequence Elements detection in prokaryotic genomes </description>
    <macros>
        <import>macro.xml</import>
    </macros>
    <expand macro='xrefs'/>
    <expand macro="requirements" />
    <expand macro="version_command" />
    <command detect_errors="exit_code"><![CDATA[
        ln -s '$input_file' input &&
        isescan.py
        --seqfile input
        --output 'results'
        $remove_short_is
        --nthread \${GALAXY_SLOTS:-7}

        #if $log_activate:
            | tee '$logfile'
        #end if
    ]]>
    </command>
    <inputs>
        <param name="input_file" type="data" format="fasta" label="Genome fasta input" help="Fasta sequence to analyse for IS"/>
        <param name="remove_short_is" argument="--removeShortIS" type="boolean" truevalue="--removeShortIS" falsevalue=""
               label="Remove incomplete IS elements"
               help="Remove partial IS elements which include IS element with length &gt; 400 or single copy IS element without perfect TIR"/>
        <param name="log_activate" type="boolean" truevalue="true" falsevalue="false" checked="True" label="Keep the log file"/>
    </inputs>
    <outputs>
        <data format="txt" name="logfile" from_work_dir="results">
            <filter> log_activate == True </filter>
        </data>
        <data format="tabular" name="summary" from_work_dir="results/input.sum"/>
        <data format="tabular" name="all_results" from_work_dir="results/input.tsv"/>
        <data format="gff" name="annotation" from_work_dir="results/input.gff"/>
        <data format="fasta" name="is_fasta" from_work_dir="results/input.is.fna"/>
        <data format="fasta" name="orf_fna" from_work_dir="results/input.orf.fna"/>
        <data format="fasta" name="orf_faa" from_work_dir="results/input.orf.faa"/>
    </outputs>
    <tests>
        <test expect_num_outputs="7"> <!-- TEST_1 default parameters -->
            <param name="input_file" value="NC_012624.fna"/>
            <output name="logfile" value="TEST_1/test_1.log" lines_diff="70"/>
            <output name="summary" value="TEST_1/test_1.fna.sum" lines_diff="2"/>
            <output name="all_results" value="TEST_1/test_1.fna.tsv" lines_diff="1"/>
            <output name="annotation" value="TEST_1/test_1.fna.gff" lines_diff="1"/>
            <output name="is_fasta" value="TEST_1/test_1.fna.is.fna" lines_diff="1"/>
            <output name="orf_fna" value="TEST_1/test_1.fna.orf.fna" lines_diff="1"/>
            <output name="orf_faa" value="TEST_1/test_1.fna.orf.faa" lines_diff="1"/>
        </test>
        <test expect_num_outputs="7"> <!-- TEST_1 remove short is -->
            <param name="input_file" value="NC_012624.fna"/>
            <param name="remove_short_is" value="true"/>
            <output name="logfile" value="test_2.log" lines_diff="50"/>
            <output name="summary" value="test_2.fna.sum" lines_diff="1"/>
            <output name="all_results" value="test_2.fna.tsv" lines_diff="1"/>
            <output name="annotation" value="test_2.fna.gff" lines_diff="1"/>
            <output name="is_fasta" value="test_2.fna.is.fna" lines_diff="1"/>
            <output name="orf_fna" value="test_2.fna.orf.fna" lines_diff="1"/>
            <output name="orf_faa" value="test_2.fna.orf.faa" lines_diff="1"/>
        </test>
        <test expect_num_outputs="6"> <!-- TEST_1 remove short is and no logfile -->
            <param name="input_file" value="NC_012624.fna"/>
            <param name="remove_short_is" value="true"/>
            <param name="log_activate" value="False"/>
            <output name="summary" value="test_2.fna.sum" lines_diff="1"/>
            <output name="all_results" value="test_2.fna.tsv" lines_diff="1"/>
            <output name="annotation" value="test_2.fna.gff" lines_diff="1"/>
            <output name="is_fasta" value="test_2.fna.is.fna" lines_diff="1"/>
            <output name="orf_fna" value="test_2.fna.orf.fna" lines_diff="1"/>
            <output name="orf_faa" value="test_2.fna.orf.faa" lines_diff="1"/>
        </test>
    </tests>
    <help><![CDATA[
      **What it does**
      ISEScan is a python pipeline to identify Insertion Sequence elements (both complete and incomplete IS elements) in genome.
      If you want isescan to report only complete IS elements, you need to set command removeShortIS.

      **Input data**
      ISEScan accept fasta file format as input

      **Parameters**
      You can remove the short partial IS elements which include IS element with length < 400 or single copy IS element without perfect TIR/>

        ]]>
    </help>
    <expand macro="citations"/>
</tool>
