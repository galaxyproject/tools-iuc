<?xml version="1.0"?>
<tool id="delly_lr" name="delly: lr" version="@TOOL_VERSION@+galaxy0" profile="18.01">
    <description>long-read SV discovery</description>    
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <expand macro="version_command"/>
    <command detect_errors="exit_code"><![CDATA[
## initialize 
        
## run
## generic options
--svtype $generic.svtype
--genome '$generic.genome' ## todo filetype required?
--exclude '$generic.exclude' ## todo filetype required?
--outfile 'out.bcf'
--technology $generic.technology
## discovery options
--mapqual $discovery.mapqual
--minclip $discovery.minclip
--minrefsep $discovery.minrefsep
--maxreadsep $discovery.maxreadsep
## genotyping options
--vcffile '$genotyping.vcffile'
--geno-qual $genotyping.genoqual
--dump 'out.gz'

|& tee log.txt

&& bcftools view delly.bcf > delly.vcf ## todo if clause
    ]]></command>
    <inputs>
        <expand macro="samples"/>

        <section name="generic" title="Generic options">
            <expand macro="genome"/>
            <expand macro="svtype"/>
            <expand macro="exclude"/>
            <param argument="--technology" type="select" multiple="false" label="Select sequencing technology">
                <option value="ont" selected="true">ont</option>
                <option value="pb">pb</option>
            </param>
        </section>
        <section name="discovery" title="Discovery options">
            <param argument="--mapqual" type="integer" value="1" label="Set minimum mapping quality"/>
            <expand macro="minclip"/>
            <expand macro="minrefsep"/>
            <expand macro="maxreadsep"/>
        </section>
        <section name="genotyping" title="Genotyping options">
            <expand macro="vcffile"/>
            <expand macro="genoqual"/>
        </section>
        <section name="oo" title="Output options">
            <param name="out" type="select" multiple="true" optional="false" label="Select output file(s)">
                <option value="vcf" selected="true">VCF</option>
                <option value="bcf">BCF</option>
                <option value="log">Log</option>
            </param> 
        </section>
    </inputs>
    <outputs>
        <data name="out_bcf" format="tabular" from_work_dir="delly.bcf" label="${tool.name} on ${on_string}: Result (VCF)">
            <filter>'vcf' in oo['out']</filter>
        </data>
        <data name="out_vcf" format="tabular" from_work_dir="delly.bcf" label="${tool.name} on ${on_string}: Result (BCF)">
            <filter>'bcf' in oo['out']</filter>
        </data>
        <data name="out_log" format="tabular" from_work_dir="log.txt" label="${tool.name} on ${on_string}: Log">
            <filter>'log' in oo['out']</filter>
        </data>
    </outputs>
    <tests>
        <!-- #1 default -->
        <test expect_num_outputs="1">
            <param name="samples" value="normal.bam"/>
            <output name="out_log">
                <assert_contents>
                    <has_text_matching expression=".+"/>
                </assert_contents>
            </output>            
        </test>              
    </tests>
    <help><![CDATA[
.. class:: infomark

**What it does**

@WID@

This module *lr* uses the long-read SV discovery mode.

**Input**

Delly needs a sorted, indexed and duplicate marked bam file for every input sample. An indexed reference genome is required to identify split-reads.

**Output**

The output is in BCF format with a csi index. Delly supports germline and somatic SV discovery, genotyping and filtering.

.. class:: infomark

**References**

@REFERENCES@
    ]]></help>
    <expand macro="citations"/>
</tool>
