<?xml version="1.0"?>
<tool id="delly_merge" name="delly: merge" version="@TOOL_VERSION@+galaxy0" profile="18.01">
    <description>...</description>
    
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
       
    <requirement type="package" version="@TOOL_VERSION@"></requirement>
    <requirement type="package" version=""></requirement>
               
    <token name="@TOOL_VERSION@"></token>
    <token name="@WRAPPER_VERSION@">galaxy0</token>
    <token name="@DESCRIPTION@"></token>
    
    
    <xml name="requirements">
        <requirements>
            <requirement type="package" version="@TOOL_VERSION@"></requirement>
            <requirement type="package" version=""></requirement>
        </requirements> 
    </xml>    
    
    <stdio></stdio>
    <version_command></version_command>
    <command detect_errors="exit_code"><![CDATA[
## initialize 
        
## run

## optional files are transfered ans 'None' therefore the following is needed
#if $file
    --param '$file'
#end if

|& tee log.txt        
                              
# needs to be updated, see medaka
        
\${GALAXY_SLOTS:-4}
\$GALAXY_MEMORY_MB
\$GALAXY_MEMORY_MB_PER_SLOT
    ]]></command>
    <inputs>
            <param argument="" type="boolean" truevalue="" falsevalue="" checked="true" label="" help=""/>
            <param argument="" type="integer" value="" min="" max="" label="" help=""/>
            <param argument="" type="float" value="" min="" max="" label="" help=""/>
            <param argument="" type="text" value="" label="" help=""/>
            <param argument="" type="data" format="" multiple="true" label="" help=""/>
            <param argument="" type="select" multiple="false" label="" help="">
                <option value="" selected="true"></option>
                <option value=""></option>
            </param>

            <section name="" title="">
            </section>

            <conditional name="_cond" label="">
                <param name="_sel" type="select" multiple="false" label="" help="">
                    <option value=""></option>
                    <option value=""></option>
                </param>
            </conditional>

        <section name="ap" title="Advanced parameters">
        </section>
        
        <section name="oo" title="Output options">
            <param name="out" type="select" multiple="true" optional="false" label="Select output file(s)" help="">
                <option value="" selected="true"></option>
                <option value=""></option>
                <option value="log">Log</option>
            </param>            
        </section>
    </inputs>
    <outputs>
        <data name="" format="tabular" from_work_dir="" label="${tool.name} on ${on_string}: "/>
                                                                                              
        <data name="" format="tabular" from_work_dir="" label="${tool.name} on ${on_string}: ">
            <filter>'' in out</filter>
        </data>
    </outputs>
    <tests>
        <!-- #1 default -->
        <test expect_num_outputs="">
            <param name="" value=""/>
            <section name="ap">
                <param name="" value=""/>
            </section>
            <output name="">
                <assert_contents>
                    <has_n_lines n=""/>
                    <has_line line=""/>
                    <has_text_matching expression=""/>
                    <has_size value="" delta=""/>
                </assert_contents>
            </output>            
        </test>                                                   
    </tests>
    <help><![CDATA[
.. class:: infomark

**What it does**

@WID@

...

**Input**

...

::

    Courier new text

**Output**

...

.. class:: infomark

**References**

@REFERENCES@
    ]]></help>
    <citations>
        <expand macro="citations"/>
    </citations>

    <expand macro="citations"/>
</tool>
