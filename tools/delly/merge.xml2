<?xml version="1.0"?>
<tool id="delly_merge" name="Delly: merge" version="@TOOL_VERSION@+galaxy0" profile="18.01">
    <description>structural variants across/within VCF/BCF file(s)</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <expand macro="version_command"/>
    <command detect_errors="exit_code"><![CDATA[
## initialize 
#for $i, $current in enumerate($samples)
    ln -s '${current}' 'sample_${i}.bcf' &&
    ln -s '${current.metadata.bcf_index}' 'sample_${i}.bcf.csi' &&
#end for

## run
delly merge
## generic options:
--outfile 'result.bcf'
--chunks $generic.chunks
--vaf $generic.vaf
--coverage $generic.coverage
--minsize $generic.minsize
--maxsize $generic.maxsize
$generic.precise
$generic.pass
## overlap options
--bp-offset $overlap.bpoffset
--rec-overlap $overlap.recoverlap

#for $i, $current in enumerate($samples)
    'sample_${i}.bcf'
#end for

|& tee log.txt
&& test -f result.bcf && bcftools view result.bcf > result.vcf
    ]]></command>
    <inputs>
        <expand macro="samples" format="bcf" multiple="true"/>

        <section name="generic" title="Generic options">
            <param argument="--chunks" type="integer" value="500" label="Set maximum chunk size to merge groups of BCF files"/>
            <param argument="--vaf" type="float" value="0.150000006" label="Set minimum fractional ALT support"/>
            <param argument="--coverage" type="integer" value="10" label="Set minimum coverage"/>
            <param argument="--minsize" type="integer" value="0" label="Set minimum SV size"/>
            <param argument="--maxsize" type="integer" value="1000000" label="Set maximum SV size"/>
            <param argument="--precise" type="boolean" truevalue="--precise" falsevalue="" label="Filter sites for PRECISE?"/>                     
            <param argument="--pass" type="boolean" truevalue="--pass" falsevalue="" label="Filter sites for PASS?" />
        </section>
        <section name="overlap" title="Overlap options">
            <param name="bpoffset" type="integer" value="1000" label="Set maximum breakpoint offset" help="(--bp-offset)"/>
            <param name="recoverlap" type="float" value="0.800000012" label="Set minimum reciprocal overlap" help="(--rec-overlap)"/>
        </section>
        <section name="oo" title="Output options">
            <param name="out" type="select" multiple="true" optional="false" label="Select output file(s)">
                <option value="vcf" selected="true">VCF</option>
                <option value="bcf" selected="true">BCF</option>
                <option value="log">Log</option>
            </param> 
        </section>
    </inputs>
    <outputs>
        <data name="out_vcf" format="tabular" from_work_dir="result.vcf" label="${tool.name} on ${on_string}: Result (VCF)">
            <filter>'vcf' in oo['out']</filter>
        </data>
        <data name="out_bcf" format="tabular" from_work_dir="result.bcf" label="${tool.name} on ${on_string}: Result (BCF)">
            <filter>'bcf' in oo['out']</filter>
        </data>
        <data name="out_log" format="tabular" from_work_dir="log.txt" label="${tool.name} on ${on_string}: Log">
            <filter>'log' in oo['out']</filter>
        </data>
    </outputs>
    <tests>
        <!-- #1 default -->
        <test expect_num_outputs="2">
            <param name="samples" value="call_1.bcf,call_2.bcf"/>
            <output name="out_bcf">
                <assert_contents>
                    <has_size value="1851"/>
                </assert_contents>
            </output>
            <output name="out_vcf">
                <assert_contents>
                    <has_n_lines n="128"/>
                    <has_line line="##fileformat=VCFv4.2"/>
                    <has_line line="#CHROM&#009;POS&#009;ID&#009;REF&#009;ALT&#009;QUAL&#009;FILTER&#009;INFO"/>
                </assert_contents>
            </output>         
        </test>    
        <!-- #2 -->
        <test expect_num_outputs="3">
            <param name="samples" value="call_1.bcf,call_2.bcf"/>
            <section name="generic">
                <param name="chunks" value="500"/>
                <param name="vaf" value="0.150000006"/>
                <param name="coverage" value="10"/>
                <param name="minsize" value="0"/>
                <param name="maxsize" value="1000000"/>
                <param name="precise" value="true"/>                     
                <param name="pass" value="true"/>
            </section>
            <section name="overlap">
                <param name="bp-offset" value="1000"/>
                <param name="rec-overlap" value="0.800000012"/>
            </section>
            <section name="oo">
                <param name="out" value="vcf,bcf,log"/>
            </section>
            <output name="out_bcf">
                <assert_contents>
                    <has_size value="1851"/>
                </assert_contents>
            </output>
            <output name="out_vcf">
                <assert_contents>
                    <has_n_lines n="128"/>
                    <has_line line="##fileformat=VCFv4.2"/>
                    <has_line line="#CHROM&#009;POS&#009;ID&#009;REF&#009;ALT&#009;QUAL&#009;FILTER&#009;INFO"/>
                    <has_text_matching expression="chr5&#009;75911568.+"/>
                </assert_contents>
            </output>
            <output name="out_log">
                <assert_contents>
                    <has_text_matching expression=".+Done\."/>
                </assert_contents>
            </output>            
        </test>                                                   
    </tests>
    <help><![CDATA[
.. class:: infomark

**What it does**

@WID@

This module *filter* uses ...

**Input**

Delly needs a sorted, indexed and duplicate marked bam file for every input sample. An indexed reference genome is required to identify split-reads.

**Output**

The output is in BCF format with a csi index. Delly supports germline and somatic SV discovery, genotyping and filtering.

.. class:: infomark

**References**

@REFERENCES@
    ]]></help>
    <expand macro="citations"/>
</tool>