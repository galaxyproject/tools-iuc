<tool id="mmseqs2_createtsv" name="MMseqs2 createtsv" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="@PROFILE@">
    <description>
        Convert result DB to tab-separated flat file
    </description>
    <macros>
        <import>macro.xml</import>
    </macros>
    <expand macro="biotools"/>
    <expand macro="requirements"/>
    <expand macro="version_command"/>
    <command detect_errors="exit_code"><![CDATA[

    ]]></command>
    <inputs>
        <param name="queryDB" type="data" format="mmseqsdb" label="Query Database" help="" />
        <param name="targetDB" type="data" format="mmseqsdb" label="Target Database" help="" optional="true" />
        <param name="resultDB" type="data" format="mmseqsdb" label="Result Database" help="MMseqs2 createtaxdb result database" />
        <param argument="--first-seq-as-repr" type="boolean" checked="false" label="Use the first sequence of the clustering result as representative sequence" truevalue="1" falsevalue="0" help="" />
        <param argument="--target-column" type="integer" label="Select a target column" value="1" help="0 if no target id exists" />
        <param argument="--full-header" type="boolean" checked="false" label="Replace DB ID by its corresponding Full Header" truevalue="1" falsevalue="0" help="" />
        <param argument="--idx-seq-src" type="select" label="Sequence indexing source">
                <option value="0" selected="true">auto</option>
                <option value="1">split/translated sequences</option>
                <option value="2">input sequences</option>
        </param>
        <param argument="--db-output" type="boolean" checked="False" label="Return a result DB instead of a text file" truevalue="1" falsevalue="0" help="" />
    </inputs>
    <outputs>
        <data name="output_file" format="tabular" label="${tool.name} on ${on_string}: Output File" >
            <change_format>
                <when input="db_output" value="True" format="mmseqsdb" />
            </change_format>
        </data>
    </outputs>
    <tests>
        <test expect_num_outputs="1">
            <param name="queryDB" value="reads" ftype="mmseqsdb" />
            <param name="resultDB" value="lca_result" ftype="mmseqsdb" />
            <param name="db_output" value="False" />
            <output name="output_file" ftype="tabular">
                <assert_contents>
                    <has_text_matching expression="Burkholderiaceae" />
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[
**Usage** 

    *mmseqs createtsv <i:queryDB> [<i:targetDB>] <i:resultDB> <o:tsvFile> [options]*

By Martin Steinegger <martin.steinegger@snu.ac.kr>

-----

**References**

- Steinegger M, Soding J: MMseqs2 enables sensitive protein sequence searching for the analysis of massive data sets. Nature Biotechnology, 35(11), 1026-1028 (2017)

-----

**Options**

* **misc:**
--first-seq-as-repr BOOL  Use the first sequence of the clustering result as representative sequence [0]
--target-column INT       Select a target column (default 1), 0 if no target id exists [1]
--full-header BOOL        Replace DB ID by its corresponding Full Header [0]
--idx-seq-src INT         0: auto, 1: split/translated sequences, 2: input sequences [0]

* **common:**
--threads INT             Number of CPU-cores used (all by default) [8]
--compressed INT          Write compressed output [0]
-v INT                    Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]

* **expert:**
--db-output BOOL          Return a result DB instead of a text file [0]
    ]]></help>
    <expand macro="citations"/>
</tool>