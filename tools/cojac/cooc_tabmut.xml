<tool id="cooc_tabmut" name="Cojac: tabmut" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@"
      profile="@PROFILE@">
    <description>
        export cooccurrence mutations as a table
    </description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="biotools"/>
    <expand macro="requirements"/>
    <expand macro="version"/>
    <command detect_errors="exit_code"><![CDATA[
#for $input_file in $cooc_file
    #set $cooc_ext = $input_file.ext
#end for
cooc-tabmut
    #if $cooc_ext == 'json'
        -j '$cooc_file'
    #else if $cooc_ext == 'yaml'
        -y '$cooc_file'
    #end if
    -o cooc-table.csv
    #if $table_orientation.choice == 'lines'
        -l
    #else if $table_orientation.choice == 'multiindex'
        -m
    #end if
    -q
    ]]></command>
    <inputs>
        <param name="cooc_file" type="data" format="json,yaml" multiple="true"
               label="Results generated by mutbamscan"/>
        <conditional name="table_orientation">
            <param name="choice" type="select" label="Output table orientation">
                <option value="columns">Column-oriented table (default)</option>
                <option value="lines">Line-oriented table</option>
                <option value="multiindex">Multi-level indexing (amplicons and counts
                    categories)
                </option>
            </param>
            <when value="columns"/>
            <when value="lines"/>
            <when value="multiindex"/>
        </conditional>
    </inputs>
    <outputs>
        <data name="table" format="csv"
              label="${tool.name} on ${on_string}: Mutation cooccurrence (CSV table)"
              from_work_dir="cooc-table.csv">
        </data>
    </outputs>
    <tests>
        <test expect_num_outputs="1">
            <param name="cooc_file" value="cooc-test111.json"/>
            <conditional name="table_orientation">
                <param name="choice" value="columns"/>
            </conditional>
            <output name="table" ftype="csv">
                <assert_contents>
                    <has_text text="A76_om1.count"/>
                    <has_text text="A76_om1.mut_oneless"/>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[
@HELP_HEADER@

Information about **cooc_tabmut** method
========================================

The method exports a JSON or YAML file as a CSV/TSV table for downstream analysis (e.g.: RStudio).

    ]]></help>
    <expand macro="citations"/>
</tool>
