<tool id="cooc_pubmut" name="Cojac: pubmut" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@"
      profile="@PROFILE@">
    <description>
        render a JSON or YAML file to a pretty table
    </description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="biotools"/>
    <expand macro="requirements"/>
    <expand macro="version"/>
    <command detect_errors="exit_code"><![CDATA[
@VOCDIR_COMMAND@
cooc-pubmut
    -m '$vocdir'
    -a '$amplicons'
    #if $mutbamscan_results.choice == 'json'
        -j '$cooc_json'
    #else
        -y '$cooc_yaml'
    #end if
    -o cooc-table.csv
    #if $batchname
        --batchname '$batchname'
    #end if
    -q
    #if $ms_excel_needed.choice == 'no'
        $ms_excel_needed.escape
        #if $ms_excel_needed.add_html == 'true'
            && pandoc cooc-table.csv -o cooc-table.html
        #end if
	#else
        $ms_excel_needed.excel
	#end if
    ]]></command>
    <inputs>
        <expand macro="vocdir_input"/>
        <param name="amplicons" type="data" format="yaml" label="List of query amplicons" help="File generated by the Cojac mutbamscan tool"/>
        <conditional name="mutbamscan_results">
            <param name="choice" type="select" label="Format of coocurrence mutation file(s)" help="Files generated by Cojac mutbamscan tool">
                <option value="json">JSON</option>
                <option value="yaml">YAML</option>
            </param>
            <when value="json">
                <param name="cooc_json" type="data" format="json" multiple="true"
                       label="Results generated by mutbamscan"/>
            </when>
            <when value="yaml">
                <param name="cooc_yaml" type="data" format="yaml" multiple="true"
                       label="Results generated by mutbamscan"/>
            </when>
        </conditional>
        <conditional name="ms_excel_needed">
            <param name="choice" type="select" label="Output format for Microsoft Excel">
                <option value="no">no</option>
                <option value="yes">yes</option>
            </param>
            <when value="no">
                <param argument="--escape" type="boolean" truevalue="--escape" falsevalue=""
                       checked="false" label="Use escape characters for newlines"/>
                <param name="add_html" type="boolean" checked="false"
                       label="Convert CSV output table to HTML format"/>
            </when>
            <when value="yes">
                <param argument="--excel" type="boolean" truevalue="--excel" falsevalue=""
                       checked="false"
                       label="Use a semi-colon ';' instead of a comma ',' in the comma-separated-files as required by Microsoft Excel"/>
            </when>
        </conditional>
        <param argument="--batchname" type="text" optional="true"
               label="Batchname"
               help="Split samplename/batchname (as in samples tsv)"/>
    </inputs>
    <outputs>
        <data name="table" format="csv"
              label="${tool.name} on ${on_string}: Mutation cooccurrence (CSV table)"
              from_work_dir="cooc-table.csv">
        </data>
        <data name="html" format="html"
              label="${tool.name} on ${on_string}: Mutation cooccurrence (HTML)"
              from_work_dir="cooc-table.html">
            <filter>ms_excel_needed['choice'] == 'no' and ms_excel_needed['add_html']</filter>
        </data>

    </outputs>
    <tests>
        <test expect_num_outputs="1">
            <conditional name="vocdir_option">
                <param name="choice" value="custom"/>
                <param name="voc_file" value="omicron_ba1_mutations.yaml"/>
            </conditional>
            <param name="amplicons" value="amplicons111.yaml"/>
            <conditional name="mutbamscan_results">
                <param name="choice" value="json"/>
                <param name="cooc_json" value="cooc-test111.json"/>
            </conditional>
            <output name="table" ftype="csv">
                <assert_contents>
                    <has_text text="Amplicon 76"/>
                    <has_text text="Amplicon 81"/>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[
@HELP_HEADER@

Information about **cooc-pubmut** method
========================================

The method renders a JSON or YAML file to a table as in the publication.
You need to open the output CSV in a spreadsheet that understands linebreaks.

    ]]></help>
    <expand macro="citations"/>
</tool>
