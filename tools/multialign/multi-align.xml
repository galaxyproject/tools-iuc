<tool id="multialign" name="multialign" version="1.0" profile="18.05">
    <description>Align independently sequences of a multi-fasta file with BWA</description>
    <requirements>
        <requirement type="package" version="1.001002" >perl-test-more</requirement>
        <requirement type="package" version="1.7043" >perl-app-cpanminus</requirement>
        <requirement type="package" version="2.161" >perl-data-dumper</requirement>
        <requirement type="package" version="7.24" >perl-extutils-makemaker</requirement>
        <requirement type="package" version="5.22.0" >perl-threaded</requirement>
        <requirement type="package" version="2.50" >perl-getopt-long</requirement>
        <requirement type="package" version="0.34" >perl-statistics-r</requirement>
        <requirement type="package" version="0.30" >perl-string-random</requirement>
        <requirement type="package" version="1.17" >perl-parallel-forkmanager</requirement>
        <requirement type="package" version="1.8" >samtools</requirement>
        <requirement type="package" version="0.7.17" >bwa</requirement>
        <requirement type="package" version="2.2.1" >r-ggplot2</requirement>
        <requirement type="package" version="1.20.0" >bioconductor-gviz</requirement>
        <requirement type="package" version="3.6" >python</requirement>
    </requirements>
    <version_command>perl '$__tool_directory__/script/multi-align.pl' --version | grep 'multi-align.pl version' | cut -d ' ' -f 3</version_command>
    <command detect_errors="aggressive"><![CDATA[
        mkdir -p '$html_file.files_path' &&
        perl $__tool_directory__/multi-align.pl
            --ref '$ref_file' 
            --fastq '$fastq_input1'
            --html '$html_file'
            --dir '$html_file.files_path'
            --ma  '$ma'
            --mis '$mis'
            --threads '\${GALAXY_SLOTS:-1}'
    ]]></command>
    <inputs>
        <param name="fastq_input1" type="data" format="fastqsanger" label="Select QUERY fastq file" help="This must be a fastqsanger file." />
        <param name="ref_file" type="data" format="fasta" label="Use the following file as the reference sequences" help="You can upload a FASTA sequence to the history and use it as reference." />
        <param name="mis" type="integer" value="0" label="number of mismatches" />
        <param name="ma" type="integer" value="0" label="number of reads" />
    </inputs> 
    <outputs>
        <data name="html_file" format="html" label="${tool.name} on ${on_string} (html report)"/>
    </outputs>
    
    <tests>
        <!--Ensure command line is working properly -->
        <test>
            <param name="fastq_input1" ftype="fastqsanger" value="reads.fastq" />
            <param name="ref_file" value="TE.fa" />
            <param name="mis" value="0" />
            <param name="ma"  value="0" />
            <assert_command>
                <has_text text="--mis '0'" />
            </assert_command>
        </test>
        <!--Ensure tool produces html output file -->
        <test expect_num_outputs="1">
            <param name="fastq_input1" ftype="fastqsanger" value="reads.fastq" />
            <param name="ref_file" value="TE.fa" />
            <param name="mis" value="0" />
            <param name="ma"  value="0" />
            <output name="html_file" file="report_html/report.html" >
                <assert_contents>
                    <has_text text="report.txt" />
                    <has_text text="count.txt" />
                    <has_text text="align.html" />
                </assert_contents>
            </output>
        </test>
        <!--Ensure tool produces output files -->
        <!-- TODO: I cannot get <extra_files> to test the files I want to test. Hmph.>
        <test>
            <param name="fastq_input1" ftype="fastqsanger" value="reads.fastq" />
            <param name="ref_file" value="TE.fa" />
            <param name="mis" value="0" />
            <param name="ma"  value="0" />
            <output name="html_file" file="report_html/report.html" >
                <extra_files name="output_bam" type="file" value="report_html/reads_BATUMI_I_sorted_mapped.bam" compare="re_match" />
                <extra_files name="output_bam" type="file" value="report_html/reads_BATUMI_LTR_sorted_mapped.bam" compare="re_match" />
                <extra_files name="output_bam" type="file" value="report_html/reads_PROTOP_sorted_mapped.bam" compare="re_match" />
                <extra_files name="output_bed" type="file" value="report_html/BATUMI_I.bed" compare="re_match" />
                <extra_files name="output_bed" type="file" value="report_html/BATUMI_LTR.bed" compare="re_match" />
                <extra_files name="output_bed" type="file" value="report_html/PROTOP.bed" compare="re_match" />
                <extra_files name="output_fastq.gz" type="file" value="report_html/BATUMI_I.fastq.gz" compare="re_match" />
                <extra_files name="output_fastq.gz" type="file" value="report_html/BATUMI_LTR.fastq.gz" compare="re_match" />
                <extra_files name="output_fastq.gz" type="file" value="report_html/PROTOP.fastq.gz" compare="re_match" />
            </output>
        </test-->
    </tests>
    <help><![CDATA[
**What is does**

This tool has been developped to analyse Transposable Elements (TE) expression. 
It aligns NGS sequences to a TE multi-fasta file with BWA algorithm. It produces graphes representing mapping counts in a sens and antisense orientations.

    ]]></help>
    <citations>
        <citation type="bibtex">
        @Unpublished{multialign,
        author = {R. Pogorelcnik, J. Pollet, N. Gou√©},
        owner = {AuBiGReD},
        title = {multi-align tool},
        timestamp = {2020.04.23},
         url = {https://www.gred-clermont.fr/directory/team/en/team-04-genetic-instabilities-and-control-by-the-host-genome},
        }</citation>
    </citations>

</tool>
