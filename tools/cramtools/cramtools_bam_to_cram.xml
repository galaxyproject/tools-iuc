<tool id="cramtools" name="cramtools BAM to CRAM" version="3.0">
    <description>cramtools converting BAM to CRAM format</description>

    <macros>
        <import>cramtools_macros.xml</import>
    </macros>

    <expand macro="requirements" />
    <expand macro="stdio" />
    <expand macro="version_command" />

    <command>
    <![CDATA[
        @PREPROCESS_FASTA_FILE@
        
        java
            -jar \$CRAMTOOLS_ROOT_DIR/jars/cramtools-3.0.jar
            cram
                -l INFO
                
                #if $capture_tags.select == "all_tags":
                    --capture-all-tags
                #else
                    --capture-tags "${capture_tags.tags}"
                #end if
            
                $preserve_read_names
                $lossless_quality_score
            
                #if str($input_alignment.ext) == 'sam':
                    --input-is-sam 
                #end if
                
                -I $input_alignment
                -R "${input_reference}.fa"
                -O $output_alignment
    ]]>
    </command>

    <inputs>
        <param name="input_alignment" type="data" format="bam,sam" label="BAM or SAM alignment file"/>
        <param name="input_reference" type="data" format="fasta" label="FASTA reference"/>
        
        <conditional name="capture_tags">
            <param name="select" type="select" label="Do you want to filter on BAM/SAM/CRAM tags?">
                <option value="all_tags">No, use all tags</option>
                <option value="select">Yes, I want use a subset of tags</option>
            </param>
            <when value="indexed_filtered" />
            <when value="select">
                <param name="tags" type="text" label="Capture the tags listed, for example 'OQ:XA:XB'" help="For more details on these tags take a look at the sam/bam specification https://samtools.github.io/hts-specs/. Because aligners may come with their own non-standard tags, please read the manual of your aligner carefully." />
            </when>
        </conditional>
        
        <param name="preserve_read_names" type="boolean" truevalue="--preserve-read-names" falsevalue="" label="Preserve original read names" help="Removal of such names saves disk space"/>
        <param name="lossless_quality_score" type="boolean" truevalue="--lossless-quality-score" falsevalue="" label="Do a lossless base quality compression" help="Lossy base quality score compression saves disk space but has a lower resolution"/>
    </inputs>

    <outputs>
        <data format="cram" name="output_alignment" label="{$tool.name} on ${on_string}"></data>
    </outputs>

    <tests>
        <test>
            <param name="input_alignment" value="test.bam" ftype="bam" />
            <param name="input_reference" value="test.fa" />

            <param name="select" value="all_tags" />

            <param name="preserve_read_names" value="" />
            <param name="lossless_quality_score" value="" />


            <output name="output_alignment" file="test.cram"  compare="sim_size" delta="250" /><!-- Some headers may change, depending on file paths -->
        </test>
        <test>
            <param name="input_alignment" value="test.sam" ftype="sam" />
            <param name="input_reference" value="test.fa" />

            <param name="select" value="all_tags" />

            <param name="preserve_read_names" value="" />
            <param name="lossless_quality_score" value="" />

            <output name="output_alignment" file="test.cram"  compare="sim_size" delta="250" /><!-- Some headers may change, depending on file paths -->
        </test>
    </tests>

    <help>
    </help>

    <citations>
    </citations>
</tool>
