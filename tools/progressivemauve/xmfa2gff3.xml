<?xml version="1.0"?>
<tool id="xmfa2gff3" name="Convert XMFA to gapped GFF3" version="@WRAPPER_VERSION@.1">
  <description></description>
  <macros>
    <import>macros.xml</import>
  </macros>
  <requirements>
    <requirement type="package" version="2.7">python</requirement>
    <requirement type="package" version="1.72">biopython</requirement>
    <requirement type="package" version="0.6.4">bcbiogff</requirement>
  </requirements>
  <expand macro="stdio"/>
  <version_command>python xmfa2gff3.py --version</version_command>
  <command><![CDATA[
python '${__tool_directory__}/xmfa2gff3.py'
$xmfa
--window_size $window_size
--relative_to $relative_to
--sequences
#for file in $sequences:
  '${file}'
#end for
> '$output'

]]></command>
  <inputs>
      <param type="data" format="xmfa" name="xmfa"
          label="XMFA MSA" />

      <param type="data" format="fasta" name="sequences" multiple="True"
          label="Select sequences used in progressiveMauve alignment"
          help="Should be provided in the same order as in original progressiveMauve run"/>

      <param type="integer" label="Window Size" value="100" name="window_size"
          help="maximum length of a match_part feature. Lower number = larger GFF output" />

      <param type="integer" label="Generate relative to Nth sequence in XMFA file" value="1" name="relative_to"
          help="progressiveMauve (un)helpfully strips original sequence IDs and replaces with integer numbers. This option lets you generate the alignment relative to e.g. the second genome if you wished to display against that base sequence" />
  </inputs>
  <outputs>
    <data format="gff3" name="output">
    </data>
  </outputs>
  <tests>
      <test>
          <param name="xmfa" value="2.xmfa"/>
          <param name="sequences" value="karma.fa,phagey.fa" />
          <param name="window_size" value="10" />
          <param name="relative_to" value="1" />
          <output name="output" file="1.gff3"/>
      </test>
  </tests>
  <help><![CDATA[
What it does
============

XMFA Alignments are great, but now you need a way to visualize this data!

This tool provides a conversion step to GFF3 formatted output consiting of
``match``es and ``match_part``s with scores indicating percent identity over
that chunk of sequence.

A rendering of the output GFF3 file in JBrowse is shown below:

.. image:: $PATH_TO_IMAGES/xmfa2gff3.png

]]></help>
  <citations>
  </citations>
</tool>
