<tool id="manta" name="Manta" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="21.05">
    <description>Structural variant and indel caller for mapped sequencing data</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="creators"/>
    <expand macro="requirements"/>
    <command detect_errors="exit_code"><![CDATA[   
        ln -s '$tumourBam' ./tumor.bam &&
        ln -s '$tumourBam.metadata.bam_index' ./tumor.bam.bai &&
        ln -s '$normalBam' ./normal.bam &&
        ln -s '$normalBam.metadata.bam_index' ./normal.bam.bai &&
        ln -s '$callRegions' ./capture.bed &&
        #if str($reference_source.ref_selector) == 'history':
            ln -s '$reference_source.referenceFasta' ./genome.fa &&
            samtools faidx ./genome.fa 2>&1 || echo 'Error running samtools faidx for indexing fasta reference for manta' >&2 &&
        #else
            ln -s '$reference_source.referenceFasta.fields.path' ./genome.fa &&
            ln -s '${reference_source.referenceFasta.fields.path}.fai' ./genome.fa.fai &&
        #end if

        bgzip ./capture.bed &&
        tabix -p bed ./capture.bed.gz &&
        #import os
        configManta.py
        --normalBam ./normal.bam
        --tumourBam ./tumor.bam
        --referenceFasta ./genome.fa
        --callRegions ./capture.bed.gz
        $advanced_settings.exome
        $advanced_settings.rna
        $advanced_settings.unstrandedRNA
        && ./MantaWorkflow/runWorkflow.py 
    ]]></command>
    <inputs>
        <param argument="--tumourBam" type="data" format="bam" label="Tumour Bam" help="" />
        <param argument="--normalBam" type="data" format="bam" label="Normal Bam" help="" />
        <expand macro="reference_interface" />
        <param argument="--callRegions" type="data" format="bed" label="Call Regions" help="" />
        <section name="advanced_settings" title="Advanced settings" expanded="false">
            <param argument="--exome" type="boolean" checked="false" truevalue="--exome" falsevalue="" label="Exome" help="Set options for WES input" />
            <param argument="--rna" type="boolean" checked="false" truevalue="--rna" falsevalue="" label="RNA" help="Set options for RNA-Seq input" />
            <param argument="--unstrandedRNA" type="boolean" checked="false" truevalue="--unstrandedRNA" falsevalue="" label="Unstranded RNA" help="Set if RNA-Seq input is unstranded" />
        </section>
    </inputs>
    <outputs>
        <data name="out_candidateSmallIndels" format="vcf" label="${tool.name} on ${on_string}: Candidate Small Indels" from_work_dir="MantaWorkflow/results/variants/candidateSmallIndels.vcf.gz" />
        <data name="out_diploidSV" format="vcf" label="${tool.name} on ${on_string}: Diploid SV" from_work_dir="MantaWorkflow/results/variants/diploidSV.vcf.gz" />
        <data name="out_candidateSV" format="vcf" label="${tool.name} on ${on_string}: Candidate SV" from_work_dir="MantaWorkflow/results/variants/candidateSV.vcf.gz" />
        <data name="out_somaticSV" format="vcf" label="${tool.name} on ${on_string}: Somatic SV" from_work_dir="MantaWorkflow/results/variants/somaticSV.vcf.gz" />
    </outputs>
    <tests>
        <test expect_num_outputs="4">
            <conditional name="reference_source">
                <param name="ref_selector" value="history"/>
                <param name="referenceFasta" ftype="fasta" value="genome.fasta" />
            </conditional>
            <param name="tumourBam" ftype="bam" value="tumor.bam" />
            <param name="normalBam" ftype="bam" value="normal.bam" />
            <param name="callRegions" ftype="bed" value="capture.bed" />
            <output name="out_candidateSmallIndels" file="candidateSmallIndels.vcf.gz" ftype="vcf" compare="sim_size" />
            <output name="out_diploidSV" file="diploidSV.vcf.gz" ftype="vcf" compare="sim_size" />
            <output name="out_candidateSV" file="candidateSV.vcf.gz" ftype="vcf" compare="sim_size" />
            <output name="out_somaticSV" file="somaticSV.vcf.gz" ftype="vcf" compare="sim_size" />
        </test>
        <test expect_num_outputs="4">
            <conditional name="reference_source">
                <param name="ref_selector" value="cached"/>
                <param name="referenceFasta" value="test_buildid"/>
            </conditional>
            <param name="tumourBam" ftype="bam" value="tumor.bam" />
            <param name="normalBam" ftype="bam" value="normal.bam" />
            <param name="exome" value="1" />
            <param name="callRegions" ftype="bed" value="capture.bed" />
            <output name="out_candidateSmallIndels" file="candidateSmallIndels.vcf.gz" ftype="vcf" compare="sim_size" />
            <output name="out_diploidSV" file="diploidSV.vcf.gz" ftype="vcf" compare="sim_size" />
            <output name="out_candidateSV" file="candidateSV.vcf.gz" ftype="vcf" compare="sim_size" />
            <output name="out_somaticSV" file="somaticSV.vcf.gz" ftype="vcf" compare="sim_size" />
        </test>
    </tests>
    <help><![CDATA[
          Manta calls structural variants (SVs) and indels from mapped paired-end sequencing reads. 
          It is optimized for analysis of germline variation in small sets of individuals and somatic 
          variation in tumor/normal sample pairs. Manta discovers, assembles and scores large-scale SVs, 
          medium-sized indels and large insertions within a single efficient workflow
    ]]></help>
    <expand macro="citations" />
</tool>
