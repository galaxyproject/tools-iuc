<tool id="krakentools_beta_diversity" name="Krakentools: calculates beta diversity (Bray-Curtis dissimilarity)" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="@PROFILE@">
    <description>from Kraken, Krona and Bracken files</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="biotools"/>
    <expand macro="requirements"/>
    <expand macro="version"/>
    <command detect_errors="exit_code"><![CDATA[
#import re
#set input_names=[]

#for $input in $inputs
        #set identifier = re.sub('[^\s\w\-.]', '_', str($input.element_identifier))
	#silent $input_names.append($identifier)
	ln -s '$input' '${identifier}' &&
#end for

beta_diversity.py 
    --inputs
    #for $input_name in $input_names
	'${input_name}' 
    #end for
    --type '$sample.type'
    #if $sample.type == 'kreport'
        --level '$sample.level'
    #else if $sample.type == 'krona'
        --level '$sample.level'
    #end if
    > '$output'
    ]]></command>
    <inputs>
        <param argument="--inputs" type="data" multiple="true" format="tabular" label="Taxonomy file(s)" help="The files can be generated by Kraken, Bracken or Krona"/>
        <conditional name="sample">
            <param argument="--type" type="select" label="Specify type of input file(s)">
                <option value="single" selected="true">Single tabular data file</option>
                <option value="simple">Tabular data files</option>
                <option value="bracken">Braken species abundance file</option>
                <option value="kreport">Kraken report file</option>
                <option value="krona">Krona file</option>
            </param>
            <when value="single"/>
            <when value="simple"/>
            <when value="bracken"/>
            <when value="kreport">
                <expand macro="param_level"/>
            </when>
            <when value="krona">
                <expand macro="param_level"/>
            </when>
        </conditional>

    </inputs>
    <outputs>
        <data name="output" format="tabular" />
    </outputs>
    <tests>
        <test>
            <param name="inputs" value="beta_bracken_1.tabular,beta_bracken_2.tabular,beta_bracken_3.tabular"/>
            <param name="type" value="bracken"/>
            <output name="output" ftype="tabular">
                <assert_contents>
                    <has_text_matching expression="#[012]&#9;beta_[a-z]+_[123].tabular \([0-9]+ reads\)" n="3"/>
                    <has_n_columns n="4" comment="#"/>
                    <has_n_lines n="7"/>
                    <has_text text="0.629"/>
                </assert_contents>
            </output>
        </test>
        <test>
            <param name="inputs" value="beta_kreport_1.tabular,beta_kreport_2.tabular,beta_kreport_3.tabular"/>
            <param name="type" value="kreport"/>
            <output name="output" ftype="tabular">
                <assert_contents>
                    <has_text text="beta_kreport_1.tabular"/>
                    <has_text_matching expression="#[012]&#9;beta_[a-z]+_[123].tabular \([0-9]+ reads\)" n="3"/>
                    <has_n_columns n="4" comment="#"/>
                    <has_n_lines n="7"/>
                    <has_text text="0.584"/>
                </assert_contents>
            </output>
        </test>
        <test>
            <param name="inputs" value="beta_krona_1.tabular,beta_krona_2.tabular"/>
            <param name="type" value="krona"/>
            <param name="level" value="G"/>
            <output name="output" ftype="tabular">
                <assert_contents>
                    <has_text_matching expression="#[01]&#9;beta_[a-z]+_[12].tabular \([0-9]+ reads\)" n="2"/>
                    <has_n_columns n="3" comment="#"/>
                    <has_n_lines n="5"/>
                    <has_text text="0.993"/>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[
KrakenTools is a suite of scripts to be used alongside the Kraken, KrakenUniq, Kraken 2, or Bracken programs. These scripts are designed to help Kraken users with downstream analysis of Kraken results. This program calculates the beta diversity (Bray-Curtis dissimilarity) from kraken, krona and bracken files.

Input
------
Bracken files, Kraken and Kracken2 report files and Krona files. Additionally, you can pass any tab-separated file and specify the columns with the taxonomical information and read counts (--cols).

Output
------
Beta diversity of the input files

    ]]></help>
    <expand macro="citations"/>
</tool>
