<tool id="hicexplorer_hicnormalize" name="@BINARY@" version="@WRAPPER_VERSION@.0">
    <description>normalizes a matrix to norm range or smallest read count</description>
    <macros>
        <token name="@BINARY@">hicNormalize</token>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <command detect_errors="exit_code"><![CDATA[
        #for $counter, $m in enumerate($matrix_h5_cooler_multiple):
            ln -s '$m' ${counter}_matrix &&
        #end for
        #set $m = '" "'.join([ '%s_matrix' % $counter for $counter, $matrix in enumerate($matrix_h5_cooler_multiple) ])
        #set $m_out = '" "'.join([ '%s_norm.$outputFormat' % $matrix for $counter, $matrix in enumerate($matrix_h5_cooler_multiple) ])

        hicNormalize --matrices "$m"
        --normalize $normalize
        --outFileName $m_out

        && mv .$outputFormat obs_exp_matrix
        
]]>
    </command>
    <inputs>
        <expand macro='matrix_h5_cooler_multiple_macro'/>

        <param name='normalize' type='select' label='Normalize matrices'>
            <option value='norm_range'>0 to 1 range</option>
            <option value='smallest'>Smallest read count</option>
        </param>

    </inputs>
    <outputs>
        <data format="cool, h5" name="sample">
            <discover_datasets pattern="_norm" visible="true" assign_primary_output="true" />
        </data>

    </outputs>
    <tests>
        <test>
            <param name="matrix_h5_cooler" value="small_test_matrix_50kb_res.h5"/>
            <param name="outputFormat" value="h5" />
            <output name="obs_exp" file="obs_exp_small_50kb.h5" ftype="h5" compare="sim_size"/>
            <output name="pearson" file="pearson_small_50kb.h5" ftype="h5" compare="sim_size"/>
            <output name="covariance" file="covariance_small_50kb.h5" ftype="h5" compare="sim_size"/>
        </test>
        <test>
            <param name="matrix_h5_cooler" value="small_test_matrix_50kb_res.h5"/>
            <param name="outputFormat" value="cool" />
            <output name="obs_exp" file="obs_exp_small_50kb.cool" ftype="cool" compare="sim_size"/>
            <output name="pearson" file="pearson_small_50kb_transform.cool" ftype="cool" compare="sim_size"/>
            <output name="covariance" file="covariance_small_50kb.cool" ftype="cool" compare="sim_size"/>
        </test>
    </tests>
    <help><![CDATA[
Transformation of matrix for plotting
=====================================

**hicTransform** computes three matrices based on one Hi-C contact matrix as input based on the methods determined by `Lieberman-Aiden et al. (2009)`_:

- An **observed/expected matrix** obtained "by dividing each entry in the contact matrix by the genome-wide average contact probability for loci at that genomic distance" (`Lieberman-Aiden et al. (2009)`_). This transformation allows to better assess long range interactions.
- A **Pearson correlation matrix** obtained by computing the Pearson correlation between each bin based on observed/expected values. This matrix transformation allows to better identify the bins that are entering in contact together, or not, at long ranges, and thus helps defining compartments in the nucleus (``hicPCA``).
- A **covariance matrix**, which is used as a basis for the Principal Component Analysis (PCA) to compute the eigenvectors outputed by **hicTransform**.

These three matrices can be used with ``hicPlotMatrix`` or ``hicPlotTADs`` for a visualization of the A / B compartment analysis.

_________________

Output
------

From one Hi-C contact matrix, **hicTransform** outputs the observed/expected, Pearson correlation and covariance matrices.

_________________

| For more information about HiCExplorer please consider our documentation on readthedocs.io_

.. _readthedocs.io: http://hicexplorer.readthedocs.io/en/latest/index.html
.. _`Lieberman-Aiden et al. (2009)`: https://doi.org/10.1126%2Fscience.1181369
]]></help>
    <expand macro="citations" />
</tool>
