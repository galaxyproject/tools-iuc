<tool id="hicexplorer_hictadclassifier" name="@BINARY@" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@">
    <description>TAD detection based on ML models</description>
    <macros>
        <token name="@BINARY@">hicTADClassifier</token>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <command detect_errors="exit_code"><![CDATA[

        @BINARY@
            --matrices '$matrix'
          
            @CHROMOSOME_LIST@
            --normalization_method $normalization_method_select
            --threads @THREADS@
            #if $saved_classifier:
                --saved_classifier $saved_classifier
            #end if
            --out_file predicted.txt
]]>
    </command>
    <inputs>
        <param name="matrix" type="data" format="cool" label="Hi-C matrix" help="This tool supports only the cooler file format" />
        <param name="normalization_method_select" type="select" label="Normalization method">
            <option value="obs_exp" selected="True">Observed / expected</option>
            <option value="range">0 - 1 range</option>
        </param>
        <expand macro="chromosome_list" />
        
        <param name="saved_classifier" format="binary"  optional="True"  type="data" label="Use a self-trained classifier"/>

    </inputs>
    <outputs>
        <data name="predicted_tad" from_work_dir="predicted.txt" format="txt" label="predicted TADs" />
    </outputs>
    <tests>
        <test>
            <param name="matrix" value="small_test_matrix.cool" />
            <param name="normalization_method_select" value="obs_exp" />
            <output name="predicted_tad" file="hicTADClassifier/predicted.txt" ftype="txt" />
        </test>
        
        <test>
            <param name="matrix" value="small_test_matrix.cool" />
            <param name="normalization_method_select" value="obs_exp" />
            <param name="saved_classifier" value="hicTADClassifier/unittest_classifier.BIN" />

            <output name="predicted_tad" file="hicTADClassifier/predicted_second_classifier.txt" ftype="txt" />
        </test>
    </tests>
    <help><![CDATA[

Predict TADs based on a ML model
================================

Uses Supervised Learning to call TAD boundaries. One Hi-C matrix can be passed, from which a BED file will be produced containing the predicted boundary positions.
By default, a EasyEnsembleClassifier as described in Liu et al.: “Exploratory Undersampling for Class-Imbalance Learning” will be used to call TADs. 
Internally this classifier relies on Resampling, Boosting and Bagging. 
Passed matrices will be observed/expected normalized by default. Alternatively, a 0 -1 range normalization can be used. Currently, only classifiers for 10, 25, 50 and 100 kb resolution are provided. For building own classifiers or tune existing ones, hicTrainClassifier can be used and passed with the saved_classifer argument. A simple usage example can be seen here:

Usage
-----

.. code-block:: text

    $ hicTADClassifier -m my_matrix.cool -o predictions --normalization_method obs_exp


For more information about HiCExplorer please consider our documentation on readthedocs.io_.

.. _readthedocs.io: http://hicexplorer.readthedocs.io/en/latest/index.html

]]>    </help>
    <expand macro="citations" />
</tool>
