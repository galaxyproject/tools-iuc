<tool id="bellavista_prepare" name="Bellavista" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="@PROFILE@">
    <description>Prepare large images for bellavista visualizer</description>
    <creator>
        <organization name="European Galaxy Team" url="https://galaxyproject.org/eu/" />
        <person givenName="Amirhossein" familyName="Naghsh Nilchi" email="nilchia@informatik.uni-freiburg.de" />
        <person givenName="Pavan" familyName="Videm" email="videmp@informatik.uni-freiburg.de" />
        <person givenName="Björn" familyName="Grüning" email="gruening@informatik.uni-freiburg.de" />
    </creator>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <command detect_errors="exit_code"><![CDATA[
        export TIME_LIMIT_SECONDS=$timeout &&
        export BELLAVISTA_DIR=`pwd`/input/ &&
        mkdir -p 'input' 'input/BellaVista_output' &&
        chmod -R 777 'input/' &&
        #if $technology_conditional.plot_genes.plot_transcripts == "true":
            cp '$technology_conditional.plot_genes.transcript_filename' './input/${technology_conditional.plot_genes.transcript_filename.element_identifier}.${technology_conditional.plot_genes.transcript_filename.ext}' &&
        #end if
        #for $image in $technology_conditional.images:
            cp '$image' 'input/${image.element_identifier}.${image.ext}' &&
        #end for
        cp '$bellavista_config_file' './input/config.json' &&
        #if $technology_conditional.plot_cell_segmentation.plot_cell_seg == "true":
            cp '$technology_conditional.plot_cell_segmentation.cell_segmentation' './input/${technology_conditional.plot_cell_segmentation.cell_segmentation.element_identifier}.${technology_conditional.plot_cell_segmentation.cell_segmentation.ext}' &&
        #end if
        #if $technology_conditional.plot_nuclear_segmentation.plot_nuclear_seg == "true":
            cp '$technology_conditional.plot_nuclear_segmentation.nuclear_segmentation' './input/${technology_conditional.plot_nuclear_segmentation.nuclear_segmentation.element_identifier}.${technology_conditional.plot_nuclear_segmentation.nuclear_segmentation.ext}' &&
        #end if
        #if $technology_conditional.technology == "MERSCOPE":
            cp '$technology_conditional.um_to_px_transform' './input/micron_to_mosaic_pixel_transform.csv' &&
        #end if
        cat './input/config.json' &&

        cp './input/config.json' './input/config_orig.json' &&

        cd "\$BELLAVISTA_DIR" &&
        bash '$__tool_directory__/bellavista.bash' &&
        cd .. &&

        tar -czf 'bellavista.tar.gz' 'input/'
    ]]></command>
    <configfiles>
        <configfile name="bellavista_config_file"><![CDATA[
            {
                "system": "$technology",
                "data_folder": "./",
                "create_bellavista_inputs": true,

                "visualization_parameters": {
                    "plot_image": true,
                    #if $technology_conditional.plot_genes.plot_transcripts == "true":
                    "plot_transcripts": true,
                    #else
                    "plot_transcripts": false,
                    #end if
                    #if $technology_conditional.plot_cell_segmentation.plot_cell_seg == "true":
                    "plot_cell_seg": true,
                    #else
                    "plot_cell_seg": false,
                    #end if
                    #if $technology_conditional.plot_nuclear_segmentation.plot_nuclear_seg == "true":
                    "plot_nuclear_seg": true,
                    #else
                    "plot_nuclear_seg": false,
                    #end if
                    "genes_visible_on_startup": false,
                    #if $technology_conditional.plot_genes.plot_all_genes.all_genes == "Yes":
                    "plot_allgenes": true,
                    #else
                    "plot_allgenes": false,
                    #set $gene_list = ['"' + str(x.strip()) + '"' for x in str($technology_conditional.plot_genes.plot_all_genes.selected_genes).split(',')]
                    #set $genes = ','.join($gene_list)
                    "selected_genes": $genes,
                    #end if
                    "rotate_angle": $rotate_angle,
                    "transcript_point_size": $transcript_point_size
                },

                "input_files": {
                    #set $last_index = len($technology_conditional.images) - 1
                    "images": [
                    #for $i in range(len($images)):
                        "$images[$i].element_identifier.$images[$i].ext"#if $i != $last_index#,#end if
                    #end for
                    ],
                    #if $technology_conditional.plot_cell_segmentation.plot_cell_seg == "true":
                    "cell_segmentation": "${technology_conditional.plot_cell_segmentation.cell_segmentation.element_identifier}.${technology_conditional.plot_cell_segmentation.cell_segmentation.ext}",
                    #end if
                    #if $technology_conditional.plot_nuclear_segmentation.plot_nuclear_seg == "true":
                    "nuclear_segmentation": "${technology_conditional.plot_nuclear_segmentation.nuclear_segmentation.element_identifier}.${technology_conditional.plot_nuclear_segmentation.nuclear_segmentation.ext}",
                    #end if
                    #if $technology_conditional.technology == "MERSCOPE":
                    "um_to_px_transform": "micron_to_mosaic_pixel_transform.csv",
                    #end if
                    #if $technology_conditional.plot_genes.plot_transcripts == "true":
                    "transcript_filename": "${technology_conditional.plot_genes.transcript_filename.element_identifier}.${technology_conditional.plot_genes.transcript_filename.ext}",
                    #end if
                    "z_plane": $technology_conditional.z_plane
                }
            }
        ]]></configfile>
    </configfiles>
    <inputs>
        <conditional name="technology_conditional">
            <param name="technology" type="select" label="Spatial transcriptomic technology">
                <option value="Xenium">Xenium</option>
                <option value="MERSCOPE" selected="true">MERSCOPE</option>
            </param>
            <when value="Xenium">
                <expand macro="common_param"/>
            </when>
            <when value="MERSCOPE">
                <expand macro="common_param">
                    <param name="um_to_px_transform" type="data" format="csv" optional="false" label="micron to pixel transformations"/>
                </expand>
            </when>
        </conditional>
        <section name="advanced_output" title="Advanced output options">
            <param name="config" type="boolean" truevalue="True" falsevalue="False" checked="true" label="Output config file?"/>
        </section>
        <param name="timeout" type="hidden" min="0" max="21600" value="3600" label="timeout" help="hidden input to set timeout in seconds" />
    </inputs>
    <outputs>
        <data name="bellavista_output" format="tar.gz" label="${tool.name} on ${on_string}: Bellavista prepared inputs" from_work_dir="./bellavista.tar.gz" />
        <data name="config" format="json" label="${tool.name} on ${on_string}: config file" from_work_dir="input/config_orig.json">
            <filter>advanced_output['config']</filter>
        </data>
    </outputs>
    <tests>
        <test expect_num_outputs="2">
            <conditional name="technology_conditional">
                <param name="technology" value="MERSCOPE"/>
                <param name="images" location="https://zenodo.org/records/15319018/files/mosaic_PolyT_z3.tif,https://zenodo.org/records/15319018/files/mosaic_PolyT_z4.tif"/>
                <conditional name="plot_genes">
                    <param name="plot_transcripts" value="true"/>
                    <param name="transcript_filename" location="https://zenodo.org/records/15319018/files/detected_transcripts.csv"/>
                </conditional>
                <conditional name="plot_cell_segmentation">
                    <param name="plot_cell_seg" value="false"/>
                </conditional>
                <conditional name="plot_nuclear_segmentation">
                    <param name="plot_nuclear_seg" value="false"/>
                </conditional>
                <param name="um_to_px_transform" location="https://zenodo.org/records/15319018/files/micron_to_mosaic_pixel_transform.csv"/>
                <param name="z_plane" value="3"/>
                <param name="transcript_point_size" value="1"/>
                <param name="rotate_angle" value="0"/>
            </conditional>
            <section name="advanced_output">
                <param name="config" value="true"/>
            </section>
            <output name="bellavista_output">
                <assert_contents>
                    <has_archive_member path="input/config_orig.json"/>
                    <has_archive_member path="input/mosaic_PolyT_z3.tif"/>
                    <has_archive_member path="input/micron_to_mosaic_pixel_transform.csv"/>
                    <has_archive_member path="input/BellaVista_output/gene_dict.pkl"/>
                    <has_archive_member path="input/BellaVista_output/OMEzarrImages"/>
                    <has_archive_member path="input/BellaVista_output/OMEzarrImages/.zgroup"/>
                    <has_archive_member path="input/BellaVista_output/um_to_px_transforms.pkl"/>
                </assert_contents>
            </output>
            <output name="config">
                <assert_contents>
                    <has_text text="MERSCOPE"/>
                    <has_text text="&quot;create_bellavista_inputs&quot;: true"/>
                    <has_text text="&quot;plot_cell_seg&quot;: false"/>
                </assert_contents>
            </output>
            <assert_stdout>
                <has_text text="Creating Bella Vista input files for Vizgen MERSCOPE"/>
                <has_text text="Bella Vista input files created!"/>
                <not_has_text text="Script completed."/>
            </assert_stdout>
        </test>
        <test expect_num_outputs="0">
            <conditional name="technology_conditional">
                <param name="technology" value="MERSCOPE"/>
                <param name="images" location="https://zenodo.org/records/15319018/files/mosaic_PolyT_z3.tif,https://zenodo.org/records/15319018/files/mosaic_PolyT_z4.tif"/>
                <conditional name="plot_genes">
                    <param name="plot_transcripts" value="true"/>
                    <param name="transcript_filename" location="https://zenodo.org/records/15319018/files/detected_transcripts.csv"/>
                </conditional>
                <conditional name="plot_cell_segmentation">
                    <param name="plot_cell_seg" value="false"/>
                </conditional>
                <conditional name="plot_nuclear_segmentation">
                    <param name="plot_nuclear_seg" value="false"/>
                </conditional>
                <param name="um_to_px_transform" location="https://zenodo.org/records/15319018/files/micron_to_mosaic_pixel_transform.csv"/>
                <param name="z_plane" value="3"/>
                <param name="transcript_point_size" value="1"/>
                <param name="rotate_angle" value="0"/>
            </conditional>
            <section name="advanced_output">
                <param name="config" value="true"/>
            </section>
            <param name="timeout" value="1"/>
            <assert_stdout>
                <has_text text="Time limit of 1 seconds reached. Please contact admins. Stopping the tool..."/>
                <has_text text="Bella Vista stopped"/>
                <not_has_text text="Script completed."/>
            </assert_stdout>
        </test>
    </tests>
    <help><![CDATA[
BellaVista is an open-source visualization tool for imaging-based spatial transcriptomics data. It allows users to visualize and explore spatial transcriptomics data in a user-friendly interface. The tool supports MERSCOPE and Xenium imaging-based spatial transcriptomics technologies.

Users can customize the visualization by selecting specific genes, adjusting image rotation angles, and controlling the size of transcript points. BellaVista also provides options for plotting cell and nuclear segmentation, enhancing the exploration of spatial transcriptomics data.

The Bellavista Prepare tool preprocess the inputs and creates a tarball with all the necessary files for visualization which can be used directly for bellavista interactive tool.

.. image:: https://raw.githubusercontent.com/pkosurilab/BellaVista/c8129bb8954c92962a87606595c09b35cc414295/images/bellavista_figure.png
    :height: 500
    :width: 700
    ]]>
    </help>
    <expand macro="citations"/>
</tool>
