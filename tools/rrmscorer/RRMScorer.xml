<tool id="rrmscorer" name="RRM-Scorer: quick predictions RRM-RNA binding" version="@TOOL_VERSION@" profile="22.05">
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <command detect_errors="exit_code"><![CDATA[
mkdir -p ./json ./tabular ./aligned ./plots
#if str($input_sequence.input_type_cond.input_type) == 'fasta'
&& rrmscorer --json 'json' --csv 'tabular' --fasta '$input_sequence.input_type_cond.fasta_input' --window_size $tool_parameters.window_size $plot_options.top_scoring_rna
#elif str($input_sequence.input_type_cond.input_type) == 'uniprot'
&& rrmscorer --json 'json' --csv 'tabular' --uniprot '$input_sequence.input_type_cond.uniprot_id' --window_size $tool_parameters.window_size $plot_options.top_scoring_rna
#else
echo "Either a UniProt ID or a FASTA file is required for running this tool. Please provide one of them." >&2 &&
exit 1
#end if

#if $tool_parameters.target
--rna '$tool_parameters.target'
#end if

#if $plot_options.generate_plots
--plot 'plots'
#end if

#if $plot_options.generate_fasta
--aligned 'aligned'
#end if
]]>
    </command>
    <inputs>
        <section name="input_sequence" title="Input sequence" expanded="true">
            <conditional name="input_type_cond">
                <param name="input_type" type="select" label="Select the type of sequence input" optional="false">
                    <option value="fasta" selected="true">FASTA file containing the protein sequence(s)</option>
                    <option value="uniprot">Protein identifier from UniProt</option>
                </param>
                <when value="fasta">
                    <param name="fasta_input" type="data" format="fasta" optional="false" multiple="false" label="Protein sequence(s) in FASTA format" help="Provide a FASTA file containing the protein sequences.">
                        <validator type="dataset_ok_validator"/>
                    </param>
                </when>
                <when value="uniprot">
                    <param name="uniprot_id" type="text" value="" optional="false" label="Protein identifier from UniProt" help="Provide a UniProt ID (e.g. P19339).">
                        <validator type="empty_field" message="Missing UniProt ID"/>
                    </param>
                </when>
            </conditional>
        </section>
        <section name="tool_parameters" title="Tool parameters" help="Configure this section to select the predictions to be executed">
            <param name="target" type="text" optional="true" label="Target RNA sequence (min. 5 nucleotides)" help="Provide a valid target RNA sequence or leave blank if not specifying.">
                <validator type="regex" message="The sequence must consist only of RNA nucleotides (A, U, G, C) or be left blank.">^([AUGCaugc]+)?$</validator>
            </param>
            <param name="window_size" type="select" label="The window size to test">
                <option value="5" selected="true">5</option>
                <option value="3">3</option>
            </param>
        </section>
        <section name="plot_options" title="Plot options" help="Configure plot output">
            <param name="generate_plots" type="boolean" label="Generate score plots for all the RNA possible windows" help="Enable to generate score plots."/>
            <param name="top_scoring_rna" type="boolean" truevalue="--top" falsevalue="" label="Find the top-scoring RNA for the specified RRM(s) and plot their sequence logo" help="Enable to find and plot the top-scoring RNA."/>
            <param name="generate_fasta" type="boolean" label="Generate a FASTA file for each input sequence aligned to the HMM" help="Enable to generate a FASTA file with aligned sequences."/>
        </section>
    </inputs>
    <outputs>
        <collection name="split_csv" type="list" label="Tabular predictions by sequence">
            <discover_datasets pattern="__designation_and_ext__" directory="tabular" visible="true"/>
        </collection>
        <collection name="split_json" type="list" label="Json predictions by sequence">
            <discover_datasets pattern="__designation_and_ext__" directory="json" visible="true"/>
        </collection>
        <collection name="split_aligned" type="list" label="Alignment in FASTA format by sequence">
            <discover_datasets pattern="__designation_and_ext__" directory="aligned" visible="true"/>
        </collection>
        <collection name="split_plots" type="list" label="Plots by sequence">
            <discover_datasets pattern="__designation_and_ext__" directory="plots" visible="true"/>
        </collection>
    </outputs>
    <tests>
        <test>
            <!-- Test 1 -->
            <section name="input_sequence">
                <conditional name="input_type_cond">
                    <param name="input_type" value="uniprot"/>
                    <param name="uniprot_id" value="P19339"/>
                </conditional>
            </section>
            <section name="tool_parameters">
                <param name="target" value="AUGGCU"/>
                <param name="window_size" value="5"/>
            </section>
            <assert_command>
                <has_text text="--uniprot 'P19339'"/>
                <has_text text="--rna 'AUGGCU'"/>
                <has_text text="--window_size 5"/>
                <has_text text="--json 'json'"/>
                <has_text text="--csv 'tabular'"/>
            </assert_command>
        </test>
        <!-- Test 2 -->
        <test expect_num_outputs="4">
            <section name="input_sequence">
                <conditional name="input_type_cond">
                    <param name="input_type" value="uniprot"/>
                    <param name="uniprot_id" value="P19339"/>
                </conditional>
            </section>
            <section name="tool_parameters">
                <param name="target" value="AUGGCU"/>
                <param name="window_size" value="5"/>
            </section>
            <assert_command>
                <has_text text="--uniprot 'P19339'"/>
                <has_text text="--rna 'AUGGCU'"/>
                <has_text text="--window_size 5"/>
                <has_text text="--json 'json'"/>
                <has_text text="--csv 'tabular'"/>
            </assert_command>
            <output_collection name="split_csv" type="list" count="2"/>
            <output_collection name="split_json" type="list" count="2"/>
        </test>
        <!-- Test 3 -->
        <test expect_num_outputs="4">
            <section name="input_sequence">
                <conditional name="input_type_cond">
                    <param name="input_type" value="uniprot"/>
                    <param name="uniprot_id" value="P19339"/>
                </conditional>
            </section>
            <section name="tool_parameters">
                <param name="target" value="AUGGCU"/>
                <param name="window_size" value="5"/>
            </section>
            <assert_command>
                <has_text text="--uniprot 'P19339'"/>
                <has_text text="--rna 'AUGGCU'"/>
                <has_text text="--window_size 5"/>
                <has_text text="--json 'json'"/>
                <has_text text="--csv 'tabular'"/>
            </assert_command>
            <output_collection name="split_csv" type="list" count="2"/>
            <output_collection name="split_json" type="list" count="2"/>
        </test>
        <!-- Test 4 -->
        <test expect_num_outputs="4">
            <section name="input_sequence">
                <conditional name="input_type_cond">
                    <param name="input_type" value="uniprot"/>
                    <param name="uniprot_id" value="P19339"/>
                </conditional>
            </section>
            <section name="tool_parameters">
                <param name="target" value="AUGGCU"/>
                <param name="window_size" value="5"/>
            </section>
            <assert_command>
                <has_text text="--uniprot 'P19339'"/>
                <has_text text="--rna 'AUGGCU'"/>
                <has_text text="--window_size 5"/>
                <has_text text="--json 'json'"/>
                <has_text text="--csv 'tabular'"/>
            </assert_command>
            <output_collection name="split_csv" type="list" count="2"/>
            <output_collection name="split_json" type="list" count="2"/>
        </test>
        <!-- Test 5 -->
        <test expect_num_outputs="4">
            <section name="input_sequence">
                <conditional name="input_type_cond">
                    <param name="input_type" value="uniprot"/>
                    <param name="uniprot_id" value="P19339"/>
                </conditional>
            </section>
            <section name="tool_parameters">
                <param name="target" value="AUGGCU"/>
                <param name="window_size" value="5"/>
            </section>
            <section name="plot_options">
                <param name="generate_fasta" value="true"/>
            </section>
            <assert_command>
                <has_text text="--uniprot 'P19339'"/>
                <has_text text="--rna 'AUGGCU'"/>
                <has_text text="--window_size 5"/>
                <has_text text="--json 'json'"/>
                <has_text text="--csv 'tabular'"/>
                <has_text text="--aligned 'aligned'"/>
            </assert_command>
            <output_collection name="split_csv" type="list" count="2"/>
            <output_collection name="split_json" type="list" count="2"/>
            <output_collection name="split_aligned" type="list" count="2"/>
        </test>
        <!-- Test 6 -->
        <test expect_num_outputs="4">
            <section name="input_sequence">
                <conditional name="input_type_cond">
                    <param name="input_type" value="uniprot"/>
                    <param name="uniprot_id" value="P19339"/>
                </conditional>
            </section>
            <section name="tool_parameters">
                <param name="window_size" value="5"/>
            </section>
            <section name="plot_options">
                <param name="top_scoring_rna" value="true"/>
            </section>
            <assert_command>
                <has_text text="--uniprot 'P19339'"/>
                <has_text text="--window_size 5"/>
                <has_text text="--json 'json'"/>
                <has_text text="--csv 'tabular'"/>
                <has_text text="--top"/>
            </assert_command>
            <output_collection name="split_json" type="list" count="2"/>
        </test>
        <!-- Test 7 -->
        <test expect_num_outputs="4">
            <section name="input_sequence">
                <conditional name="input_type_cond">
                    <param name="input_type" value="uniprot"/>
                    <param name="uniprot_id" value="P19339"/>
                </conditional>
            </section>
            <section name="tool_parameters">
                <param name="window_size" value="5"/>
            </section>
            <section name="plot_options">
                <param name="top_scoring_rna" value="true"/>
                <param name="generate_plots" value="true"/>
            </section>
            <assert_command>
                <has_text text="--uniprot 'P19339'"/>
                <has_text text="--window_size 5"/>
                <has_text text="--json 'json'"/>
                <has_text text="--csv 'tabular'"/>
                <has_text text="--plot 'plots'"/>
                <has_text text="--top"/>
            </assert_command>
            <output_collection name="split_json" type="list" count="2"/>
            <output_collection name="split_plots" type="list" count="8"/>
        </test>
        <!-- Test 8 -->
        <test expect_failure="true">
            <section name="input_sequence">
                <conditional name="input_type_cond">
                    <param name="input_type" value="uniprot"/>
                    <param name="uniprot_id" value="P19339"/>
                </conditional>
            </section>
            <section name="tool_parameters">
                <param name="window_size" value="5"/>
            </section>
            <section name="plot_options">
                <param name="top_scoring_rna" value="false"/>
                <param name="generate_plots" value="true"/>
            </section>
            <assert_command>
                <has_text text="--uniprot 'P19339'"/>
                <has_text text="--window_size 5"/>
                <has_text text="--json 'json'"/>
                <has_text text="--csv 'tabular'"/>
                <has_text text="--plot 'plots'"/>
            </assert_command>
        </test>
        <!-- Test 9 -->
        <test expect_failure="true">
            <section name="input_sequence">
                <conditional name="input_type_cond">
                    <param name="input_type" value="uniprot"/>
                    <param name="uniprot_id" value="P19339"/>
                </conditional>
            </section>
            <section name="tool_parameters">
                <param name="target" value="AUGGCU"/>
                <param name="window_size" value="5"/>
            </section>
            <section name="plot_options">
                <param name="top_scoring_rna" value="true"/>
                <param name="generate_plots" value="false"/>
                <param name="generate_fasta" value="true"/>
            </section>
            <assert_command>
                <has_text text="--uniprot 'P19339'"/>
                <has_text text="--rna 'AUGGCU'"/>
                <has_text text="--window_size 5"/>
                <has_text text="--json 'json'"/>
                <has_text text="--csv 'tabular'"/>
                <has_text text="--aligned 'aligned'"/>
                <has_text text="--top"/>
            </assert_command>
        </test>
        <!-- Test 10 -->
        <test expect_num_outputs="4">
            <section name="input_sequence">
                <conditional name="input_type_cond">
                    <param name="input_type" value="uniprot"/>
                    <param name="uniprot_id" value="P19339"/>
                </conditional>
            </section>
            <section name="tool_parameters">
                <param name="target" value="AUGGCU"/>
                <param name="window_size" value="5"/>
            </section>
            <section name="plot_options">
                <param name="generate_plots" value="false"/>
                <param name="generate_fasta" value="true"/>
            </section>
            <assert_command>
                <has_text text="--uniprot 'P19339'"/>
                <has_text text="--rna 'AUGGCU'"/>
                <has_text text="--window_size 5"/>
                <has_text text="--json 'json'"/>
                <has_text text="--csv 'tabular'"/>
                <has_text text="--aligned 'aligned'"/>
            </assert_command>
            <output_collection name="split_csv" type="list" count="2"/>
            <output_collection name="split_json" type="list" count="2"/>
            <output_collection name="split_aligned" type="list" count="2"/>
        </test>
        <!-- Test 11 -->
        <test expect_num_outputs="4">
            <section name="input_sequence">
                <conditional name="input_type_cond">
                    <param name="input_type" value="uniprot"/>
                    <param name="uniprot_id" value="P19339"/>
                </conditional>
            </section>
            <section name="tool_parameters">
                <param name="window_size" value="5"/>
            </section>
            <section name="plot_options">
                <param name="top_scoring_rna" value="true"/>
                <param name="generate_plots" value="true"/>
                <param name="generate_fasta" value="true"/>
            </section>
            <assert_command>
                <has_text text="--uniprot 'P19339'"/>
                <has_text text="--window_size 5"/>
                <has_text text="--json 'json'"/>
                <has_text text="--csv 'tabular'"/>
                <has_text text="--plot 'plots'"/>
                <has_text text="--aligned 'aligned'"/>
                <has_text text="--top"/>
            </assert_command>
            <output_collection name="split_json" type="list" count="2"/>
            <output_collection name="split_aligned" type="list" count="2"/>
            <output_collection name="split_plots" type="list" count="8"/>
        </test>
        <!-- Test 12 -->
        <test expect_num_outputs="4">
            <section name="input_sequence">
                <conditional name="input_type_cond">
                    <param name="input_type" value="fasta"/>
                    <param name="fasta_input" value="input.fasta" ftype="fasta"/>
                </conditional>
            </section>
            <section name="tool_parameters">
                <param name="target" value="AUGGCU"/>
                <param name="window_size" value="5"/>
            </section>
            <section name="plot_options">
                <param name="generate_fasta" value="true"/>
            </section>
            <assert_command>
                <has_text text="--fasta"/>
                <has_text text="--rna 'AUGGCU'"/>
                <has_text text="--window_size 5"/>
                <has_text text="--json 'json'"/>
                <has_text text="--csv 'tabular'"/>
            </assert_command>
            <output_collection name="split_csv" type="list" count="2"/>
            <output_collection name="split_json" type="list" count="2"/>
        </test>
    </tests>
    <help><![CDATA[
    This tool allows you to predict RNA Recognition Motif (RRM) scores for protein
    sequences provided in *FASTA* format or as *UniProt IDs*.

    **RRMScorer** is designed to predict RNA binding preferences for proteins containing
    RNA recognition motifs (RRMs), the most prevalent RNA binding domain in eukaryotes.

    **Abstract:**

    By carefully analysing a dataset of 187 RRM-RNA structural complexes, we calculated
    residue-level binding scores using a probabilistic model derived from
    amino acid-nucleotide interaction propensities, which are the basis of
    **RRMScorer**.

    With its ability to provide residue-level insights and accurate predictions,
    **RRMScorer** serves as a valuable tool for researchers exploring the functional
    landscape of RRM-RNA interactions.

    **Methodology**:

    The input sequence is scanned against our RRMScorer hidden Markov model (HMM)
    to (i) identify whether the input sequence contains any RRM domain and (ii)
    map to the 20 positions in the RRM protein sequence alignment that we use to compute
    the RNA binding scores.

    If one or more RRM domains are identified in the input sequence, RRMScorer computes
    the score of the user-defined RNA sequence, or if absent, the scores for all the
    1024 RNA possible sequences with a length of 5 nt. By utilizing a specific
    RNA sequence, the user can inspect to which 5-nt windows the RRM is more likely
    to bind.

    **Input fields:**

    * **Protein sequence(s) FASTA format:** Provide a *FASTA* file containing the protein sequences.
    * **Protein identifier from Uniprot:** Provide a *UniProt ID* (e.g. P19339).
    * **Custom RNA target:** Enable or disable the use of a custom RNA target for the predictions.
    * **Target:** Provide a valid target RNA sequence (minimum 5 nucleotides) if Custom RNA target is enabled.
    * **The window size to test:** Select the window size (either 3 or 5 nucleotides).
    * **Plot options:** Configure plot output options.

    **Output:**

    The results are provided in comprehensive bar plots as well as in
    CSV and JSON formats. When a custom RNA is not provided, the results will
    include protein sequence logos for a range of top-scoring RNA sequences, as well
    as the aforementioned CSV and JSON files with the scores.


    **Contact us:**
    Developed by Bio2Byte group, within the RNAct project.
    Wim Vranken, VUB, Brussels.

    For any further questions, feedback or suggestions,
    please contact us via email: Bio2Byte@vub.be.

    **Funding**
    This project has received funding from the European Union's Horizon 2020 research
    and innovation programme under the Marie Skłodowska-Curie grant
    agreement No. 813239. This work was supported by the European Regional
    Development Fund and Brussels-Capital Region-Innoviris within the framework of the
    Operational Programme 2014-2020 (ERDF-2020 project ICITY-RDI.BRU)
    ]]>
    </help>
    <citations>
        <citation type="doi">10.1371/journal.pcbi.1010859</citation>
        <citation type="doi">10.1093/nar/gkaf367</citation>
    </citations>
</tool>
