<tool id="seqsero2" name="SeqSero2" version="@VERSION@+galaxy0">
    <description> Salmonella serotype prediction</description>
    <macros>
        <token name="@VERSION@">1.2.1</token>
    </macros>
    <requirements>
        <requirement type="package" version="@VERSION@">seqsero2</requirement>
    </requirements>
    <version_command>SeqSero2_package.py -v</version_command>
    <command detect_errors="exit_code"><![CDATA[
    #import re
    #set $seqsero_input = ''
    #set $seqsero_t_value = ''

    #if str($input_type_cond.input_type) in ['single', 'paired', 'assembly', 'nanopore']:
        #set read1 = $input_type_cond.read1

        #if str($input_type_cond.input_type) == 'assembly':
            #set ext = '.fasta'
        #else:
            #set ext = '.fastq'
        #end if
        #if $read1.ext.endswith('.gz'):
            #set ext = $ext+'.gz'
        #end if

        #set read1_file = 'forward' + $ext
        ln -s '${read1}' '${read1_file}' &&

        #if str($input_type_cond.input_type) == 'paired':
            #set read2 = $input_type_cond.read2
            #set read2_file = 'reverse' + $ext
            ln -s '${read2}' '${read2_file}' &&
        #end if
    #else:
        #set read1 = $input_type_cond.input_collection['forward']
        #set read1_identifier = re.sub('[^\s\w\-]', '_', str($read1.element_identifier))

        #set ext = $read1_identifier + '.fastq'
        #if $read1.ext.endswith('.gz'):
            #set ext = $ext+'.gz'
        #end if

        #set read1_file = $read1_identifier + $ext
        ln -s '${read1}' '${read1_file}' &&

        #set read2 = $input_type_cond.input_collection['reverse']
        #set read2_identifier = re.sub('[^\s\w\-]', '_', str($read2.element_identifier))

        #set read2_file = $read2_identifier + $ext
        ln -s '${read2}' '${read2_file}' &&

    #end if

    #set seqsero_input = $read1_file
    #if str($input_type_cond.input_type) in ['paired', 'collection']:
        #set seqsero_input = $seqsero_input + " " + $read2_file
        #set $seqsero_t_value = '2'
    #elif str($input_type_cond.input_type) == 'assembly':
        #set $seqsero_t_value = '4'
    #elif str($input_type_cond.input_type) == 'single':
        #set $seqsero_t_value = '3'
    #elif str($input_type_cond.input_type) == 'nanopore':
        #set $seqsero_t_value = '5'
    #end if

    SeqSero2_package.py 
    -m $workflow
    -t $seqsero_t_value
    -i $seqsero_input
    -p \${GALAXY_SLOTS:-4}
    -d output
    ]]>    </command>
    <inputs>
        <conditional name="input_type_cond">
            <param name="input_type" type="select" label="Input type" help="Select 'paired end' reads or 'sequence' for genomes/contigs">
                <option value="paired">Paired End</option>
                <option value="collection">Collection</option>
                <option value="assembly">Contigs</option>
                <option value="single">Interleaved</option>
                <option value="nanopore">Nanopore reads</option>
            </param>
            <when value="paired">
                <param name="read1" type="data" format="fastqsanger,fastqsanger.gz" label="Forward reads (R1)" help="The file of forward reads in FASTQ format"/>
                <param name="read2" type="data" format="fastqsanger,fastqsanger.gz" label="Reverse reads (R2)" help="The file of reverse reads in FASTQ format"/>
            </when>
            <when value="collection">
                <param name="input_collection" format="fastqsanger,fastqsanger.gz" type="data_collection" collection_type="list:paired" label="Paired collection"/>
            </when>
            <when value="single">
                <param name="read1" type="data" format="fastqsanger,fastqsanger.gz" multiple="false" label="Interleaved" />
            </when>
            <when value="nanopore">
                <param name="read1" type="data" format="fastqsanger,fastqsanger.gz" multiple="false" label="Nanopore reads" />
            </when>
            <when value="assembly">
                <param name="read1" type="data" format="fasta" multiple="false" label="Contigs/genomes" />
            </when>
        </conditional>
        <param argument="-m" type="select" name="workflow" label="Workflow" help="Which workflow to apply. Allele: raw reads allele micro-assembly, K-mer: raw reads and genome assembly.">
            <option value="a" selected="true">allele</option>
            <option value="k">k-mer</option>
        </param>
        <section name="output_options" title="Output options">
            <param argument="logfile" type="boolean" checked="false" truevalue="true" falsevalue="" label="Include log as output file."/>
        </section>
    </inputs>
    <outputs>
        <data name="results" format="tabular" label="${tool.name} on ${on_string} Results" from_work_dir="output/SeqSero_result.tsv"/>
        <data name="log" format="txt" label="${tool.name} on ${on_string} Log" from_work_dir="output/SeqSero_log.txt">
            <filter>output_options['logfile']</filter>
        </data>
    </outputs>
    <tests>
        <test>
            <param name="input_type" value="assembly" />
            <param name="workflow" value="k" />
            <param name="read1" value="CP009102.1.fasta" ftype="fasta" />
            <output name="results">
                <assert_contents>
                    <has_text text="Salmonella enterica subspecies enterica (subspecies I)" />
                    <has_text text="Typhimurium" />
                </assert_contents>
            </output>
        </test>
        <test>
            <param name="input_type" value="paired" />
            <param name="workflow" value="a" />
            <param name="read1" value="SRR10859038_R1.fastq.gz" ftype="fastqsanger.gz" />
            <param name="read2" value="SRR10859038_R2.fastq.gz" ftype="fastqsanger.gz" />
            <output name="results">
                <assert_contents>
                    <has_text text="The input genome cannot be identified as Salmonella." />
                </assert_contents>
            </output>
        </test>
        <test>
            <param name="input_type" value="single" />
            <param name="workflow" value="a" />
            <param name="read1" value="SRR10859038_R1.fastq.gz" ftype="fastqsanger.gz" />
            <output name="results">
                <assert_contents>
                    <has_text text="The input genome cannot be identified as Salmonella" />
                </assert_contents>
            </output>
        </test>
     </tests>
    <help><![CDATA[
**SeqSero2** is a pipeline for Salmonella serotype prediction from raw sequencing reads or genome assemblies.
SeqSero is based on curated databases of Salmonella serotype determinants (rfb gene cluster, fliC and fljB alleles) and is predicted to determine serotype rapidly and accurately for nearly the full spectrum of Salmonella serotypes (more than 2,300 serotypes), from both raw sequencing reads and genome assemblies.

**Extra parameter information.**
The '-t' parameter is automatically determined using the input files, and therefore not customizable by the user. The logic used is based on the tool's parameter description:

-t {1,2,3,4,5}  <int>: '1' for interleaved paired-end reads, '2' for separated
paired-end reads, '3' for single reads, '4' for genome assembly,
'5' for nanopore reads (fasta/fastq)
-----

_`Document`:  https://github.com/denglab/SeqSero2

    ]]></help>
    <citations>
        <citation type="doi">
            https://doi.org/10.1128/AEM.01746-19
        </citation>
    </citations>
</tool>
