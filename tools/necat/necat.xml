<tool id="necat" name="necat" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="20.01" license="MIT">
    <description>Error correction and de-novo assembly for ONT Nanopore reads</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <xrefs>       
        <xref type="bio.tools">necat</xref>
    </xrefs>
    <requirements>
        <requirement type="package" version="@TOOL_VERSION@">necat</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        ## helper function
        #def make_filename($i, $input_param)
            #set ext = $input_param.extension
            #if $ext == "fastqsanger"
                #set $ext = "fastq"
            #end if
            #set filename = "reads_" + str($i) + "." + $ext
            #return $filename
        #end def

        ## push each input file and everything in input collections into read_list.txt
        #set i = 1
        #for input in $input_fastqs
            #set filename = $make_filename($i, $input)
            cp '$input' $filename  
            && echo $filename >> read_list.txt &&
            #set i = $i + 1
        #end for

        ## necat commands
        necat correct '${job_configfile}' 
        ## && gunzip project/1-consensus/cns_final.fasta.gz
        #if $assembly.should_assemble == "yes":
            && necat assemble '${job_configfile}'
            && necat bridge '${job_configfile}' 
        #end if
    ]]></command>
    <configfiles>   
        <expand macro="job_configfile_macro" />
    </configfiles>
    <inputs>
        <param name="input_fastqs" type="data" format="fastq,fasta" multiple="true" label="Input reads" help="Input read files (FASTQ or FASTA). To select more than one file or collection from your history, use the 'ctrl' key" />

        <param name="genome_size" type="integer" value="" label="Genome size" help="Estimated size of genome (bp)" />
        <param name="min_read_length" type="integer" value="1000" label="Min read length" help="Minimum length for input reads" />
        <param name="correction_coverage" type="integer" value="40" label="Correction coverage" help="Number of reads to correct in terms of genome coverage. For a 4Gb genome, setting correction coverage = 10 will correct the longest 40Gb worth of reads from the input fastq. " />
        <conditional name="assembly">
            <param name="should_assemble" type="select" label="Assembly">
                <option value="no" selected="true">Don't perform assembly</option>
                <option value="yes">Perform assembly on corrected reads</option>
            </param>
            <when value="no" />
            <when value="yes">
                <param name="assembly_coverage" type="integer" value="30" label="Assembly coverage" help="Number of reads to use in genome assembly in terms of genome coverage" />
                <param name="polish_contigs" type="boolean" checked="true" truevalue="true" falsevalue="false" label="Polish contigs" help="Polish contigs as final step after briding" />
            </when>
        </conditional>
        <section name="advanced" title="Advanced" expanded="false" help="Warning: only change these if you really know what you are doing">
            <param name="overlap_fast_options" type="text" value="-n 500 -z 20 -b 2000 -e 0.5 -j 0 -u 1 -a 1000" label="OVLP_FAST_OPTIONS" help="Overlap fast options">
                <sanitizer>
                    <valid initial="string.letters,string.digits">
                        <add value="-" />
                        <add value="." />
                        <add value=" " />
                    </valid>
                </sanitizer>
            </param>
            <param name="overlap_sensitive_options" type="text" value="-n 500 -z 10 -e 0.5 -j 0 -u 1 -a 1000" label="OVLP_SENSITIVE_OPTIONS" help="Overlap sensitive options">
                <sanitizer>
                    <valid initial="string.letters,string.digits">
                        <add value="-" />
                        <add value="." />
                        <add value=" " />
                    </valid>
                </sanitizer>
            </param>
            <param name="consensus_fast_options" type="text" value="-a 2000 -x 4 -y 12 -l 1000 -e 0.5 -p 0.8 -u 0" label="CNS_FAST_OPTIONS" help="Consensus fast options">
                <sanitizer>
                    <valid initial="string.letters,string.digits">
                        <add value="-" />
                        <add value="." />
                        <add value=" " />
                    </valid>
                </sanitizer>
            </param>
            <param name="consensus_sensitive_options" type="text" value="-a 2000 -x 4 -y 12 -l 1000 -e 0.5 -p 0.8 -u 0" label="CNS_SENSITIVE_OPTIONS" help="Consensus sensitive options">
                <sanitizer>
                    <valid initial="string.letters,string.digits">
                        <add value="-" />
                        <add value="." />
                        <add value=" " />
                    </valid>
                </sanitizer>
            </param>
            <param name="trim_overlap_options" type="text" value="-n 100 -z 10 -b 2000 -e 0.5 -j 1 -u 1 -a 400" label="TRIM_OVLP_OPTIONS" help="Trimming overlap options">
                <sanitizer>
                    <valid initial="string.letters,string.digits">
                        <add value="-" />
                        <add value="." />
                        <add value=" " />
                    </valid>
                </sanitizer>
            </param>
            <param name="assembly_overlap_options" type="text" value="-n 100 -z 10 -b 2000 -e 0.5 -j 1 -u 0 -a 400" label="Assembly overlap options" help="ASM_OVLP_OPTIONS">

                <sanitizer>
                    <valid initial="string.letters,string.digits">
                        <add value="-" />
                        <add value="." />
                        <add value=" " />
                    </valid>
                </sanitizer>
            </param>
        </section>
    </inputs>
    <outputs>
        <data name="out_reads" format="fasta.gz" from_work_dir="project/1-consensus/cns_final.fasta.gz" label="${tool.name} on ${on_string}: corrected reads" />
        <data name="out_assembly" format="fasta" from_work_dir="project/6-bridge_contigs/polished_contigs.fasta" label="${tool.name} on ${on_string}: bridged assembly">
            <filter>assembly['should_assemble'] == 'yes' and not assembly['polish_contigs']</filter>
        </data>
        <data name="out_polished_assembly" format="fasta" from_work_dir="project/6-bridge_contigs/bridged_contigs.fasta" label="${tool.name} on ${on_string}: polished assembly">
            <filter>assembly['should_assemble'] == 'yes' and assembly['polish_contigs']</filter>
        </data>
    </outputs>
    <tests>
        <test expect_num_outputs="2">
            <param name="input_fastqs" value="test1.fastq" />
            <param name="genome_size" value="13000" />
            <param name="min_read_length" value="1000" />
            <param name="correction_coverage" value="40" />
            <conditional name="assembly">
                <param name="should_assemble" value="yes" />
                <param name="assembly_coverage" value="30"/>
                <param name="polish_contigs" value="true"/>
            </conditional>
            <output name="out_reads" ftype="fasta.gz">
                <assert_contents>
                    <has_size value="75000" delta="2000" />
                </assert_contents>
            </output>
            <output name="out_polished_assembly" ftype="fasta">
                <assert_contents>
                    <has_line line="&#62;bctg00000000 000000F" />
                    <has_size value="13000" delta="1000" />
                </assert_contents>
            </output>
        </test>
    </tests>

    <help><![CDATA[

NECAT
.....

**What it does**

NECAT performs error correction to remove complex errors in nanopore reads. It can also optionally de novo assembly. 

Github: https://github.com/xiaochuanle/NECAT

Publication: https://doi.org/10.1038/s41467-020-20236-7

|

**Input**

- One or more files or collections containing sequence reads (fastq / fasta)

|

**Output**

- Corrected reads (fasta)
- Genome assembly (fasta) (Optional)

    ]]></help>
    <expand macro="citations" />
</tool>