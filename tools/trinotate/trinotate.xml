<tool id="trinotate" name="Trinotate" version="3.2.1">
    <requirements>
        <requirement type="package" version="3.2.1">trinotate</requirement>
        <requirement type="package" version="1.18">gnu-wget</requirement>
    </requirements>
    <stdio>
        <exit_code range="1:" />
    </stdio>
    <version_command><![CDATA[
            Trinotate version 3.2.1
    ]]></version_command>
    <command><![CDATA[

#if str($cond_download.select_download) == "yes":
    Build_Trinotate_Boilerplate_SQLite_db.pl Trinotate &&
#else:
    ln -s '$cond_download.trinotate_sqlite_in' Trinotate.sqlite &&
#end if

Trinotate Trinotate.sqlite init --gene_trans_map '$gene_trans_map' --transcript_fasta $trinity --transdecoder_pep '$transdecoder' &&
#if $blastp:
    Trinotate Trinotate.sqlite LOAD_swissprot_blastp '$blastp' &&
#end if
#if $blastx:
    Trinotate Trinotate.sqlite LOAD_swissprot_blastx '$blastx' &&
#end if
#if $hmmscan:
    Trinotate Trinotate.sqlite LOAD_pfam '$hmmscan' &&
#end if
#if $tmhmm:
    Trinotate Trinotate.sqlite LOAD_tmhmm '$tmhmm' &&
#end if
#if $signalp:
    Trinotate Trinotate.sqlite LOAD_signalp '$signalp' &&
#end if

Trinotate Trinotate.sqlite report -E $report_option.E --pfam_cutoff $report_option.pfam_cutoff $report_option.incl_pep $report_option.incl_trans > '$trinotate_out'

    ]]></command>
    <inputs>
        <param name="trinity" type="data" format="fasta" optional="false" label="Transcripts" help="Trinity output: Assembled Transcripts" />
        <param name="transdecoder" type="data" format="fasta" optional="false" label="Peptides" help="Transdecoder output: transdecoder_pep" />
        <param name="gene_trans_map" type="data" format="tabular" optional="false" label="Genes to transcripts map" help="Genes to transcripts map output. Containing correspondance between gene ids and transcript ids based on the name of transcripts assembled by Trinity" />
        <param name="blastp" type="data" format="tabular" optional="true" label="BLASTP: Peptides vs Uniprot.SwissProt" help="[optional] NCBI BLAST+ blastp output. Output format: Tabular (standard 12 columns)" />
        <param name="blastx" type="data" format="tabular" optional="true" label="BLASTX: Transcripts vs Uniprot.SwissProt" help="[optional] NCBI BLAST+ blastx output. Output format: Tabular (standard 12 columns)" />
        <param name="hmmscan" type="data" format="txt" optional="true" label="HMMER hmmscan: Peptides vs PFAM" help="[optional] HMMER hmmscan output: Table of per-domain hits. Output format: Table of per-domain hits (--domtblout)" />
        <param name="tmhmm" type="data" format="tabular" optional="true" label="TMHMM on Peptides" help="[optional]"/>
        <param name="signalp" type="data" format="tabular" optional="true" label="SignalP on Peptides" help="[optional]" />

        <conditional name="cond_download">
            <param name="select_download" type="select" label="Let Galaxy downloading the Trinotate Pre-generated Resource SQLite database">
                <option value="yes" selected="True">Yes</option>
                <option value="no">No, I will provide it</option>
            </param>
            <when value="no">
                <param name="trinotate_sqlite_in" type="data" format="sqlite" optional="false" label="Trinotate Pre-generated Resource SQLite database" help="https://data.broadinstitute.org/Trinity/__deprecated_trinotate_resources/Trinotate_v3_RESOURCES/Trinotate_v3.sqlite.gz" />
            </when>
            <when value="yes" />
        </conditional>

        <section name="report_option" title="Report options" expanded="False">
            <param argument="-E" type="float" value="1e-5" label="Maximum E-value for reporting best blast hit and associated annotations." />
            <param argument="--pfam_cutoff" type="select" label="PFAM cutoff">
                <option value="DNC">DNC : domain noise cutoff</option>
                <option value="DGC">DGC : domain gathering cutoff</option>
                <option value="DTC">DTC : domain trusted cutoff</option>
                <option value="SNC">SNC : sequence noise cutoff</option>
                <option value="SGC">SGC : sequence gathering cutoff</option>
                <option value="STC">STC : sequence trusted cutoff</option>
            </param>
            <param argument="--incl_pep" type="boolean" truevalue="--incl_pep" falsevalue="" checked="false" label="Add the protein sequence data in the tab delimited report" />
            <param argument="--incl_trans" type="boolean" truevalue="--incl_trans" falsevalue="" checked="false"  label="Add the transcript sequence data in the tab delimited report" />
        </section>
        <param name="keep_sqlite" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Keep the sqlite database file: Trinotate.sqlite" help="Can be used for visualization purpose" />
    </inputs>
    <outputs>
        <data name="trinotate_out" format="tabular" label="Trinotate output" >
            <actions>
                <action name="column_names" type="metadata" default="gene_id,transcript_id,sprot_Top_BLASTX_hit,RNAMMER,prot_id,prot_coords,sprot_Top_BLASTP_hit,custom_pombe_pep_BLASTX,custom_pombe_pep_BLASTP,Pfam,SignalP,TmHMM,eggnog,Kegg,gene_ontology_blast,gene_ontology_pfam,transcript,peptide" />
            </actions>
        </data>
        <data name="trinotate_sqlite" format="sqlite" from_work_dir="Trinotate.sqlite" label="Trinotate sqlite database" >
            <filter>keep_sqlite</filter>
        </data>
    </outputs>
    <tests>
        <test>
            <param name="trinity" ftype="fasta" value="Trinity.fasta" />
            <param name="transdecoder" ftype="fasta" value="Trinity.fasta.transdecoder.pep" />
            <param name="gene_trans_map" ftype="tabular" value="Trinity.fasta.gene_to_trans_map" />
            <param name="blastp" ftype="tabular" value="swissprot.blastp.outfmt6" />
            <param name="blastx" ftype="tabular" value="swissprot.blastx.outfmt6" />
            <param name="hmmscan" ftype="txt" value="TrinotatePFAM.out" />
            <param name="tmhmm" ftype="tabular" value="tmhmm.out" />
            <param name="signalp" ftype="tabular" value="signalp.out" />
            <output name="trinotate_out" file="trinotate_annotation_report.xls" />
        </test>
        <test>
            <param name="trinity" ftype="fasta" value="Trinity.fasta" />
            <param name="transdecoder" ftype="fasta" value="Trinity.fasta.transdecoder.pep" />
            <param name="gene_trans_map" ftype="tabular" value="Trinity.fasta.gene_to_trans_map" />
            <param name="blastp" ftype="tabular" value="swissprot.blastp.outfmt6" />
            <param name="blastx" ftype="tabular" value="swissprot.blastx.outfmt6" />
            <param name="hmmscan" ftype="txt" value="TrinotatePFAM.out" />
            <section name="report_option">
                <param name="incl_pep" value="true" />
                <param name="incl_trans" value="true" />
            </section>
            <param name="keep_sqlite" value="true" />
            <output name="trinotate_out" file="trinotate_annotation_report_minus_tmhmm_signalp.xls" />
        </test>
    </tests>
    <help><![CDATA[
.. class:: infomark

**What it does**

Trinotate_ is a comprehensive annotation suite designed for automatic functional annotation of transcriptomes, particularly de novo assembled transcriptomes, from model or non-model organisms. Trinotate makes use of a number of different well referenced methods for functional annotation including homology search to known sequence data (BLAST+/SwissProt), protein domain identification (HMMER/PFAM), protein signal peptide and transmembrane domain prediction (signalP/tmHMM), and leveraging various annotation databases (eggNOG/GO/Kegg databases). All functional annotation data derived from the analysis of transcripts is integrated into a SQLite database which allows fast efficient searching for terms with specific qualities related to a desired scientific hypothesis or a means to create a whole annotation report for a transcriptome.

.. _Trinotate: https://trinotate.github.io/

--------

**Suggested upstream Galaxy tools**

Transcripts

 - Trinity: iuc/trinity_

.. _trinity: https://toolshed.g2.bx.psu.edu/repository?repository_id=faf6028922d9220a

Peptides

 - TransDecoder: iuc/transdecoder_

.. _transdecoder: https://toolshed.g2.bx.psu.edu/repository?repository_id=7a2a8151a50f8099

Genes to transcripts map

 - Generate gene to transcript map for Trinity assembly: iuc/trinity_gene_to_trans_map_

.. _trinity_gene_to_trans_map: https://toolshed.g2.bx.psu.edu/repository?repository_id=faf6028922d9220a

BLASTP: Peptides vs Uniprot.SwissProt

 - NCBI BLAST+ blastp: devteam/ncbi_blast_plus_

.. _ncbi_blast_plus: https://toolshed.g2.bx.psu.edu/repository?repository_id=1d92ebdf7e8d466c

BLASTX: Transcripts vs Uniprot.SwissProt

 - NCBI BLAST+ blastx: devteam/ncbi_blast_plus_

.. _ncbi_blast_plus: https://toolshed.g2.bx.psu.edu/repository?repository_id=1d92ebdf7e8d466c

HMMER hmmscan: Peptides vs PFAM

 - HMMER hmmscan: iuc/hmmer_hmmscan_

.. _hmmer_hmmscan: https://toolshed.g2.bx.psu.edu/repository?repository_id=a2cc4683090b1800

TMHMM on Peptides

 - TMHMM 2.0: peterjc/tmhmm_and_signalp_

.. _tmhmm_and_signalp: https://toolshed.g2.bx.psu.edu/repository?repository_id=292389a45f1a238a

SignalP on Peptides

 - SignalP 3.0: peterjc/tmhmm_and_signalp_

.. _tmhmm_and_signalp: https://toolshed.g2.bx.psu.edu/repository?repository_id=292389a45f1a238a

--------

**Output**

The output has the following column headers:


====== =======================
Column Description
------ -----------------------
     0 #gene_id
     1 transcript_id
     2 sprot_Top_BLASTX_hit
     3 RNAMMER
     4 prot_id
     5 prot_coords
     6 sprot_Top_BLASTP_hit
     7 custom_pombe_pep_BLASTX
     8 custom_pombe_pep_BLASTP
     9 Pfam
    10 SignalP
    11 TmHMM
    12 eggnog
    13 Kegg
    14 gene_ontology_blast
    15 gene_ontology_pfam
    16 transcript
    17 peptide
====== =======================

    ]]></help>
    <citations>
        <citation type="doi">10.1038/nbt.1883</citation>
    </citations>
</tool>
