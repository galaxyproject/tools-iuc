<tool id="virulign" name="VIRULIGN" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="23.2">
    <description>Codon-correct pairwise alignments.</description>
    <macros>
        <token name="@TOOL_VERSION@">1.1.1</token>
        <token name="@VERSION_SUFFIX@">0</token>
    </macros>
    <requirements>
        <requirement type="package" version="@TOOL_VERSION@">virulign</requirement>
    </requirements>
    <version_command>echo "virulign 1.1.1"</version_command>
    <command detect_errors="exit_code"><![CDATA[
 ##link named files
  #import re
  #set $ref_name = re.sub('[^\w\-\.]', '_', str($reference.element_identifier))
  #if '.' not in $ref_name:
     #$ref_name = $ref_name + '.' + $reference.ext
  #end if
  ln -sf '$reference' '$ref_name' &&

 #if $nt_debug == 'yes'
  mkdir Failed/ &&
 #end if

 ## run virulign
  virulign
  '$ref_name'
  '$sequences'
  --exportKind $exportKind
  --exportAlphabet $exportAlphabet
  --exportWithInsertions $exportWithInsertions
  --exportReferenceSequence $exportReferenceSequence
  --gapExtensionPenalty $gapExtensionPenalty
  --gapOpenPenalty $gapOpenPenalty
  --maxFrameShifts $maxFrameShifts

 #if $nt_debug == 'yes'
  --nt-debug Failed
 #end if

  > '$output'

    ]]></command>
    <inputs>
        <param name="reference" type="data" format="fasta,xml" label="Reference (FASTA or ORFâ€‘description XML)" />
        <param name="sequences" type="data" format="fasta" label="FASTA sequences to align" />

        <param argument="--exportKind" type="select" label="Which type of output to generate:" help="Defines the output type of the alignment, either a FASTA alignment file or a CSV mutation file">
            <option value="GlobalAlignment">GlobalAlignment</option>
            <option value="PairwiseAlignments">PairwiseAlignments</option>
            <option value="PositionTable">PositionTable</option>
            <option value="MutationTable">MutationTable</option>
            <option value="Mutations">Mutations</option>
        </param>

        <param argument="--exportAlphabet" type="select" label="Sequence alphabet" help="Defines the alphabet in which the alignment is generated.">
            <option value="AminoAcids">Amino acids</option>
            <option value="Nucleotides">Nucleotides</option>
        </param>

        <param argument="--exportWithInsertions" type="boolean" truevalue="yes" falsevalue="no" label="Include insertions?" checked="true" help="Determines whether insertions can be added to the reference sequence. The option 'yes' will insert gaps into the reference sequence to accommodate the identification of codon insertions in the target sequences. Option 'No' removes codon insertions in the reference sequence that were generated during the alignment procedure."/>

        <param argument="--exportReferenceSequence" type="boolean" truevalue="yes" falsevalue="no" label="Add the reference sequence to output?" checked="false" help="Controls whether the reference sequence is to be added to the alignment."/>

        <param argument="--gapExtensionPenalty" type="float" value="3.3" label="Gap extension penalty" help="Defines the value of the penalty to extend an existing gap."/>
        <param argument="--gapOpenPenalty" type="float" value="10.0" label="Gap open penalty" help="Defines the value of the penalty to start a new gap."/>
        <param argument="--maxFrameShifts" type="integer"  value="3" label="Maximum allowed frame shifts" help="Defines the maximum number of frame-shifts allowed."/>
        <param argument="--nt-debug" type="boolean" truevalue="yes" falsevalue="no" label="Report failed sequences?" checked="false" help="This parameter allows to visualise sequences that could not be aligned by VIRULIGN. When this option is used, pairwise sequence alignments of failed target sequences and the reference sequence will be reported. This feature allows to inspect each failed target sequence individually to understand why the target sequence did not pass the quality control of the alignment."/>
    </inputs>

    <outputs>
        <data name="output" format="txt" label="VIRULIGN Output">
            <change_format>
                <when input="exportKind" value="GlobalAlignment" format="fasta" />
                <when input="exportKind" value="Mutations" format="tsv" />
                <when input="exportKind" value="MutationTable" format="csv" />
                <when input="exportKind" value="PositionTable" format="csv" />
                <when input="exportKind" value="PairwiseAlignments" format="fasta" />
            </change_format>
        </data>
        <collection name="failed_outputs" type="list" label="Failed alignments">
            <filter>nt_debug is True</filter> 
            <discover_datasets pattern="(?P&lt;designation&gt;.+)\.fasta" directory="Failed" format="fasta" visible="true"/>
        </collection>
    </outputs>
    <tests>
        <test expect_num_outputs="1">
            <param name="reference" value="denv-NC_001477.fasta" />
            <param name="sequences" value="denv-1_small.fasta" />
            <param name="exportKind" value="GlobalAlignment" />
            <param name="exportAlphabet" value="Nucleotides" />
            <output name="output" file="denv-output.fasta" />
        </test>
        <test expect_num_outputs="1">
            <param name="reference" value="ZIKV-rega.xml" />
            <param name="sequences" value="zikv-small.fasta" />
            <param name="exportKind" value="PositionTable" />
            <param name="exportReferenceSequence" value="yes" />
            <param name="exportAlphabet" value="AminoAcids" />
            <output name="output" file="zikv-output.csv" />
        </test>
        <test expect_num_outputs="1">
            <param name="reference" value="HIV-HXB2-gag.xml" />
            <param name="sequences" value="HIV_small.fasta" />
            <param name="exportKind" value="GlobalAlignment" />
            <param name="exportAlphabet" value="Nucleotides" />
            <param name="exportReferenceSequence" value="yes" />
            <param name="exportWithInsertions" value="no" />
            <output name="output" file="HIV-output.fasta" />
        </test> 
    </tests>
    <help><![CDATA[
**VIRULIGN**

A tool for codon-correct pairwise alignments, with an augmented functionality to annotate the alignment according the positions of the proteins. We present a `tutorial`_ demonstrating VIRULIGN's functionality for three different pathogens (i.e., HIV-1, Dengue virus, Zika virus).

VIRULIGN minimally requires a FASTA file with target sequences and a reference sequence in order to generate a codon-correct alignment in a predefined output format (see below). The reference sequence can be either provided to VIRULIGN in FASTA format or embedded in an XML file. In this XML file, also an annotation of the different proteins, regions or other structures can be given by the positions relative to the reference genome.

OUTPUT:

- The option GlobalAlignment will generate a FASTA file of the target sequences aligned against a single reference sequence and formatted as a MSA.
- The option PairwiseAlignments will generate a FASTA file of the target sequences, with each sequence aligned separately against the reference sequence.
- The option PositionTable will create a comma-separated value (CSV) file where each position of the alignment is given as a separate column. The CSV file is annotated according to the numerical positions in the protein.
- The option MutationTable will create a CSV file where each mutation present at a specific position is given as a separate column in Boolean representation. The CSV file is annotated according to the numerical position in the protein
- the option Mutations will output, for each sequence, a list of amino acids changes compared to the reference sequence


**More Information**  

- **Official Repository**: https://github.com/rega-cev/virulign
- **User Guide & Tutorial**: https://github.com/rega-cev/virulign-tutorial
  
.. _tutorial: https://github.com/rega-cev/virulign-tutorial

    ]]></help>
    <citations>
        <citation type="doi">10.1093/bioinformatics/bty851</citation>
    </citations>
</tool>
