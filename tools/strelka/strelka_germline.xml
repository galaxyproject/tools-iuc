<tool id="strelka_germline" name="Strelka Germline" version="@TOOL_VERSION@+galaxy1">
    <macros>
        <import>macros.xml</import>
    </macros>
    <description>@DESCRIPTION@ for germline variation in small cohorts</description>
    <expand macro="requirements" />
    <command detect_errors="exit_code"><![CDATA[
        ## tool: init
        #if $bam:
            #for $i, $s in enumerate($bam):
                ln -s ${s} ./input_sample_${i}.bam &&
                samtools index ./input_sample_${i}.bam &&
            #end for
        #end if
        #if $referenceFasta:            
            ln -s '$referenceFasta' ./input_ref.fasta &&
            samtools faidx ./input_ref.fasta &&
        #end if
        #if $advanced.ploidy:
            ln -s '$advanced.ploidy' ./input_ploidy.vcf &&
        #end if
        #if $advanced.noCompress:
            ln -s '$advanced.noCompress' ./input_nocompress.bgzip &&
        #end if
        #if $advanced.indelCandidates:
            ln -s '$advanced.indelCandidates' ./input_indelcandidates.vcf &&
        #end if
        #if $advanced.forcedGT:
            ln -s '$advanced.forcedGT' ./input_forcedgt.vcf &&
        #end if
        #if $advanced.callRegions:
            ln -s '$advanced.callRegions' ./input_callregions.bgzip &&
        #end if

        ## tool: configuration
        configureStrelkaGermlineWorkflow.py
            #if $bam:
                #for $i, $s in enumerate($bam):
                    --bam ./input_sample_${i}.bam
                #end for
            #end if
            #if $referenceFasta:
                --referenceFasta ./input_ref.fasta
            #end if
            #if $advanced.callContinuousVf != 'none':
                --callContinuousVf $advanced.callContinuousVf
            #end if
            #if $advanced.ploidy:
                --ploidy ./input_ploidy.vcf
            #end if
            #if $advanced.noCompress:
                --noCompress ./input_nocompress.bgzip
            #end if
            #if $advanced.indelCandidates:
                --indelCandidates ./input_indelcandidates.vcf
            #end if
            #if $advanced.forcedGT:
                --forcedGT ./input_forcedgt.vcf
            #end if
            #if $advanced.callRegions:
                --callRegions ./input_callregions.bgzip
            #end if
            $advanced.exome
            $advanced.rna
            $advanced.targeted  
            --disableSequenceErrorEstimation ## TODO need to be removed, just for the test dataset
            --runDir ./results &&

        ## tool: workflow execution
        @RUN_WORKFLOW@

        && ls -lisa results/results/variants

    ]]></command>
    <inputs>
        <param argument="--bam" type="data" format="bam" multiple="true" label="Sample files" help="" />
        <param argument="--referenceFasta" type="data" format="fasta" label="Reference file" help="" />

        <section name="advanced" title="Advanced Options" expanded="false">
            <param argument="--ploidy" type="data" format="vcf" optional="true" label="Ploidy file" help="" />
            <param argument="--noCompress" type="data" format="bgzip" optional="true" label="File of regions where gVCF block compression is not allowed" help="" />
            <param argument="--indelCandidates" type="data" format="vcf" optional="true" label="File with candidate indel alleles" help=""/>
            <param argument="--forcedGT" type="data" format="vcf" optional="true" label="File with candidate alleles" help=""/>
            <param argument="--callRegions" type="data" format="bgzip" optional="true" label="File containing a set of regions to call" help=""/>
            <param argument="--callContinuousVf" type="select" label="Chromosome to Call variants on" help="">    
                <option value="none" selected="true">None</option>
                <option value="Chr1">Chr1</option>
                <option value="Chr2">Chr2</option>
                <option value="Chr3">Chr3</option>
                <option value="Chr4">Chr4</option>
                <option value="Chr5">Chr5</option>
                <option value="Chr6">Chr6</option>
                <option value="Chr7">Chr7</option>
                <option value="Chr8">Chr8</option>
                <option value="Chr9">Chr9</option>
                <option value="Chr10">Chr10</option>
                <option value="Chr11">Chr11</option>
                <option value="Chr12">Chr12</option>
                <option value="Chr13">Chr13</option>
                <option value="Chr14">Chr14</option>
                <option value="Chr15">Chr15</option>
                <option value="Chr16">Chr16</option>
                <option value="Chr17">Chr17</option>
                <option value="Chr18">Chr18</option>
                <option value="Chr19">Chr19</option>
                <option value="Chr20">Chr20</option>
                <option value="Chr21">Chr21</option>
                <option value="Chr22">Chr22</option>
                <option value="ChrX">ChrX</option>
                <option value="ChrY">ChrY</option>
            </param>
            <param argument="--exome" type="boolean" checked="false" truevalue="--exome" falsevalue="" label="Set options for exome input" help="" />
            <param argument="--rna" type="boolean" checked="false" truevalue="--rna" falsevalue="" label="Set options for RNA-Seq input" help="" />
            <param argument="--targeted" type="boolean" checked="false" truevalue="--targeted" falsevalue="" label="Set options for other targeted input" help="" />
        </section>
    </inputs>
    <outputs>
        <data name="variants" format="data" from_work_dir="results/results/variants/variants.vcf.gz" label="Variants"/>
        <data format="gz" name="genome">
            <discover_datasets pattern="^genome.S\S.vcf.gz$" directory="results/results/variants/" visible="true" />
        </data>
   </outputs>
    <tests>
        <!-- germline -->
        <test>
            <param name="bam" value="sample1.bam, sample2.bam" ftype="bam"/>
            <param name="referenceFasta" value="hg98.fa" ftype="fasta"/>
            
        </test>
    </tests>
    <help><![CDATA[
@HELP_HEADER@

--bam Sample BAM or CRAM file. May be specified more than once, multiple inputs will be treated as each BAM file representing a different sample.

@HELP_PARAMETER@

--ploidy    Provide ploidy file in VCF. The VCF should include one sample column per input sample labeled with the same sample names found in the input BAM/CRAM RG header sections. Ploidy should be provided in records using the FORMAT/CN field, which are interpreted to span the range [POS+1, INFO/END]. Any CN value besides 1 or 0 will be treated as 2. File must be tabix indexed.
--noCompress    Provide BED file of regions where gVCF block compression is not allowed. File must be bgzip-compressed/tabix-indexed.
--callContinuousVf  Call variants on CHROM without a ploidy prior assumption, issuing calls with continuous variant frequencies.
--rna   Set options for RNA-Seq input.
    ]]>
        
    </help>
    <expand macro="citations" />
</tool>