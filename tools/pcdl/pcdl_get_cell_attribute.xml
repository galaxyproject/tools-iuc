<tool id="pcdl_get_cell_attribute" name="pcdl_get_cell_attribute" version="3.0.1+galaxy0" profile="21.05">
    <macros>
        <import>pcdl_macros.xml</import>
    </macros>
    <requirements>
        <expand macro="requirement"/>
    </requirements>
    <command><![CDATA[
        #import re
        mkdir output_pc &&
        #for $file in $path:
            #set $filename = re.sub('[^\w\-\.\s]', '_', str($file.element_identifier))
            ln -s '$file' output_pc/$filename &&
        #end for

        pcdl_get_cell_attribute 'output_pc' $entropy
        --custom_data_type $custom_data_type
        --microenv $microenv
        --physiboss $physiboss
        --settingxml 'none'
        --verbose $verbose
        --drop $drop
        --keep $keep
        --allvalues $allvalues
    ]]></command>
    <inputs>
        <section name="essential" title="essential:" expanded="true">
            <expand macro="path"/>
            <expand macro="entropy"/>
            <expand macro="drop"/>
            <expand macro="keep"/>
            <expand macro="allvalues"/>
        </section>
        <section name="advanced" title="advanced:" expanded="false">
            <expand macro="custom_data_type"/>
            <expand macro="microenv"/>
            <expand macro="physiboss"/>
            <expand macro="verbose"/>
        </section>
    </inputs>
    <outputs>
        <collection name="cell_attribute_json" type="list">
            <discover_datasets pattern="(?P&lt;designation&gt;timeseries_cell_attribute_.+)\.json" format="json" directory="output_pc" visible="false"/>
        </collection>
    </outputs>
    <tests>
        <test expect_num_outputs="1">
            <section name="essential">
                <param name="path">
                    <expand macro="output"/>
                </param>
            </section>
            <section name="advanced">
                <param name="verbose" value="true"/>
            </section>
            <output_collection name="cell_attribute_json" count="1">
                <element name="timeseries_cell_attribute_minmax">
                    <assert_contents>
                        <has_text text="{&quot;"/>
                        <has_text text="&quot;: ["/>
                        <has_text text="], &quot;"/>
                        <has_text text="]}"/>
                    </assert_contents>
                </element>
            </output_collection>
        </test>
    </tests>
    <help><![CDATA[
Function to detect informative variables in a time series. This function detects even variables which have less than the minimal state count in each time step, but different values from time step to time step. The output is a json file with an entry of all non-coordinate column names that at least in one of the time steps or in between time steps, reach the given minimal value count. Key is the column name, mapped is a list of all values (bool, str, and, if allvalues is True, int and float) or a list with minimum and maximum values (int, float).

Homepage: https://github.com/elmbeech/physicelldataloader
    ]]></help>
    <citations>
        <expand macro="citation"/>
    </citations>
</tool>
