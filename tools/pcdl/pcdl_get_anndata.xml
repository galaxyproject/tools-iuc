<tool id="pcdl_get_anndata" name="pcdl_get_anndata" version="3.0.1+galaxy0" profile="21.05">
    <macros>
        <import>pcdl_macros.xml</import>
    </macros>
    <requirements>
        <expand macro="requirement"/>
    </requirements>
    <command><![CDATA[
        #import re
        mkdir output_pc &&
        #for $file in $path:
            #set $filename = re.sub('[^\w\-\.\s]', '_', str($file.element_identifier))
            ln -s '$file' output_pc/$filename &&
        #end for

        pcdl_get_anndata 'output_pc' $entropy
        --custom_data_type $custom_data_type
        --microenv $microenv
        --graph $graph
        --physiboss $physiboss
        --settingxml 'none'
        --verbose $verbose
        --drop $drop
        --keep $keep
        --scale maxabs
        --collapse $collapse
    ]]></command>
    <inputs>
        <section name="essential" title="essential:" expanded="true">
            <expand macro="path"/>
            <expand macro="entropy"/>
            <expand macro="custom_data_type"/>
            <expand macro="drop"/>
            <expand macro="keep"/>
            <expand macro="scale"/>
            <expand macro="collapse"/>
        </section>
        <section name="advanced" title="advanced:" expanded="false">
            <expand macro="microenv"/>
            <expand macro="graph"/>
            <expand macro="physiboss"/>
            <expand macro="verbose"/>
        </section>
    </inputs>
    <outputs>
        <collection name="anndata_h5ad" type="list">
            <discover_datasets pattern="(?P&lt;designation&gt;.+)\.h5ad" format="h5ad" directory="output_pc" visible="false"/>
        </collection>
    </outputs>
    <tests>
        <test expect_num_outputs="1">
            <section name="essential">
                <param name="path">
                    <expand macro="output"/>
                </param>
                <param name="collapse" value="true"/>
            </section>
            <section name="advanced">
                <param name="verbose" value="true"/>
            </section>
            <output_collection name="anndata_h5ad" count="1">
                <element name="timeseries_cell_maxabs">
                    <assert_contents>
                        <has_h5_keys keys="X"/>
                        <has_h5_keys keys="layers"/>
                        <has_h5_keys keys="obs/ID, obs/cell_type, obs/chemotaxis_index, obs/current_death_model, obs/current_phase, obs/cycle_model, obs/id_time, obs/time, obs/z_layer"/>
                        <has_h5_keys keys="obsm/spatial"/>
                        <has_h5_keys keys="uns"/>
                        <has_h5_keys keys="var/_index"/>
                        <has_h5_keys keys="varm"/>
                        <has_h5_keys keys="varp"/>
                    </assert_contents>
                </element>
            </output_collection>
        </test>
        <test expect_num_outputs="1">
            <section name="essential">
                <param name="path">
                    <expand macro="output"/>
                </param>
                <param name="collapse" value="false"/>
            </section>
            <section name="advanced">
                <param name="verbose" value="false"/>
            </section>
            <output_collection name="anndata_h5ad" count="2">
                <element name="output00000000_cell_maxabs">
                    <assert_contents>
                        <has_h5_keys keys="X"/>
                        <has_h5_keys keys="layers"/>
                        <has_h5_keys keys="obs/ID, obs/cell_type, obs/chemotaxis_index, obs/current_death_model, obs/current_phase, obs/cycle_model, obs/time, obs/z_layer"/>
                        <has_h5_keys keys="obsm/spatial"/>
                        <has_h5_keys keys="uns"/>
                        <has_h5_keys keys="var/_index"/>
                        <has_h5_keys keys="varm"/>
                        <has_h5_keys keys="varp"/>
                    </assert_contents>
                </element>
                <element name="output00000001_cell_maxabs">
                    <assert_contents>
                        <has_h5_keys keys="X"/>
                        <has_h5_keys keys="layers"/>
                        <has_h5_keys keys="obs/ID, obs/cell_type, obs/chemotaxis_index, obs/current_death_model, obs/current_phase, obs/cycle_model, obs/time, obs/z_layer"/>
                        <has_h5_keys keys="obsm/spatial"/>
                        <has_h5_keys keys="uns"/>
                        <has_h5_keys keys="var/_index"/>
                        <has_h5_keys keys="varm"/>
                        <has_h5_keys keys="varp"/>
                    </assert_contents>
                </element>
            </output_collection>
        </test>
    </tests>
    <help><![CDATA[
Function to transform mcds time steps into one or many anndata objects for downstream analysis.

Scale parameter details: Possible values are None, maxabs, minmax, std.
None: no scaling. Set scale to None if you would like to have raw data or entirely scale, transform, and normalize the data later. 
Maxabs: maximum absolute value distance scaler will linearly map all values into a [-1, 1] interval. If the original data has no negative values, the result will be the same as with the minmax scaler (except with attributes with only one value). If the attribute has only zeros, the value will be set to 0. 
Minmax: minimum maximum distance scaler will map all values linearly into a [0, 1] interval. If the attribute has only one value, the value will be set to 0.
Std: standard deviation scaler will result in sigmas. Each attribute will be mean centered around 0. Ddof delta degree of freedom is set to 1 because it is assumed that the values are samples out of the population and not the entire population. It is incomprehensible to me that the equivalent sklearn method has ddof set to 0. If the attribute has only one value, the value will be set to 0.

Homepage: https://github.com/elmbeech/physicelldataloader
    ]]></help>
    <citations>
        <expand macro="citation"/>
    </citations>
</tool>
