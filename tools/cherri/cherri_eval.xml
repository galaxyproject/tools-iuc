<tool id="cherri_eval" name="Evaluation of RRIs using CheRRI" version="@VERSION@" profile="@PROFILE@">
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <command detect_errors="exit_code"><![CDATA[
        ln -s $ref_source.genome_fasta genome.fa &&
        export PYTHONHASHSEED=31337 &&
        cherri eval 
        -i1 $rris_table 
        -g genome.fa
        -l $chrom_len_file 
        -o . 
        -on cherri_eval
        -c $context
        -st $use_structure
        -hf $hand_feat
        -m $model_file
        -mp $model_params
        #if str($occupied.source) == 'yes':
        -i2 $occupied.regions
        #end if
        #if str($intarna.source) == 'yes':
        -p $intarna.param_file
        #end if
    ]]></command>
    <inputs>
        <param name="rris_table" type="data" format="csv" label="Tabular file containing all RRIs that should be evaluated" />
        <expand macro="reference_source_conditional"/>
        <param name="model_file" type="data" format="binary" label="Model file" />
        <param name="model_params" type="data" format="npz" label="Feature file of the given model" />
        <param name="context" type="integer" value="150" label="How much context should be added at up- and downstream of each sequence" />
        <param name="use_structure" type="boolean" truevalue="on" falsevalue="off" checked="true" label="Set 'off' if you want to disable structure, default 'on'" />
        <param name="hand_feat" type="boolean" truevalue="on" falsevalue="off" checked="false" label="If you want to start from hand-curated feature files, use this for evaluating test set performance. Default: 'off'" />
        <conditional name="occupied">
            <param name="source" type="select" label="Provide occupied regions?">
                <option value="no">no</option>
                <option value="yes">yes</option>
            </param>
            <when value="yes">
                <param name="regions" type="data" format="binary" label="Occupied regions python object file containing a dictionary" />
            </when>
            <when value="no" />
        </conditional>
        <conditional name="intarna">
            <param name="source" type="select" label="Provide IntaRNA parameters?">
                <option value="no">no</option>
                <option value="yes">yes</option>
            </param>
            <when value="yes">
                <param name="param_file" type="data" format="txt" label="IntaRNA parameters file" />
            </when>
            <when value="no" />
        </conditional>
    </inputs>
    <outputs>
        <data name="eval_out" format="csv" from_work_dir="cherri_eval/evaluation/evaluation_results_eval_rri.csv" label="Evaluation results on ${on_string}"/>
    </outputs>
    <tests>
        <test>
            <param name="rris_table" value="test_evaluate_rris.csv"/>
            <param name="ref_source_selector" value="history"/>
            <param name="genome_fasta" value="genome.fa"/>
            <param name="chrom_len_file" value="genome.sizes" />
            <conditional name="occupied">
                <param name="source" value="no" />
            </conditional>
            <conditional name="intarna">
                <param name="source" value="no" />
            </conditional>
            <param name="model_file" value="full_context_50.model" />
            <param name="model_params" value="training_context_50.npz" />
            <output name="eval_out" file="evaluation_results_test_eval.csv"/>
        </test>
    </tests>
    <help><![CDATA[

**What it does**

CheRRI detects functional RNA-RNA interaction (RRI) sites, by evaluating if an interaction site most likely occurs in nature. It helps to filter interaction sites generated either experimentally or by an RRI prediction algorithm, by removing false positive interactions.

**Inputs**
        
CheRRI takes a table of RNA-RNA interactions. It supports output of ChiRA or a csv files of interactions in the following format. The table needs the following header line:
        
    `chrom1,start1,stop1,strand1,chrom2,start2,stop2,strand2`
        
Following the header line, each subsequent line represents an RRI, with chromosome ID (format: 1,2,3 ...), interaction start, interaction end, and strand ("+" or "-") of the two interacting partners. For example, you might want to evaluate the following three RRI sites::
        
    19,18307518,18307539,-,14,90454500,90454521,+
    X,109054541,109054590,+,9,89178539,89178562,-
    10,123136102,123136122,+,5,1245880,1245902,+

The tool also additionally takes a genome FASTA file and a chromosome lengths file. User can select an in-built FASTA or a FASTA file from history.
A chromosome legths file is tabular file where each line contains a tab separated chromosome name and its length. Followin is an example:

    chr1    23200231
    chr2    12497572
    chr3    8387920

CheRRI also needs a model file (in binary format). It can be generated by using CheRRI train tool.

**Outputs**

This tool outputs a tabular file containing predictions for each input interaction.

    ]]></help>
    <expand macro="citations" />
</tool>
