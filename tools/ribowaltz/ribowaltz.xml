<tool id="ribowaltz" name="riboWaltz" version="0.2.0" python_template_version="3.5">
    <description>calculation of optimal P-site offsets, diagnostic analysis and visual inspection of ribosome profiling data</description>
    <requirements>
        <requirement type="package" version="0.2.0">ribowaltz</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
		#for $i, $sample in enumerate($rep_samples):
			ln -s $sample.bam_file $sample.sample_name'.bam' &&
		#end for
		Rscript '${__tool_directory__}/ribowaltz.R' -b . -g '$gtf' --refseq_sep '$refseq_sep'
		#import json
		#if $filtering.duplicates.filter == 'yes':
			#set params_duplicate_filterting = []
			#silent $params_duplicate_filterting.append({"extremity": str($filtering.duplicates.extremity), "keep": str($filtering.duplicates.keep)})
			--params_duplicate_filterting '#echo json.dumps($params_duplicate_filterting)#'
		#end if
		#if $filtering.length.filter == 'periodicity':
			#set params_peridiocity_filterting = []
			#silent $params_peridiocity_filterting.append({"periodicity_threshold": int($filtering.length.periodicity_threshold)})
			--params_peridiocity_filterting '#echo json.dumps($params_peridiocity_filterting)#'
		#end if
		#if $filtering.length.filter == 'custom':
			#set params_custom_filterting = []
			#silent $params_custom_filterting.append({"length_range": str($filtering.length.length_range_min)+":"+str($filtering.length.length_range_max)})
			--params_custom_filterting '#echo json.dumps($params_custom_filterting)#'
		#end if
		#set params_psite_additional = []
		#silent $params_psite_additional.append({"flanking":int($psite_additional.flanking), "use_start":bool($psite_additional.use_start), "psite_extrimity":str($psite_additional.psite_extrimity), "cl":int($psite_additional.cl)})
		--params_psite_additional '#echo json.dumps($params_psite_additional)#'
		#set params_coverage_additional = []
		#silent $params_coverage_additional.append({"psites_per_region":bool($coverage_additional.psites_per_region), "min_overlap":int($coverage_additional.min_overlap), "start_nts":int($coverage_additional.start_nts), "stop_nts":int($coverage_additional.stop_nts)})
		--params_coverage_additional '#echo json.dumps($params_coverage_additional)#'
		#if $plots_section.rlength_distr.plot == 'yes':
			#set params_rlength_distr = []
			#silent $params_rlength_distr.append({"cl": int($plots_section.rlength_distr.plot_options.cl), "multisamples": str($plots_section.rlength_distr.plot_options.multisamples), "plot_style": str($plots_section.rlength_distr.plot_options.plot_style)})
			--params_rlength_distr '#echo json.dumps($params_rlength_distr)#'
		#end if
		#if $plots_section.rends_heat.plot == 'yes':
			#set params_rends_heat = []
			#silent $params_rends_heat.append({"cl": int($plots_section.rends_heat.plot_options.cl), "utr5l": int($plots_section.rends_heat.plot_options.utr5l), "cdsl": int($plots_section.rends_heat.plot_options.cdsl), "utr3l": int($plots_section.rends_heat.plot_options.utr3l)})
			--params_rends_heat '#echo json.dumps($params_rends_heat)#'
		#end if
		#if $plots_section.region_psite:
			--region_psite_plot
		#end if
		#if $plots_section.trint_periodicity.plot == 'yes':
			#set length_range = 'all' 
			#if $plots_section.trint_periodicity.plot_options.length_range.filter == 'range':
				#$length_range = str($plots_section.trint_periodicity.plot_options.length_range.length_range_min) + ':' +  str($plots_section.trint_periodicity.plot_options.length_range.length_range_max)
			#end if
			#set params_trint_periodicity = []
			#silent $params_trint_periodicity.append({"cl": int($plots_section.trint_periodicity.plot_options.cl), "region": str($plots_section.trint_periodicity.plot_options.region), "length_range": $length_range})
			--params_trint_periodicity '#echo json.dumps($params_trint_periodicity)#'
		#end if
		#if $plots_section.metaplots.plot == 'yes':
			#set length_range = 'all' 
			#if $plots_section.metaplots.plot_options.length_range.filter == 'range':
				#$length_range = str($plots_section.metaplots.plot_options.length_range.length_range_min) + ':' +  str($plots_section.metaplots.plot_options.length_range.length_range_max)
			#end if
			#set params_metaplots = []
			#silent $params_metaplots.append({"multisamples": str($plots_section.metaplots.plot_options.multisamples), "plot_style": str($plots_section.metaplots.plot_options.plot_style), "length_range": $length_range, "frequency": bool($plots_section.metaplots.plot_options.frequency), "utr5l": int($plots_section.metaplots.plot_options.utr5l), "cdsl": int($plots_section.metaplots.plot_options.cdsl), "utr3l": int($plots_section.metaplots.plot_options.utr3l), "log_color": bool($plots_section.metaplots.plot_options.log_color)})
			--params_metaplots '#echo json.dumps($params_metaplots)#'
		#end if
		#if $plots_section.codon_usage_psite.plot == 'yes':
			#set params_codon_usage_psite = []
			#silent $params_codon_usage_psite.append({"fastapath": str($plots_section.codon_usage_psite.plot_options.fastapath), "frequency": bool($plots_section.codon_usage_psite.plot_options.frequency), "label_scatter": bool($plots_section.codon_usage_psite.plot_options.label_scatter), "label_number": int($plots_section.codon_usage_psite.plot_options.label_number)})
			--params_codon_usage_psite '#echo json.dumps($params_codon_usage_psite)#'
		#end if 
		--psite_info '$psite_out'
		--codon_coverage_info '$codon_coverage_out'
		--cds_coverage_info '$cds_coverage_out'
		--out_pdf '$output_plots'
    ]]></command>
    <inputs>
		<repeat name="rep_samples" title="BAM file" min="1" default="1">
			<param name="sample_name" type="text" value="SampleName" label="Specify sample name"
				help="Only letters, numbers and underscores will be retained in this field">
				<sanitizer>
				    <valid initial="string.letters,string.digits"><add value="_" /></valid>
				</sanitizer>
			</param>
			<param name="bam_file" type="data" format="bam,sam" multiple="false" label="Input BAM file"
				help="riboWaltz only works for read alignments based on transcript coordinates"/>
		</repeat>
		<param name="gtf" type="data" format="gtf,gff" label="Annotation in GTF format"/>
		<param name="refseq_sep" type="text" optional="true" label="Separator between reference sequences' name and additional information to discard"
			help=" All characters before the first occurrence of the specified separator are kept"/>
		<section name="filtering" title="Filtering Options">
			<conditional name="duplicates">
				<param name="filter" type="select" label="Perform duplicate filtering?">
					<option value="yes">yes</option>
					<option value="no">no</option>
				</param>
				<when value="yes">
					<param name="extremity" type="select" label="Which reads should be considered duplicates?">
						<option value="both" selected="true">Share both the 5' extremity and the 3' extremity </option>
						<option value="5end">Share only the 5' extremity</option>
						<option value="3end">Share only the 3' extremity</option>
					</param>
					<param name="keep" type="select" label="Which read to keep if duplicates disply different lengths?"
						help="This parameter is considered only if one of 5' or 3' end extrimity was chosen">
						<option value="shortest" selected="true">Keep the shortest reads </option>
						<option value="longest">Keep the longest reads</option>
					</param>
				</when>
				<when value="no"/>
			</conditional>
			<conditional name="length">
				<param name="filter" type="select" label="Perform read length filtering">
					<option value="periodicity">yes, in periodicity mode</option>
					<option value="custom">yes, based on read length ranges</option>
					<option value="no">no</option>
				</param>
				<when value="periodicity">
					<param name="periodicity_threshold" type="integer" value="50" min="10" max="100"
						label="Only read lengths satisfying this threshold are kept"/>
				</when>
				<when value="custom">
					<param name="length_range_min" value="1" type="integer" min="1"
						label="Read lengths ranging from"/>
					<param name="length_range_max" value="100" type="integer" min="1"
						label="Read lengths ranging to"/>
				</when>
				<when value="no"/>
			</conditional>
		</section>
		<section name="psite_additional" title="Additional options for P-site offset computation">
			<param name="flanking" type="integer" value="6" label="Min number of nucleotides that must flank the reference codon in both directions"/>
		    <param name="use_start" type="boolean" truevalue="1" falsevalue="0" checked="true"
		        label="Use the translation initiation site as reference codon?"
				help="If not checked, the second to last codon is used instead"/>
		    <param name="psite_extrimity" type="select" label="On which extrimity the correction step should be based on?">
		        <option value="auto" selected="true">Automatically select the optimal extremity</option>
		        <option value="5end">Use 5' extrimities</option>
		        <option value="3end">Use 3' extrimities</option>
		    </param>
			<param name="cl" type="integer" value="99" min="1" max="100" label="Confidence level for generating occupancy metaprofiles for to a sub-range of read lengths"/>
		</section>
		<section name="coverage_additional" title="Options for codon and CDS coverage">
		    <param name="psites_per_region" type="boolean" truevalue="1" falsevalue="0" checked="true"
		        label="Write number of P-Sites falling per region?"
				help="If not checked, number of read foot prints per region trturned"/>
			<param name="min_overlap" type="integer" value="1" min="1" label="Min number of overlapping positions between reads and codons to be considered"/>
			<param name="start_nts" type="integer" value="0" min="0" label="Numer of nucleotides at the beginning of the coding sequences to be excluded"/>
			<param name="stop_nts" type="integer" value="0" min="0" label="Numer of nucleotides at the end of the coding sequences to be excluded"/>
		</section>
		<section name="plots_section" title="Plots to include">
			<conditional name="rlength_distr">
				<param name="plot" type="select" label="Include read length distribution plots?">
					<option value="no">no</option>
					<option value="yes">yes</option>
				</param>
				<when value="yes">
					<section name="plot_options" title="Plot options">
						<param name="cl" type="integer" value="100" min="1" max="100" label="Confidence level"/>
						<param name="multisamples" type="select" label="How to handle multiple samples and replicates?">
							<option value="separated">Separate plots</option>
							<option value="average">Sinlge plot with mean signal</option>
						</param>
						<param name="plot_style" type="select" label="How to organize and display multiple bar plots??">
							<option value="split">Separate plots</option>
							<option value="dodged">Sinlge plot with mean signal</option>
						</param>
					</section>						
				</when>
				<when value="no"/>
			</conditional>
			<conditional name="rends_heat">
				<param name="plot" type="select" label="Inlcude plots about abundance reads extremities around start and stop codons?">
					<option value="no">no</option>
					<option value="yes">yes</option>
				</param>
				<when value="yes">
					<section name="plot_options" title="Plot options">					
						<param name="cl" type="integer" value="100" min="1" max="100" label="Confidence level"/>
						<param name="utr5l" type="integer" value="50" min="0" label="5' UTR region flanking the start codon"/>
						<param name="cdsl" type="integer" value="50" min="0" label="CDS region flanking both the start and stop codon"/>
						<param name="utr3l" type="integer" value="50" min="0" label="3' UTR region flanking the stop codon"/>
					</section>
				</when>
				<when value="no"/>
			</conditional>
			<param name="region_psite" type="boolean" truevalue="1" falsevalue="0" checked="false"
		        label="Inlcude plots that show P-sites per region?"/>
			<conditional name="trint_periodicity">
				<param name="plot" type="select" label="Inlcude plots with Trinucleotide periodicity?">
					<option value="no">no</option>
					<option value="yes">yes</option>
				</param>
				<when value="yes">
					<section name="plot_options" title="Plot options">
						<param name="cl" type="integer" value="95" min="1" max="100" label="Confidence level"/>
						<param name="region" type="select" label="Region(s) of the apartment to be analyzed">
							<option value="all" selected="true">All</option>
							<option value="5end">5' UTR</option>
							<option value="3end">3' UTR</option>
						</param>
						<conditional name="length_range">
							<param name="filter" type="select" label="Read length(s) to be included in the analysis">
								<option value="all" selected="true">All</option>
								<option value="range">based on read length ranges</option>
							</param>
							<when value="all" />
							<when value="range">
								<param name="length_range_min" value="1" type="integer" min="1"
									label="Read lengths ranging from"/>
								<param name="length_range_max" value="100" type="integer" min="1"
									label="Read lengths ranging to"/>
							</when>
						</conditional>
					</section>
				</when>
				<when value="no"/>
			</conditional>
			<conditional name="metaplots">
				<param name="plot" type="select" label="Inlcude metaplots?">
					<option value="no">no</option>
					<option value="yes">yes</option>
				</param>
				<when value="yes">
					<section name="plot_options" title="Plot options">					
						<param name="multisamples" type="select" label="How to handle multiple samples and replicates?">
							<option value="separated">Separate plots</option>
							<option value="average">Sinlge plot with mean signal</option>
							<option value="sum">Sinlge plot with sum of the signal</option>
						</param>
						<param name="plot_style" type="select" label="How to organize and display multiple bar plots??">
							<option value="split">Separate plots</option>
							<option value="dodged">Sinlge plot with mean signal</option>
						</param>
						<conditional name="length_range">
							<param name="filter" type="select" label="Read length(s) to be included in the analysis">
								<option value="all" selected="true">All</option>
								<option value="range">based on read length ranges</option>
							</param>
							<when value="all" />
							<when value="range">
								<param name="length_range_min" value="1" type="integer" min="1"
									label="Read lengths ranging from"/>
								<param name="length_range_max" value="100" type="integer" min="1"
									label="Read lengths ranging to"/>
							</when>
						</conditional>
						<param name="frequency" type="boolean" truevalue="1" falsevalue="0" checked="false"
							label="Normalize the metaprofile(s) such that the area under the curve(s) is 1?"
							help="If checked and if multisamples is set to average or sum, normalization is performed 
							before combining the signal from multiple samples"/>
						<param name="utr5l" type="integer" value="50" min="0" label="5' UTR region flanking the start codon"/>
						<param name="cdsl" type="integer" value="50" min="0" label="CDS region flanking both the start and stop codon"/>
						<param name="utr3l" type="integer" value="25" min="0" label="3' UTR region flanking the stop codon"/>
						<param name="log_color" type="boolean" truevalue="1" falsevalue="0" checked="false"
							label="Use a logarithmic colour scale for metaheatmaps?"
							help="strongly suggested in case of large signal variations"/>
					</section>
				</when>
				<when value="no"/>
			</conditional>
			<conditional name="codon_usage_psite">
				<param name="plot" type="select" label="Inlcude plots with codon usage?">
					<option value="no">no</option>
					<option value="yes">yes</option>
				</param>
				<when value="yes">
					<section name="plot_options" title="Plot options">					
						<param name="fastapath" type="data" format="fasta" />
						<param name="frequency" type="boolean" truevalue="1" falsevalue="0" checked="true"
							label="normalize the 64 codon usage indexes for the corresponding codon frequencies in coding sequences?"/>
						<param name="label_scatter" type="boolean" truevalue="1" falsevalue="0" checked="false"
							label="Label the dots in the scatter plot?"
							help=" This parameter is considered only if there exatcly two input samples"/>
						<param name="label_number" type="integer" value="64" min="1" max="64" label="how many dots in the scatter plot should be labeled?"/>
					</section>
				</when>
				<when value="no"/>
			</conditional>
		</section>
    </inputs>
    <outputs>
        <data name="psite_out" format="tabular" label="P-site offsets information on ${on_string}">
        </data>
        <data name="codon_coverage_out" format="tabular" label="Codon coverage on ${on_string}">
        </data>
        <data name="cds_coverage_out" format="tabular" label="CDS coverage on ${on_string}">
        </data>
        <data name="output_plots" format="pdf" label="Additional plots ${on_string}">
			<filter>'yes' in plots_section['rlength_distr'] or 'yes' in plots_section['rends_heat'] or plots_section['region_psite'] or 'yes' in plots_section['trint_periodicity'] or 'yes' in plots_section['metaplots'] or 'yes' in plots_section['codon_usage_psite']</filter>
        </data>
    </outputs>
	<tests>
		<test>
			<repeat name="rep_samples">
				<param name="sample_name" value="sample1"/>
				<param name="bam_file" value="test1.bam"/>
			</repeat>
			<repeat name="rep_samples">
				<param name="sample_name" value="sample2"/>
				<param name="bam_file" value="test2.bam"/>
			</repeat>
			<output name="psite_out" value="psite_out.tabular"/>
			<output name="codon_coverage_out" value="codon_coverage_out.tabular"/>
			<output name="cds_coverage_out" value="cds_coverage_out.tabular"/>
			<output name="output_plots" value="plots.pdf"/>
		</test>
	</tests>
    <help><![CDATA[
riboWaltz is an R package for calculation of optimal P-site offsets, diagnostic analysis and visual inspection of ribosome profiling data.
.. class:: warningmark

Double equal signs, ==, must be used as *"equal to"* (e.g., **c1 == 'chr22'**)

.. class:: infomark

**TIP:** Attempting to apply a filtering condition may throw exceptions if the data type (e.g., string, integer) in every line of the columns being filtered is not appropriate for the condition (e.g., attempting certain numerical calculations on strings).  If an exception is thrown when applying the condition to a line, that line is skipped as invalid for the filter condition.  The number of invalid skipped lines is documented in the resulting history item as a "Condition/data issue".

.. class:: infomark

**TIP:** If your data is not TAB delimited, use *Text Manipulation-&gt;Convert*

-----

**Syntax**

The filter tool allows you to restrict the dataset using simple conditional statements.

- Columns are referenced with **c** and a **number**. For example, **c1** refers to the first column of a tab-delimited file
- Make sure that multi-character operators contain no white space ( e.g., **&lt;=** is valid while **&lt; =** is not valid )
- When using 'equal-to' operator **double equal sign '==' must be used** ( e.g., **c1=='chr1'** )
- Non-numerical values must be included in single or double quotes ( e.g., **c6=='+'** )
- Filtering condition can include logical operators, but **make sure operators are all lower case** ( e.g., **(c1!='chrX' and c1!='chrY') or not c6=='+'** )

-----

**Example**

- **c1=='chr1'** selects lines in which the first column is chr1
- **c3-c2&lt;100*c4** selects lines where subtracting column 3 from column 2 is less than the value of column 4 times 100
- **len(c2.split(',')) &lt; 4** will select lines where the second column has less than four comma separated elements
- **c2>=1** selects lines in which the value of column 2 is greater than or equal to 1
- Numbers should not contain commas - **c2&lt;=44,554,350** will not work, but **c2&lt;=44554350** will
- Some words in the data can be used, but must be single or double quoted ( e.g., **c3=='exon'** )
    ]]></help>
    <citations>
        <citation type="doi">http://dx.doi.org/10.1371/journal.pcbi.1006169</citation>
    </citations>
</tool>
