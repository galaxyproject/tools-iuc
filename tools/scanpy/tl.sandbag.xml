<tool id="tl.sandbag" name="tl.sandbag" version="1.3.1+galaxy1">
    <description>Generate pairs of genes</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements">
        <requirement type="package" version="2.0.5">pypairs</requirement>
    </expand>
    <command detect_errors="exit_code"><![CDATA[
          python $script_file
      ]]></command>
    <configfiles>
        <configfile name="script_file"><![CDATA[
@CMD_imports@
@CMD_read_inputs@

sc.tl.sandbag(
   adata=adata,
   phases='$phases'\
   #if $subset_genes
   ,
   subset_genes=$subset_genes.replace(' ','').split(',')\
   #end if
   #if $subset_samples
   ,
   subset_samples=$subset_samples.replace(' ','').split(',')\
   #end if
   )
]]></configfile>
    </configfiles>
    <inputs>
        <expand macro="inputs_anndata"/>
        <repeat name="phases" title="Annotation of samples to their phase">
            <param name="key" type="text" value="" label="Category name" help=""/>
            <param name="genes" type="text" value="" label="Genes" help="Genes separated by a comma"/>
        </repeat>
        <param argument="subset_genes" type="text" value="" optional="true" label="Genes for sampling the reference set" help="Default is all genes. Genes separated by a comma"/>
        <param argument="subset_samples" type="text" value="None" optional="true" label="Cells for sampling the reference set" help="Default is all samples. Samples separated by a comma"/>
        <expand macro="anndata_output_format"/>
    </inputs>
    <outputs>
        <expand macro="anndata_outputs"/>
    </outputs>
    <tests>
        <test>
            <conditional name="input">
                <param name="format" value="h5ad" />
                <param name="adata" value="krumsiek11.h5ad" />
            </conditional>
            <param name="phases" value=""/>
            <param name="fraction" value=""/>
            <param name="subset_genes" value=""/>
            <param name="subset_samples" value=""/>
            <param name="n_jobs" value=""/>
            <output name="`dict` of `list` of `tuple`, i.e." file=""/>
            <output name="{phase: [(Gene1, Gene2), ...]}," file=""/>
            <output name="containing marker pairs per phase" file=""/>
        </test>
    </tests>
    <help><![CDATA[
Calculates the pairs of genes serving as marker pairs for each phase,
based on a matrix of gene counts and an annotation of known phases.

This reproduces the approach of Scialdone et al (2015) in the implementation of
Fechtner18]_.

More information and bug reports `here
<https://github.com/rfechtner/pypairs>`__.

Parameters
----------
adata : :class:`~anndata.AnnData`
    The annotated data matrix.
phases : `dict`
    Dictionary of lists, i.e. {phase: [sample, ...]},
    containing annotation of samples to their phase
fraction : `float`, optional (default: 0.5)
    Fraction to be used as threshold.
subset_genes : `list` or `None`, optional (default: `None`)
    Genes for sampling the reference set. Default is all genes.
subset_samples : `list` or `None`, optional (default: `None`)
    Cells for sampling the reference set. Default is all samples.
n_jobs : `int`, optional (default: 1)
    Number of concurrent n_jobs to be used. 0 = use all available cores.

Returns
-------
`dict` of `list` of `tuple`, i.e.
{phase: [(Gene1, Gene2), ...]},
containing marker pairs per phase
    ]]></help>
    <expand macro="citations"/>
</tool>
