<tool id="tl.sim" name="tl.sim" version="1.3.1+galaxy1">
  <description>Simulate dynamic gene expression data [Wittmann09]_ [Wolf17]_.</description>
  <macros>
    <import>macros.xml</import>
  </macros>
  <expand macro="requirements"/>
  <command detect_errors="exit_code"><![CDATA[
        python $script_file
    ]]></command>
  <configfiles>
    <configfile name="script_file"><![CDATA[
import scanpy.api as sc

sc.tl.sim(
   model = '$model',
   params_file = '$params_file',
   tmax = '$tmax',
   branching = '$branching',
   nrRealizations = '$nrRealizations',
   noiseObs = '$noiseObs',
   noiseDyn = '$noiseDyn',
   step = '$step',
   seed = '$seed',
   writedir: str, optional (default: `None`) = '$writedir: str, optional (default: `None`)',)

adata.write_loom($csv_output)
adata.write_csv($loom_output)
]]></configfile>
  </configfiles>
  <inputs>
    <param name="model" type="data" format="{'krumsiek11'" value="" label="model" help="    Model file in 'sim_models' directory."/>
    <param name="params_file" type="bool" value="True" label="params_file" help="    Read default params from file."/>
    <param name="tmax" type="int" value="None" optional="true" label="tmax" help="    Number of time steps per realization of time series."/>
    <param name="branching" type="bool" value="None" optional="true" label="branching" help="    Only write realizations that contain new branches."/>
    <param name="nrRealizations" type="data" format="int" value="None" optional="true" label="nrRealizations" help="    Number of realizations."/>
    <param name="noiseObs" type="data" format="float" value="None" optional="true" label="noiseObs" help="    Observatory/Measurement noise."/>
    <param name="noiseDyn" type="data" format="float" value="None" optional="true" label="noiseDyn" help="    Dynamic noise."/>
    <param name="step" type="data" format="int" value="None" optional="true" label="step" help="    Interval for saving state of system."/>
    <param name="seed" type="data" format="int" value="None" optional="true" label="seed" help="    Seed for generation of random numbers."/>
    <param name="writedir: str, optional (default: `None`)" type="data" format="" value="" label="writedir: str, optional (default: `None`)" help="    Path to directory for writing output files."/>
    </inputs>
  <outputs>
    <data name="csv_output" type="data" format="csv" label="${tool.name} on ${on_string}: Annotated matrix (csv)"/>
    <data name="loom_output" type="data" format="loom" label="${tool.name} on ${on_string}: Annotated matrix (loom)"/>
    </outputs>
  <tests>
    <test>
      <param name="model" value=""/>
      <param name="params_file" value=""/>
      <param name="tmax" value=""/>
      <param name="branching" value=""/>
      <param name="nrRealizations" value=""/>
      <param name="noiseObs" value=""/>
      <param name="noiseDyn" value=""/>
      <param name="step" value=""/>
      <param name="seed" value=""/>
      <param name="writedir: str, optional (default: `None`)" value=""/>
      <output name="loom_output" file=""/>
      <output name="csv_output" file=""/>
      <output name="loom_output" file=""/>
    </test>
  </tests>
  <help><![CDATA[
        Simulate dynamic gene expression data [Wittmann09]_ [Wolf17]_.

Sample from a stochastic differential equation model built from
literature-curated boolean gene regulatory networks, as suggested by
[Wittmann09]_. The Scanpy implementation is due to [Wolf17]_.

Parameters
----------
model : {'krumsiek11', 'toggleswitch'}
    Model file in 'sim_models' directory.
params_file : `bool`, (default: `True`)
    Read default params from file.
tmax : `int`, optional (default: `None`)
    Number of time steps per realization of time series.
branching : `bool`, optional (default: `None`)
    Only write realizations that contain new branches.
nrRealizations : int, optional (default: `None`)
    Number of realizations.
noiseObs : float, optional (default: `None`)
    Observatory/Measurement noise.
noiseDyn : float, optional (default: `None`)
    Dynamic noise.
step : int, optional (default: `None`)
    Interval for saving state of system.
seed : int, optional (default: `None`)
    Seed for generation of random numbers.
writedir: str, optional (default: `None`)
    Path to directory for writing output files.

Returns
-------
adata : :class:`~anndata.AnnData`
    Annotated data matrix.

Examples
--------
See this `use case <https://github.com/theislab/scanpy_usage/tree/master/170430_krumsiek11>`__
    ]]></help>
  <expand macro="citations"/>
</tool>
