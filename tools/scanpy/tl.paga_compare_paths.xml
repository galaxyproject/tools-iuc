<tool id="tl.paga_compare_paths" name="tl.paga_compare_paths" version="1.3.1+galaxy1">
  <description>Compare paths in abstracted graphs in two datasets</description>
  <macros>
    <import>macros.xml</import>
  </macros>
  <expand macro="requirements"/>
  <command detect_errors="exit_code"><![CDATA[
        python $script_file
    ]]></command>
  <configfiles>
    <configfile name="script_file"><![CDATA[
import scanpy.api as sc

@CMD_read_inputs

sc.tl.paga_compare_paths(
   adata1, adata2 = '$adata',
   adjacency_key = '$adjacency_key',
   adjacency_key2 = '$adjacency_key2',)
]]></configfile>
  </configfiles>
  <inputs>
    <expand macro="inputs_anndata"/>
    <param name="adjacency_key" type="data" format="str" value="" label="adjacency_key" help="    Key for indexing the adjacency matrices in `.uns['paga']` to be used in    adata1 and adata2."/>
    <param name="adjacency_key2" type="data" format="str" value="" label="adjacency_key2" help="    If provided, used for adata2."/>
    </inputs>
  <outputs>
    <data name="OrderedTuple with attributes ``n_steps`` (total number of steps in paths)" type="data" format="" label="${tool.name} on ${on_string}: OrderedTuple with attributes ``n_steps`` (total number of steps in paths)"/>
    <data name="and ``frac_steps`` (fraction of consistent steps), ``n_paths`` and" type="data" format="" label="${tool.name} on ${on_string}: and ``frac_steps`` (fraction of consistent steps), ``n_paths`` and"/>
    <data name="``frac_paths``." type="data" format="" label="${tool.name} on ${on_string}: ``frac_paths``."/>
    </outputs>
  <tests>
    <test>
      <param name="adjacency_key" value=""/>
      <param name="adjacency_key2" value=""/>
      <output name="OrderedTuple with attributes ``n_steps`` (total number of steps in paths)" file=""/>
      <output name="and ``frac_steps`` (fraction of consistent steps), ``n_paths`` and" file=""/>
      <output name="``frac_paths``." file=""/>
    </test>
  </tests>
  <help><![CDATA[
        Compare paths in abstracted graphs in two datasets.

Compute the fraction of consistent paths between leafs, a measure for the
topological similarity between graphs.

By increasing the verbosity to level 4 and 5, the paths that do not agree
and the paths that agree are written to the output, respectively.

The PAGA "groups key" needs to be the same in both objects.

Parameters
----------
adata1, adata2 : AnnData
    Annotated data matrices to compare.
adjacency_key : str
    Key for indexing the adjacency matrices in `.uns['paga']` to be used in
    adata1 and adata2.
adjacency_key2 : str, None
    If provided, used for adata2.


Returns
-------
OrderedTuple with attributes ``n_steps`` (total number of steps in paths)
and ``frac_steps`` (fraction of consistent steps), ``n_paths`` and
``frac_paths``.
    ]]></help>
  <expand macro="citations"/>
</tool>
