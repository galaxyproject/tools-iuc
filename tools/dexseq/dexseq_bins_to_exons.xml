<tool id="dexseq_map" name="DEXSeq-Map" version="1.0">
    <description>Maps the DEXSeq couting bins back to the transcript and exon ids</description>
    <requirements>
        <requirement type="package" version="2.24">bedtools</requirement>
    </requirements>
    <stdio>
        <!-- Anything other than zero is an error -->
        <exit_code range="1:" />
        <exit_code range=":-1" />
        <!-- In case the return code has not been set propery check stderr too -->
        <regex match="Error:" />
        <regex match="Exception:" />
    </stdio>
    <command interpreter="python">
    <![CDATA[
        dexseq_bins_to_exons.py -i $input -g $gtffile -o $output
    ]]>
    </command>
    <inputs>
        <param name="input" type="data" format="tabular" label="DEXSeq output file"/>
        <param name="gtffile" type="data" format="gff" label="GTF file"/>
    </inputs>

    <outputs>
        <data format="tabular" name="output" label="DEXSeq map bins to exons on ${on_string}"/>
    </outputs>

    <help>
    <![CDATA[
.. class:: infomark

**What it does** 

DEXSeq-Count tool is used to prepare the DEXSeq compatible annotation (flattened gtf file) from gtf. In this process, the exons that appear multiple times, once for each transcript are collapsed to so called *exon counting bins*. Counting bins for parts of exons arise when an exonic region appears with different boundaries in different transcripts. The resulting flattened gtf file contains pseudo exon ids per gene instead of per transcript.

This tool maps the DEXSeq couting bins back to the original exon ids.

**Inputs**

The tabular output of the DEXseq tool and the initial gtf file used for DEXSeq-count.

**Output**

Tabular file that contain all the fields from input file and one more extra column. The extra column tells which exons the current bin belong to. The format for the column is *geneId:trascriptId:exonId*.

    ]]>
    </help>
</tool>
