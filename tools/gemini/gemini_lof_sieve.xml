<tool id="gemini_@BINARY@" name="GEMINI @BINARY@" version="@VERSION@.0">
    <description>Filter LoF variants by transcript position and type</description>
    <macros>
        <import>gemini_macros.xml</import>
        <token name="@BINARY@">lof_sieve</token>
    </macros>
    <expand macro="requirements" />
    <expand macro="stdio" />
    <expand macro="version_command" />
    <command>
<![CDATA[
        gemini @BINARY@
            "${ infile }"
            > "${ outfile }"
]]>
    </command>
    <inputs>
        <expand macro="infile" />
    </inputs>
    <outputs>
        <data name="outfile" format="tabular" />
    </outputs>
    <tests>
        <test>
        </test>
    </tests>
    <help>
**What it does**

Not all candidate LoF variants are created equal. For e.g, a nonsense (stop gain) variant impacting the first 5% of a polypeptide is far
more likely to be deleterious than one affecting the last 5%. Assuming youâ€™ve annotated your VCF with snpEff v3.0+, the lof_sieve tool
reports the fractional position (e.g. 0.05 for the first 5%) of the mutation in the amino acid sequence.
In addition, it also reports the predicted function of the transcript so that one can segregate candidate
LoF variants that affect protein_coding transcripts from processed RNA, etc.

@CITATION@
    </help>
    <expand macro="citations"/>
</tool>
