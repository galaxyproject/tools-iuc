<tool id="spades_coronaspades" name="coronaSPAdes" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@">
    <description>genome assembler for SARS-CoV-2</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <expand macro="stdio"/>
    <expand macro="version_command"/>
    <command detect_errors="exit_code"><![CDATA[

@PREPROCESS_INPUT_FILES@
@PREPROCESS_NANOPORE_PACBIO_FILES@
@PREPROCESS_SANGER_FILES@
@PREPROCESS_CONTIGS_FILES@

## run
coronaspades.py
    -o 'output'
    @RESOURCES@
    @INPUT_READS@
    ## additional reads
    @NANOPORE_PACBIO@
    @CONTIGS@
    @SANGER@
    ## parameter
    @KMER@
    @PHREDOFFSET@
    @PIPELINE_OPTIONS@
    ## postprocessing
    @STATS@
    @CORRECTED@
    ]]></command>
    <inputs>
        <expand macro="input_files" format="fastq,fasta,fastq.gz,fastqsanger.gz,fasta.gz">
            <option value="single" selected="true">Single-end</option>
        </expand>
        <section name="arf" title="Additional read files">
            <expand macro="nanopore_pacbio"/>
            <expand macro="contigs"/>
            <expand macro="sanger"/>
        </section>
        <expand macro="kmer"/>
        <expand macro="phred"/>
        <expand macro="pipeline_options">
            <option value="--iontorrent">Iontorrent: although coronaSPAdes supports IonTorrent reads, it was not sufficiently tested on such kind of data (--iontorrent)</option>
        </expand>
        <param name="optional_output" type="select" multiple="true" optional="false" label="Select output file(s)" help="Only shown in history if selected here and generated by the specific run.">
            <option value="sc" selected="true">Scaffolds</option>
            <option value="rs" selected="true">Raw scaffolds</option>
            <option value="b" selected="true">HMM statistics</option>
            <option value="dg" selected="true">Domain graph</option>
            <option value="l">Log</option>
        </param>
    </inputs>
    <outputs>
        <expand macro="out_sc"/>
        <expand macro="out_rs"/>
        <expand macro="out_b"/>
        <expand macro="out_dg"/>
        <expand macro="out_l"/>
    </outputs>
    <tests>
        <!--
        used in a test:
            single library: 12, 1, 2
            k, phred-offset, disablerr, iontorrent, only-assembler, only-error-correction

        not used in a test:
            single library: merged, s
            pacbio, nanopore, sanger, trusted-contigs, untrusted-contigs, tslr
        -->

        <!-- #1 single, unpaired, fastq.gz, default parameters -->
        <test expect_num_outputs="4">
            <conditional name="singlePaired">
                <param name="sPaired" value="single"/>
                <param name="input1" value="covid.fastq.gz"/>
            </conditional>
            <output name="out_b">
                <assert_contents>
                    <has_n_lines n="18"/>
                    <has_text_matching expression="bCoV_NSP1 - Betacoronavirus replicase NSP1"/>
                </assert_contents>
            </output>
            <output name="out_sc">
                <assert_contents>
                    <has_n_lines n="18"/>
                    <has_text_matching expression=">NODE_1_length_1009_cluster_1_candidate_1_domains_2"/>
                </assert_contents>
            </output>
            <output name="out_rs">
                <assert_contents>
                    <has_n_lines n="18"/>
                    <has_text_matching expression=">NODE_1_length_1009_cov_429.125282"/>
                </assert_contents>
            </output>
            <output name="out_dg">
                <assert_contents>
                    <has_text_matching expression="bCoV_NSP1 13_2_1 1"/>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[
.. class:: infomark

**What it does**

@HELP_WID@

Given an increased interest in coronavirus research, it has been developed a coronavirus assembly mode for SPAdes assembler (a.k.a. coronaSPAdes). 
It allows to assemble full-length coronaviridae genomes from the transcriptomic and metatranscriptomic data. Algorithmically, coronaSPAdes 
is a HMM-guided assembler and it is built upon biosyntheticSPAdes idea of using profile HMMs specific for gene/organism to enhance assembly.

**Input**

coronasSpades works with Illumina or IonTorrent reads in a single paired-end library and is capable of providing hybrid assemblies using PacBio, Oxford Nanopore and TSLR reads.

Input data can be provided as interlaced, forward and reverse, merged and unpaired files.

**Output**

- Scaffolds: set of putative virus sequences derived from HMM matches.
- Raw scaffolds: full set of scaffolds from input data (derived without HMMs)
- Domain statistics: various information about HMM alignments, including the coordinates of the matches, their order, etc.
- HMM statistics: contains statistics about BGC composition in the sample. First, it outputs number of domain hits in the sample. Then, for each BGC candidate we output domain order with positions on the corresponding DNA sequence from scaffolds.fasta.

.. class:: infomark

**References**

More information can be found on `github <https://github.com/ablab/spades>`_  and on the `project website <https://cab.spbu.ru/software/coronaspades/>`_.
    ]]></help>
    <expand macro="citations">
        <citation type="doi">10.1093/bioinformatics/btab597</citation>
    </expand>
</tool>
