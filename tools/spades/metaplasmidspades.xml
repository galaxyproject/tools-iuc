<tool id="spades_metaplasmidspades" name="metaplasmidSPAdes" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@">
    <description>genome assembler for plasmids from metagenomic data sets</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <expand macro="stdio"/>
    <expand macro="version_command"/>
    <command detect_errors="exit_code"><![CDATA[
#set $concat = ''
#set $currentParam = ''
#set $currentFile = ''
#set $i = '1' ## library number
#set $concat += '--pe' + str($i) + str($pe_orientation) + ' '
#set $concat += '--mp' + str($i) + str($mp_orientation) + ' '
#set $concat += '--hqmp' + str($i) + str($hqmp_orientation) + ' '
#for $j, $file in enumerate($file_rep, 1)
    #set $currentPrefix = '--' + str($file.readtype_cond.readtype_sel) ## s, pe, mp, hqmp, nxmate
    #if $currentPrefix == '--s'
        #set $currentParam = ''
        #set $currentFile = $file.readtype_cond.reads
        @SET_FILENAME_MULTIPLE@
    #elif $currentPrefix == '--pe' or $currentPrefix == '--mp' or $currentPrefix == '--hqmp'
        #if $file.readtype_cond.filetype_cond.filetype_sel == 'separate'
            #set $currentParam = '-1'
            #set $currentFile = $file.readtype_cond.filetype_cond.fwd_reads
            @SET_FILENAME_MULTIPLE@
            #set $currentParam = '-2'
            #set $currentFile = $file.readtype_cond.filetype_cond.rev_reads
            @SET_FILENAME_MULTIPLE@
        #else
            #if $file.readtype_cond.filetype_cond.filetype_sel == 'interlaced'
                #set $currentParam = '-12'
            #elif $file.readtype_cond.filetype_cond.filetype_sel == 'merged'
                #set $currentParam = '-m'
            #elif $file.readtype_cond.filetype_cond.filetype_sel == 'unpaired'
                #set $currentParam = '-s'
            #end if
            #set $currentFile = $file.readtype_cond.filetype_cond.reads
            @SET_FILENAME_MULTIPLE@
        #end if
    #elif $currentPrefix == '--nxmate'
        #set $currentParam = '-1'
        #set $currentFile = $file.readtype_cond.fwd_reads
        @SET_FILENAME_MULTIPLE@
        #set $currentParam = '-2'
        #set $currentFile = $file.readtype_cond.rev_reads
        @SET_FILENAME_MULTIPLE@
    #end if
#end for

## run
spades.py --meta --plasmid
    $operation_mode
    -o 'output'
    @RESOURCES@
    ## reads
    $concat
    @NANOPORE@
    @PACBIO@
    @SANGER@
    @TRUSTEDCONTIGS@
    @TSLR@
    @UNTRUSTEDCONTIGS@
    ## parameter
    @KMER@
    @PHREDOFFSET@
    @PIPELINE_OPTIONS@
## postprocessing
@STATS@
@CORRECTED@
    ]]></command>
    <inputs>
        <param name="operation_mode" type="select" label="Operation mode" help="Error correction requires FASTQ input files.">
            <option value="">Assembly and error correction</option>
            <option value="--only-assembler">Only assembler (--only-assembler)</option>
            <option value="--only-error-correction">Only error correction (--only-error-correction)</option>
        </param>
        <repeat name="file_rep" min="1" title="Files">
            <conditional name="readtype_cond">
                <param name="readtype_sel" type="select" label="Select read type">
                    <option value="s">Single-read (--s)</option>
                    <option value="pe">Paired-end (--pe)</option>
                    <option value="mp">Mate-pair (--mp)</option>
                    <option value="hqmp">High-quality mate-pair (--hqmp)</option>
                    <option value="nxmate">Lucigen NxSeq long-mate-pair (--nxmate)</option>
                </param>
                <when value="s">
                    <expand macro="reads" label="single" help="(--s)"/>
                </when>
                <when value="pe">
                    <conditional name="filetype_cond">
                        <expand macro="filetype_sel">
                            <option value="merged">Merged (-m)</option>
                        </expand>
                        <expand macro="filetype_sel_when">
                            <when value="merged">
                                <expand macro="reads" label="merged" help="(-m)"/>
                            </when>
                        </expand>
                    </conditional>
                </when>
                <when value="mp">
                    <conditional name="filetype_cond">
                        <expand macro="filetype_sel"/>
                        <expand macro="filetype_sel_when"/>
                    </conditional>
                </when>
                <when value="hqmp">
                    <conditional name="filetype_cond">
                        <expand macro="filetype_sel"/>
                        <expand macro="filetype_sel_when"/>
                    </conditional>
                </when>
                <when value="nxmate">
                    <expand macro="reads" paramname="fwd_reads" label="forward" help="(-1)"/>
                    <expand macro="reads" paramname="rev_reads" label="reverse" help="(-2)"/>
                </when>
            </conditional>
        </repeat>
        <!-- ignored if no corresponding read files are used -->
        <expand macro="orientation" type="pe" label="paired-end" fr="true"/>
        <expand macro="orientation" type="mp" label="mate-pair" rf="true"/>
        <expand macro="orientation" type="hqmp" label="high-quality mate-pair" fr="true"/>
        <section name="arf" title="Additional read files">
            <expand macro="nanopore"/>
            <expand macro="pacbio"/>
            <expand macro="sanger"/>
            <expand macro="trusted_contigs"/>
            <expand macro="tslr"/>
            <expand macro="untrusted_contigs"/>
        </section>
        <expand macro="kmer"/>
        <expand macro="phred"/>
        <expand macro="pipeline_options">
            <option value="--iontorrent">Iontorrent: although coronaSPAdes supports IonTorrent reads, it was not sufficiently tested on such kind of data (--iontorrent)</option>
        </expand>
        <param name="optional_output" type="select" multiple="true" optional="false" label="Select optional output file(s)" help="Only shown in history if selected here and generated by the specific run.">
            <option value="cn" selected="true">Contigs</option>
            <option value="cs">Contigs stats</option>
            <option value="cr">Corrected reads</option>
            <option value="sc" selected="true">Scaffolds</option>
            <option value="ss">Scaffolds stats</option>
            <option value="l">Log</option>
        </param>
    </inputs>
    <outputs>
        <expand macro="out_cn"/>
        <expand macro="out_cr"/>
        <expand macro="out_cs"/>
        <expand macro="out_l"/>
        <expand macro="out_sc"/>
        <expand macro="out_ss"/>
   </outputs>
    <tests>
        <!--
        used in a test:
            multiple libraries: s, pe#-12, pe#-1, pe#-2, pe#-<or>
            k, phred-offset, disablerr, iontorrent, only-assembler, only-error-correction

        not used in a test:
            multiple libraries: pe#-m, pe#-s, mp#-12, mp#-1, mp#-2, mp#-<or>, mp#-s, hqmp#-12, hqmp#-1, hqmp#-2, hqmp#-s, hqmp#-<or>, nxmate#-1, nxmate-#2
            pacbio, nanopore, sanger, trusted-contigs, untrusted-contigs, tslr
        -->

        <!-- #1 single, separate, fastq.gz, default parameters -->
         <test expect_num_outputs="2">
            <repeat name="file_rep">
                <conditional name="readtype_cond">
                    <param name="readtype_sel" value="pe"/>
                    <conditional name="filetype_cond">
                        <param name="filetype_sel" value="separate"/>
                        <param name="fwd_reads" value="pl1.fq.gz"/>
                        <param name="rev_reads" value="pl2.fq.gz"/>
                    </conditional>
                </conditional>
            </repeat>
            <output name="out_cn">
                <assert_contents>
                    <has_n_lines n="163"/>
                    <has_text_matching expression=">NODE\_1\_length\_9689\_cov\_.+"/>
                </assert_contents>
            </output>
            <output name="out_sc">
                <assert_contents>
                    <has_n_lines n="163"/>
                    <has_text_matching expression=">NODE\_1\_length\_9689.+"/>
                </assert_contents>
            </output>
        </test>
        <!-- #2 single, separate, fastq, custom parameters -->
        <test expect_num_outputs="6">
            <repeat name="file_rep">
                <conditional name="readtype_cond">
                    <param name="readtype_sel" value="pe"/>
                    <conditional name="filetype_cond">
                        <param name="filetype_sel" value="separate"/>
                        <param name="fwd_reads" value="pl1.fq.gz"/>
                        <param name="rev_reads" value="pl2.fq.gz"/>
                    </conditional>
                </conditional>
            </repeat>
            <conditional name="kmer_cond">
                <param name="kmer_sel" value="manual"/>
                <param name="manual" value="33"/>
            </conditional>
            <param name="phred_offset" value="33"/>
            <param name="optional_output" value="cn,cs,cr,sc,ss,l"/>
            <output name="out_cn">
                <assert_contents>
                    <has_n_lines n="162"/>
                    <has_text_matching expression=">NODE\_1\_length\_9645\_cov\_.+"/>
                </assert_contents>
            </output>
            <output name="out_cs">
                <assert_contents>
                    <has_n_lines n="2"/>
                    <has_text_matching expression="#name&#009;length&#009;coverage"/>
                    <has_text_matching expression="NODE_1&#009;9645.+"/>
                </assert_contents>
            </output>
            <output_collection name="out_cr" type="list" count="3">
                <element name="pe1-1-1.fastq.00.0_0.cor">
                    <assert_contents>
                        <has_size value="71752" delta="1000"/>
                    </assert_contents>
                </element>
                <element name="pe1-2-1.fastq.00.0_0.cor">
                    <assert_contents>
                        <has_size value="71752" delta="1000"/>
                    </assert_contents>
                </element>
                <element name="pe1-_unpaired.00.0_0.cor">
                    <assert_contents>
                        <has_size value="423" delta="100"/>
                    </assert_contents>
                </element>
            </output_collection>
            <output name="out_sc">
                <assert_contents>
                    <has_n_lines n="162"/>
                    <has_text_matching expression=">NODE\_1\_length\_9645\_cov\_.+"/>
                </assert_contents>
            </output>
            <output name="out_ss">
                <assert_contents>
                    <has_n_lines n="2"/>
                    <has_text_matching expression="#name&#009;length&#009;coverage"/>
                    <has_text_matching expression="NODE_1&#009;9645.+"/>
                </assert_contents>
            </output>
            <output name="out_l">
                <assert_contents>
                    <has_text_matching expression="Thank you for using SPAdes!"/>
                </assert_contents>
            </output>
        </test>
        <!-- #3 -->
        <test expect_num_outputs="1">
            <repeat name="file_rep">
                <conditional name="readtype_cond">
                    <param name="readtype_sel" value="pe"/>
                    <conditional name="filetype_cond">
                        <param name="filetype_sel" value="separate"/>
                        <param name="fwd_reads" value="pl1.fq.gz"/>
                        <param name="rev_reads" value="pl2.fq.gz"/>
                    </conditional>
                </conditional>
            </repeat>
            <param name="operation_mode" value="--only-assembler"/>
            <param name="optional_output" value="l"/>
            <output name="out_l">
                <assert_contents>
                    <has_text_matching expression="Thank you for using SPAdes!"/>
                </assert_contents>
            </output>
        </test>
        <!-- #4, only corrected reads are created as an output -->
        <test expect_num_outputs="2">
            <repeat name="file_rep">
                <conditional name="readtype_cond">
                    <param name="readtype_sel" value="pe"/>
                    <conditional name="filetype_cond">
                        <param name="filetype_sel" value="separate"/>
                        <param name="fwd_reads" value="pl1.fq.gz"/>
                        <param name="rev_reads" value="pl2.fq.gz"/>
                    </conditional>
                </conditional>
            </repeat>
            <param name="operation_mode" value="--only-error-correction"/>
            <param name="optional_output" value="cr,l"/>
            <output_collection name="out_cr" type="list" count="3">
                <element name="pe1-1-1.fastq.00.0_0.cor">
                    <assert_contents>
                        <has_size value="71752" delta="1000"/>
                    </assert_contents>
                </element>
                <element name="pe1-2-1.fastq.00.0_0.cor">
                    <assert_contents>
                        <has_size value="71917" delta="1000"/>
                    </assert_contents>
                </element>
                <element name="pe1-_unpaired.00.0_0.cor">
                    <assert_contents>
                        <has_size value="392" delta="20"/>
                    </assert_contents>
                </element>
            </output_collection>
            <output name="out_l">
                <assert_contents>
                    <has_text_matching expression="Thank you for using SPAdes!"/>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[
.. class:: infomark

**What it does**

@HELP_WID@

metaplasmidSPAdes is a subtool for assembling plasmids from metagenomic data sets.

**Input**

@HELP_IN@

**Output**

@HELP_OUT_C@
@HELP_OUT_CS@
@HELP_OUT_CR@
@HELP_OUT_L@
@HELP_OUT_S@
@HELP_OUT_SS@

**References**

More information can be found on `github <https://github.com/ablab/spades>`_  and on the `project website <http://cab.spbu.ru/software/spades>`_.
    ]]></help>
    <expand macro="citations">
        <citation type="doi">10.1101/gr.241299.118</citation>
    </expand>
</tool>    	
