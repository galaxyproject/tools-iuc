<tool id="spades_truspades" name="truSPAdes" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@">
    <description>assembler for Illumina TruSeq short reads</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <expand macro="stdio"/>
    <expand macro="version_command"/>
    <command detect_errors="exit_code"><![CDATA[
## init
mkdir 'datasets' &&
#for $i, $files in enumerate($input_files, start=1)
    #set $letter = chr(64+$i)
    ln -s '${files.left_reads}' "datasets/${letter}_R1.${files.left_reads.datatype.file_ext.replace('fastqsanger', 'fastq')}" &&
    ln -s '${files.right_reads}' "datasets/${letter}_R2.${files.right_reads.datatype.file_ext.replace('fastqsanger', 'fastq')}" &&
#end for

## run
truspades.py
    @O@
    @T@
    --input-dir 'datasets'

## postprocessing
#if 'barcodes' in $oo
    && test -d 'output/barcodes' && zip -q -r 'barcodes.zip' 'output/barcodes' || echo 'No files for separate barcodes.'
#end if
#if 'logs' in $oo
    && test -d 'output/logs' && zip -q -r 'logs.zip' 'output/logs' || echo 'No log files for barcode assembly.'
#end if
    ]]></command>
    <inputs>
        <repeat name="input_files" title="Read files" min="1">
            <param name="left_reads" type="data" format="@INTYPES@" label="Select file with left reads"/>
            <param name="right_reads" type="data" format="@INTYPES@" label="Select file with right reads"/>
        </repeat>
        <param name="oo" type="select" multiple="true" optional="false" label="Select optional output file(s)" help="Only shown in history if selected here and generated by the specific run.">
            <option value="fastq" selected="true">TruSeq long reads (FASTQ)</option>
            <option value="fasta" selected="true">TruSeq long reads (FASTA)</option>
            <option value="barcodes">Output files for separate barcodes</option>
            <option value="logs">Log files</option>
        </param>
    </inputs>
    <outputs>
        <data name="output_fasta" format="fasta" from_work_dir="output/TSLR.fasta" label="${tool.name} on ${on_string}: TSLR (FASTA)">
            <filter>'fasta' in oo</filter>
        </data>
        <data name="output_fastq" format="fastq" from_work_dir="output/TSLR.fastq" label="${tool.name} on ${on_string}: TSLR (FASTQ)">
            <filter>'fastq' in oo</filter>
        </data>
        <data name="output_barcodes" format="zip" from_work_dir="barcodes.zip" label="${tool.name} on ${on_string}: Barcode files (ZIP)">
            <filter>'barcodes' in oo</filter>
        </data>
        <data name="output_log" format="txt" from_work_dir="output/truspades.log" label="${tool.name} on ${on_string}: Log file">
            <filter>'logs' in oo</filter>
        </data>
        <data name="output_logs" format="zip" from_work_dir="logs.zip" label="${tool.name} on ${on_string}: Log files for barcode assembly (ZIP)">
            <filter>'logs' in oo</filter>
        </data>
   </outputs>
    <tests>
        <!-- #1 -->
        <test>
            <repeat name="input_files">
                <param name="left_reads" value="A_R1.fastq.gz"/>
                <param name="right_reads" value="A_R2.fastq.gz"/>
            </repeat>
            <repeat name="input_files">
                <param name="left_reads" value="B_R1.fastq.gz"/>
                <param name="right_reads" value="B_R2.fastq.gz"/>
            </repeat>
            <param name="oo" value="fasta,fastq,barcodes,logs"/>
            <output name="output_fasta">
                <assert_contents>
                    <has_n_lines n="8"/>
                    <has_text_matching expression=">BC\_B-NODE\_1.+"/>
                </assert_contents>
            </output>
            <output name="output_fastq">
                <assert_contents>
                    <has_n_lines n="16"/>
                    <has_text_matching expression="ADEDC.+"/>
                </assert_contents>
            </output>
            <output name="output_barcodes">
                <assert_contents>
                    <has_size value="745808" delta="5000"/>
                </assert_contents>
            </output>
            <output name="output_logs">
                <assert_contents>
                    <has_size value="21310" delta="5000"/>
                </assert_contents>
            </output>
            <output name="output_log">
                <assert_contents>
                    <has_n_lines n="12"/>
                    <has_line line="TruSPAdes launch successfully finished"/>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[
.. class:: infomark

**What it does**

@HELP_WID@

truSPAdes is a subtool for short reads produced by Illumina TruSeq Long Read technology. 

**Input**

TruSPAdes accepts as an input demultiplexed TruSeq reads. A detailed description can be found in the `input section <http://cab.spbu.ru/files/release@TOOL_VERSION@/truspades_manual.html#sec1.2>`_ of the manual.

**Output**

- Assembled long virtual reads
- Compressed set of output files for separate barcodes
- Log files

A detailed description can be found in the `output section <http://cab.spbu.ru/files/release@TOOL_VERSION@/truspades_manual.html#sec3.2>`_ of the manual.

**References**

More information can be found on `github <https://github.com/ablab/spades>`_ and in the the `manual <http://cab.spbu.ru/files/release@TOOL_VERSION@/truspades_manual.html>`_.
    ]]></help>
    <expand macro="citations">
        <citation type="doi">10.1038/nmeth.3737</citation>
    </expand>
</tool>