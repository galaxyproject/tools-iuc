<tool id="spades" name="SPAdes" version="@TOOL_VERSION@+@WRAPPER_VERSION@">
    <description>@DESCRIPTION@ genomes of regular and single-cell projects</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <expand macro="stdio"/>
    <command detect_errors="exit_code"><![CDATA[
        ## initialize

        ## run
        spades.py
        ## files
        #for $i, $library in enumerate( $lib_rep, start=1)
            #if str( $library.lib_sel ) == "paired_end"
                #set prefix = 'pe'
            #elif str( $library.lib_sel ) == "mate_paired"
                #set prefix = 'mp'
            #elif str( $library.lib_sel ) == "nxmate_paired"
                #set prefix = 'nxmate'
            #else
                #set prefix = 'hqmp'
            #end if
            --$prefix$i-$library.orientation
            #for $file in $library.file_rep
                #if $file.file_cond.file_sel == "separate"
                    --$prefix$i-1 $file.file_cond.fwd_reads.extension.replace('fastqsanger', 'fastq'):$file.file_cond.fwd_reads
                    --$prefix$i-2 $file.file_cond.fwd_reads.extension.replace('fastqsanger', 'fastq'):$file.file_cond.rev_reads
                #elif $file.file_cond.file_sel == "interleaved"
                    --$prefix$i-12 $file.file_cond.interleaved_reads.extension.replace('fastqsanger', 'fastq'):$file.file_cond.interleaved_reads
                #elif $file.file_cond.file_sel == "merged"
                    --$prefix$i-m $file.file_cond.merged_reads.extension.replace('fastqsanger', 'fastq'):$file.file_cond.merged_reads
                #elif $file.file_cond.file_sel == "unpaired"
                    --$prefix$i-s $file.file_cond.unpaired_reads.extension.replace('fastqsanger', 'fastq'):$file.file_cond.unpaired_reads
                #elif $file.file_cond.file_sel == "paired-collection"
                    --$prefix$i-1 $file.file_cond.fastq_collection.forward.extension.replace('fastqsanger', 'fastq'):$file.file_cond.fastq_collection.forward
                    --$prefix$i-2 $file.file_cond.fastq_collection.reverse.extension.replace('fastqsanger', 'fastq'):$file.file_cond.fastq_collection.reverse
                #end if
            #end for
        #end for

        ## parameters
        -o ./output
        -t \${GALAXY_SLOTS:-4}
        -m \${GALAXY_MEMORY_GB:-8}
        --disable-gzip-output
        $disablerr
        $iontorrent
        $sc
        #if $kmer_cond.kmer_sel != 'auto'
            -k '$kmer_cond.manual'
        #end if
        #if $phredoffset != 'auto'
            --phred-offset $phredoffset
        #end if

        #if 'a' in str($mode_sel)
            --only-assembler
        #end if
        #if 'c' in str($mode_sel)
            --careful
        #end if
        #if 'e' in str($mode_sel)
            --only-error-correction
        #end if
        #if 'i' in str($mode_sel)
            --isolate
        #end if

        #if $cov_cond.cov_sel == "auto":
            --cov-cutoff 'auto'
        #elif $cov_cond.cov_sel == "value":
            --cov-cutoff '$select_cov.manual'
        #end if

        ## additional inputs
        #for $file in $ai.sanger
            #if $file
                --sanger $file.extension.replace('fastqsanger', 'fastq'):$file
            #end if
        #end for
        #for $file in $ai.pacbio
            #if $file
                --pacbio fastq:$file
            #end if
        #end for
        #for $file in $ai.nanopore
            #if $file
                --nanopore fastq:$file
            #end if
        #end for
        #for $file in $ai.tslr
            #if $file:
                --tslr $file.extension.replace('fastqsanger', 'fastq'):$file
            #end if
        #end for
        #for $file in $ai.trustedcontigs
            #if $file:
                --trusted-contigs $file.extension.replace('fastqsanger', 'fastq'):$file
            #end if
        #end for
        #for $file in $ai.untrustedcontigs
            #if $file:
                --untrusted-contigs $file.extension.replace('fastqsanger', 'fastq'):$file
            #end if
        #end for

        ## output options
        #if $oo.contigstats
            && python '$write_tsv_script' < 'output/contigs.fasta' > '$out_contigstats'
        #end if
        #if $oo.scaffoldstats
            && python '$write_tsv_script' < 'output/scaffolds.fasta' > '$out_scaffoldstats'
        #end if
    ]]></command>
    <configfiles>
        <!-- parse config.fasta and scaffolds.fasta and create $out_configstats and $out_scaffoldstats -->
        <expand macro="config_script"/>
    </configfiles>
    <inputs>
        <repeat name="lib_rep" min="1" max="9" title="Libraries" help="">
            <param name="lib_sel" type="select" label="Type" >
                <option value="paired_end">Paired-end / Single reads</option>
                <option value="mate_paired">Mate pairs</option>
                <option value="high_mate_paired">High Quality Mate pairs</option>
                <option value="nxmate_paired">Lucigen NxMate pairs</option>
            </param>
            <param name="orientation" type="select" label="Orientation" >
                <option selected="true" value="fr"><![CDATA[-> <- (fr)]]></option>
                <option value="rf"><![CDATA[<- -> (rf)]]></option>
                <option value="ff"><![CDATA[-> -> (ff)]]></option>
            </param>
            <repeat name="file_rep" min="1" title="Files">
                <conditional name="file_cond">
                    <param name="file_sel" type="select" label="Select file format">
                        <option value="separate">Separate input files</option>
                        <option value="interleaved">Interleaved files</option>
                        <option value="merged">Merged files</option>
                        <option value="unpaired">Unpaired/Single reads</option>
                        <option value="paired-collection">Paired List Collection</option>
                    </param>
                    <when value="separate">
                        <param name="fwd_reads" type="data" format="@INTYPES@" help="FASTQ format" label="Forward reads"/>
                        <param name="rev_reads" type="data" format="@INTYPES@" help="FASTQ format" label="Reverse reads"/>
                    </when>
                    <when value="interleaved">
                        <param name="interleaved_reads" type="data" format="@INTYPES@" help="FASTQ format" label="Interleaved paired reads"/>
                    </when>
                    <when value="merged">
                        <param name="merged_reads" type="data" format="@INTYPES@" help="FASTQ format" label="Merged paired reads"/>
                    </when>
                    <when value="unpaired">
                        <param name="unpaired_reads" type="data" format="@INTYPES@" help="FASTQ format" label="Unpaired reads"/>
                    </when>
                    <when value="paired-collection">
                        <param name="fastq_collection" type="data_collection" collection_type="paired" format="@INTYPES@" optional="false" help="FASTQ format" label="Paired-end reads collection"/>
                    </when>
                </conditional>
            </repeat>
        </repeat>

        <param name="mode_sel" type="select" label="Select mode(s)" help="(--careful, --isolate, --only-error-correction, --only-assembler, ">
            <option value="x">Complete (Assembler and Error correction)</option>
            <option value="xi">Complete (Assembler and Error correction) in isolate mode</option>
            <option value="a">Assembler</option>
            <option value="ai">Assembler in isolate mode</option>
            <option value="ac">Assembler in careful mode</option>
            <option value="e">Error correction</option>
            <option value="c">Careful mode</option>
        </param>
        <conditional name="kmer_cond">
            <param name="kmer_sel" type="select" label="Set k-mer value" help="Comma-separated list, all values must be odd, less than 128 and listed in ascending order. If --sc is set the default values are 21,33,55.">
                <option value="auto">Auto</option>
                <option value="manual">User specific</option>
            </param>
            <when value="auto"/>
            <when value="manual">
                <param name="manual" type="text" value="21,33,55" label="Values"/>
            </when>        
        </conditional>        
        <param argument="--phred-offset" name="phredoffset" type="select" label="PHRED quality offset in the input reads" help="">
            <option value="auto" selected="true">Auto</option>
            <option value="33">33 (Sanger)</option>
            <option value="64">64 (Illumina)</option>
        </param>
        <param argument="--disable-rr" name="disablerr" type="boolean" truevalue="--disable-rr" falsevalue="" checked="False" label="Disables repeat resolution stage of assembling" help=""/>
        <param argument="--iontorrent" type="boolean" truevalue="--iontorrent" falsevalue="" checked="false" label="IonTorrent data" help=""/>
        <param argument="--sc" type="boolean" truevalue="--sc" falsevalue="" label="MDA (single-cell) data" help="This option is required for MDA (single-cell) data."/>
        <conditional name="cov_cond">
            <param name="cov_sel" type="select" label="Set coverage cutoff">
                <option value="off">Off</option>
                <option value="auto">Auto</option>
                <option value="value">User specific</option>
            </param>
            <when value="off"/>
            <when value="auto"/>
            <when value="value">
                <param name="manual" type="float" min="0.0" value="" label="Value" help=""/>
            </when>
        </conditional>

        <section name="ai" title="Additional input(s)">
            <param argument="--sanger" optional="true" type="data" format="@INTYPES@" multiple="true" label="Sanger reads" help=""/>
            <param argument="--trusted-contigs" name="trustedcontigs" type="data" optional="true" format="@INTYPES@" multiple="true" label="Trusted contigs" help=""/>
            <param argument="--untrusted-contigs" name="untrustedcontigs" type="data" optional="true" format="@INTYPES@" multiple="true" label="Untrusted contigs" help=""/>
            <param argument="--pacbio" optional="true" type="data" format="@INTYPES@" multiple="true" label="PacBio CLR reads" help=""/>
            <param argument="--nanopore" optional="true" type="data" format="@INTYPES@" multiple="true" label="Nanopore reads" help=""/>
            <param argument="--tslr" optional="true" type="data" format="@INTYPES@" multiple="true" label="TSLR-contigs" help=""/>
        </section>

        <section name="oo" title="Output options" expanded="false">
            <param name="contiggraph" type="boolean" checked="False" label="Final assembly graph (contigs)" help="(assembly_graph.fastg)"/>
            <param name="scaffoldgraph" type="boolean" checked="true" label="Final assembly graph with scaffolds" help="(assembly_graph_with_scaffolds.gfa)"/>
            <param name="log" type="boolean" checked="true" label="Log file" help=""/> 
            <param name="contigstats" type="boolean" checked="False" label="Contigs stats" help=""/>
            <param name="scaffoldstats" type="boolean" checked="False" label="Scaffold stats" help=""/>            
        </section>
    </inputs>
    <outputs>
        <data name="out_contigs" format="fasta" from_work_dir="output/contigs.fasta" label="${tool.name} on ${on_string}: contigs (fasta)"/>
        <data name="out_scaffolds" format="fasta" from_work_dir="output/scaffolds.fasta" label="${tool.name} on ${on_string}: scaffolds (fasta)"/>
        <data name="out_contigstats" format="tabular" label="${tool.name} on ${on_string}: contig stats">
            <actions>
                <action name="column_names" type="metadata" default="name,length,coverage"/>
            </actions>
            <filter>oo['contigstats']</filter>
        </data>
        <data name="out_scaffoldstats" format="tabular" label="${tool.name} on ${on_string}: scaffold stats">
            <actions>
                <action name="column_names" type="metadata" default="name,length,coverage"/>
            </actions>
            <filter>oo['scaffoldstats']</filter>
        </data>
        <data name="out_contiggraph" format="fastg" from_work_dir="output/assembly_graph.fastg" label="${tool.name} on ${on_string}: assembly graph (fastg)">
            <filter>oo['contiggraph']</filter>
        </data>
        <data name="out_scaffoldgraph" format="txt" from_work_dir="output/assembly_graph_with_scaffolds.gfa" label="${tool.name} on ${on_string}: assembly graph with scaffolds (gfa)">
            <filter>oo['scaffoldgraph']</filter>
        </data>
        <data name="out_log" format="txt" from_work_dir="output/spades.log" label="${tool.name} on ${on_string}: log">
            <filter>oo['log']</filter>
        </data>
    </outputs>        
    <tests>
        <!-- #1 - #7; paired_end, different modes -->
        <test expect_num_outputs="7">
            <expand macro="spades_test1" mode="x"/>
            <output name="out_contigs">
                <assert_contents>
                    <has_text_matching expression=">NODE_1"/>
                </assert_contents>
            </output>
            <output name="out_contigstats">
                <assert_contents>
                    <has_text_matching expression="NODE_1\t1000"/>
                </assert_contents>
            </output>
            <output name="out_contiggraph">
                <assert_contents>
                    <has_text text=">EDGE_"/>
                </assert_contents>
            </output>
            <output name="out_scaffoldgraph">
                <assert_contents>
                    <has_text text="NODE_"/>
                </assert_contents>
            </output>
        </test>
        <test expect_num_outputs="7">
            <expand macro="spades_test1" mode="xi"/>
            <output name="out_contigs">
                <assert_contents>
                    <has_text_matching expression=">NODE_1"/>
                </assert_contents>
            </output>
            <output name="out_contigstats">
                <assert_contents>
                    <has_text_matching expression="NODE_1\t1000"/>
                </assert_contents>
            </output>
            <output name="out_contiggraph">
                <assert_contents>
                    <has_text text=">EDGE_"/>
                </assert_contents>
            </output>
            <output name="out_scaffoldgraph">
                <assert_contents>
                    <has_text text="NODE_"/>
                </assert_contents>
            </output>
        </test>
        <test expect_num_outputs="7">
            <expand macro="spades_test1" mode="a"/>
            <output name="out_contigs">
                <assert_contents>
                    <has_text_matching expression=">NODE_1"/>
                </assert_contents>
            </output>
            <output name="out_contigstats">
                <assert_contents>
                    <has_text_matching expression="NODE_1\t1000"/>
                </assert_contents>
            </output>
            <output name="out_contiggraph">
                <assert_contents>
                    <has_text text=">EDGE_"/>
                </assert_contents>
            </output>
            <output name="out_scaffoldgraph">
                <assert_contents>
                    <has_text text="NODE_"/>
                </assert_contents>
            </output>
        </test>
        <test expect_num_outputs="7">
            <expand macro="spades_test1" mode="ai"/>
            <output name="out_contigs">
                <assert_contents>
                    <has_text_matching expression=">NODE_1"/>
                </assert_contents>
            </output>
            <output name="out_contigstats">
                <assert_contents>
                    <has_text_matching expression="NODE_1\t1000"/>
                </assert_contents>
            </output>
            <output name="out_contiggraph">
                <assert_contents>
                    <has_text text=">EDGE_"/>
                </assert_contents>
            </output>
            <output name="out_scaffoldgraph">
                <assert_contents>
                    <has_text text="NODE_"/>
                </assert_contents>
            </output>
        </test>
        <test expect_num_outputs="7">
            <expand macro="spades_test1" mode="ac"/>
            <output name="out_contigs">
                <assert_contents>
                    <has_text_matching expression=">NODE_1"/>
                </assert_contents>
            </output>
            <output name="out_contigstats">
                <assert_contents>
                    <has_text_matching expression="NODE_1\t1000"/>
                </assert_contents>
            </output>
            <output name="out_contiggraph">
                <assert_contents>
                    <has_text text=">EDGE_"/>
                </assert_contents>
            </output>
            <output name="out_scaffoldgraph">
                <assert_contents>
                    <has_text text="NODE_"/>
                </assert_contents>
            </output>
        </test>
        <test expect_num_outputs="7">
            <expand macro="spades_test1" mode="e"/>
            <output name="out_contigstats">
                <assert_contents>
                    <has_text_matching expression="NODE_1\t1000"/>
                </assert_contents>
            </output>
            <output name="out_contiggraph">
                <assert_contents>
                    <has_text text=">EDGE_"/>
                </assert_contents>
            </output>
            <output name="out_scaffoldgraph">
                <assert_contents>
                    <has_text text="NODE_"/>
                </assert_contents>
            </output>
        </test>
        <test expect_num_outputs="7">
            <expand macro="spades_test1" mode="c"/>
            <output name="out_contigs">
                <assert_contents>
                    <has_text_matching expression=">NODE_1"/>
                </assert_contents>
            </output>
            <output name="out_contigstats">
                <assert_contents>
                    <has_text_matching expression="NODE_1\t1000"/>
                </assert_contents>
            </output>
            <output name="out_contiggraph">
                <assert_contents>
                    <has_text text=">EDGE_"/>
                </assert_contents>
            </output>
            <output name="out_scaffoldgraph">
                <assert_contents>
                    <has_text text="NODE_"/>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[
.. class:: infomark

**What it does**

...




*Input*

...

*Ouput*

...

.. class:: infomark

**References**

...
    ]]></help>

    <expand macro="citations"/>
</tool>