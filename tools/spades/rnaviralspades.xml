<tool id="spades_rnaviralspades" name="rnaviralSPAdes" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@">
    <description>genome assembler for RNA virus</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <expand macro="stdio"/>
    <expand macro="version_command"/>
    <command detect_errors="exit_code"><![CDATA[
## libcount: single library|multiple libraries
## filetype: interlaced|separate|merged|unpaired files
## readtype: s (single-read)|pe (paired-end)|mp (mate-pair)|hqmp (high quality mate-pair)|nxmate (lucigen) reads
## _rep = <repeat>, _cond = <conditional>, _sel = <select>

## libcount_cond
##  libcount_sel (single|multiple)
##  ## single
##  file_rep -> file
##   filetype_cond
##    filetype_sel (interlaced|separate|merged|unpaired)
##    fwd_reads,rev_reads|reads ## fwd_reads, rev_reads only for separate
##  ## multiple
##  lib_rep -> library
##   (pe|mp|hqmp)_orientation
##   file_rep -> file
##    readtype_cond
##     readtype_sel -> (s (single-read)|pe (paired-end)|mp (mate-pair)|hqmp (high quality mate-pair)|nxmate (lucigen))
##     reads ## only s
##     fwd_reads,rev_reads ## only nxmate
##     filetype_cond ## only pe, mp, hqmp
##      filetype_sel (interlaced|separate|merged|unpaired) ## merged only for pe
##      fwd_reads,rev_reads|reads ## fwd_reads, rev_reads only for separate

## init
#set $concat = ''
#set $currentParam = ''
#set $currentFile = ''
#if $libcount_cond.libcount_sel == 'single'
    #for $i, $file in enumerate($libcount_cond.file_rep, 1)
        #if $file.filetype_cond.filetype_sel == 'separate'
            #set $currentParam = '-1'
            #set $currentFile = $file.filetype_cond.fwd_reads
            @SET_FILENAME_SINGLE@
            #set $currentParam = '-2'
            #set $currentFile = $file.filetype_cond.rev_reads
            #@SET_FILENAME_SINGLE@
        #else
            #if $file.filetype_cond.filetype_sel == 'interlaced'
                #set $currentParam = '--12'
            #elif $file.filetype_cond.filetype_sel == 'merged'
                #set $currentParam = '--merged'
            #elif $file.filetype_cond.filetype_sel == 'unpaired'
                #set $currentParam = '-s'
            #end if
            #set $currentFile = $file.filetype_cond.reads
            @SET_FILENAME_SINGLE@
        #end if
    #end for
#elif $libcount_cond.libcount_sel == 'multiple'
    #for $i, $library in enumerate($libcount_cond.lib_rep, 1)
        #set $concat += '--pe' + str($i) + str($library.pe_orientation) + ' '
        #set $concat += '--mp' + str($i) + str($library.mp_orientation) + ' '
        #set $concat += '--hqmp' + str($i) + str($library.hqmp_orientation) + ' '
        #for $j, $file in enumerate($library.file_rep, 1)
            #set $currentPrefix = '--' + str($file.readtype_cond.readtype_sel) ## s, pe, mp, hqmp, nxmate
            #if $currentPrefix == '--s'
                #set $currentParam = ''
                #set $currentFile = $file.readtype_cond.reads
                @SET_FILENAME_MULTIPLE@
            #elif $currentPrefix == '--pe' or $currentPrefix == '--mp' or $currentPrefix == '--hqmp'
                #if $file.readtype_cond.filetype_cond.filetype_sel == 'separate'
                    #set $currentParam = '-1'
                    #set $currentFile = $file.readtype_cond.filetype_cond.fwd_reads
                    @SET_FILENAME_MULTIPLE@
                    #set $currentParam = '-2'
                    #set $currentFile = $file.readtype_cond.filetype_cond.rev_reads
                    @SET_FILENAME_MULTIPLE@
                #else
                    #if $file.readtype_cond.filetype_cond.filetype_sel == 'interlaced'
                        #set $currentParam = '-12'
                    #elif $file.readtype_cond.filetype_cond.filetype_sel == 'merged'
                        #set $currentParam = '-m'
                    #elif $file.readtype_cond.filetype_cond.filetype_sel == 'unpaired'
                        #set $currentParam = '-s'
                    #end if
                    #set $currentFile = $file.readtype_cond.filetype_cond.reads
                    @SET_FILENAME_MULTIPLE@
                #end if
            #elif $currentPrefix == '--nxmate'
                #set $currentParam = '-1'
                #set $currentFile = $file.readtype_cond.fwd_reads
                @SET_FILENAME_MULTIPLE@
                #set $currentParam = '-2'
                #set $currentFile = $file.readtype_cond.rev_reads
                @SET_FILENAME_MULTIPLE@
            #end if
        #end for
    #end for
#end if

## run
spades.py --rnaviral
    -o 'output'    
    @THREADS@
    @MEMORY@
    ## reads
    $concat
    @NANOPORE@
    @PACBIO@
    @SANGER@
    @TRUSTEDCONTIGS@
    @TSLR@
    @UNTRUSTEDCONTIGS@
    ## parameter
    @KMER@
    @MODE@
    @PHREDOFFSET@    

## postprocessing
@STATS@
@CORRECTED@
    ]]></command>
    <configfiles>
        <!-- parse config.fasta and scaffolds.fasta and create $out_configstats and $out_scaffoldstats -->
        <expand macro="config_script"/>
    </configfiles>
    <inputs>
        <conditional name="libcount_cond">
            <param name="libcount_sel" type="select" label="Library mode">
                <option value="single">Single</option>
                <option value="multiple">Multiple</option>
            </param>
            <when value="single">
                <repeat name="file_rep" min="1" title="Read file">
                    <conditional name="filetype_cond">
                        <expand macro="filetype_sel">
                            <option value="merged">Merged (--merged)</option>
                        </expand>
                        <expand macro="filetype_sel_when">
                            <when value="merged">
                                <expand macro="reads" label="merged" help="(--merged)"/>
                            </when>
                        </expand>
                    </conditional>
                </repeat>
            </when>
            <when value="multiple">
                <repeat name="lib_rep" min="1" max="9" title="Library">
                    <!-- ignored if no corresponding read files are used -->
                    <expand macro="orientation" type="pe" label="paired-end" fr="true"/>
                    <expand macro="orientation" type="mp" label="mate-pair" rf="true"/>
                    <expand macro="orientation" type="hqmp" label="high-quality mate-pair" fr="true"/>
                    <repeat name="file_rep" min="1" title="Files">
                        <conditional name="readtype_cond">
                            <param name="readtype_sel" type="select" label="Select read type">
                                <option value="s">Single-read (--s)</option>
                                <option value="pe">Paired-end (--pe)</option>
                                <option value="mp">Mate-pair (--mp)</option>
                                <option value="hqmp">High-quality mate-pair (--hqmp)</option>
                                <option value="nxmate">Lucigen NxSeq long-mate-pair (--nxmate)</option>
                            </param>
                            <when value="s">
                                <expand macro="reads" label="single" help="(--s)"/>
                            </when>
                            <when value="pe">
                                <conditional name="filetype_cond">
                                    <expand macro="filetype_sel">
                                        <option value="merged">Merged (-m)</option>
                                    </expand>
                                    <expand macro="filetype_sel_when">
                                        <when value="merged">
                                            <expand macro="reads" label="merged" help="(-m)"/>
                                        </when>
                                    </expand>
                                </conditional>
                            </when>
                            <when value="mp">
                                <conditional name="filetype_cond">
                                    <expand macro="filetype_sel"/>
                                    <expand macro="filetype_sel_when"/>
                                </conditional>
                            </when>
                            <when value="hqmp">
                                <conditional name="filetype_cond">
                                    <expand macro="filetype_sel"/>
                                    <expand macro="filetype_sel_when"/>
                                </conditional>
                            </when>
                            <when value="nxmate">
                                <expand macro="reads" paramname="fwd_reads" label="forward" help="(-1)"/>
                                <expand macro="reads" paramname="rev_reads" label="reverse" help="(-2)"/>
                            </when>
                        </conditional>
                    </repeat>
                </repeat>
            </when>
        </conditional>
        <section name="arf" title="Additional read files">
            <expand macro="nanopore"/>
            <expand macro="pacbio"/>
            <expand macro="sanger"/>
            <expand macro="trusted_contigs"/>
            <expand macro="tslr"/>
            <expand macro="untrusted_contigs"/>
        </section>
        <expand macro="pipeline_options">
            <option value="--iontorrent">Iontorrent: required when assembling IonTorrent data (--iontorrent)</option>
        </expand>
        <expand macro="kmer"/>        
        <expand macro="phred"/>
        <expand macro="optional_output"/>
    </inputs>
    <outputs>
        <expand macro="out_ag"/>
        <expand macro="out_ags"/>
        <expand macro="out_cn"/>
        <expand macro="out_cp"/>
        <expand macro="out_cr"/>
        <expand macro="out_cs"/>
        <expand macro="out_l"/>
        <expand macro="out_sc"/>
        <expand macro="out_sp"/>
        <expand macro="out_ss"/>        
    </outputs>
    <tests>
        <!--
        used in a test:
            single library: 12, 1, 2
            multiple libraries: s, pe#-12, pe#-1, pe#-2, pe#-<or>
            k, phred-offset, disablerr, iontorrent, careful, isolate, only-assembler, only-error-correction, sc

        not used in a test:
            single library: merged, s
            multiple libraries: pe#-m, pe#-s, mp#-12, mp#-1, mp#-2, mp#-<or>, mp#-s, hqmp#-12, hqmp#-1, hqmp#-2, hqmp#-s, hqmp#-<or>, nxmate#-1, nxmate-#2
            pacbio, nanopore, sanger, trusted-contigs, untrusted-contigs, tslr
        -->

        <!-- #1 single, interlaced, fastq.gz, default parameters -->
        <test expect_num_outputs="4">
            <conditional name="libcount_cond">
                <param name="libcount_sel" value="single"/>
                <repeat name="file_rep">
                    <conditional name="filetype_cond">
                        <param name="filetype_sel" value="interlaced"/>
                        <param name="reads" value="ecoli_1K.fastq.gz"/>
                    </conditional>
                </repeat>
            </conditional>
            <output name="out_ag">
                <assert_contents>
                    <has_n_lines n="36"/>
                    <has_text_matching expression=">EDGE\_3\_length.+"/>
                </assert_contents>
            </output>
            <output name="out_ags">
                <assert_contents>
                    <has_n_lines n="2"/>
                    <has_text_matching expression="S.+"/>
                </assert_contents>
            </output>
            <output name="out_cn">
                <assert_contents>
                    <has_n_lines n="18"/>
                    <has_text_matching expression=">NODE\_1\_length\_1000\_cov\_.+"/>
                </assert_contents>
            </output>
            <output name="out_sc">
                <assert_contents>
                    <has_n_lines n="18"/>
                    <has_text_matching expression=">NODE\_1\_length\_1000.+"/>
                </assert_contents>
            </output>
        </test>
        <!-- #2 single, separate, fastq, all outputs -->
        <test expect_num_outputs="10">
            <conditional name="libcount_cond">
                <param name="libcount_sel" value="single"/>
                <repeat name="file_rep">
                    <conditional name="filetype_cond">
                        <param name="filetype_sel" value="separate"/>
                        <param name="fwd_reads" value="ecoli_1K_1.fastq.gz"/>
                        <param name="rev_reads" value="ecoli_1K_2.fastq.gz"/>
                    </conditional>
                </repeat>
            </conditional>
            <conditional name="cov_cond">
                <param name="cov_cutoff" value="auto"/>
            </conditional>
            <param name="mode_sel" value="--disable-rr,--iontorrent"/>
            <param name="phred_offset" value="33"/>
            <param name="optional_output" value="ag,ags,cn,cp,cs,cr,sc,sp,ss,l"/>
            <output name="out_ag">
                <assert_contents>
                    <has_n_lines n="36"/>
                    <has_text_matching expression=">EDGE.+"/>
                </assert_contents>
            </output>
            <output name="out_ags">
                <assert_contents>
                    <has_n_lines n="1"/>
                    <has_text_matching expression="S.+"/>
                </assert_contents>
            </output>
            <output name="out_cn">
                <assert_contents>
                    <has_n_lines n="18"/>
                    <has_text_matching expression=">NODE.+"/>
                </assert_contents>
            </output>
            <output name="out_cp">
                <assert_contents>
                    <has_n_lines n="0"/>
                </assert_contents>
            </output>
            <output_collection name="out_cr" type="list" count="2">
                <element name="1-1.fastq0_0.cor">
                    <assert_contents>
                        <has_size value="34468" delta="1000"/>
                    </assert_contents>
                </element>
                <element name="1-1.fastq0_0.cor">
                    <assert_contents>
                        <has_size value="34468" delta="1000"/>
                    </assert_contents>
                </element>
            </output_collection>
            <output name="out_cs">
                <assert_contents>
                    <has_n_lines n="2"/>
                    <has_text_matching expression="#name&#009;length&#009;coverage"/>
                    <has_text_matching expression="NODE_1&#009;1000.+"/>
                </assert_contents>
            </output>
            <output name="out_l">
                <assert_contents>
                    <has_text_matching expression="Thank you for using SPAdes!"/>
                </assert_contents>
            </output>
            <output name="out_sc">
                <assert_contents>
                    <has_n_lines n="0"/>
                </assert_contents>
            </output>
            <output name="out_sp">
                <assert_contents>
                    <has_n_lines n="0"/>
                </assert_contents>
            </output>
            <output name="out_ss">
                <assert_contents>
                    <has_n_lines n="0"/>
                </assert_contents>
            </output>
        </test>
        <!-- #3 single, separate, fasta, default parameters -->
        <test expect_num_outputs="4">
            <conditional name="libcount_cond">
                <param name="libcount_sel" value="single"/>
                <repeat name="file_rep">
                    <conditional name="filetype_cond">
                        <param name="filetype_sel" value="separate"/>
                        <param name="fwd_reads" value="ecoli_1K_1.fastq.gz"/>
                        <param name="rev_reads" value="ecoli_1K_2.fastq.gz"/>
                    </conditional>
                </repeat>
            </conditional>
            <output name="out_ag">
                <assert_contents>
                    <has_n_lines n="36"/>
                    <has_text_matching expression=">EDGE_3_length_1000_cov_163.370137"/>
                </assert_contents>
            </output>
            <output name="out_ags">
                <assert_contents>
                    <has_n_lines n="2"/>
                    <has_text_matching expression="S.+"/>
                </assert_contents>
            </output>
            <output name="out_cn">
                <assert_contents>
                    <has_n_lines n="18"/>
                    <has_text_matching expression=">NODE\_1\_length\_1000\_cov\_.+"/>
                </assert_contents>
            </output>
            <output name="out_sc">
                <assert_contents>
                    <has_n_lines n="18"/>
                    <has_text_matching expression=">NODE\_1\_length\_1000.+"/>
                </assert_contents>
            </output>
        </test>
        <!-- #4 multiple, single & paired-end within same library -->
        <test expect_num_outputs="4">
            <conditional name="libcount_cond">
                <param name="libcount_sel" value="multiple"/>
                <repeat name="lib_rep">
                    <repeat name="file_rep">
                        <conditional name="readtype_cond">
                            <param name="readtype_sel" value="s"/>
                            <param name="reads" value="ecoli_1K.fastq.gz"/>
                        </conditional>
                    </repeat>
                    <repeat name="file_rep">
                        <param name="pe_orientation" value="-fr"/>
                        <conditional name="readtype_cond">
                            <param name="readtype_sel" value="pe"/>
                            <conditional name="filetype_cond">
                                <param name="filetype_sel" value="separate"/>
                                <param name="fwd_reads" value="ecoli_1K_1.fastq.gz"/>
                                <param name="rev_reads" value="ecoli_1K_2.fastq.gz"/>
                            </conditional>
                        </conditional>
                    </repeat>
                </repeat>
            </conditional>
            <output name="out_ag">
                <assert_contents>
                    <has_n_lines n="36"/>
                    <has_text_matching expression=">EDGE_.+"/>
                </assert_contents>
            </output>
            <output name="out_ags">
                <assert_contents>
                    <has_n_lines n="2"/>
                    <has_text_matching expression="S.+"/>
                </assert_contents>
            </output>
            <output name="out_cn">
                <assert_contents>
                    <has_n_lines n="18"/>
                    <has_text_matching expression=">NODE\_1\_length\_1000\_cov\_.+"/>
                </assert_contents>
            </output>
            <output name="out_sc">
                <assert_contents>
                    <has_n_lines n="18"/>
                    <has_text_matching expression=">NODE\_1\_length\_1000.+"/>
                </assert_contents>
            </output>
        </test>
        <!-- #5 multiple, single & paired-end in different libraries -->
        <test expect_num_outputs="4">
            <conditional name="libcount_cond">
                <param name="libcount_sel" value="multiple"/>
                <repeat name="lib_rep">
                    <repeat name="file_rep">
                        <conditional name="readtype_cond">
                            <param name="readtype_sel" value="s"/>
                            <param name="reads" value="ecoli_1K.fastq.gz"/>
                        </conditional>
                    </repeat>
                </repeat>
                <repeat name="lib_rep">
                    <repeat name="file_rep">
                        <conditional name="readtype_cond">
                            <param name="readtype_sel" value="pe"/>
                            <conditional name="filetype_cond">
                                <param name="filetype_sel" value="separate"/>
                                <param name="fwd_reads" value="ecoli_1K_1.fastq.gz"/>
                                <param name="rev_reads" value="ecoli_1K_2.fastq.gz"/>
                            </conditional>
                        </conditional>
                    </repeat>
                </repeat>
            </conditional>
            <output name="out_ag">
                <assert_contents>
                    <has_n_lines n="36"/>
                    <has_text_matching expression=">EDGE_3_length_1000_cov_326.740273"/>
                </assert_contents>
            </output>
            <output name="out_ags">
                <assert_contents>
                    <has_n_lines n="2"/>
                    <has_text_matching expression="S.+"/>
                </assert_contents>
            </output>
            <output name="out_cn">
                <assert_contents>
                    <has_n_lines n="18"/>
                    <has_text_matching expression=">NODE\_1\_length\_1000\_cov\_.+"/>
                </assert_contents>
            </output>
            <output name="out_sc">
                <assert_contents>
                    <has_n_lines n="18"/>
                    <has_text_matching expression=">NODE\_1\_length\_1000.+"/>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[
.. class:: infomark

**What it does**

@HELP_WID@

rnaviralSPAdes is a pipeline specially designed for de novo assembler tailored for RNA viral datasets (transcriptome, metatranscriptome and metavirome).

**Input**

@HELP_IN@

**Output**

@HELP_OUT_AG@
@HELP_OUT_AGS@
@HELP_OUT_C@
@HELP_OUT_CP@
@HELP_OUT_CR@
@HELP_OUT_CS@
@HELP_OUT_L@
@HELP_OUT_S@
@HELP_OUT_SP@
@HELP_OUT_SS@


-------------------

.. class:: infomark

**IonTorrent data**

@IONTORRENT@

-------------------

.. class:: infomark

**References**

More information are available on `github <https://github.com/ablab/spades>`_ and on the `project website <http://cab.spbu.ru/software/spades>`_.
    ]]></help>
    <expand macro="citations"/>
</tool>
