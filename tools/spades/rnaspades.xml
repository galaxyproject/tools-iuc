<tool id="spades_rnaspades" name="rnaSPAdes" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@">
    <description>de novo transcriptome assembler</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <expand macro="stdio"/>
    <expand macro="version_command"/>
    <command detect_errors="exit_code"><![CDATA[

#if $singlePaired.sPaired == "single"
    mkdir -p single_reads &&
    #set file_paths = []
    #for $input_file in $singlePaired.input1
        #set $fname = $input_file.element_identifier.replace("fastqsanger","fastq")
        #set $file_path = 'single_reads/' + str($fname)
        ln -s '$input_file' $file_path &&
        $file_paths.append($file_path)
    #end for
#else if $singlePaired.sPaired == "paired"
    mkdir -p paired_reads &&
    #set fw_reads = []
    #for $input_file in $singlePaired.input1
        #set fname = $input_file.element_identifier.replace("fastqsanger","fastq")
        #set $file_path = 'paired_reads/' + str($fname)
        ln -s '$input_file' $file_path &&
        $fw_reads.append($file_path)
    #end for
    #set rv_reads = []
    #for $input_file in $singlePaired.input2
        #set fname = $input_file.element_identifier.replace("fastqsanger","fastq")
        #set $file_path = 'paired_reads/' + str($fname)
        ln -s '$input_file' $file_path &&
        $rv_reads.append($file_path)
    #end for
    #silent $fw_reads.sort()
    #silent $rv_reads.sort()
#else if $singlePaired.sPaired == "paired_interlaced"
    mkdir -p interlaced_reads &&
    #set file_paths = []
    #for $input_file in $singlePaired.input1
        #set $fname = $input_file.element_identifier.replace("fastqsanger","fastq")
        #set $file_path = 'interlaced_reads/' + str($fname)
        ln -s '$input_file' $file_path &&
        $file_paths.append($file_path)
    #end for
#else
    mkdir -p paired_reads &&
    #set fw_reads = []
    #set rv_reads = []
    #for $i, $input_file in enumerate($singlePaired.input)
        #set $ext = $input_file.forward.ext.replace('fastqsanger', 'fastq')
        #set $file_path = 'paired_reads/fw' + str($i) + '.' + $ext
        ln -s '$input_file.forward' $file_path &&
        $fw_reads.append($file_path)
        #set $file_path = 'paired_reads/rv' + str($i) + '.' + $ext
        ln -s '$input_file.reverse' $file_path &&
        $rv_reads.append($file_path)
    #end for
#end if




## run
rnaspades.py
    -o 'output'    
    @RESOURCES@
    ## reads
    #if $singlePaired.sPaired == "single"
        #for $i, $read in enumerate($file_paths, 1)
            --s ${i} '${read}'
        #end for
    #else if  $singlePaired.sPaired == "paired"
        #for $i, $read in enumerate($fw_reads, 1)
            --pe-1 ${i} '${read}'
        #end for
        #for $i, $read in enumerate($rv_reads, 1)
            --pe-2 ${i} '${read}'
        #end for
    #else
        #for $i, $read in enumerate($fw_reads, 1)
            --pe-1 ${i} '${read}'
        #end for
        #for $i, $read in enumerate($rv_reads, 1)
            --pe-2 ${i} '${read}'
        #end for
    #end if
    #for $read in $arf.flrna
        #if $read
            --fl-rna $read.datatype.file_ext.replace('fastqsanger', 'fastq')
        #end if
    #end for
    @NANOPORE@
    @PACBIO@
    @TRUSTEDCONTIGS@
    @UNTRUSTEDCONTIGS@
    ## parameter
    @KMER@
    @PIPELINE_OPTIONS@
    @PHREDOFFSET@
    #if $ss != 'no'
        --ss '$ss'
    #end if
    ## postprocessing
    @CORRECTED@
    ]]></command>
    <inputs>
        <!--
        <conditional name="libcount_cond">
            <param name="libcount_sel" type="select" label="Library mode">
                <option value="single">Single</option>
                <option value="multiple">Multiple</option>
            </param>
            <when value="single">
                <repeat name="file_rep" min="1" title="Read file">
                    <conditional name="filetype_cond">
                        <expand macro="filetype_sel">
                            <option value="merged">Merged (-\-merged)</option>
                        </expand>
                        <expand macro="filetype_sel_when">
                            <when value="merged">
                                <expand macro="reads" label="merged" help="(-\-merged)"/>
                            </when>
                        </expand>
                    </conditional>
                </repeat>
            </when>
            <when value="multiple">
                <repeat name="lib_rep" min="1" max="9" title="Library">
                    <!-\- ignored if no corresponding read files are used in this library repeat
                    <expand macro="orientation" type="pe" label="paired-end" fr="true"/>
                    <repeat name="file_rep" min="1" title="Files">
                        <conditional name="readtype_cond">
                            <param name="readtype_sel" type="select" label="Select read type">
                                <option value="s">Single-read (-\-s)</option>
                                <option value="pe">Paired-end (-\-pe)</option>
                            </param>
                            <when value="s">
                                <expand macro="reads" label="single" help="(-\-s)"/>
                            </when>
                            <when value="pe">
                                <conditional name="filetype_cond">
                                    <expand macro="filetype_sel">
                                        <option value="merged">Merged (-m)</option>
                                    </expand>
                                    <expand macro="filetype_sel_when">
                                        <when value="merged">
                                            <expand macro="reads" label="merged" help="(-m)"/>
                                        </when>
                                    </expand>
                                </conditional>
                            </when>
                        </conditional>
                    </repeat>
                </repeat>
            </when>
        </conditional>
        -->
        <conditional name="singlePaired">
            <param name="sPaired" type="select" label="Single-end or paired-end reads">
                <option value="single" selected="true">Single-end</option>
                <option value="paired">Paired-end: individual datasets</option>
                <option value="paired_interlaced">Paired-end: interlaced reads</option>
                <option value="paired_collection">Paired-end: list of dataset pairs</option>
            </param>
            <when value="single">
                <param format="fastq,fasta,fastq.gz,fastqsanger.gz" name="input1" type="data"  multiple="true" label="RNA-Seq FASTQ/FASTA file"/>
            </when>
            <when value="paired">
                <param format="fastq,fasta,fastq.gz,fastqsanger.gz" name="input1" type="data" multiple="true" label="RNA-Seq FASTQ/FASTA file, forward reads"/>
                <param format="fastq,fasta,fastq.gz,fastqsanger.gz" name="input2" type="data" multiple="true" label="RNA-Seq FASTQ/FASTA file, reverse reads"/>
            </when>
            <when value="paired_interlaced">
                <param format="fastq,fasta,fastq.gz,fastqsanger.gz" name="input1" type="data"  multiple="true" label="RNA-Seq FASTQ/FASTA file"/>
            </when>
            <when value="paired_collection">
                <param format="fastq,fasta,fastq.gz,fastqsanger.gz" name="input" type="data_collection" collection_type="list:paired" label="RNA-Seq FASTQ/FASTA paired reads"/>
            </when>
        </conditional>
        <section name="arf" title="Additional read files">
            <param argument="--fl-rna" name="flrna" type="data" format="@INTYPES@" multiple="true" optional="true" label="Select file with PacBio/Nanopore/contigs that capture full-length transcripts" help="In addition to long reads, you may also provide a separate file with reads capturing the entire transcript sequences using this option. Full-length transcripts in such reads can be typically detected using the adapters. Note, that FL reads should be trimmed so that the adapters are excluded."/>
            <expand macro="nanopore"/>
            <expand macro="pacbio"/>
            <expand macro="trusted_contigs"/>
            <expand macro="untrusted_contigs"/>
        </section>
        <expand macro="kmer" help="By default rnaSPAdes uses 2 k-mer sizes, which are automatically detected using read length (approximately one third and half of the maximal read length). We recommend not to change this parameter because smaller k-mer sizes typically result in multiple chimeric (misassembled) transcripts."/>
        <expand macro="phred"/>
        <param argument="--ss" type="select" label="Set strand specificity" help="rnaSPAdes supports strand-specific RNA-Seq datasets. Use 'rf' when first read in pair corresponds to reverse gene strand (antisense data, e.g. obtained via dUTP protocol) and 'fr' otherwise (forward).  If the dataset is single-end use fr option in case when reads correspond to gene strand and rf otherwise. Note, that strand-specificity is not related and should not be confused with FR and RF orientation of paired reads. RNA-Seq paired-end reads typically have forward-reverse orientation, which is assumed by default and no additional options are needed">
            <option value="no" selected="true">no</option>
            <option value="fr">fr (normal)</option>
            <option value="rf">rf (antisense)</option>
        </param>
        <expand macro="pipeline_options">
            <option value="--iontorrent">Iontorrent: although rnaSPAdes supports IonTorrent reads, it was not sufficiently tested on such kind of data (--iontorrent)</option>
        </expand>
        <param name="optional_output" type="select" multiple="true" optional="false" label="Select optional output file(s)" help="Only shown in history if selected here and generated by the specific run.">
            <option value="hft">Hard filtered transcripts</option>
            <option value="l">Log</option>
            <option value="sft">Soft filtered transcripts</option>
            <option value="tr" selected="true">Transcripts</option>
            <option value="tp">Transcripts paths</option>
        </param>
    </inputs>
    <outputs>
        <expand macro="out_cr"/>
        <data name="out_hft" format="fasta" from_work_dir="output/hard_filtered_transcripts.fasta" label="${tool.name} on ${on_string}: Hard filtered transcripts">
            <filter>'hft' in optional_output</filter>
        </data>
        <expand macro="out_l"/>
        <data name="out_sft" format="fasta" from_work_dir="output/soft_filtered_transcripts.fasta" label="${tool.name} on ${on_string}: Soft filtered transcripts">
            <filter>'sft' in optional_output</filter>
        </data>
        <data name="out_tr" format="fasta" from_work_dir="output/transcripts.fasta" label="${tool.name} on ${on_string}: Transcripts">
            <filter>'tr' in optional_output</filter>
        </data>
        <data name="out_tp" format="txt" from_work_dir="output/transcripts.paths" label="${tool.name} on ${on_string}: Transcripts paths">
            <filter>'tp' in optional_output</filter>
        </data>
    </outputs>
    <tests>
        <!--
        used in a test:
            single library: 12, 1, 2
            k, phred-offset, disablerr, iontorrent, only-assembler, ss

        not used in a test:
            single library: merged, s
            pacbio, nanopore, trusted-contigs, untrusted-contigs, fl-rna
        -->

        <!-- #1 -->
        <test expect_num_outputs="1">
            <conditional name="singlePaired">
                <param name="sPaired" value="paired_interlaced"/>
                <param name="input1" value="ecoli_1K.fastq.gz"/>
            </conditional>
            <output name="out_tr">
                <assert_contents>
                    <has_n_lines n="18"/>
                    <has_text_matching expression=">NODE\_1\_length\_1000.+"/>
                </assert_contents>
            </output>
        </test>
        <!-- #2 single, separate, fastq, all outputs custom parameters-->
        <test expect_num_outputs="5">
            <conditional name="singlePaired">
                <param name="sPaired" value="paired"/>
                <param name="input1" value="ecoli_1K_1.fastq.gz"/>
                <param name="input2" value="ecoli_1K_2.fastq.gz"/>
            </conditional>
            <param name="phred_offset" value="33"/>
            <param name="ss" value="fr"/>
            <param name="optional_output" value="hft,l,sft,tr,tp"/>
            <output name="out_hft">
                <assert_contents>
                    <has_n_lines n="18"/>
                </assert_contents>
            </output>
            <output name="out_sft">
                <assert_contents>
                    <has_n_lines n="18"/>
                </assert_contents>
            </output>
            <output name="out_tr">
                <assert_contents>
                    <has_n_lines n="18"/>
                </assert_contents>
            </output>
            <output name="out_tp">
                <assert_contents>
                    <has_n_lines n="4"/>
                </assert_contents>
            </output>
            <output name="out_l">
                <assert_contents>
                    <has_text_matching expression="Thank you for using SPAdes!"/>
                </assert_contents>
            </output>
        </test>
        <!-- #3 single, separate, fasta, default parameters -->
        <test expect_num_outputs="1">
            <conditional name="singlePaired">
                <param name="sPaired" value="paired"/>
                <param name="input1" value="ecoli_1K_1.fasta.gz"/>
                <param name="input1" value="ecoli_1K_2.fasta.gz"/>
            </conditional>
            <output name="out_tr">
                <assert_contents>
                    <has_n_lines n="18"/>
                    <has_text_matching expression=">NODE\_1\_length\_1000.+"/>
                </assert_contents>
            </output>
        </test>

    </tests>
    <help><![CDATA[
.. class:: infomark

**What it does**

@HELP_WID@

rnaSPAdes is a subtool for de novo transcriptome assembly from RNA-Seq data and is suitable for all kind of organisms.

**Input**

rnaSPAdes take as an input at least one paired-end or single-end library. For hybrid assembly you can use PacBio or Oxford Nanopore reads.

In case you have sequenced several RNA-Seq libraries using the same protocol from different tissues / conditions, and the goal as to assemble a total transcriptome, 
we suggest to provide all files as a single library. Note, that sequencing using the same protocol implies that the resulting reads have the same length, insert size 
and strand-specificity. Transcript quantification for each sample can be done afterwards by separately mapping reads from each library to the assembled transcripts.

**Output**

@HELP_OUT_AG@
@HELP_OUT_AGS@
@HELP_OUT_CR@
- Hard filtered transcripts includes only long and reliable transcripts with rather high expression
@HELP_OUT_L@
- Soft filtered transcripts includes short and low-expressed transcipts, likely to contain junk sequences
- Transcripts
- Transcripts paths

.. class:: infomark

**References**

More information can be found on on `github <https://github.com/ablab/spades>`_ and on the `project website <http://cab.spbu.ru/software/rnaspades>`_.
    ]]></help>
    <expand macro="citations">
        <citation type="doi">10.1101/420208</citation>
    </expand>
</tool>
