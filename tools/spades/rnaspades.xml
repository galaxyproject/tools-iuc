<tool id="rnaspades" name="rnaSPAdes" version="@TOOL_VERSION@+@WRAPPER_VERSION@">
    <description>@DESCRIPTION@ RNA-Seq data</description>    
    
    <macros>
        <import>macros.xml</import>
    </macros>

    <expand macro="requirements" />

    <expand macro="stdio"/>

    <command detect_errors="exit_code"><![CDATA[
        ## initialize: rnaspades
        ## recommended option for k-mer selection is 'auto'
        ## (see http://spades.bioinf.spbau.ru/release3.11.1/rnaspades_manual.html#sec2.1)
        ## and the corresponding function checks for .fq filetype extension
        ## see function get_max_reads_length() in spades/assembler/src/spades_pipeline/support.py 
        #for $i, $library in enumerate($libraries, start=1) 
            #for $j, $file in enumerate($library.files)
                #if $file.filetype.type == "separate":
                    ln -s '$file.filetype.fwd_reads' ./input_sample_${i}_${j}_fwd.fq && 
                    ln -s '$file.filetype.rev_reads' ./input_sample_${i}_${j}_rev.fq && 
                #elif $file.filetype.type == "interleaved":
                    ln -s '$file.filetype.interleaved_reads' ./input_sample_${i}_${j}_interleaved.fq &&
                #elif $file.filetype.type == "unpaired":
                    ln -s '$file.filetype.unpaired_reads' ./input_sample_${i}_${j}_unpaired.fq &&
                #elif $file.filetype.type == "paired-collection":
                    ln -s '$file.filetype.fastq_collection.forward' ./input_sample_${i}_${j}_collection_fwd.fq &&
                    ln -s '$file.filetype.fastq_collection.reverse' ./input_sample_${i}_${j}_collection_rev.fq &&
                #end if
            #end for
        #end for

        ## run: rnaspades
        rnaspades.py
            ## files
            #for $i, $library in enumerate( $libraries, start=1)
                @LIBTYPE_SPADES-PLASMID-META-RNA@                
                #end if
                --$prefix$i-$library.orientation            
                #for $j, $file in enumerate($library.files)
                    #if $file.filetype.type == "separate":
                        --$prefix$i-1 fastq:./input_sample_${i}_${j}_fwd.fq
                        --$prefix$i-2 fastq:./input_sample_${i}_${j}_rev.fq
                    #elif $file.filetype.type == "interleaved":
                        --$prefix$i-12 fastq:./input_sample_${i}_${j}_interleaved.fq
                    #elif $file.filetype.type == "unpaired":
                        --$prefix$i-s fastq:./input_sample_${i}_${j}_unpaired.fq
                    #elif $file.filetype.type == "paired-collection":
                        --$prefix$i-1 fastq:./input_sample_${i}_${j}_collection_fwd.fq
                        --$prefix$i-2 fastq:./input_sample_${i}_${j}_collection_rev.fq
                    #end if
                #end for
            #end for   
            ## shared parameter
            @PARAM_ALL@ 
            @PARAM_SPADES-PLASMID-RNA@
            @PARAM_SPADES-PLASMID-META-RNA@
            ## specific parameter
            $fast
            #if $ss != 'no'
                --ss-$ss
            #end if    
    ]]></command>

    <inputs>
        <!-- files -->
        <repeat name="libraries" min="1" max="9" title="Libraries" help="">
            <param name="libtype" type="select" label="Type" >
                <expand macro="in_libtype_spades_plasmid_meta_rna"/>
            </param>
            <expand macro="in_files"/>
        </repeat>
        <!-- shared parameter -->
        <expand macro="in_param_spades_plasmid_meta_rna"/>
        <expand macro="in_param_spades_plasmid_rna"/>
        <!-- specific parameter -->
        <param argument="--fast" type="boolean" truevalue="--fast" falsevalue="" checked="false" label="Speed up isoform detection stage" help="by removing short low-covered isolated edges from the graph. Note, that short low-expressed transcripts may be missing when this option is used."/>
        <param argument="--ss" type="select" label="Strand specific dataset" help="fr: The data set is strand-specific and first read in pair corresponds to actual gene strand; rf: The data set is strand-specific and first read in pair corresponds to reverse gene strand; If the data set is single-end use --ss-fr option in case when reads correspond to gene strand and --ss-rf otherwise.">
            <option value="no" selected="true">no</option>
            <option value="fr">fr (normal)</option>
            <option value="rf">rf (antisense)</option>
        </param>
        <!-- output options -->
        <section name="in_outoptions" title="Set optional outputs" expanded="false">
            <expand macro="in_outoptions_spades_plasmid_meta_rna"/>            
        </section>       
    </inputs>

    <outputs>
        <data name="output_transcripts" format="fasta" from_work_dir="output/transcripts.fasta" label="rnaSPAdes transcripts"/>
        <data name="output_transcripts_hard" format="fasta" from_work_dir="output/hard_filtered_transcripts.fasta" label="Hard filtered rnaSPAdes transcripts"/>
        <data name="output_transcripts_soft" format="fasta" from_work_dir="output/soft_filtered_transcripts.fasta" label="Soft filtered rnaSPAdes transcripts"/>
        <expand macro="out_spades_plasmid_meta_rna"/>
    </outputs>

    <tests>
        <test>
            <param name="type" value="separate" />
            <param name="fwd_reads" ftype="fastq" value="ecoli_1K_1.fq"/>
            <param name="rev_reads" ftype="fastq" value="ecoli_1K_2.fq"/>
            <output name="output_transcripts" file="transcripts.fasta" ftype="fasta" compare="re_match" lines_diff="1"/>
            <output name="output_transcripts_hard" file="hard_filtered_transcripts.fasta" ftype="fasta" compare="re_match" lines_diff="1"/>
            <output name="output_transcripts_soft" file="soft_filtered_transcripts.fasta" ftype="fasta" compare="re_match" lines_diff="1"/>
        </test>
        <!--
        <test>
            <expand macro="test_filetypes_rna" filetype="fastq" fileext="fq"/>        
        </test> -->
    </tests>

    <help><![CDATA[
.. class:: infomark

**What it does**

rnaSPAdes comes as a part of `SPAdes <http://cab.spbu.ru/software/spades/>`_ and is a tool for de novo transcriptome assembly from RNA-Seq data and is suitable for all kind of organisms.

More information can be found on the `project website <http://cab.spbu.ru/software/rnaspades/>`_, in the `manual <http://cab.spbu.ru/files/release@TOOL_VERSION@/rnaspades_manual.html>`_ and on `github <https://github.com/ablab/spades>`_.

@HELP_ACKNOWLEDGMENTS@
    ]]></help>

    <expand macro="citations">
        <citation type="doi">10.1101/420208</citation>
    </expand>
</tool>