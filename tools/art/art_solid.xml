<tool id="art_solid" name="ART SOLiD" version="2014.11.03.0">
  <description>simulates SOLiD data</description>
  <macros>
      <import>macros.xml</import>
  </macros>
  <expand macro="requirements"/>
  <expand macro="stdio" />
  <command><![CDATA[
art_SOLiD

    $sam

    #if $rndSeed and $rndSeed > -1:
        -r $rndSeed
    #end if

    #if $generate.amplicon.use_amplicon == "amplicon_true":
        -A

        #if $generate.choice == "single_end":
            s
        #else if $generate.choice == "paired_end":
            p
        #else:
            m
        #end if

    #end if

    '$input_seq_file'
    output

    #if $generate.choice == "single_end":
        $generate.LEN_READ
        $fold_coverage
    #else if $generate.choice == "paired_end":
        $generate.LEN_READ_F3
        $generate.LEN_READ_F5
        $fold_coverage
        $generate.fragment_size
        $generate.fragment_sd
    #else:
        $generate.LEN_READ
        $fold_coverage
        $generate.fragment_size
        $generate.fragment_sd
    #end if

    #if $generate.amplicon.use_amplicon == "amplicon_true":
        #if $generate.choice == "single_end":
            $generate.amplicon.reads_per_amplicon
        #else:
            $generate.amplicon.read_pairs_per_amplicon
        #end if
    #end if

]]></command>
  <inputs>
    <param label="DNA/RNA reference sequence" format="fasta" name="input_seq_file" type="data"/>
    <param label="the fold of read coverage over the reference sequences" name="fold_coverage" type="integer" value="20"/>

    <conditional name="generate">
        <param name="choice" type="select" label="Type of data to generate">
            <option value="single_end">Single-End</option>
            <option value="paired_end">Paired-End</option>
            <option value="paired_end">Mate Pair</option>
        </param>
        <when value="single_end">
            <param name="LEN_READ" type="integer" label="Length of F3/R3 reads" value="100" />
            <expand macro="amplicon" />
        </when>
        <when value="paired_end">
            <param name="LEN_READ_F3" type="integer" label="Length of F3 reads" value="100" />
            <param name="LEN_READ_F5" type="integer" label="Length of F5 reads" value="100" />
            <expand macro="frag_len_sd" />
            <expand macro="amplicon_pair" />
        </when>
        <when value="mate_pair">
            <param name="LEN_READ" type="integer" label="Length of F3/R3 reads" value="100" />
            <expand macro="frag_len_sd" />
            <expand macro="amplicon_pair" />
        </when>
    </conditional>

    <expand macro="sam" />
    <expand macro="rndSeed" />

  </inputs>
  <outputs>

        <!-- Single End -->
        <data format="fastq" name="output_fq1_single" from_work_dir="output.fq" label="Simulated of SOLiD sequencing of $input_seq_file.name">
            <filter>generate['choice'] == "single_end"</filter>
        </data>

        <!-- Paired End -->
        <data format="fastq" name="output_fq1_paired" from_work_dir="output_F3.fq" label="Simulated of SOLiD sequencing of $input_seq_file.name (F3)">
            <filter>generate['choice'] == "paired_end"</filter>
        </data>
        <data format="fastq" name="output_fq2_paired" from_work_dir="output_F5.fq" label="Simulated of SOLiD sequencing of $input_seq_file.name (F5)">
            <filter>generate['choice'] == "paired_end"</filter>
        </data>

        <!-- Mate Pair -->
        <data format="fastq" name="output_fq1_mate" from_work_dir="output_F3.fq" label="Simulated of SOLiD sequencing of $input_seq_file.name (Forward)">
            <filter>generate['choice'] == "mate_pair"</filter>
        </data>
        <data format="fastq" name="output_fq2_mate" from_work_dir="output_R3.fq" label="Simulated of SOLiD sequencing of $input_seq_file.name (Reverse)">
            <filter>generate['choice'] == "mate_pair"</filter>
        </data>

        <data format="sam" name="output_sam" from_work_dir="output.sam" label="Mapping of Simulated SOLiD data to $input_seq_file.name">
            <filter>sam</filter>
        </data>
        <!-- todo? map file -->
  </outputs>
  <tests>
      <!--  Single End tests -->
      <test>
          <param name="rndSeed" value="42" />
          <param name="input_seq_file" value="input.fa" />
          <param name="LEN_READ" value="25" />
          <param name="fold_coverage" value="10" />
          <param name="choice" value="single_end" />
          <param name="sam" value="False" />

          <output name="output_fq1_single" file="art.solid.01.fq" compare="sim_size" delta="5000" />
      </test>
      <test>
          <param name="rndSeed" value="42" />
          <param name="input_seq_file" value="input.fa" />
          <param name="fold_coverage" value="20" />
          <param name="choice" value="paired_end" />
          <param name="LEN_READ_F3" value="50" />
          <param name="LEN_READ_F5" value="50" />
          <param name="fragment_size" value="75" />
          <param name="fragment_sd" value="10" />
          <param name="sam" value="True" />

          <output name="output_fq1_paired" file="art.solid.02_F3.fq" compare="sim_size" delta="5000" />
          <output name="output_fq2_paired" file="art.solid.02_F5.fq" compare="sim_size" delta="5000" />
          <output name="output_sam" file="art.solid.02.sam" compare="sim_size" delta="5000"/>
      </test>
  </tests>
  <help><![CDATA[
Art SOLiD Simulator
===================

ART_SOLiD  is a simulation program to generate sequence read data of SOLiD
sequencing reads. ART generates reads according to a SOLiD read error profile.
The built-in error profile is an empiricial error profile summarized from large
SOLiD sequencing data. ART has been using for testing or benchmarking a variety
of method or tools for next-generation sequencing data analysis, including read
alignment, de novo assembly, detection of SNP, CNV, or other structure
variation.

art_SOLiD can generate both single-end, matepair, and paired-end of SOLiD
sequencing platform. art_SOLiD also support amplicon sequencing simulation with
RNA references.
      ]]></help>
  <expand macro="citation" />
</tool>

