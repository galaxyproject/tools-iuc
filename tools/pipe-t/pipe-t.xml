<?xml version="1.0"?>
<tool id="pipe-t" name="PIPE-T" version="1.0" hidden="false">
  <description>A tool for analyzing RTqPCR expression data </description>
  <requirements>
    <requirement type="package" version="3.5.0">r-base</requirement>
    <requirement type="package" version="7.2.0">libgcc</requirement>
    <requirement type="package" version="1.36.0">bioconductor-htqpcr</requirement>
    <requirement type="package" version="3.8.0">bioconductor-rankprod</requirement>
    <requirement type="package" version="1.56.0">bioconductor-impute</requirement>
    <requirement type="package" version="1.11.0">r-bbmisc</requirement>
    <requirement type="package" version="1.8.4">r-psych</requirement>
    <requirement type="package" version="1.8_3">r-zoo</requirement>
    <requirement type="package" version="1.28.0">bioconductor-normqpcr </requirement>
  </requirements>
  <stdio>
    <exit_code range="1:" />
  </stdio>
  <command>
    <![CDATA[
    #for $input in $dp.list_files
    ln -sf '$input' '$__tool_directory__/Symlink/${input.element_identifier}';
    #end for

    #if str( $dn.condNorm.normMethod ) == "deltaCt":
        #if str( $dn.condNorm.deltamethod.format ) == "userdefined":
          #if str( $df.condImpute.format ) == "mestdagh" or str( $df.condImpute.format ) == "mean" or str( $df.condImpute.format ) == "median" or str( $df.condImpute.format ) == "cubic":
              #if str( $de.condDEA.method ) == "ttest":
                  Rscript $__tool_directory__/pipe-t.R $dp.files "$dp.formatFile" $dp.n $galaxy_output1 "$__tool_directory__/Symlink" $dc.Ctmin $dc.Ctmax $dc.flag $galaxy_output2 $dn.condNorm.normMethod "$dn.condNorm.deltamethod.format" "$dn.condNorm.deltamethod.normalizers" $galaxy_output3 $galaxy_output4 $df.percent $galaxy_output5 $df.condImpute.format $galaxy_output6 $de.condDEA.method $de.condDEA.alternative $de.condDEA.paired $de.condDEA.replicates $de.condDEA.sort $de.condDEA.stringent $de.condDEA.padjust $galaxy_output7 "$df.filtname";
              #end if
              #if str( $de.condDEA.method ) == "wtest":
                  Rscript $__tool_directory__/pipe-t.R $dp.files "$dp.formatFile" $dp.n $galaxy_output1 "$__tool_directory__/Symlink" $dc.Ctmin $dc.Ctmax $dc.flag $galaxy_output2 $dn.condNorm.normMethod "$dn.condNorm.deltamethod.format" "$dn.condNorm.deltamethod.normalizers" $galaxy_output3 $galaxy_output4 $df.percent $galaxy_output5 $df.condImpute.format $galaxy_output6 $de.condDEA.method $de.condDEA.alternative $de.condDEA.paired $de.condDEA.replicates $de.condDEA.sort $de.condDEA.stringent $de.condDEA.padjust $galaxy_output7 "$df.filtname";
              #end if
              #if str( $de.condDEA.method ) == "rp":
                  Rscript $__tool_directory__/pipe-t.R $dp.files "$dp.formatFile" $dp.n $galaxy_output1 "$__tool_directory__/Symlink" $dc.Ctmin $dc.Ctmax $dc.flag $galaxy_output2 $dn.condNorm.normMethod "$dn.condNorm.deltamethod.format" "$dn.condNorm.deltamethod.normalizers"  $galaxy_output3 $galaxy_output4 $df.percent $galaxy_output5 $df.condImpute.format $galaxy_output6 $de.condDEA.method $galaxy_output7 "$df.filtname";
              #end if
              #if str( $de.condDEA.method ) == "none":
                  Rscript $__tool_directory__/pipe-t.R $dp.files "$dp.formatFile" $dp.n $galaxy_output1 "$__tool_directory__/Symlink" $dc.Ctmin $dc.Ctmax $dc.flag $galaxy_output2 $dn.condNorm.normMethod "$dn.condNorm.deltamethod.format" "$dn.condNorm.deltamethod.normalizers"  $galaxy_output3 $galaxy_output4 $df.percent $galaxy_output5 $df.condImpute.format $galaxy_output6 $de.condDEA.method $galaxy_output7 "$df.filtname";
              #end if
          #end if

          #if str( $df.condImpute.format ) == "knn":
              #if str( $de.condDEA.method ) == "ttest":
                    Rscript $__tool_directory__/pipe-t.R $dp.files "$dp.formatFile" $dp.n $galaxy_output1 "$__tool_directory__/Symlink" $dc.Ctmin $dc.Ctmax $dc.flag $galaxy_output2 $dn.condNorm.normMethod "$dn.condNorm.deltamethod.format" "$dn.condNorm.deltamethod.normalizers"  $galaxy_output3 $galaxy_output4 $df.percent $galaxy_output5 $df.condImpute.format $df.condImpute.k $df.condImpute.maxp $galaxy_output6 $de.condDEA.method $de.condDEA.alternative $de.condDEA.paired $de.condDEA.replicates $de.condDEA.sort $de.condDEA.stringent $de.condDEA.padjust $galaxy_output7 "$df.filtname";
              #end if
              #if str( $de.condDEA.method ) == "wtest":
                    Rscript $__tool_directory__/pipe-t.R $dp.files "$dp.formatFile" $dp.n $galaxy_output1 "$__tool_directory__/Symlink" $dc.Ctmin $dc.Ctmax $dc.flag $galaxy_output2 $dn.condNorm.normMethod "$dn.condNorm.deltamethod.format" "$dn.condNorm.deltamethod.normalizers"  $galaxy_output3 $galaxy_output4 $df.percent $galaxy_output5 $df.condImpute.format $df.condImpute.k $df.condImpute.maxp $galaxy_output6 $de.condDEA.method $de.condDEA.alternative $de.condDEA.paired $de.condDEA.replicates $de.condDEA.sort $de.condDEA.stringent $de.condDEA.padjust $galaxy_output7 "$df.filtname";
              #end if
              #if str( $de.condDEA.method ) == "rp":
                    Rscript $__tool_directory__/pipe-t.R $dp.files "$dp.formatFile" $dp.n $galaxy_output1 "$__tool_directory__/Symlink" $dc.Ctmin $dc.Ctmax $dc.flag $galaxy_output2 $dn.condNorm.normMethod "$dn.condNorm.deltamethod.format" "$dn.condNorm.deltamethod.normalizers"  $galaxy_output3 $galaxy_output4 $df.percent $galaxy_output5 $df.condImpute.format $df.condImpute.k $df.condImpute.maxp $galaxy_output6 $de.condDEA.method $galaxy_output7 "$df.filtname";
              #end if
               #if str( $de.condDEA.method ) == "none":
                    Rscript $__tool_directory__/pipe-t.R $dp.files "$dp.formatFile" $dp.n $galaxy_output1 "$__tool_directory__/Symlink" $dc.Ctmin $dc.Ctmax $dc.flag $galaxy_output2 $dn.condNorm.normMethod "$dn.condNorm.deltamethod.format" "$dn.condNorm.deltamethod.normalizers" $galaxy_output3 $galaxy_output4 $df.percent $galaxy_output5 $df.condImpute.format $df.condImpute.k $df.condImpute.maxp $galaxy_output6 $de.condDEA.method $galaxy_output7 "$df.filtname";
              #end if
          #end if
        #end if
        #if str( $dn.condNorm.deltamethod.format ) == "genorm":
            #if str( $df.condImpute.format ) == "mestdagh" or str( $df.condImpute.format ) == "mean" or str( $df.condImpute.format ) == "median" or str( $df.condImpute.format ) == "cubic":
                #if str( $de.condDEA.method ) == "ttest":
                    Rscript $__tool_directory__/pipe-t.R $dp.files "$dp.formatFile" $dp.n $galaxy_output1 "$__tool_directory__/Symlink" $dc.Ctmin $dc.Ctmax $dc.flag $galaxy_output2 $dn.condNorm.normMethod "$dn.condNorm.deltamethod.format" $dn.condNorm.deltamethod.minhkgenorm $galaxy_output3 $galaxy_output4 $df.percent $galaxy_output5 $df.condImpute.format $galaxy_output6 $de.condDEA.method $de.condDEA.alternative $de.condDEA.paired $de.condDEA.replicates $de.condDEA.sort $de.condDEA.stringent $de.condDEA.padjust $galaxy_output7 "$df.filtname";
                #end if
                 #if str( $de.condDEA.method ) == "wtest":
                    Rscript $__tool_directory__/pipe-t.R $dp.files "$dp.formatFile" $dp.n $galaxy_output1 "$__tool_directory__/Symlink" $dc.Ctmin $dc.Ctmax $dc.flag $galaxy_output2 $dn.condNorm.normMethod "$dn.condNorm.deltamethod.format" $dn.condNorm.deltamethod.minhkgenorm $galaxy_output3 $galaxy_output4 $df.percent $galaxy_output5 $df.condImpute.format $galaxy_output6 $de.condDEA.method $de.condDEA.alternative $de.condDEA.paired $de.condDEA.replicates $de.condDEA.sort $de.condDEA.stringent $de.condDEA.padjust $galaxy_output7 "$df.filtname";
                #end if
                #if str( $de.condDEA.method ) == "rp":
                    Rscript $__tool_directory__/pipe-t.R $dp.files "$dp.formatFile" $dp.n $galaxy_output1 "$__tool_directory__/Symlink" $dc.Ctmin $dc.Ctmax $dc.flag $galaxy_output2 $dn.condNorm.normMethod "$dn.condNorm.deltamethod.format" $dn.condNorm.deltamethod.minhkgenorm $galaxy_output3 $galaxy_output4 $df.percent $galaxy_output5 $df.condImpute.format $galaxy_output6 $de.condDEA.method $galaxy_output7 "$df.filtname";
                #end if
                #if str( $de.condDEA.method ) == "none":
                    Rscript $__tool_directory__/pipe-t.R $dp.files "$dp.formatFile" $dp.n $galaxy_output1 "$__tool_directory__/Symlink" $dc.Ctmin $dc.Ctmax $dc.flag $galaxy_output2 $dn.condNorm.normMethod "$dn.condNorm.deltamethod.format" $dn.condNorm.deltamethod.minhkgenorm  $galaxy_output3 $galaxy_output4 $df.percent $galaxy_output5 $df.condImpute.format $galaxy_output6 $de.condDEA.method $galaxy_output7 "$df.filtname";
                #end if
            #end if

            #if str( $df.condImpute.format ) == "knn":
                #if str( $de.condDEA.method ) == "ttest":
                      Rscript $__tool_directory__/pipe-t.R $dp.files "$dp.formatFile" $dp.n $galaxy_output1 "$__tool_directory__/Symlink" $dc.Ctmin $dc.Ctmax $dc.flag $galaxy_output2 $dn.condNorm.normMethod "$dn.condNorm.deltamethod.format" $dn.condNorm.deltamethod.minhkgenorm  $galaxy_output3 $galaxy_output4 $df.percent $galaxy_output5 $df.condImpute.format $df.condImpute.k $df.condImpute.maxp $galaxy_output6 $de.condDEA.method $de.condDEA.alternative $de.condDEA.paired $de.condDEA.replicates $de.condDEA.sort $de.condDEA.stringent $de.condDEA.padjust $galaxy_output7 "$df.filtname";
                #end if
                 #if str( $de.condDEA.method ) == "wtest":
                      Rscript $__tool_directory__/pipe-t.R $dp.files "$dp.formatFile" $dp.n $galaxy_output1 "$__tool_directory__/Symlink" $dc.Ctmin $dc.Ctmax $dc.flag $galaxy_output2 $dn.condNorm.normMethod "$dn.condNorm.deltamethod.format" $dn.condNorm.deltamethod.minhkgenorm  $galaxy_output3 $galaxy_output4 $df.percent $galaxy_output5 $df.condImpute.format $df.condImpute.k $df.condImpute.maxp $galaxy_output6 $de.condDEA.method $de.condDEA.alternative $de.condDEA.paired $de.condDEA.replicates $de.condDEA.sort $de.condDEA.stringent $de.condDEA.padjust $galaxy_output7 "$df.filtname";
                #end if
                #if str( $de.condDEA.method ) == "rp":
                      Rscript $__tool_directory__/pipe-t.R $dp.files "$dp.formatFile" $dp.n $galaxy_output1 "$__tool_directory__/Symlink" $dc.Ctmin $dc.Ctmax $dc.flag $galaxy_output2 $dn.condNorm.normMethod "$dn.condNorm.deltamethod.format" $dn.condNorm.deltamethod.minhkgenorm  $galaxy_output3 $galaxy_output4 $df.percent $galaxy_output5 $df.condImpute.format $df.condImpute.k $df.condImpute.maxp $galaxy_output6 $de.condDEA.method $galaxy_output7 "$df.filtname";
                #end if
                 #if str( $de.condDEA.method ) == "none":
                      Rscript $__tool_directory__/pipe-t.R $dp.files "$dp.formatFile" $dp.n $galaxy_output1 "$__tool_directory__/Symlink" $dc.Ctmin $dc.Ctmax $dc.flag $galaxy_output2 $dn.condNorm.normMethod "$dn.condNorm.deltamethod.format" $dn.condNorm.deltamethod.minhkgenorm $galaxy_output3 $galaxy_output4 $df.percent $galaxy_output5 $df.condImpute.format $df.condImpute.k $df.condImpute.maxp $galaxy_output6 $de.condDEA.method $galaxy_output7 "$df.filtname";
                #end if
            #end if
          #end if
          #if str( $dn.condNorm.deltamethod.format ) == "normfinder":
              #if str( $df.condImpute.format ) == "mestdagh" or str( $df.condImpute.format ) == "mean" or str( $df.condImpute.format ) == "median" or str( $df.condImpute.format ) == "cubic":
                  #if str( $de.condDEA.method ) == "ttest":
                      Rscript $__tool_directory__/pipe-t.R $dp.files "$dp.formatFile" $dp.n $galaxy_output1 "$__tool_directory__/Symlink" $dc.Ctmin $dc.Ctmax $dc.flag $galaxy_output2 $dn.condNorm.normMethod "$dn.condNorm.deltamethod.format" $dn.condNorm.deltamethod.minhknormfinder $galaxy_output3 $galaxy_output4 $df.percent $galaxy_output5 $df.condImpute.format $galaxy_output6 $de.condDEA.method $de.condDEA.alternative $de.condDEA.paired $de.condDEA.replicates $de.condDEA.sort $de.condDEA.stringent $de.condDEA.padjust $galaxy_output7 "$df.filtname";
                  #end if
                   #if str( $de.condDEA.method ) == "wtest":
                      Rscript $__tool_directory__/pipe-t.R $dp.files "$dp.formatFile" $dp.n $galaxy_output1 "$__tool_directory__/Symlink" $dc.Ctmin $dc.Ctmax $dc.flag $galaxy_output2 $dn.condNorm.normMethod "$dn.condNorm.deltamethod.format" $dn.condNorm.deltamethod.minhknormfinder $galaxy_output3 $galaxy_output4 $df.percent $galaxy_output5 $df.condImpute.format $galaxy_output6 $de.condDEA.method $de.condDEA.alternative $de.condDEA.paired $de.condDEA.replicates $de.condDEA.sort $de.condDEA.stringent $de.condDEA.padjust $galaxy_output7 "$df.filtname";
                  #end if
                  #if str( $de.condDEA.method ) == "rp":
                      Rscript $__tool_directory__/pipe-t.R $dp.files "$dp.formatFile" $dp.n $galaxy_output1 "$__tool_directory__/Symlink" $dc.Ctmin $dc.Ctmax $dc.flag $galaxy_output2 $dn.condNorm.normMethod "$dn.condNorm.deltamethod.format" $dn.condNorm.deltamethod.minhknormfinder $galaxy_output3 $galaxy_output4 $df.percent $galaxy_output5 $df.condImpute.format $galaxy_output6 $de.condDEA.method $galaxy_output7 "$df.filtname";
                  #end if
                  #if str( $de.condDEA.method ) == "none":
                      Rscript $__tool_directory__/pipe-t.R $dp.files "$dp.formatFile" $dp.n $galaxy_output1 "$__tool_directory__/Symlink" $dc.Ctmin $dc.Ctmax $dc.flag $galaxy_output2 $dn.condNorm.normMethod "$dn.condNorm.deltamethod.format" $dn.condNorm.deltamethod.minhknormfinder $galaxy_output3 $galaxy_output4 $df.percent $galaxy_output5 $df.condImpute.format $galaxy_output6 $de.condDEA.method $galaxy_output7 "$df.filtname";
                  #end if
              #end if

              #if str( $df.condImpute.format ) == "knn":
                  #if str( $de.condDEA.method ) == "ttest":
                        Rscript $__tool_directory__/pipe-t.R $dp.files "$dp.formatFile" $dp.n $galaxy_output1 "$__tool_directory__/Symlink" $dc.Ctmin $dc.Ctmax $dc.flag $galaxy_output2 $dn.condNorm.normMethod "$dn.condNorm.deltamethod.format" $dn.condNorm.deltamethod.minhknormfinder  $galaxy_output3 $galaxy_output4 $df.percent $galaxy_output5 $df.condImpute.format $df.condImpute.k $df.condImpute.maxp $galaxy_output6 $de.condDEA.method $de.condDEA.alternative $de.condDEA.paired $de.condDEA.replicates $de.condDEA.sort $de.condDEA.stringent $de.condDEA.padjust $galaxy_output7 "$df.filtname";
                  #end if
                  #if str( $de.condDEA.method ) == "wtest":
                        Rscript $__tool_directory__/pipe-t.R $dp.files "$dp.formatFile" $dp.n $galaxy_output1 "$__tool_directory__/Symlink" $dc.Ctmin $dc.Ctmax $dc.flag $galaxy_output2 $dn.condNorm.normMethod "$dn.condNorm.deltamethod.format" $dn.condNorm.deltamethod.minhknormfinder  $galaxy_output3 $galaxy_output4 $df.percent $galaxy_output5 $df.condImpute.format $df.condImpute.k $df.condImpute.maxp $galaxy_output6 $de.condDEA.method $de.condDEA.alternative $de.condDEA.paired $de.condDEA.replicates $de.condDEA.sort $de.condDEA.stringent $de.condDEA.padjust $galaxy_output7 "$df.filtname";
                  #end if
                  #if str( $de.condDEA.method ) == "rp":
                        Rscript $__tool_directory__/pipe-t.R $dp.files "$dp.formatFile" $dp.n $galaxy_output1 "$__tool_directory__/Symlink" $dc.Ctmin $dc.Ctmax $dc.flag $galaxy_output2 $dn.condNorm.normMethod "$dn.condNorm.deltamethod.format" $dn.condNorm.deltamethod.minhknormfinder  $galaxy_output3 $galaxy_output4 $df.percent $galaxy_output5 $df.condImpute.format $df.condImpute.k $df.condImpute.maxp $galaxy_output6 $de.condDEA.method $galaxy_output7 "$df.filtname";
                  #end if
                   #if str( $de.condDEA.method ) == "none":
                        Rscript $__tool_directory__/pipe-t.R $dp.files "$dp.formatFile" $dp.n $galaxy_output1 "$__tool_directory__/Symlink" $dc.Ctmin $dc.Ctmax $dc.flag $galaxy_output2 $dn.condNorm.normMethod "$dn.condNorm.deltamethod.format" $dn.condNorm.deltamethod.minhknormfinder $galaxy_output3 $galaxy_output4 $df.percent $galaxy_output5 $df.condImpute.format $df.condImpute.k $df.condImpute.maxp $galaxy_output6 $de.condDEA.method $galaxy_output7 "$df.filtname";
                  #end if
              #end if
            #end if

    #else
      #if str( $df.condImpute.format ) == "mestdagh" or str( $df.condImpute.format ) == "mean" or str( $df.condImpute.format ) == "median" or str( $df.condImpute.format ) == "cubic":
          #if str( $de.condDEA.method ) == "ttest":
              Rscript $__tool_directory__/pipe-t.R $dp.files "$dp.formatFile" $dp.n $galaxy_output1 "$__tool_directory__/Symlink" $dc.Ctmin $dc.Ctmax $dc.flag $galaxy_output2 $dn.condNorm.normMethod $galaxy_output3 $galaxy_output4 $df.percent $galaxy_output5 $df.condImpute.format $galaxy_output6 $de.condDEA.method $de.condDEA.alternative $de.condDEA.paired $de.condDEA.replicates $de.condDEA.sort $de.condDEA.stringent $de.condDEA.padjust $galaxy_output7 "$df.filtname";
          #end if
           #if str( $de.condDEA.method ) == "wtest":
              Rscript $__tool_directory__/pipe-t.R $dp.files "$dp.formatFile" $dp.n $galaxy_output1 "$__tool_directory__/Symlink" $dc.Ctmin $dc.Ctmax $dc.flag $galaxy_output2 $dn.condNorm.normMethod $galaxy_output3 $galaxy_output4 $df.percent $galaxy_output5 $df.condImpute.format $galaxy_output6 $de.condDEA.method $de.condDEA.alternative $de.condDEA.paired $de.condDEA.replicates $de.condDEA.sort $de.condDEA.stringent $de.condDEA.padjust $galaxy_output7 "$df.filtname";
          #end if
          #if str( $de.condDEA.method ) == "rp":
              Rscript $__tool_directory__/pipe-t.R $dp.files "$dp.formatFile" $dp.n $galaxy_output1 "$__tool_directory__/Symlink" $dc.Ctmin $dc.Ctmax $dc.flag $galaxy_output2 $dn.condNorm.normMethod $galaxy_output3 $galaxy_output4 $df.percent $galaxy_output5 $df.condImpute.format $galaxy_output6 $de.condDEA.method $galaxy_output7 "$df.filtname";
          #end if
          #if str( $de.condDEA.method ) == "none":
              Rscript $__tool_directory__/pipe-t.R $dp.files "$dp.formatFile" $dp.n $galaxy_output1 "$__tool_directory__/Symlink" $dc.Ctmin $dc.Ctmax $dc.flag $galaxy_output2 $dn.condNorm.normMethod $galaxy_output3 $galaxy_output4 $df.percent $galaxy_output5 $df.condImpute.format $galaxy_output6 $de.condDEA.method $galaxy_output7 "$df.filtname";
          #end if
      #end if

      #if str( $df.condImpute.format ) == "knn":
          #if str( $de.condDEA.method ) == "ttest":
                Rscript $__tool_directory__/pipe-t.R $dp.files "$dp.formatFile" $dp.n $galaxy_output1 "$__tool_directory__/Symlink" $dc.Ctmin $dc.Ctmax $dc.flag $galaxy_output2 $dn.condNorm.normMethod $galaxy_output3 $galaxy_output4 $df.percent $galaxy_output5 $df.condImpute.format $df.condImpute.k $df.condImpute.maxp $galaxy_output6 $de.condDEA.method $de.condDEA.alternative $de.condDEA.paired $de.condDEA.replicates $de.condDEA.sort $de.condDEA.stringent $de.condDEA.padjust $galaxy_output7 "$df.filtname";
          #end if
          #if str( $de.condDEA.method ) == "wtest":
                Rscript $__tool_directory__/pipe-t.R $dp.files "$dp.formatFile" $dp.n $galaxy_output1 "$__tool_directory__/Symlink" $dc.Ctmin $dc.Ctmax $dc.flag $galaxy_output2 $dn.condNorm.normMethod $galaxy_output3 $galaxy_output4 $df.percent $galaxy_output5 $df.condImpute.format $df.condImpute.k $df.condImpute.maxp $galaxy_output6 $de.condDEA.method $de.condDEA.alternative $de.condDEA.paired $de.condDEA.replicates $de.condDEA.sort $de.condDEA.stringent $de.condDEA.padjust $galaxy_output7 "$df.filtname";
          #end if
          #if str( $de.condDEA.method ) == "rp":
                Rscript $__tool_directory__/pipe-t.R $dp.files "$dp.formatFile" $dp.n $galaxy_output1 "$__tool_directory__/Symlink" $dc.Ctmin $dc.Ctmax $dc.flag $galaxy_output2 $dn.condNorm.normMethod $galaxy_output3 $galaxy_output4 $df.percent $galaxy_output5 $df.condImpute.format $df.condImpute.k $df.condImpute.maxp $galaxy_output6 $de.condDEA.method $galaxy_output7 "$df.filtname";
          #end if
          #if str( $de.condDEA.method ) == "none":
                Rscript $__tool_directory__/pipe-t.R $dp.files "$dp.formatFile" $dp.n $galaxy_output1 "$__tool_directory__/Symlink" $dc.Ctmin $dc.Ctmax $dc.flag $galaxy_output2 $dn.condNorm.normMethod $galaxy_output3 $galaxy_output4 $df.percent $galaxy_output5 $df.condImpute.format $df.condImpute.k $df.condImpute.maxp $galaxy_output6 $de.condDEA.method $galaxy_output7 "$df.filtname";
          #end if
      #end if
    #end if
]]>
  </command>
  <inputs>
    <section name="dp" title="File uploading and parsing" expanded="true">
      <param name="list_files" type="data_collection" collection_type="list" value="" label="Select a collection list from the history tab" help="Collection should be of category List. "/>
      <param name="files" type="data" format="txt" label="Select one of the files from the history tab" help="File should contains only the columns: sampleName and Treatment." />
      <param name="formatFile" type="select" label="Select one of the file formats from the list below." help="">
        <option value="EDS" selected="true">EDS</option>
        <option value="SDS">SDS</option>
        <option value="OpenArray">OpenArray</option>
        <option value="LightCycler">LightCycler</option>
        <option value="CFX">CFX</option>
        <option value="BioMark">BioMark</option>
        <option value="plain">Plain</option>
      </param>
      <param name="n" type="integer" min="1" max="1000" value="384" label="Type the number of transcripts in your file" />
    </section>
    <section name="dc" title="Ct filtering and categorization" expanded="true">
      <param name="Ctmin" type="integer" min="0" max="40" value="14" label="Set up a minimum Ct value" help="Any Ct below your selected value will be labelled as Unreliable." />
      <param name="Ctmax" type="integer" min="0" max="40" value="32" label="Set up a maximum Ct value" help="Any Ct above your selected value will be labelled as Unreliable."/>
      <param name="flag" type="select" label="Select TRUE if you want that PIPE-T assigns category 'Unreliable' on the basis of FAILURE flag" help="Data in qPCRset objects will have feature categories (Unreliable, Undetermined) assigned to them based on different Ct criteria.">
        <option value="TRUE">TRUE</option>
        <option value="FALSE">FALSE</option>
      </param>
    </section>
    <section name="dn" title="Normalization" expanded="true">
      <conditional name="condNorm">
        <param name="normMethod" type="select" label="Select one of the normalization methods from the list below." help="Normalization is important to reduce technical variability in the data.">
          <option value="globalmean" selected="true">Global mean</option>
          <option value="deltaCt">DeltaCt method (housekeeping genes)</option>
          <option value="geometric.mean">Modified global mean</option>
          <option value="quantile">Quantile</option>
          <option value="norm.rankinvariant">Rank invariant</option>
          <option value="scale.rankinvariant">Scale rank invariant</option>
        </param>
        <when value="deltaCt">
          <conditional name="deltamethod">
            <param name="format" type="select" label="Select one of the methods from the list below for selecting normalizers." help="">
              <option value="userdefined" selected="true">User defined</option>
              <option value="genorm">geNorm</option>
              <option value="normfinder">NormFinder</option>
            </param>
            <when value="userdefined">
              <param name="normalizers" type="text" label="Type a comma separated list of housekeeping transcripts that will be used as normalizers." value="U6 snRNA-001973"></param>
            </when>
            <when value="genorm">
              <param name="minhkgenorm" type="integer" label="Type the minimum number of housekeeping transcripts that will be considered by geNorm method." value="2"></param>
            </when>
            <when value="normfinder">
              <param name="minhknormfinder" type="integer" label="Type the minimum number of housekeeping transcripts that will be considered by NormFinder method." value="1"></param>
            </when>
          </conditional>
        </when>
      </conditional>
    </section>
    <section name="df" title="Transcript filtering and imputation" expanded="true">
      <param name="percent" type="integer" min="0" max="100" value="0" label="Set up a percentage of NAs." help="Transcripts with more than the specified percentage of NAs across all samples will be removed." />
      <param name="filtname" type="text" label="Type a comma separeted list of transcript identifiers to filter out" help="Transcript identifiers specified in the List will be removed." value="U6 snRNA-001973,hsa-miR-520a">
      </param>
      <conditional name="condImpute">
        <param name="format" type="select" label="Select one of the imputation methods from the list below." help="">
          <option value="mestdagh" selected="true">Mestdagh</option>
          <option value="knn">K-Nearest Neighbour</option>
          <option value="cubic">Cubic Spline</option>
        </param>
        <when value="knn">
          <param name="k" type="integer" min="1" max="100" value="10" label="Type a number of neighbors to use in the KNN imputation method" />
          <param name="maxp" type="integer" min="1" max="2000" value="1500" label="Type the maximum number of imputed transcripts to use in the  KNN method." help="Larger numbers are divided by two-means clustering (recursively)
      prior to imputation. "/>
        </when>
      </conditional>
    </section>
    <section name="de" title="Differential expression analysis" expanded="true">
      <conditional name="condDEA">
        <param name="method" type="select" label="Select one of the methods from the list below or NONE.">

          <option value="ttest" selected="true">T-test and fold change</option>
          <option value="wtest" selected="true"> Two sample Wilcoxon test and fold change</option>
          <option value="rp">Rank Product (Only for unpaired data)</option>
          <option value="none">NONE</option>
        </param>
        <when value="ttest">
          <param name="alternative" type="select" label="Select one of the types of alternative hypothesis to assess significance.">
            <option value="two.sided" selected="true">Two sided</option>
            <option value="greater">Greater</option>
            <option value="less">Lower</option>
          </param>
          <param name="paired" type="select" label="Select TRUE if you want a paired analysis." help="Pairing of samples will follow the order of the sampleNames in the input file">
            <option value="TRUE">TRUE</option>
            <option value="FALSE" selected="true">FALSE</option>
          </param>
          <param name="replicates" type="select" label="Select TRUE if you have replicated transcripts in your data" help="If replicated transcripts are present in the data, the statistics will be calculated once for each replicated transcript, rather than separately.">
            <option value="TRUE" selected="true">TRUE</option>
            <option value="FALSE">FALSE</option>
          </param>
          <param name="sort" type="select" label="Select TRUE if you want that output file is sorted by increasing order of p-value?" help="">
            <option value="TRUE" selected="true">TRUE</option>
            <option value="FALSE">FALSE</option>
          </param>
          <param name="stringent" type="select" label="Select TRUE to admit more stringent analysis." help=" If stringent is TRUE any unreliable or undetermined measurements among technical and
biological replicates will result in the final result being Undetermined. If stringent is FALSE result will be OK unless at least half of the Ct values for a given gene are unreliable/undetermined.">
            <option value="TRUE" selected="true">TRUE</option>
            <option value="FALSE">FALSE</option>
          </param>
          <param name="padjust" type="select" label="Select one of the methods for adjusting pvalues in case of multiple hypothesis testing">
            <option value="BH" selected="true">Benjamini-Hochberg</option>
            <option value="bonferroni">Bonferroni</option>
          </param>
        </when>
        <when value="wtest">
          <param name="alternative" type="select" label="Select one of the types of alternative hypothesis to assess significance.">
            <option value="two.sided" selected="true">Two sided</option>
            <option value="greater">Greater</option>
            <option value="less">Lower</option>
          </param>
          <param name="paired" type="select" label="Select TRUE if you want a paired analysis." help="Pairing of samples will follow the order of the sampleNames in the input file">
            <option value="TRUE">TRUE</option>
            <option value="FALSE" selected="true">FALSE</option>
          </param>
          <param name="replicates" type="select" label="Select TRUE if you have replicated transcripts in your data" help="If replicated transcripts are present in the data, the statistics will be calculated once for each replicated transcript, rather than separately.">
            <option value="TRUE" selected="true">TRUE</option>
            <option value="FALSE">FALSE</option>
          </param>
          <param name="sort" type="select" label="Select TRUE if you want that output file is sorted by increasing order of p-value?" help="">
            <option value="TRUE" selected="true">TRUE</option>
            <option value="FALSE">FALSE</option>
          </param>
          <param name="stringent" type="select" label="Select TRUE to admit more stringent analysis." help=" If stringent is TRUE any unreliable or undetermined measurements among technical and
biological replicates will result in the final result being Undetermined. If stringent is FALSE result will be OK unless at least half of the Ct values for a given gene are unreliable/undetermined.">
            <option value="TRUE" selected="true">TRUE</option>
            <option value="FALSE">FALSE</option>
          </param>
          <param name="padjust" type="select" label="Select one of the methods for adjusting pvalues in case of multiple hypothesis testing">
            <option value="BH" selected="true">Benjamini-Hochberg</option>
            <option value="bonferroni">Bonferroni</option>
          </param>
        </when>
        <when value="rp">
        </when>
      </conditional>
    </section>
  </inputs>
  <outputs>
    <data format="txt" name="galaxy_output1" label="1_Ct_Raw"/>
    <data format="png" name="galaxy_output2" label="2_Boxplot after data categorization"/>
    <data format="txt" name="galaxy_output3" label="3_Normalized data"/>
    <data format="png" name="galaxy_output4" label="4_ECDF"/>
    <data format="png" name="galaxy_output6" label="5_Boxplot after data normalization"/>
    <data format="txt" name="galaxy_output5" label="6_Imputed data"/>
    <data format="txt" name="galaxy_output7" label="7_Differentially Expressed transcripts"/>
  </outputs>
  <tests>
    <test>
      <section name="dp">
        <param name="list_files">
          <collection type="list">
            <element name="file1" value="GSM628070_18b.txt" />
            <element name="file2" value="GSM628068_15b.txt" />
            <element name="file3" value="GSM628072_202b.txt" />
            <element name="file4" value="GSM628080_22b.txt" />
            <element name="file5" value="GSM628084_236b.txt" />
            <element name="file6" value="GSM628085_23b.txt" />
            <element name="file7" value="GSM628090_31b.txt" />
            <element name="file8" value="GSM628093_49b1.txt" />
            <element name="file9" value="GSM628094_49b2.txt" />
            <element name="file10" value="GSM628101_5b.txt" />
            <element name="file11" value="GSM628073_204b.txt" />
            <element name="file12" value="GSM628096_4b.txt" />
            <element name="file13" value="GSM628100_59b.txt" />
            <element name="file14" value="GSM628104_6b1.txt" />
            <element name="file15" value="GSM628105_6b2.txt" />
            <element name="file16" value="GSM628106_7b.txt" />
          </collection>
        </param>
        <param name="files" value="List_OLIGOvsPOLY_Metastatic.txt"/>
        <param name="formatFile" value="SDS"/>
        <param name="n" value="191"/>
      </section>
      <section name="dc">
        <param name="Ctmin" value="14"/>
        <param name="Ctmax" value="32"/>
        <param name="flag" value="FALSE"/>
      </section>
      <section name="dn">
        <param name="normMethod" value="deltaCt"/>
        <param name="format" value="genorm"/>
        <param name="minhkgenorm" value="2"/>
      </section>
      <section name="df">
        <param name="percent" value="10"/>
        <param name="filtname" value="Empty."/>
        <param name="format" value="cubic"/>
      </section>
      <section name="de">
        <param name="method" value="rp"/>
      </section>

      <output name="galaxy_output1" file="Output_Ct_Raw.txt" />
      <output name="galaxy_output2" file="Output_Boxplot_after_data_categorization.png" />
      <output name="galaxy_output3" file="Output_Normalized_data.txt" />
      <output name="galaxy_output4" file="Output_ECDF.png" />
      <output name="galaxy_output6" file="Output_Boxplot_after_data_normalization.png" />
      <output name="galaxy_output5" file="Output_Imputed_data.txt" />
      <output name="galaxy_output7" file="Output_Differentially_Expressed_transcripts.txt" />
    </test>
  </tests>
  <help>
    <![CDATA[
**What it does**
INPUTS: This tool parses a list of RT-qPCR file and a file associating these files and one of two groups
OUTPUTS: and returs
1) A txt file with the raw Ct data
2) A PNG file of a boxplot with the Ct data after data categorization for each sample
3) A txt file with normalized data
4) A PNG file with the Empirical cumulative distribution before and after data normalization
5) A PNG file of a boxplot with the normalzied data for each sample
6) A txt file with imputed data for each missing value
7) A txt file with the results of the differntial expression analyis
]]>
  </help>
</tool>
