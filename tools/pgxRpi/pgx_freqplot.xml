<tool id="pgx_freqplot" name="pgxRpi pgxFreqplot" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="21.05">
    <description>Plot the frequency of copy number variation in specific cohorts</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro='requirements'>
        <requirement type="package" version="1.58.0">bioconductor-genomicranges</requirement>
    </expand>
    <command detect_errors="exit_code"><![CDATA[
        cat '$run_pgxFreqplot' &&
        Rscript '$run_pgxFreqplot'
    ]]></command>
    <configfiles>
        <configfile name='run_pgxFreqplot'><![CDATA[

            @R_INIT@

            library(pgxRpi)    
            library(GenomicRanges)
            
            data <- readLines("$freqdata")
            metacolumn <- which(grepl("#",data))
            metadata <- data[which(grepl("#",data))]
            metadata <- lapply(seq_len(length(metadata)), function(i){
                indmeta <- metadata[i]
                indmeta <- unlist(strsplit(indmeta,split = ";"))
                indmeta <- data.frame(filter=gsub("#group_id=","",indmeta[1]),label=gsub("label=","",indmeta[2]),sample_count=gsub("sample_count=","",indmeta[3]))
                return(indmeta)
            })
            metadata <- do.call(rbind,metadata)
            data <- read.csv("$freqdata",sep="\t",skip = max(metacolumn),header = T)
            freq <- makeGRangesListFromDataFrame(data,split.field = 'group_id',keep.extra.columns=TRUE) 
            S4Vectors::mcols(freq) <- metadata

            process_input_parameter <- function(param, if_numeric=FALSE){
                if (param == ""){
                    param <- NULL
                }
                else{
                    param <- trimws(unlist(strsplit(param,split=',')))
                    if (if_numeric) param <- as.numeric(param)
                }
                return(param)   
            }

            filters <- process_input_parameter('$filters')
            chrom <- process_input_parameter('$plot_type.chrom',TRUE)
            layout <- c($plot_type.nrows,$plot_type.ncols)
                        
         
            pdf("$pgxplot",width=round($plotwidth/2.54),height=round($plotheight/2.54))
            pgxFreqplot(freq,filters=filters,chrom=chrom,layout=layout,assembly="$assembly")
            dev.off()


        ]]></configfile>
    </configfiles>
    <inputs>
        <param type='data' name='freqdata' format='txt' label='CNV frequency data' help='CNV frequency data returned by pgxLodaer'/>

        <conditional name="plot_type">
            <param name="selector" type="select" label="Plot type">
                <option value="genome">Genome-wide plot</option>
                <option value="chromosome">Chromosome-specific plot</option>
            </param>
            <when value="chromosome">
                <param name="chrom" type="text" optional='false' label="Chromosomes to Plot" help="Use commas to separate multiple chromosomes (e.g., 1,3,5)." />
                <param name="nrows" type="integer" value="1" label="Number of rows in plot" />
                <param name="ncols" type="integer" value="1" label="Number of columns in plot" />
            </when>
            <when value="genome">
                <param name="chrom" type="hidden" value="" />
                <param name="nrows" type="hidden" value="1" />
                <param name="ncols" type="hidden" value="1" />
            </when>
        </conditional>
        
        <param name='filters' type='select' optional='false' label='Filter to plot' help="Specify the cohort to plot. The available values are extracted from the 'group_id' column in the input file." >
            <options from_dataset="freqdata" >
                <column name="name" index="1"/>
                <column name="value" index="1"/>
                <filter type="unique_value" column="1" />
                <filter type="remove_value" value="group_id" />
            </options>
        </param>
        <param name='assembly' type='select' label='Genome assembly version'>
            <option value="hg38" selected="true">hg38</option>
            <option value="hg19">hg19</option>
        </param>
        <param name='plotwidth' type='integer' value='20' label='Width of the plot (cm)' />
        <param name='plotheight' type='integer' value='10' label='Height of the plot (cm)' />
    </inputs>
    <outputs>
        <data name='pgxplot' format='pdf' label='CNV frequency plot'/>
    </outputs>
    <tests>
        <test>
            <param name='freqdata' value='cnv-frequency.txt'/>
            <conditional name="plot_type">
                <param name="selector" value="genome" />
            </conditional>
            <param name="filters" value="NCIT:C3058"/>
            <output name="pgxplot" file="cnv-genome-frequency.pdf" />
        </test>
        <test>
            <param name='freqdata' value='cnv-frequency.txt'/>
            <conditional name="plot_type">
                <param name="selector" value="chromosome" />
                <param name="chrom" value="1,7,8"/>
                <param name="nrows" value="3"/>
                <param name="ncols" value="1"/>
            </conditional>
            <param name="filters" value="NCIT:C3512"/>
            <param name='plotwidth' value="10"/>
            <param name='plotheight' value="15"/>
            <output name="pgxplot" file="cnv-chromsome-frequency.pdf" />
        </test>
    </tests>
    <help><![CDATA[
       This function plots the CNV frequency loaded from pgx_loader.
    ]]></help>
    <expand macro="citations" />
</tool>