<tool id="@EXECUTABLE@" name="pyclone-vi" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="20.05">
    <description>
        PyClone-VI is a fast method for inferring clonal population structure.
    </description>
    <macros>
        <token name="@EXECUTABLE@">pyclone-vi</token>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <command detect_errors="exit_code"><![CDATA[
        mkdir -p tmp &&
        #if $input_file:
            ln -s '$input_file' tmp/ifile.tsv &&
        #end if
         python '$__tool_directory__/src/run.py'
            --input_file tmp/ifile.tsv
            --output_file ${ofile}
            --num_clusters '$num_clusters'
            --density '$density'
            --num_restarts '$num_restarts'
            --num_annealing_steps '$num_annealing_steps'
            --num_grid_points '$num_grid_points'
            --annealing_power '$annealing_power'
            --convergence_threshold '$convergence_threshold'
            --max_iters '$max_iters'
            --mix_weight_prior '$mix_weight_prior'
            --precision '$precision'

         ####&& python '$__tool_directory__/pyclone_vi/run.py' write-results-file -i ofile.h5 -o '$tracerx'
         && cp '${ofile}' outfile.tsv
         && cp '${ofileh5}' outfile.h5
        ]]></command>
    <inputs>
        <param name="input_file" type="data" format="tabular" label="input file" help="TSV format file with copy number and allele count information for all samples"/>
        <param argument="--num_clusters" type="integer" value="10" min="1" label=""  help="Number of clusters to use in variational approximation distribution. Note that not all clusters may not be assigned data points, so the final number of clusters could be lower. Default is 10."/>
        <param argument="--num_annealing_steps" type="integer" value="1" min="1" label="Select number of annealing steps"  help="Number of simulated annealing steps to use. Default is 1."/>
        <param argument="--num_grid_points" type="integer" value="100" min="50" label="Select number of points used to approximate CCF values"  help="Default is 100"/>
        <param argument="--num_restarts" type="integer" value="1" min="1" label="Select number of random restarts of variational inference"  help="Default is 1"/>
        <param argument="--annealing_power" type="float" value="1.0" min="1.0" label="Select exponent of entries in the annealing ladder."  help="Default is 1.0"/>
        <param argument="--convergence_threshold" type="float" value="0.00001" min="0.00001" label="Select maximum relative ELBO difference between iterations to decide on convergence"  help="Default is 10^-6"/>
        <param argument="--max_iters" type="integer" value="1" min="1" label="Select number of ELBO optimization iterations"  help="Default is 10,0000"/>
        <param argument="--mix_weight_prior" type="float" value="1.0" min="1.0" label="Select parameter value of symmetric Dirichlet prior distribution on mixture weights."  help="Higher values will produce more clusters. Default is 1.0 which is the uniform prior"/>
        <param argument="--precision" type="integer" value="200" min="200" label="Precision for Beta-Binomial density. Has no effect when using Binomial."  help="Default is 200"/>
        <param argument="--density" type="select" value="binomial" display="radio" label="Select allele count density"  help="Allele count density in the PyClone model. Use beta-binomial for high coverage sequencing. ">
            <option value="binomial">Binomial</option>
            <option value="beta_binomial">Beta-Binomial</option>
        </param>
    </inputs>

    <outputs>
        <data format="tabular" name="ofile" from_work_dir="outfile.tsv" label="${tool.name} on ${on_string}: outfile.tsv"/>
        <data format="h5" name="ofileh5" from_work_dir="outfile.h5" label="${tool.name} on ${on_string}: outfile.h5"/>
    </outputs>
    <tests>
        <test>
            <param name="input_file" ftype="tabular" value="tracerx.tsv"/>
            <param name="num_clusters" value="10"/>
            <param name="num_annealing_steps" value="1"/>
            <param name="num_grid_points" value="100"/>
            <param name="num_restarts" value="5"/>
            <param name="annealing_power" value="1.0"/>
            <param name="convergence_threshold" value="0.00001"/>
            <param name="max_iters" value="1"/>
            <param name="mix_weight_prior" value="1.0"/>
            <param name="precision" value="200"/>
            <param name="density" value="beta_binomial"/>
            <output name="ofile" file="tracerx_out.tsv"/>
            <output name="ofileh5" file="tracerx_out.h5"/>

        </test>
    </tests>
    <help><![CDATA[

**Input format**
To run a PyClone-VI analysis you will need to prepare an input file. The file should be in tab delimited format and have the following columns.
Note: There is an example file in examples/data/tracerx.tsv

- mutation_id - Unique identifier for the mutation. This is free form but should match across all samples.

Note: PyClone-VI will remove any mutations without entries for all detected samples. If you have mutations with no data in some samples set their ref/alt counts to 0 for the corresponding sample.

- sample_id - Unique identifier for the sample.

- ref_counts - Number of reads matching the reference allele.

- alt_counts - Number of reads matching the alternate allele.

- major_cn - Major copy number of segment overlapping mutation.

- minor_cn - Minor copy number of segment overlapping mutation.

- normal_cn - Total copy number of segment in healthy tissue. For autosome this will be two and male sex chromosomes one.

You can include the following optional columns.

- tumour_content - The tumour content (cellularity) of the sample. Default value is 1.0 if column is not present.

Note: In principle this could be different for each mutations/sample. However it most cases it should be the same for all mutations in a sample.

- error_rate - Sequencing error rate. Default value is 0.001 if column is not present.

Note: Most users will not need to change this value.

**Output format**

The results file output by write-results-file is in tab delimited format. There six columns:

- mutation_id - Mutation identifier as used in the input file.

- sample_id - Unique identifier for the sample as used in the input file.

- cluster_id - Most probable cluster or clone the mutation was assigned to.

- cellular_prevalence - Proportion of malignant cells with the mutation in the sample. This is also called cancer cell fraction (CCF) in the literature.

- cellular_prevalence_std - Standard error of the cellular_prevalence estimate.

- cluster_assignment_prob - Posterior probability the mutation is assigned to the cluster. This can be used as a confidence score to remove mutations with low probability of belonging to a cluster.
 ]]>
    </help>
    <expand macro="citations"/>
</tool>
