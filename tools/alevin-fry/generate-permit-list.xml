<tool id="alevin_fry_generate_permit_list" name="Alevin-Fry Generate Permit List" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" python_template_version="3.5" profile="@PROFILE_VERSION@">
    <description>Generate a permit list of barcodes from a RAD file</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <command detect_errors="exit_code"><![CDATA[
        mkdir inputs &&
        ln -s '$input' inputs/map.rad &&
        mkdir outputs &&
        ##ln -s '$output1' outputs &&
        alevin-fry generate-permit-list $KNEEDISTANCE --input inputs --expected-ori '$EXPECTEDORI' --output-dir outputs
    ]]></command>
    <inputs>
        <param type="data" name="input" label="map RAD file" format="rad" help="The input file has to be called 'map.rad' for Alevin Fry to work"/>
        <param type="select" name="EXPECTEDORI" label="Expected orientation">
            <option value="fw">fw</option>
            <option value="rc">rc</option>
            <option value="both">both</option>
            <option value="either">either</option>
        </param>
        <param type="boolean" name="KNEEDISTANCE" truevalue="--knee-distance" falsevalue="" label="Attempt to determine the number of barcodes to keep using the knee-distance method."/>
        <param name="barcode_selection" type="select" label="" help="TODO">
            <option value="knee-distance">Knee-distance method</option>
            <option value="force-cells">TODO: force-cells</option>
            <option value="valid-bc">TODO: valid-bc</option>
            <option value="unfiltered-pl">TODO: unfiltered-pl</option>
            <option value="expect-cells">TODO: expect-cells</option>
        </param>
    </inputs>
    <outputs>
        <data name="output1" label="${tool.name} on ${on_string}: all_freq" format="binary" from_work_dir="outputs/all_freq.bin"/>
        <data name="output2" label="${tool.name} on ${on_string}: permit_freq" format="binary" from_work_dir="outputs/permit_freq.bin"/>
        <data name="output3" label="${tool.name} on ${on_string}: permit_map" format="binary" from_work_dir="outputs/permit_map.bin"/>
        <data name="output4" label="${tool.name} on ${on_string}: generate_permit_list" format="json" from_work_dir="outputs/generate_permit_list.json"/>
    </outputs>
    <tests>
    <test expect_num_outputs="4">
        <param name="input" value="gpltest/input"/>
        <param name="EXPECTEDORI" value="either"/>
        <param name="KNEEDISTANCE" value="true"/>
        <output name="output1" file="gpltest/output/all_freq.bin"/>
        <output name="output2" file="gpltest/output/permit_freq.bin"/>
        <output name="output3" file="gpltest/output/permit_map.bin"/>
        <output name="output4" file="gpltest/output/generate_permit_list.json"/>
    </test>
    </tests>
    <help>
        help
    </help>
    <expand macro="citations"/>
</tool>
