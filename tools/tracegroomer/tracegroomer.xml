<tool id="tracegroomer" name="@TOOL_LABEL@" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="20.05">
    <description>
        TraceGroomer is a solution for formatting and normalising Tracer metabolomics given file(s), to produce the .csv files which are ready for DIMet tool.
    </description>
    <macros>
        <token name="@TOOL_LABEL@">tracegroomer</token>
        <token name="@EXECUTABLE@">tracegroomer</token>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <command detect_errors="exit_code"><![CDATA[
        #import yaml
        mkdir -p output &&
        mkdir -p config &&
        #if $metadata_path:
            ln -s '$metadata_path' output/metadata.csv &&
        #end if
        touch 'config/config.yaml' &&
        echo "groom_out_path : \$(pwd)/output/" > 'config/config.yaml' &&
        echo "metadata :  metadata" >> 'config/config.yaml' &&
        echo "abundances : AbundanceCorrected" >> 'config/config.yaml' &&
        echo "mean_enrichment : MeanEnrichment13C" >> 'config/config.yaml' &&
        echo "isotopologue_proportions : IsotopologuesProp" >> 'config/config.yaml' &&
        #if $type_of_file == "IsoCor_out_tsv":
            echo "isotopologues : IsotopologuesAbs" >> 'config/config.yaml' &&
        #end if
        cat 'config/config.yaml' &&
        python3 -m tracegroomer
            --targetedMetabo_path ${targeted_metabopath}
            --type_of_file $type_of_file
            config/config.yaml
            #if $advanced_options.under_detection_limit_set_nan:
                --under_detection_limit_set_nan
            #else
                --no-under_detection_limit_set_nan
            #end if
            #if $advanced_options.auto_drop_metabolite_LOD_based:
                --auto_drop_metabolite_LOD_based
            #else
                --no-auto_drop_metabolite_LOD_based
            #end if
            #if $advanced_options.subtract_blankavg:
                --subtract_blankavg
            #else
                --no-subtract_blankavg
            #end if
            #if $advanced_options.alternative_div_amount_material:
                --alternative_div_amount_material
            #else
                --no-alternative_div_amount_material
            #end if
            #if $advanced_options.isotopologues_preview:
                --isotopologues_preview
            #else
                --no-isotopologues_preview
            #end if
            --isosprop_min_admitted ${isosprop_min_admitted}
            #if $advanced_options.isosprop_stomp_values:
                --isosprop_stomp_values
            #else
                --no-isosprop_stomp_values
            #end if
            #if $advanced_options.meanenrich_or_fracfontrib_stomp_values:
                --meanenrich_or_fracfontrib_stomp_values
            #else
                --no-meanenrich_or_fracfontrib_stomp_values
            #end if
            #if $amount_material:
                --amountMaterial_path ${amount_material}
            #end if
            #if $remove_these_metabolites:
                --remove_these_metabolites ${remove_these_metabolites}
            #end if
            #if $advanced_options.use_internal_standard:
                --use_internal_standard ${use_internal_standard}
            #end if
    ]]></command>
    <inputs>
        <expand macro="input_datasets"/>
        <expand macro="advanced_options"/>
    </inputs>

    <outputs>
        <collection name="report" type="list">
            <discover_datasets pattern="__designation__" directory="output" format="tabular"/>
        </collection>
    </outputs>
    <tests>
        <test>
            <param name="targeted_metabopath" ftype="tabular" value="TRACER_IsoCor_out_example.tsv"/>
            <param name="metadata_path" ftype="tabular" value="metadata.csv"/>
            <param name="type_of_file" value="IsoCor_out_tsv"/>
            <section name="advanced_options">
                <param name="isotopologues_preview" value='false'/>
                <param name="under_detection_limit_set_nan" value='false'/>
                <param name="meanenrich_or_fracfontrib_stomp_values" value='false'/>
                <param name="subtract_blankavg" value='false'/>
                <param name="isosprop_stomp_values" value='false'/>
                <param name="auto_drop_metabolite_LOD_based" value='false'/>
                <param name="alternative_div_amount_material" value='false'/>
                <param name="isosprop_min_admitted" ftype="float"  value='0.5'/>
                <param name="use_internal_standard" value=''/>
            </section>
            <output_collection name="report" type="list" count="5">
                <element file="AbundanceCorrected.csv"  name="AbundanceCorrected.csv" ftype="tabular"/>
                <element file="IsotopologuesAbs.csv" name="IsotopologuesAbs.csv" ftype="tabular"/>
                <element file="IsotopologuesProp.csv" name="IsotopologuesProp.csv" ftype="tabular"/>
                <element file="MeanEnrichment13C.csv" name="MeanEnrichment13C.csv" ftype="tabular"/>
                <element file="metadata.csv" name="metadata.csv" ftype="tabular"/>
            </output_collection>
        </test>
    </tests>
    <help><![CDATA[
TraceGroomer is a solution for formatting and normalising Tracer metabolomics given file(s), to produce the .csv files which are ready for DIMet tool.

Currently, three styles of format of Tracer (or Isotope-labeled) metabolomics measurements files are accepted:

   - IsoCor results (.tsv measurments file).
   - Results provided by the VIB Metabolomics Expertise Center (El-Maven results are shaped by VIB MEC team into a multi-sheet .xlsx file).
   - A 'generic' .xlsx measurements file, manually set by the user.

For any type of these supported inputs, TraceGroomer generates an independent file for: i) total metabolite abundances ii) Isotopologues iii) Isotopologues' proportions and iv) mean enrichment (a.k.a fractional contributions).

Automatic formatting is performed, as well as the normalization chosen by the user: whether by the amount of material and/or by an internal standard. Useful advanced options are offered (e.g. if the user has only Isotopologues' absolute values, TraceGroomer can generate all the other measurements files automatically).

Note : this script does not correct for naturally occurring isotopologues. Your data must be already processed by another software that performs such correction.

**Users having IsoCor results**

A typical IsoCor results file is described in: https://isocor.readthedocs.io/en/latest/tutorials.html#output-files It consists of a .tsv file which has in columns the sample, metabolite, isotopologue and all quantifications, and the rows are in piled version (the samples are repeated vertically).

Our script transforms specific columns of that file into tables. As the total metabolite abundance column is not present in the input data, the total abundance per metabolite is the automatic result of the sum, per metabolite, of Isotopologues' absolute values (see AbundanceCorrected below). So here the correspondances:

================================ ========================================
column in the IsoCor file        TraceGroomer output filename
================================ ========================================
corrected_area 	                 IsotopologuesAbsolute
isotopologue_fraction 	         IsotopologuesProportions
mean_enrichment 	             MeanEnrichment
- 	                             AbundanceCorrected
================================ ========================================

We provide the example downloadable from Zenodo (see here).

**Users having VIB results**

In the examples, downloadable from Zenodo (see here), this kind of format is included.

Our script performs, by default:

    - The subtraction of the means of the blanks across all metabolites' abundance for each sample.
    - Setting to NaN the values of abundance that are under the limit of detection (LOD).
    - Excluding metabolites whose abundance values across all samples are under LOD (excluded then from all tables by default).
    - Stomping fractions values to be comprised between 0 and 1 (some negative and some superior to 1 values can occur after correction of naturally occurring isotopologues by certain software dedicated to such corrections)

You can modify all those options depending on your needs, they appear as 'optional arguments' in the help menu.

 **Users having generic data**

We have created this option for those formats that do not correspond to the two scenarios above, so your data is expected to be in the form of a .xlsx file with sheets similar as in the provided in example-sheet present in the downloadable examples:

    - This .xlsx file must NOT contain: formulas, symbols accompanying the numeric values, nor special characters.
    - The header (first row, with the molecules IDs), and the first column (with the samples) can contain non numeric values.
    - The isotopologues names, in the header, must follow the convention metaboliteID_labelX: the substring _label is compulsory and is located between the metabolite name (or identifier) metaboliteID and the number of marked carbon atoms X (e.g. glucose6phosphate_label0).

*Important : If you only have Isotopologue Absolute values, but not the other tables: put them as a single named sheet in your .xlsx file, and TraceGroomer automatically generate all the other types of tables for you !

Notes:

    - Sheets corresponding to isotopologue Proportions (when available) and isotopologue Absolute values (compulsory if the proportions not available) must have isotopologues as columns and samples as rows.
    - Sheets corresponding to abundance and mean enrichment (when available) must have metabolites as columns and samples as rows.
    - The sheets corresponding to isotopologues measurements must be named with a name containing the string "isotopol". The names of the sheets must be unambiguous.
    - In a file, each sheet must correspond to one type of quantification. Multiplets of a same type of quantification are not supported.

**Metadata File Information**

Provide a tab-separated file that has the names of the samples in the first column and one header row.
Column names must be exactly in this order:

   name_to_plot
   condition
   timepoint
   timenum
   compartment
   original_name

**Advanced options**

They appear as 'optional arguments' in the help menu.

You can:

    - Normalize by the amount of material (number of cells, tissue weight): setting the path to the file in --amountMaterial_path option. The file must be like the one given in the downloadable examples, and the first column must contain the same names as in metadata 'original_name'.
    - Normalize by an internal standard (present in your data) at choice: using the advanced option --use_internal_standard.
    - Remove metabolites
    - Print a preview of isotopologues values

Note: Advanced options regarding to detection limit (LOD) and blanks will only have effect in the VIB-MEC type of data.

 ]]>
    </help>
    <expand macro="citations" />
</tool>