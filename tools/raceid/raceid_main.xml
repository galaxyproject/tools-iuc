<tool id="raceid" name="RaceID" version="@VERSION_RACEID@.@VERSION_PACKAGE@.1" >
    <description>performs single-cell RNA clustering and trajectory analysis</description>
    <macros>
        <import>macros.xml</import>
        <import>macros_cluster.xml</import>
        <import>macros_inspectclusters.xml</import>
        <import>macros_trajectory.xml</import>
        <import>macros_inspecttrajectories.xml</import>
    </macros>
    <expand macro="requirements" />
    <version_command><![CDATA[
Rscript '$__tool_directory__/scripts/clusterinspect.R' @GET_VERSION@
    ]]></version_command>
    <command detect_errors="exit_code"><![CDATA[
#if str($tool.mode) == "cluster"
    #set bin = 'cluster.R'
#else if str($tool.mode) == "inspectclusters"
    #set bin = 'clusterinspect.R'
#else if str($tool.mode) == "trajectory"
    #set bin = 'pseudotemporal.R'
#else if str($tool.mode) == "inspecttrajectories"
    #set bin = 'trajectoryinspect.R'
#end if

Rscript '$__tool_directory__/scripts/$bin' '$userconf' 2>&1 > '$outlog'
    ]]></command>
    <configfiles>
        <configfile name="userconf" ><![CDATA[
@STRING2VECTOR@

#if str($tool.mode) == "cluster"
@CLUSTER_CHEETAH@
#else if str($tool.mode) == "inspectclusters"
@INSPECTCLUSTERS_CHEETAH@
#else if str($tool.mode) == "trajectory"
@TRAJECTORY_CHEETAH@
#else if str($tool.mode) == "inspecttrajectories"
@INSPECTTRAJECTORIES_CHEETAH@
#end if

]]>
        </configfile>
    </configfiles>
    <inputs>
        <conditional name="tool" >
            <param name="mode" type="select" label="Mode of Analysis" >
                <option value="cluster" selected="true" >Cluster</option>
                <option value="inspectclusters" >Cluster Inspection</option>
                <option value="trajectory" >Trajectory</option>
                <option value="inspecttrajectories" >Trajectory Inspection</option>
            </param>
            <when value="cluster" >
                <expand macro="cluster_inputs" />
            </when>
            <when value="inspectclusters" >
                <expand macro="inspectclusters_inputs" />
            </when>
            <when value="trajectory" >
                <expand macro="trajectory_inputs" />
            </when>
            <when value="inspecttrajectories" >
                <expand macro="inspecttrajectories_inputs" />
            </when>
        </conditional>
        <param name="use_log" type="boolean" checked="false" label="Output Log?" />
    </inputs>
    <outputs>
        <data name="outpdf" format="pdf" label="${tool.name} on ${on_string}: PDF Report" />
        <data name="outrdat" format="rdata" label="${tool.name} on ${on_string}: RDS" >
            <filter>tool['mode'] in ['cluster', 'trajectory']</filter>
        </data>
        <data name="outgenelist" format="tabular" label="${tool.name} on ${on_string}: Cluster - Genes per Cluster" >
            <filter>tool['mode'] == "cluster"</filter>
        </data>
        <data name="outdiffgenes" format="tabular" label="${tool.name} on ${on_string}: TrajectoryInspect - Differential Genes" >
            <filter>(tool['mode'] == "inspecttrajectories") and (trjsid['basic']['doit'] == "yes")</filter>
        </data>
        <data name="outlog" format="txt" label="${tool.name} on ${on_string}: Log" >
            <filter>use_log</filter>
        </data>
    </outputs>
    <tests>
        <expand macro="cluster_tests" />
        <expand macro="inspectclusters_tests" />
        <expand macro="trajectory_tests" />
        <expand macro="inspecttrajectories_tests" />
    </tests>
    <help><![CDATA[
RaceID3 and StemID2
=====================

RaceID is a clustering algorithm for the identification of cell types from single-cell RNA-sequencing data. It was specifically designed for the detection of rare cells which correspond to outliers in conventional clustering methods. StemID is an algorithm for the identification of lineage trees based on RaceID3 analysis.

The tool is split into four modules that follow two main paths of analysis:

1. Cluster → Cluster Inspection
2. Cluster → Trajectory → Trajectory Inspection

The initial **Cluster** stage performs filtering, normalisation, outlier detection, and generates a tSNE plot of the clusters. The **Cluster Inspection** stage takes as input the RData file generated from the previous stage, and enables the inspection of individual clusters through the subsetting of specific cells, or examining genes of interest. 

Lineage analysis is performed during the **Trajectory** stage which builds a minimal spanning tree based on the most significant links between related clusters to infer cell hierarchy. Examining the expression of genes of interest across specific branches (trajectories) is performed via the **Trajectory Inspection** stage, which takes as input the RData file from the previous stage.

Example Usage: Inspecting the Aggregated Expression for a Group of Genes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Our cells come from 5 different batches (I5,II5,III5,IV5,V5) and are labelled to reflect this (i.e. "I5_1", "I5_2", ..., "I5_129", "II5_1", ..., "V5_236" )

We wish to filter out the gene Lpca5 and Atk2 which we know in advance will saturate our analysis with unwanted expression.

We will also be interested in the cluster that contains significant expression for Apoa genes (Apoa1, Apoa1bp, Apoa2, Apoa4, Apoa5).

First, we must load in our count matrix in order to correct for batch effects, filter out unwanted genes, and compute our clusters and outliers.

 * *Mode of Analysis* → **Cluster**

   * *Count Matrix* → [input tabular]

   * Filtering:

     * *Use Defaults?* → **No**

     * *Batch Regex* → "^I5,^II5,^III5,^IV5,^V5"

     * *FGenes* → "Lpca5,Atk2"

This will produce a PDF report containing multiple plots:

 * Cluster Metrics:

   * **Saturation** - Displays the decrease of the average within-cluster dispersion with increasing cluster number. If the plot plateaus, saturation is reached and the saturation point is automatically chosen and highlighted, indicating the number of clusters selected.

   * **Jaccard** - Assesses the cluster stability.

 * Outlier Metrics:

   * **Background Noise Model** - shows outliers against the internally computed background model for gene expression variability assuming that counts follow a negative binomial distribution with a mean and avariance set by the expression of each gene in a cluster.

   * **Sensitivity** - The number of outliers as a function of the p-value

   * **Outlier Probability** - A barplot of p-values across all cells in each cluster

 * Cluster Heatmaps:

   * Cell-to-cell distances of the initial and final (i.e. with outliers) clusters.

 * Cluster Plots:

   * **tSNE** map of both the initial and final clusterings

   * **Fruchterman-Rheinman** k-nearest neighbour graph layout of the initial and final clusterings.

If the Jaccard similarities are low, then this could mean that the number of clusters were overestimated, and that the cluster number should be set manually:

 * *Mode of Analysis* → **Cluster**

   * Clustering:

     * *Number of Clusters* → <estimate value from Saturation plot>

On top of the PDF, an RDS (RData Serialised) is output containing a loadable R, as well as a gene list that displays the most significant genes in each cluster. We can inspect this list and see that cluster number 5 contains most of our Apoa genes, which we will use for further analysis:

 * *Mode of Analysis* → **Cluster Inspection**

   * *Input RaceID RDS* → <output RDS from Cluster stage>

   * *Examine Genes of Interest* → **Yes**

     * *Genes to Examine* → "Apoa1,Apoa1bp,Apoa2,Apoa4,Apoa5"

This produces a PDF of tSNE and FR plots, which have the expression of our Apoa genes of interest shown over the all clusters.

Extended Example: Examining Lineage
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Here we will explore the relationships between the clusters in the previous example in an attempt to infer progenitor clusters (cell types) that give rise to other neighboring clusters.

 * *Mode of Analysis* → **Trajectory**  

   * *Input RDS* → <output RDS from Cluster stage>

This will generate an RDS object, and a PDF showing a minimal spanning tree between the clusters, with the strength between clusters given by the colour and thickness of the branches.

We can examine the differential expression of genes along certain trajectories to see how the genes are affected as they develop (as inferred by the pseudo-temporal branches). For example, if we wish to see how our Apoa genes are up or down regulated along a cell's development with the main Apoa-expressing cell-type centred on cluster 5, then we can look at the expression of these genes along any valid branch that passes through cluster 5 (e.g. cluster 1 → cluster 5 → cluster 10):

 * *Mode of Analysis* → **Trajectory Inspection**

   * *Input RDS* → <output RDS from Trajectory stage>

   * *Perform StemID* → **Yes**

     * *Cluster Number* → "5"

     * *Trajectory Path i,j,k* → "1,3,10"

This will generate a PDF containing a heatmap of expression for all neighboring clusters that share links with  cluster 5, as well as a plot of all cells along the branches between 1 to 3 and 3 to 10. A table of the most differentially expressed genes across these projection will also be output, which will provide a more qualitative assessment of how signficant our Apoa-expressing genes are along this projection.

For more information on the different types cluster and trajectory inspection that can be performed, please consult the RaceID vignette_.

.. _vignette: https://github.com/dgrun/RaceID3_StemID2_package/blob/master/vignettes/RaceID.Rmd

    ]]></help>
    <expand macro="citations" />
</tool>
