<?xml version="1.0" encoding="UTF-8"?>

<tool id="bakta" name="Bakta genome annotation" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="@PROFILE@">
    <description>
        Bakta: rapid and standardized annotation of bacterial genomes via alignment-free sequence identification
    </description>
    <macros>
        <import>macro.xml</import>
    </macros>
        <expand macro='xrefs'/>
        <expand macro="requirements" />
        <expand macro="version_command" />

  <command detect_errors="aggressive"><![CDATA[
        bakta
        #*======================================
                    Bakta database
        ======================================*#
            --db '$input_option.db_select.fields.path'
            #if $input_option.min_contig_length
                --min-contig-length $input_option.min_contig_length
            #end if
            --prefix 'bakta_output'
        #*======================================
                  Organism options
              genus/species/strain/plasmid
        ======================================*#
            #if $organism.genus
                '$organism.genus'
            #end if
            #if $organism.species
                '$organism.species'
            #end if
            #if $organism.strain
                '$organism.strain'
            #end if
            #if $organism.plasmid
                '$organism.plasmid'
            #end if
        #*======================================
                    Annotation options
            gram type, prodigal/protein file
        ======================================*#
            $annotation.complete
            #if $annotation.prodigal
                --prodigal-tf '$annotation.prodigal'
            #end if
            $annotation.keep_contig_headers
            #if $annotation.replicons
                '$annotation.replicons'
            #end if
            $annotation.compliant
            #if $annotation.proteins
                '$annotation.proteins'
            #end if
        #*======================================
                    Workflow OPTIONS
         skip some step of the bakta analysis
        ======================================*#
            $workflow.skip_trna
            $workflow.skip_tmrna
            $workflow.skip_rrna
            $workflow.skip_ncrna
            $workflow.skip_ncrna_region
            $workflow.skip_crispr
            $workflow.skip_cds
            $workflow.skip_sorf
            $workflow.skip_gap
            $workflow.skip_ori
        #*======================================
                        Genome file
        ======================================*#
            '$input_option.input_file'
        #*======================================
                    LOG file
        ======================================*#
            &> '$logfile'
        ]]></command>

    <inputs>
      <!-- DB and file INPUT -->
        <section name="input_option" title="Input/Output options" expanded="true">
            <param name="db_select" type="select" label="The bakta database">
                <options from_data_table="bakta_database">
                    <validator message="No bakta database is available" type="no_options"/>
                </options>
            </param>
            <param name="input_file" type="data" format="fasta,fa,fna,zip" label="Select genome in (zipped) fasta format"/>
            <param name="min_contig_length" type="integer" optional="true" min="0" value="1" label="Minimum contig size" help="Minimum contig size (default = 1; 200 in compliant mode) (--min-contig-length)"/>
        </section>
        <!-- Organism INFORMATION OPTIONS -->
        <section name="organism" title="Optional organism options" expanded="false">
            <param argument="--genus" type="text" optional="true" label="Specify genus name" help="ex. Escherichia" />
            <param argument="--species" type="text" optional="true" label="Specify species name" help="ex. 'coli O157:H7'" />
            <param argument="--strain" type="text" optional="true" label="Specify strain name" help="ex. Sakai" />
            <param argument="--plasmid" type="text" optional="true" label="Specify plasmid name" help="ex. pOSAK1" />
        </section>
        <!-- ANNOTATION -->
        <section name="annotation" title="Optional annotation">
            <param argument="--complete" type="boolean" truevalue="--complete" falsevalue="" label="All sequences are complete replicons (chromosome/plasmid[s])" help="--complete"/>
            <param name="prodigal" type="data" format="tf" optional="true" label="Prodigal training file for CDS prediction" help="--prodigal-tf"/>
            <param argument="--gram" type="select" optional="true" label="Gram type for signal peptide predictions" help="Gram type +/- or unknown. Default: unknown">
                <option value="+">Gram+</option>
                <option value="-">Gram-</option>
                <option value="?" selected="true">Unknown</option>
            </param>
            <param name="keep_contig_headers" type="boolean" truevalue="--keep-contig-headers" falsevalue="" label="Keep original contig header (--keep-contig-headers)"/>
            <param argument="--replicons" type="data" format="tsv, csv" optional="true" label="Replicon information table (tsv/csv)" help=""/>
            <param argument="--compliant" type="boolean" truevalue="--compliant" falsevalue="" label="Force Genbank/ENA/DDJB compliance"/>
            <param argument="--proteins" type="data" format="fasta,faa" optional="true" label="Protein fasta file" help="Fasta file of trusted protein sequences for CDS annotation"/>
        </section>
        <!-- PARAMETER FOR WORKFLOW ANALYSIS -->
        <section name="workflow" title="Workflow option to skip steps">
            <param name="skip_trna"   type="boolean" truevalue="--skip-trna" falsevalue="" label="Skip tRNA detection and annotation" help="(--skip-trna)"/>
            <param name="skip_tmrna"  type="boolean" truevalue="--skip-tmrna" falsevalue="" label="Skip tmRNA detection and annotation" help="(--skip-tmrna)"/>
            <param name="skip_rrna"  type="boolean" truevalue="--skip-rrna" falsevalue="" label=" Skip rRNA detection and annotation" help="(--skip-rrna)"/>
            <param name="skip_ncrna"  type="boolean" truevalue="--skip-ncrna" falsevalue="" label=" Skip ncRNA detection and annotation" help="(--skip-ncrna)"/>
            <param name="skip_ncrna_region" type="boolean" truevalue="--skip-ncrna-region" falsevalue="" label="Skip ncRNA region detection and annotation" help="(--skip-ncrna-region)"/>
            <param name="skip_crispr" type="boolean" truevalue="--skip-crispr" falsevalue="" label="Skip CRISPR array detection and annotation" help="(--skip-crispr)"/>
            <param name="skip_cds"    type="boolean" truevalue="--skip-cds"  falsevalue="" label="Skip CDS detection and annotation" help="(--skip-cds)"/>
            <param name="skip_sorf"   type="boolean" truevalue="--skip-sorf" falsevalue="" label="Skip sORF detection and annotation" help="(--skip-sorf)"/>
            <param name="skip_gap"    type="boolean" truevalue="--skip-gap" falsevalue="" label="Skip gap detection and annotation" help="(--skip-gap)"/>
            <param name="skip_ori"    type="boolean" truevalue="--skip-ori" falsevalue="" label="Skip oriC/oriT detection and annotation" help="(--skip_ori)"/>
        </section>
    </inputs>
    <outputs>
        <data name="logfile" format="txt" label="${tool.name} on ${on_string}: log file"/>
        <data name="annotation_tsv" format="tabular" from_work_dir="bakta_output.tsv" label="${tool.name} on ${on_string}: bakta_output.tsv"/>
        <data name="annotation_gff3" format="tabular" from_work_dir="bakta_output.gff3" label="${tool.name} on ${on_string}: bakta_output.gff3"/>
        <data name="annotation_gbff" format="tabular" from_work_dir="bakta_output.gbff" label="${tool.name} on ${on_string}: bakta_output.gbff"/>
        <data name="annotation_embl" format="tabular" from_work_dir="bakta_output.embl" label="${tool.name} on ${on_string}: bakta_output.embl"/>
        <data name="annotation_fna" format="fasta" from_work_dir="bakta_output.fna" label="${tool.name} on ${on_string}: bakta_output.fna"/>
        <data name="annotation_ffn" format="fasta" from_work_dir="bakta_output.ffn" label="${tool.name} on ${on_string}: bakta_output.ffn"/>
        <data name="annotation_faa" format="fasta" from_work_dir="bakta_output.faa" label="${tool.name} on ${on_string}: bakta_output.faa"/>
        <data name="hypotheticals_tsv" format="tabular" from_work_dir="bakta_output.hypotheticals.tsv" label="${tool.name} on ${on_string}: bakta_output.hypotheticals.tsv"/>
        <data name="hypotheticals_faa" format="fasta" from_work_dir="bakta_output.hypotheticals.faa" label="${tool.name} on ${on_string}: bakta_output.hypotheticals.faa"/>
        <data name="summary_txt" format="txt" from_work_dir="bakta_output.txt" label="${tool.name} on ${on_string}: bakta_output.txt"/>
        <data name="annotation_json" format="json" from_work_dir="bakta_output.json" label="${tool.name} on ${on_string}: bakta_output.json"/>
    </outputs>

    <tests>
      <test expect_num_outputs="12"> <!-- TEST_1 -->
          <section name="input_option" >
              <param name="db_select" value="test-db-bakta"/>
              <param name="input_file" value="GCF_000008865.2.fna.gz"/>
          </section>
          <output name="logfile" value="TEST_1/TEST_1.log"/>
          <output name="annotation_tsv" value="TEST_1/TEST_1.tsv"/>
          <output name="annotation_gff3" value="TEST_1/TEST_1.gff3"/>
          <output name="annotation_gbff" value="TEST_1/TEST_1.gbff"/>
          <output name="annotation_embl" value="TEST_1/TEST_1.embl"/>
          <output name="annotation_fna" value="TEST_1/TEST_1.fna"/>
          <output name="annotation_ffn" value="TEST_1/TEST_1.ffn"/>
          <output name="annotation_faa" value="TEST_1/TEST_1.faa"/>
          <output name="hypotheticals_tsv" value="TEST_1/TEST_1.hypotheticals.tsv"/>
          <output name="hypotheticals_faa" value="TEST_1/TEST_1.hypotheticals.faa"/>
          <output name="summary_txt" value="TEST_1/TEST_1.txt"/>
          <output name="annotation_json" value="TEST_1/TEST_1.json"/>
      </test>
    </tests>

    <help><![CDATA[
        usage: bakta [--db DB] [--min-contig-length MIN_CONTIG_LENGTH]
             [--prefix PREFIX] [--output OUTPUT] [--genus GENUS]
             [--species SPECIES] [--strain STRAIN] [--plasmid PLASMID]
             [--complete] [--prodigal-tf PRODIGAL_TF]
             [--translation-table {11,4}] [--gram {+,-,?}] [--locus LOCUS]
             [--locus-tag LOCUS_TAG] [--keep-contig-headers]
             [--replicons REPLICONS] [--compliant] [--proteins PROTEINS]
             [--skip-trna] [--skip-tmrna] [--skip-rrna] [--skip-ncrna]
             [--skip-ncrna-region] [--skip-crispr] [--skip-cds] [--skip-sorf]
             [--skip-gap] [--skip-ori] [--help] [--verbose]
             [--threads THREADS] [--tmp-dir TMP_DIR] [--version]
             <genome>

Rapid & standardized annotation of bacterial genomes, MAGs & plasmids

positional arguments:
  <genome>                      Genome sequences in (zipped) fasta format

Input / Output:
  --db DB, -d DB        Database path (default = <bakta_path>/db). Can also be
                        provided as BAKTA_DB environment variable.
  --min-contig-length MIN_CONTIG_LENGTH, -m MIN_CONTIG_LENGTH
                        Minimum contig size (default = 1; 200 in compliant
                        mode)
  --prefix PREFIX, -p PREFIX
                        Prefix for output files
  --output OUTPUT, -o OUTPUT
                        Output directory (default = current working directory)

Organism:
  --genus GENUS         Genus name
  --species SPECIES     Species name
  --strain STRAIN       Strain name
  --plasmid PLASMID     Plasmid name

Annotation:
  --complete                    All sequences are complete replicons (chromosome/plasmid[s])
  --prodigal-tf PRODIGAL_TF     Path to existing Prodigal training file to use for CDS prediction

  --translation-table {11,4}    Translation table: 11/4 (default = 11)
  --gram {+,-,?}                Gram type for signal peptide predictions: +/-/? (default = ?)
  --locus LOCUS                 Locus prefix (default = 'contig')
  --locus-tag LOCUS_TAG         Locus tag prefix (default = autogenerated)
  --keep-contig-headers         Keep original contig headers
  --replicons REPLICONS         Replicon information table (tsv/csv)
  --compliant                   Force Genbank/ENA/DDJB compliance
  --proteins PROTEINS   Fasta file of trusted protein sequences for CDS annotation


Workflow:
  --skip-trna           Skip tRNA detection & annotation
  --skip-tmrna          Skip tmRNA detection & annotation
  --skip-rrna           Skip rRNA detection & annotation
  --skip-ncrna          Skip ncRNA detection & annotation
  --skip-ncrna-region   Skip ncRNA region detection & annotation
  --skip-crispr         Skip CRISPR array detection & annotation
  --skip-cds            Skip CDS detection & annotation
  --skip-sorf           Skip sORF detection & annotation
  --skip-gap            Skip gap detection & annotation
  --skip-ori            Skip oriC/oriT detection & annotation

General:
  --help, -h            Show this help message and exit
  --verbose, -v         Print verbose information
  --threads THREADS, -t THREADS
                        Number of threads to use (default = number of
                        available CPUs)
  --tmp-dir TMP_DIR     Location for temporary files (default = system
                        dependent auto detection)
  --version             show program's version number and exit


    ]]></help>
    <expand macro="citations"/>
</tool>
