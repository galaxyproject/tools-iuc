<tool id="pimento_std" name="PIMENTO Standard primer matching" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" license="@LICENSE@">
    <description>Finds best-matching primers in reads using a fuzzy search against a standard primer library</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="creators"/>
    <expand macro="requirements"/>
    <command detect_errors="aggressive"><![CDATA[
        #if $primers:
            mkdir primers &&
            cp '$primers' primers &&
            pimento std -i '$input_reads' -p primers --minimum_primer_threshold $minimum_primer_threshold $merged -o sample
        #else
            pimento std -i '$input_reads' --minimum_primer_threshold $minimum_primer_threshold $merged -o sample
        #end if
    ]]></command>
    <inputs>
        <param name="input_reads" type="data" label="Input reads" format="fastqsanger.gz"/>
        <param name="primers" type="data" label="Input standard primers" format="fasta" optional="true"/>
        <param argument="--minimum_primer_threshold" type="float" value="0.6" min="0.1" max="1.0" label="Minimum primer threshold" help="Any primers with a read proportion lower than this threshold are disregarded"/>
        <param argument="--merged" type="boolean" truevalue="--merged" falsevalue="" help="Necessary if the input sequence file is made up of merged paired-end or single-end reads"/>
    </inputs>    
    <outputs>
        <data name="fasta_output" label="${tool.name} on ${on_string}: FASTA containing best found single or pairs of primers" format="fasta" from_work_dir="sample_std_primers.fasta"/>
        <data name="best_found_primers" label="${tool.name} on ${on_string}: Best found primers" format="txt" from_work_dir="sample_std_primer_out.txt"/>
        <data name="searched_primers" label="${tool.name} on ${on_string}: Every single searched primer" format="txt" from_work_dir="all_standard_primer_proportions.txt"/>
    </outputs>
    <tests>
        <test expect_num_outputs="3">
            <param name="input_reads" value="test.fastq.gz"/>
            <param name="minimum_primer_threshold" value="0.6"/>
            <param name="merged" value="true"/>
            <output name="fasta_output">
                <assert_contents>
                    <has_line line=">341F"/>
                    <has_line line="CCTACGGGNGGCWGCAG"/>
                    <has_n_lines n="4"/>
                </assert_contents>
            </output>
            <output name="best_found_primers">
                <assert_contents>
                    <has_line line="V3-V4"/>
                    <has_line line="341F: 0.984"/>
                    <has_line line="805R: 0.948"/>
                </assert_contents>
            </output>
            <output name="searched_primers">
                <assert_contents>
                    <has_line line="V3;341F:0.984"/>
                    <has_line line="V3;338F:0.0"/>
                    <has_n_lines n="148"/>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[ 
        Runs the standard primer matching strategy for primer inference. A library
        of standard primers will be searched in input reads using fuzzy regex to
        identify primers with high degrees of proportions. The best single, or pair,
        of primers found will be outputted into a FASTA file (provided any were
        indeed found). PIMENTO comes with its own standard primer library which will
        be used as a default. Users can however give their own custom input library,
        or extend the default library to suit their needs.
    ]]></help>
    <expand macro="citations"/>
</tool>
