<tool id="find_nested_alt_orfs" name="Find Nested Alternate ORFs (nAlt-ORFs)" version="@TOOL_VERSION@" profile="20.05">
    <description>from BED and 2bit/FASTA</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="edam_ontology"/>
    <expand macro="requirements">
        <requirement type="package" version="377">ucsc-fatotwobit</requirement>
    </expand>
    <version_command>find_nested_alt_orfs.py --version</version_command>
    <command detect_errors="exit_code"><![CDATA[
        #if $ref.ref_source == 'history':
            #if  $ref.ref_file.is_of_type('fasta'):
                #set $twobit_filename = "out.2bit"
                faToTwoBit '${ref.ref_file}' '$twobit_filename' -stripVersion &&
            #else:
                #set $twobit_filename = $ref.ref_file
            #end if
        #else:
            #set $twobit_filename = $ref.ref_loc.fields.path
        #end if
        find_nested_alt_orfs.py
            --twobit '$twobit_filename'

            --min_length '$min_length'

            --reference '${input.metadata.dbkey}'

            --bed '$input'

            #if $no_canonical_cds:
                --no_canonical_cds '$no_canonical_cds'
            #end if

            --translation_table '$translation_table'

            --bed_out '$bed_out'

            --peptide_fasta_out '$peptide_fasta_out'

            --naltorfs_fasta_out '$naltorfs_fasta_out'

            --cds_fasta_out '$cds_fasta_out'

            $unique_sequences

            #if $write_log:
                --log '$log'
            #end if
    ]]></command>
    <inputs>
        <param argument="--bed" name="input" type="data" format="bed" label="Gene BED" help="A BED file with 12 columns"/>
        <conditional name="ref">
            <param name="ref_source" type="select" label="Source for Genomic Sequence Data">
                <option value="cached">Locally cached genome</option>
                <option value="history">History dataset genome</option>
            </param>
            <when value="cached">
                <param argument="--twobit" name="ref_loc" type="select" label="Select reference genome">
                    <options from_data_table="twobit"/>
                </param>
            </when>
            <when value="history">
                <param argument="--twobit" name="ref_file" type="data" format="twobit,fasta" label="Reference genome"/>
            </when>
        </conditional>
        <param argument="--min_length" type="integer" value="150" min="1" label="Minimum length of peptide translation to report"/>
        <param argument="--unique_sequences" type="boolean" truevalue="--unique_sequences" falsevalue="" checked="True" label="Only report the first unique occurrence of an alternate sequence"/>
        <param argument="--no_canonical_cds" type="data" format="bed" optional="True" label="Do not report any alternate sequences that match a provided canonical CDS" help="A BED file with 12 columns"/>
        <expand macro="translation_table_select_parameter"/>
        <param name="write_log" type="boolean" truevalue="true" falsevalue="false" checked="True" label="Create log file"/>
    </inputs>
    <outputs>
        <data name="bed_out" format="bed" label="Find Nested nAlt-ORFs on ${on_string}: nAlt-ORFs.proBed">
            <actions>
                <action name="column_names" type="metadata" default="chrom,chromStart,chromEnd,name,score,strand,thickStart,thickEnd,itemRgb,blockCount,blockSizes,blockStarts,proteinAccession,peptideSequence,uniqueness,genomeReferenceVersion,psmScore,fdr,modifications,charge,expMassToCharge,calcMassToCharge,psmRank,datasetID,uri"/>
            </actions>
        </data>
        <data name="peptide_fasta_out" format="fasta" label="Find nAlt-ORFs on ${on_string}: peptide.fasta"/>
        <data name="naltorfs_fasta_out" format="fasta" label="Find nAlt-ORFs on ${on_string}: nAlt-ORFs.fasta"/>
        <data name="cds_fasta_out" format="fasta" label="Find nAlt-ORFs on ${on_string}: canonical CDS.fasta"/>
        <data name="log" format="txt" label="Find nAlt-ORFs on ${on_string}: log.txt">
            <filter>write_log</filter>
        </data>
    </outputs>
    <tests>
        <test>
            <param name="input" value="gencode_canonical.hg38.chr6_GL0002508.bed" dbkey="hg38" ftype="bed12"/>
            <conditional name="ref">
                <param name="ref_source" value="history"/>
                <param name="ref_file" value="hg38.chr6_GL000250v2_alt.2bit.gz" dbkey="hg38" ftype="twobit"/>
            </conditional>
            <param name="min_length" value="150"/>
            <param name="unique_sequences" value="true"/>
            <param name="no_canonical_cds" value="gencode_canonical.hg38.chr6_GL0002508.bed" dbkey="hg38" ftype="bed12"/>
            <param name="translation_table" value="1"/>
            <param name="write_log" value="true"/>
            <output name="bed_out" value="bed_out.bed"/>
            <output name="peptide_fasta_out" value="peptide_fasta_out.fasta"/>
            <output name="naltorfs_fasta_out" value="naltorfs_fasta_out.fasta"/>
            <output name="cds_fasta_out" value="cds_fasta_out.fasta"/>
            <output name="log" value="find_naltorfs_log.txt"/>
        </test>
    </tests>
    <help><![CDATA[
Find Nested Alternate Open Reading Frames (nAlt-ORFs).

Using a BED12 file containing the location of genes, and a matching reference genome,
this tool searches in the alternate reading frames of the provided canonical coding sequence,
and outputs nested alternate ORFs which match the provided thresholds.

Translation table identifiers are based upon NCBI standards (https://www.ncbi.nlm.nih.gov/Taxonomy/Utils/wprintgc.cgi).
    ]]></help>
    <expand macro="citations"/>
</tool>
