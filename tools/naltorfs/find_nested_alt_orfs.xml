<tool id="find_nested_alt_orfs" name="Find Nested Alternate ORFs (nAlt-ORFs)" version="@VERSION@" profile="20.05">
    <description>from BED and 2bit</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <version_command>find_nested_alt_orfs.py --version</version_command>
    <command detect_errors="exit_code"><![CDATA[
        find_nested_alt_orfs.py
            #if $ref.ref_source == 'cached':
                --twobit '${ref.ref_loc.fields.path}'
            #elif $ref.ref_source == 'history':
                --twobit '${ref.ref_file}'
            #end if

            --min_length '$min_length'


            --reference '${input.metadata.dbkey}'

            --bed '$input'

            #if $no_canonical_cds:
                --no_canonical_cds '$no_canonical_cds'
            #end if

            --bed_out '$bed_out'

            --peptide_fasta_out '$peptide_fasta_out'

            --naltorfs_fasta_out '$naltorfs_fasta_out'

            --cds_fasta_out '$cds_fasta_out'

            $unique_sequences

            --log '$log'
    ]]></command>
    <inputs>
        <param name="input" type="data" format="bed" label="A BED file with 12 columns" help="A BED file with 12 columns"/>
        <conditional name="ref">
            <param name="ref_source" type="select" label="Source for Genomic Sequence Data">
                <option value="cached">Locally cached twobit</option>
                <option value="history">History dataset twobit</option>
            </param>
            <when value="cached">
                <param name="ref_loc" type="select" label="Select reference 2bit file">
                    <options from_data_table="twobit"/>
                </param>
            </when>
            <when value="history">
                <param name="ref_file" type="data" format="twobit" label="reference 2bit file"/>
            </when>
        </conditional>
        <param name="min_length" type="integer" value="150" min="1" label="Minimum length of peptide translation to report"/>
        <param name="unique_sequences" type="boolean" truevalue="--unique_sequences" falsevalue="" checked="True" label="Only report the first unique occurrence of an alternate sequence"/>
        <param name="no_canonical_cds" type="data" format="bed" optional="True" label="Do not report any alternate sequences that match a provided canonical CDS" help="A BED file with 12 columns"/>
    </inputs>
    <outputs>
        <data name="bed_out" format="bed" label="Find Nested nAlt-ORFs on ${on_string} ${input.name}.proBed">
            <actions>
                <action name="column_names" type="metadata" default="chrom,chromStart,chromEnd,name,score,strand,thickStart,thickEnd,itemRgb,blockCount,blockSizes,blockStarts,proteinAccession,peptideSequence,uniqueness,genomeReferenceVersion,psmScore,fdr,modifications,charge,expMassToCharge,calcMassToCharge,psmRank,datasetID,uri"/>
            </actions>
        </data>
        <data name="peptide_fasta_out" format="fasta" label="Find nAlt-ORFs on ${on_string} ${input.name} peptide.fasta"/>
        <data name="naltorfs_fasta_out" format="fasta" label="Find nAlt-ORFs on ${on_string} ${input.name} nAlt-ORFs.fasta"/>
        <data name="cds_fasta_out" format="fasta" label="Find nAlt-ORFs on ${on_string} ${input.name} canonical CDS.fasta"/>
        <data name="log" format="txt" label="Find nAlt-ORFs on ${on_string} ${input.name} log.txt"/>
    </outputs>
    <tests>
        <test>
            <param name="input" value="gencode_canonical.hg38.chr6_GL0002508.bed" dbkey="hg38" ftype="bed12"/>
            <param name="ref|ref_source" value="history"/>
            <param name="ref|ref_file" value="hg38.chr6_GL000250v2_alt.2bit.gz" dbkey="hg38" ftype="twobit"/>
            <param name="min_length" value="150"/>
            <param name="unique_sequences" value="true"/>
            <param name="no_canonical_cds" value="gencode_canonical.hg38.chr6_GL0002508.bed" dbkey="hg38" ftype="bed12"/>
            <output name="bed_out" value="bed_out.bed"/>
            <output name="peptide_fasta_out" value="peptide_fasta_out.fasta"/>
            <output name="naltorfs_fasta_out" value="naltorfs_fasta_out.fasta"/>
            <output name="cds_fasta_out" value="cds_fasta_out.fasta"/>
            <output name="log" value="find_naltorfs_log.txt"/>
        </test>
    </tests>
    <help><![CDATA[
Find Nested Alternate ORFs (nAlt-ORFs)
    ]]></help>
    <expand macro="citations"/>
</tool>
