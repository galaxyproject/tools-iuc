<tool id="ucsc_netfilter" name="netFilter" version="@TOOL_VERSION@+galaxy0" profile="21.05" license="MIT">
    <description>
        Filter out parts of net
    </description>
    <macros>
        <token name="@TOOL_VERSION@">469</token>
    </macros>
    <xrefs>
        <xref type="bio.tools">UCSC_Genome_Browser_Utilities</xref>
    </xrefs>
    <requirements>
        <requirement type="package" version="@TOOL_VERSION@">ucsc-netfilter</requirement>
    </requirements>
    <version_command><![CDATA[ echo "@TOOL_VERSION@" ]]></version_command>
    <command detect_errors="exit_code"><![CDATA[
    netFilter
        '$in_net'
        #if str($synteny.syn_filter) == "filtersyn"
            $synteny.syntype
            #if str($synteny.minSynScore)
                -minSynScore=$synteny.minSynScore
            #end if
            #if str($synteny.minSynSize)
                -minSynSize=$synteny.minSynSize
            #end if
            #if str($synteny.minSynAli)
                -minSynAli=$synteny.minSynAli
            #end if
        #end if
        #if str($minGap)
            -minGap=$minGap
        #end if
        > '$out'
    ]]></command>
    <inputs>
        <param name="in_net" format="ucsc.net" type="data" label="net dataset" help="" />

        <conditional name="synteny">
            <param name="syn_filter" type="select" label="Filter on synteny?">
                <option value="skipsyn" selected="true">no</option>
                <option value="filtersyn">yes</option>
            </param>
            <when value="skipsyn" />
            <when value="filtersyn">
                <param name="syntype" type="select" display="radio" label="Select synteny filter">
                    <option value="-syn" selected="true">filter on synteny tuned for human/mouse (-syn)</option>
                    <option value="-chimpSyn">filter on synteny tuned for human/chimp (-chimpSyn)</option>
                    <option value="-nonsyn">do inverse filtering based on synteny tuned for human/mouse (-nonsyn)</option>
                </param>
                <param argument="-minSynScore" type="integer" optional="true" label="Min syntenic block score" help="default 200,000: covers 27,000 bases including 9,000 aligning--a very stringent requirement." />
                <param argument="-minSynSize" type="integer" min="0" optional="true" label="Min syntenic block size" help="default 20,000" />
                <param argument="-minSynAli" type="integer" min="0" optional="true" label="Min syntenic alignment size" help="default 10,000" />
            </when>
        </conditional>

        <param argument="-minGap" type="integer" min="0" optional="true" label="Minimum gap" help="Restrict to those with gap size (tSize) >= minSize" />
    </inputs>
    <outputs>
        <data name="out" format="ucsc.net" />
    </outputs>
    <tests>
        <test expect_num_outputs="1">
            <param name="in_net" value="in.ucsc.net" />
            <conditional name="synteny">
                <param name="syn_filter" value="filtersyn" />
                <param name="syntype" value="-chimpSyn" />
            </conditional>
            <param name="minGap" value="300" />
            <output name="out" file="out.ucsc.net" />
        </test>
    </tests>
    <help><![CDATA[
**What it does**

`netFilter`_ is a tool to filter out parts of `net`_. What passes filter goes to output. Note a net is a recursive data structure. If a parent fails to pass the filter, the children are not even considered.

For implementation details see netFilter's `source code`_.

.. _netFilter: http://hgdownload.cse.ucsc.edu/admin/exe/linux.x86_64/FOOTER.txt
.. _net: https://genome.ucsc.edu/goldenPath/help/net.html
.. _source code: https://github.com/ucscGenomeBrowser/kent/blob/master/src/hg/mouseStuff/netFilter/netFilter.c
    ]]>    </help>
    <citations>
        <citation type="doi">10.1093/bib/bbs038</citation>
    </citations>
</tool>
