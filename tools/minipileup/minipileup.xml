<tool id="minipileup" name="minipileup" version="0.1.0+galaxy0" python_template_version="3.5" profile="21.05">
    <description>a simple variant caller</description>
    <requirements>
        <requirement type="package" version="1.4b">minipileup</requirement>
        <requirement type="package" version="1.21">samtools</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        #if str($reference_source.ref_selector) == 'history':
            #set $reference_fasta_fn = 'reference.fa'
            ln -s '$reference_source.f' $reference_fasta_fn &&
            samtools faidx $reference_fasta_fn 2>&1 || echo "Error running samtools faidx for indexing fasta reference for minipileup" >&2 &&
        #else
            #set $reference_fasta_fn = str($reference_source.f.fields.path)
        #end if
        minipileup
        -f $reference_fasta_fn
        ${general.y}
        ${general.v}
        ${general.c}
        ${general.C}
        ${a_filter.P}
        #if str($a_filter.q):
        -q '${a_filter.q}'
        #end if
        -l '${a_filter.q}'
        -s '${a_filter.q}'

     '$bam' > '$variants'
    ]]></command>
    <inputs>
        <conditional name="reference_source">
            <param name="ref_selector" type="select"
            label="Choose the source for the reference genome">
                <option value="cached">Locally cached</option>
                <option value="history">History</option>
            </param>
            <when value="cached">
                <param name="f" argument="-f" type="select"
                label="Reference genome">
                    <options from_data_table="fasta_indexes">
                        <filter type="data_meta" column="dbkey" key="dbkey" ref="bam" />
                        <validator type="no_options" message="A built-in reference genome is not available for the build associated with the selected input file" />
                    </options>
                </param>
            </when>
            <when value="history">
                <param name="f" argument="-f" type="data" format="fasta" label="Reference" help="Reference sequence" />
            </when>
        </conditional>


        <param type="data" name="bam" label="Aligned reads" help="Reads in BAM format" format="bam" />
        <section name="general" title="General options" expanded="false" help="General settings">
            <param optional="true" type="boolean" name="y" label="Run in variant calling mode" help="Equivalent to -vcC -a2 -s5 -q30 -Q20"   argument="-y" truevalue="-y" falsevalue="" checked="true"/>
            <param optional="true" type="boolean" name="v" label="Show variants only" help="Only changed sites will be shown if Yes"         argument="-v" truevalue="-v" falsevalue="" checked="false"/>
            <param optional="true" type="boolean" name="c" label="Output VCF format" help="Output will be formatted as a VCF file"           argument="-c" truevalue="-c" falsevalue="" checked="false"/>
            <param optional="true" type="boolean" name="C" label="Show count of alleles of both strands" help="Useful assessing strand bias" argument="-C" truevalue="-C" falsevalue="" checked="false"/>
        </section>
        <section name="a_filer" title="Alignment filters" expanded="false" help="Filters related to alignment between reads and reference">
            <param optional="true" type="boolean" name="P" label="Only consider properly paired reads" help="Only calls variants in properly paired reads" argument="-P" truevalue="-P" falsevalue="" checked="false"/>
            <param optional="true" type="integer" name="q" label="Set minimum mapping quality" help="Reads with mapping quality below this value will not be included"      min="0" max="100" default_value="0" value="0" argument="-q"/> 
            <param optional="true" type="integer" name="l" label="Set minimum alignment length" help="Reads aligningfor less than this many bases will not be considered"   min="0"           default_value="0" value="0" argument="-l"/> 
            <param optional="true" type="integer" name="S" label="Set minimum supplementary alignment length" help="Similar to above but for supplemental alignments"       min="0"           default_value="0" value="0" argument="-S"/> 
        </section>
        <section name="s_filer" title="Site filters" expanded="false" help="Filters related to individual bases">
            <param optional="true" type="integer" name="Q" label="Set minimum base quality" help="Bases with quality below this value will not be included"                 min="0" max="100" default_value="0" value="0" argument="-Q"/> 
            <param optional="true" type="integer" name="T" label="Skip bases within that distance from both ends of the read" help="Useful when quality drops towards ends" min="0"           default_value="0" value="0" argument="-T"/> 
            <param optional="true" type="integer" name="s" label="Drop alleles below this depth" help="Do not call variants supported by less than this number of reads"    min="0"           default_value="1" value="1" argument="-s"/> 
            <param optional="true" type="integer" name="a" label="Drop alleles below this depth on either strand" help="Same as above but strand-specific"                  min="0"           default_value="0" value="0" argument="-a"/> 
            <param optional="true" type="float"   name="p" label="Drop allele if its faction less than" help="Exclude alleles below this frequency"                         min="0"           default_value="0" value="0" argument="-p"/>
        </section>
    </inputs>
    <outputs>
        <data name="variants" format="vcf" />
    </outputs>
    <tests>
        <test>
            <param name="input1" value="ref.fa"/>
            <param name="input2" value="aln1.bam"/>
            <output name="output1" file="var.vcf"/>
        </test>
    </tests>
    <help><![CDATA[
        Usage: minipileup [options] in1.bam [in2.bam [...]]
Options:
  General:
    -f FILE      reference genome [null]
    -v           show variants only
    -c           output in the VCF format (force -v)
    -C           show count of each allele on both strands
    -e           use '*' to mark deleted bases
    -y           variant calling mode (-vcC -a2 -s5 -q30 -Q20)
    -V           print version number
  Alignment filter:
    -r STR       region in format of 'ctg:start-end' [null]
    -b FILE      BED or position list file to include [null]
    -P           only consider properly paired reads for paired-end reads
    -q INT       minimum mapping quality [0]
    -l INT       minimum alignment length [0]
    -S INT       minimum supplementary alignment length [0]
  Site filter:
    -Q INT       minimum base quality [0]
    -T INT       skip bases within INT-bp from either end of a read [0]
    -s INT       drop alleles with depth<INT [1]
    -a INT       drop alleles with depth<INT on either strand [0]
    -p FLOAT     drop an allele if the allele fraction is below FLOAT [0]

    ]]></help>
</tool>