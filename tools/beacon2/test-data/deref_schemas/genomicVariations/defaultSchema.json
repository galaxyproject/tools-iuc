{
    "$comment": "version: ga4gh-beacon-variant-v2.0.0",
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "additionalProperties": true,
    "definitions": {
        "CaseLevelVariant": {
            "description": "",
            "properties": {
                "alleleOrigin": {
                    "$schema": "https://json-schema.org/draft/2020-12/schema",
                    "additionalProperties": true,
                    "definitions": {
                        "CURIE": {
                            "description": "A CURIE identifier for an ontology term.",
                            "examples": [
                                "ga4gh:GA.01234abcde",
                                "DUO:0000004",
                                "orcid:0000-0003-3463-0775",
                                "PMID:15254584"
                            ],
                            "pattern": "^\\w[^:]+:.+$",
                            "type": "string"
                        }
                    },
                    "description": "Definition of an ontology term.",
                    "properties": {
                        "id": {
                            "description": "A CURIE identifier for an ontology term.",
                            "examples": [
                                "ga4gh:GA.01234abcde",
                                "DUO:0000004",
                                "orcid:0000-0003-3463-0775",
                                "PMID:15254584"
                            ],
                            "pattern": "^\\w[^:]+:.+$",
                            "type": "string"
                        },
                        "label": {
                            "description": "The text that describes the term. By default it could be the preferred text of the term, but is it acceptable to customize it for a clearer description and understanding of the term in an specific context.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "id"
                    ],
                    "title": "Ontology Term",
                    "type": "object"
                },
                "analysisId": {
                    "description": "Reference to the bioinformatics analysis ID (`analysis.id`)",
                    "examples": [
                        "pgxcs-kftvldsu"
                    ],
                    "type": "string"
                },
                "biosampleId": {
                    "description": "Reference to biosample ID (`biosample.id`)",
                    "examples": [
                        "bs001104"
                    ],
                    "type": "string"
                },
                "clinicalInterpretations": {
                    "items": {
                        "description": "List of annotated effects on disease or phenotypes.",
                        "properties": {
                            "annotatedWith": {
                                "properties": {
                                    "toolName": {
                                        "description": "Name of the tool.",
                                        "examples": [
                                            "Ensembl Variant Effect Predictor (VEP)"
                                        ],
                                        "type": "string"
                                    },
                                    "toolReferences": {
                                        "additionalProperties": true,
                                        "description": "References to the tool",
                                        "examples": [
                                            {
                                                "bio.toolsId": "https://bio.tools/vep"
                                            },
                                            {
                                                "url": "http://www.ensembl.org/vep"
                                            }
                                        ],
                                        "minProperties": 1,
                                        "properties": {},
                                        "type": "object"
                                    },
                                    "version": {
                                        "description": "Version used.",
                                        "examples": [
                                            "rel 104"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "toolName",
                                    "version",
                                    "toolReferences"
                                ],
                                "type": "object"
                            },
                            "category": {
                                "$schema": "https://json-schema.org/draft/2020-12/schema",
                                "additionalProperties": true,
                                "definitions": {
                                    "CURIE": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    }
                                },
                                "description": "Definition of an ontology term.",
                                "properties": {
                                    "id": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    },
                                    "label": {
                                        "description": "The text that describes the term. By default it could be the preferred text of the term, but is it acceptable to customize it for a clearer description and understanding of the term in an specific context.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "Ontology Term",
                                "type": "object"
                            },
                            "clinicalRelevance": {
                                "description": "A value from the five-tiered classification from the American College of Medical Genetics (ACMG) designed to describe the likelihood that a genomic sequence variant is causative of an inherited disease. (NCIT:C168798).",
                                "enum": [
                                    "benign",
                                    "likely benign",
                                    "uncertain significance",
                                    "likely pathogenic",
                                    "pathogenic"
                                ],
                                "example": "pathogenic",
                                "type": "string"
                            },
                            "conditionId": {
                                "description": "Internal identifier of the phenotype or clinical effect.",
                                "examples": [
                                    "disease1",
                                    "phen2234"
                                ],
                                "type": "string"
                            },
                            "effect": {
                                "$schema": "https://json-schema.org/draft/2020-12/schema",
                                "additionalProperties": true,
                                "definitions": {
                                    "CURIE": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    }
                                },
                                "description": "Definition of an ontology term.",
                                "properties": {
                                    "id": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    },
                                    "label": {
                                        "description": "The text that describes the term. By default it could be the preferred text of the term, but is it acceptable to customize it for a clearer description and understanding of the term in an specific context.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "Ontology Term",
                                "type": "object"
                            },
                            "evidenceType": {
                                "$schema": "https://json-schema.org/draft/2020-12/schema",
                                "additionalProperties": true,
                                "definitions": {
                                    "CURIE": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    }
                                },
                                "description": "Definition of an ontology term.",
                                "properties": {
                                    "id": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    },
                                    "label": {
                                        "description": "The text that describes the term. By default it could be the preferred text of the term, but is it acceptable to customize it for a clearer description and understanding of the term in an specific context.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "Ontology Term",
                                "type": "object"
                            }
                        },
                        "required": [
                            "conditionId",
                            "effect"
                        ],
                        "type": "object"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "Internal id of this case level *instance* of the variant. This is an optional housekeeping parameter and should not be confused with the identifier of the variant (`variantInternalId`).",
                    "examples": [
                        "id0001-var101101118"
                    ],
                    "type": "string"
                },
                "individualId": {
                    "description": "Reference to individual ID (`individual.id`)",
                    "examples": [
                        "ind0001"
                    ],
                    "type": "string"
                },
                "phenotypicEffects": {
                    "items": {
                        "description": "List of annotated effects on disease or phenotypes.",
                        "properties": {
                            "annotatedWith": {
                                "properties": {
                                    "toolName": {
                                        "description": "Name of the tool.",
                                        "examples": [
                                            "Ensembl Variant Effect Predictor (VEP)"
                                        ],
                                        "type": "string"
                                    },
                                    "toolReferences": {
                                        "additionalProperties": true,
                                        "description": "References to the tool",
                                        "examples": [
                                            {
                                                "bio.toolsId": "https://bio.tools/vep"
                                            },
                                            {
                                                "url": "http://www.ensembl.org/vep"
                                            }
                                        ],
                                        "minProperties": 1,
                                        "properties": {},
                                        "type": "object"
                                    },
                                    "version": {
                                        "description": "Version used.",
                                        "examples": [
                                            "rel 104"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "toolName",
                                    "version",
                                    "toolReferences"
                                ],
                                "type": "object"
                            },
                            "category": {
                                "$schema": "https://json-schema.org/draft/2020-12/schema",
                                "additionalProperties": true,
                                "definitions": {
                                    "CURIE": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    }
                                },
                                "description": "Definition of an ontology term.",
                                "properties": {
                                    "id": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    },
                                    "label": {
                                        "description": "The text that describes the term. By default it could be the preferred text of the term, but is it acceptable to customize it for a clearer description and understanding of the term in an specific context.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "Ontology Term",
                                "type": "object"
                            },
                            "clinicalRelevance": {
                                "description": "A value from the five-tiered classification from the American College of Medical Genetics (ACMG) designed to describe the likelihood that a genomic sequence variant is causative of an inherited disease. (NCIT:C168798).",
                                "enum": [
                                    "benign",
                                    "likely benign",
                                    "uncertain significance",
                                    "likely pathogenic",
                                    "pathogenic"
                                ],
                                "example": "pathogenic",
                                "type": "string"
                            },
                            "conditionId": {
                                "description": "Internal identifier of the phenotype or clinical effect.",
                                "examples": [
                                    "disease1",
                                    "phen2234"
                                ],
                                "type": "string"
                            },
                            "effect": {
                                "$schema": "https://json-schema.org/draft/2020-12/schema",
                                "additionalProperties": true,
                                "definitions": {
                                    "CURIE": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    }
                                },
                                "description": "Definition of an ontology term.",
                                "properties": {
                                    "id": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    },
                                    "label": {
                                        "description": "The text that describes the term. By default it could be the preferred text of the term, but is it acceptable to customize it for a clearer description and understanding of the term in an specific context.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "Ontology Term",
                                "type": "object"
                            },
                            "evidenceType": {
                                "$schema": "https://json-schema.org/draft/2020-12/schema",
                                "additionalProperties": true,
                                "definitions": {
                                    "CURIE": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    }
                                },
                                "description": "Definition of an ontology term.",
                                "properties": {
                                    "id": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    },
                                    "label": {
                                        "description": "The text that describes the term. By default it could be the preferred text of the term, but is it acceptable to customize it for a clearer description and understanding of the term in an specific context.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "Ontology Term",
                                "type": "object"
                            }
                        },
                        "required": [
                            "conditionId",
                            "effect"
                        ],
                        "type": "object"
                    },
                    "type": "array"
                },
                "runId": {
                    "description": "Reference to the experimental run ID (`run.id`)",
                    "examples": [
                        "SRR10903401"
                    ],
                    "type": "string"
                },
                "zygosity": {
                    "$schema": "https://json-schema.org/draft/2020-12/schema",
                    "additionalProperties": true,
                    "definitions": {
                        "CURIE": {
                            "description": "A CURIE identifier for an ontology term.",
                            "examples": [
                                "ga4gh:GA.01234abcde",
                                "DUO:0000004",
                                "orcid:0000-0003-3463-0775",
                                "PMID:15254584"
                            ],
                            "pattern": "^\\w[^:]+:.+$",
                            "type": "string"
                        }
                    },
                    "description": "Definition of an ontology term.",
                    "properties": {
                        "id": {
                            "description": "A CURIE identifier for an ontology term.",
                            "examples": [
                                "ga4gh:GA.01234abcde",
                                "DUO:0000004",
                                "orcid:0000-0003-3463-0775",
                                "PMID:15254584"
                            ],
                            "pattern": "^\\w[^:]+:.+$",
                            "type": "string"
                        },
                        "label": {
                            "description": "The text that describes the term. By default it could be the preferred text of the term, but is it acceptable to customize it for a clearer description and understanding of the term in an specific context.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "id"
                    ],
                    "title": "Ontology Term",
                    "type": "object"
                }
            },
            "required": [
                "biosampleId"
            ],
            "type": "object"
        },
        "FrequencyInPopulations": {
            "properties": {
                "frequencies": {
                    "items": {
                        "properties": {
                            "alleleFrequency": {
                                "description": "Allele frequency between 0 and 1.",
                                "examples": [
                                    3.186e-05
                                ],
                                "type": "number"
                            },
                            "population": {
                                "description": "A name for the population. A population could an ethnic, geographical one or just the `members`of a study.",
                                "examples": [
                                    "East Asian",
                                    "ICGC Chronic Lymphocytic Leukemia-ES",
                                    "Men",
                                    "Children"
                                ],
                                "type": "string"
                            }
                        },
                        "required": [
                            "population",
                            "alleleFrequency"
                        ],
                        "type": "object"
                    },
                    "minItems": 1,
                    "type": "array"
                },
                "source": {
                    "description": "The study",
                    "examples": [
                        "The Genome Aggregation Database (gnomAD)",
                        "The European Genome-phenome Archive (EGA)"
                    ],
                    "type": "string"
                },
                "sourceReference": {
                    "description": "A reference to further documentation or details.",
                    "examples": [
                        "https://gnomad.broadinstitute.org/",
                        "https://ega-archive.org/"
                    ],
                    "type": "string"
                },
                "version": {
                    "description": "version of the source data.",
                    "examples": [
                        "gnomAD v3.1.1"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "source",
                "sourceReference",
                "frequencies"
            ],
            "type": "object"
        },
        "GenomicFeature": {
            "description": "Genomic feature(s) related to the variant. NOTE: Although genes could also be referenced using these attributes, they have an independent section to allow direct queries.",
            "properties": {
                "featureClass": {
                    "$schema": "https://json-schema.org/draft/2020-12/schema",
                    "additionalProperties": true,
                    "definitions": {
                        "CURIE": {
                            "description": "A CURIE identifier for an ontology term.",
                            "examples": [
                                "ga4gh:GA.01234abcde",
                                "DUO:0000004",
                                "orcid:0000-0003-3463-0775",
                                "PMID:15254584"
                            ],
                            "pattern": "^\\w[^:]+:.+$",
                            "type": "string"
                        }
                    },
                    "description": "Definition of an ontology term.",
                    "properties": {
                        "id": {
                            "description": "A CURIE identifier for an ontology term.",
                            "examples": [
                                "ga4gh:GA.01234abcde",
                                "DUO:0000004",
                                "orcid:0000-0003-3463-0775",
                                "PMID:15254584"
                            ],
                            "pattern": "^\\w[^:]+:.+$",
                            "type": "string"
                        },
                        "label": {
                            "description": "The text that describes the term. By default it could be the preferred text of the term, but is it acceptable to customize it for a clearer description and understanding of the term in an specific context.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "id"
                    ],
                    "title": "Ontology Term",
                    "type": "object"
                },
                "featureID": {
                    "$schema": "https://json-schema.org/draft/2020-12/schema",
                    "additionalProperties": true,
                    "definitions": {
                        "CURIE": {
                            "description": "A CURIE identifier for an ontology term.",
                            "examples": [
                                "ga4gh:GA.01234abcde",
                                "DUO:0000004",
                                "orcid:0000-0003-3463-0775",
                                "PMID:15254584"
                            ],
                            "pattern": "^\\w[^:]+:.+$",
                            "type": "string"
                        }
                    },
                    "description": "Definition of an ontology term.",
                    "properties": {
                        "id": {
                            "description": "A CURIE identifier for an ontology term.",
                            "examples": [
                                "ga4gh:GA.01234abcde",
                                "DUO:0000004",
                                "orcid:0000-0003-3463-0775",
                                "PMID:15254584"
                            ],
                            "pattern": "^\\w[^:]+:.+$",
                            "type": "string"
                        },
                        "label": {
                            "description": "The text that describes the term. By default it could be the preferred text of the term, but is it acceptable to customize it for a clearer description and understanding of the term in an specific context.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "id"
                    ],
                    "title": "Ontology Term",
                    "type": "object"
                }
            },
            "required": [
                "featureClass"
            ],
            "type": "object"
        },
        "Identifiers": {
            "properties": {
                "clinvarVariantId": {
                    "description": "ClinVar variant id. Other id values used by ClinVar can be added to `variantAlternativeIds`",
                    "examples": [
                        "clinvar:12345",
                        "9325"
                    ],
                    "pattern": "^(clinvar:)?\\d+$",
                    "type": "string"
                },
                "genomicHGVSId": {
                    "description": "HGVSId descriptor.",
                    "examples": [
                        "NC_000017.11:g.43057063G>A"
                    ],
                    "type": "string"
                },
                "proteinHGVSIds": {
                    "description": "List of HGVSId descriptor(s) at protein level (for protein-altering variants).",
                    "examples": [
                        [
                            "NP_009225.1:p.Glu1817Ter"
                        ],
                        [
                            "LRG 199p1:p.Val25Gly (preferred)"
                        ]
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "transcriptHGVSIds": {
                    "description": "List of HGVSId descriptor(s) at transcript level.",
                    "examples": [
                        [
                            "NC 000023.10(NM004006.2):c.357+1G"
                        ]
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "variantAlternativeIds": {
                    "description": "List of cross-referencing ID(s), for the variant in other databases (e.g. dbSNP, ClinVar, ClinGen, COSMIC), as `externalReferences` with CURIE(s).",
                    "examples": [
                        [
                            {
                                "id": "dbSNP:rs587780345",
                                "notes": "dbSNP id",
                                "reference": "https://www.ncbi.nlm.nih.gov/snp/rs587780345"
                            },
                            {
                                "id": "ClinGen:CA152954",
                                "notes": "ClinGen Allele Registry id",
                                "reference": "http://reg.clinicalgenome.org/redmine/projects/registry/genboree_registry/by_caid?caid=CA152954"
                            },
                            {
                                "id": "UniProtKB:P35557#VAR_003699",
                                "reference": "https://www.uniprot.org/uniprot/P35557#VAR_003699"
                            }
                        ],
                        [
                            {
                                "id": "OMIM:164757.0001",
                                "reference": "https://www.omim.org/entry/164757#0001"
                            }
                        ]
                    ],
                    "items": {
                        "$schema": "https://json-schema.org/draft/2020-12/schema",
                        "additionalProperties": true,
                        "description": "Definition of an external reference class. Provenance: GA4GH Phenopackets v2 `ExternalReference`",
                        "properties": {
                            "id": {
                                "description": "An application specific identifier. RECOMMENDED.",
                                "example": "PMID:34054918",
                                "type": "string"
                            },
                            "notes": {
                                "description": "An optional text descriptor. Renamed compared to GA4GH Phenopackets v2 `ExternalReference.description`",
                                "example": "Signatures of Discriminative Copy Number Aberrations in 31 Cancer Subtypes",
                                "type": "string"
                            },
                            "reference": {
                                "description": "A url.",
                                "example": "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8155688/",
                                "type": "string"
                            }
                        },
                        "required": [],
                        "title": "ExternalReference",
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "LegacyVariation": {
            "properties": {
                "alternateBases": {
                    "description": "Alternate bases for this variant (starting from `start`). * Accepted values: IUPAC codes for nucleotides (e.g. `https://www.bioinformatics.org/sms/iupac.html`). N is a wildcard, that denotes the position of any base, and can beused as a standalone base of any type or within a partially knownsequence. As example, a query of `ANNT` the Ns can take take any form of[ACGT] and will match `ANNT`, `ACNT`, `ACCT`, `ACGT` ... and so forth.* an *empty value* is used in the case of deletions with the maximally trimmed, deleted sequence being indicated in `ReferenceBases`* Categorical variant queries, e.g. such *not* being represented through sequence & position, make use of the `variantType` parameter. * Either `alternateBases` or `variantType` is required.",
                    "examples": [
                        "T",
                        "G",
                        "N",
                        "AG",
                        ""
                    ],
                    "pattern": "^([ACGTUNRYSWKMBDHV\\-\\.]*)$",
                    "type": "string"
                },
                "location": {
                    "description": "A contiguous segment of a biological sequence.",
                    "oneOf": [
                        {
                            "additionalProperties": false,
                            "description": "A Location on a chromosome defined by a species and chromosome name.",
                            "type": "object",
                            "properties": {
                                "_id": {
                                    "additionalProperties": false,
                                    "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                    "type": "string",
                                    "pattern": "^\\w[^:]*:.+$",
                                    "example": "ensembl:ENSG00000139618"
                                },
                                "type": {
                                    "type": "string",
                                    "const": "ChromosomeLocation",
                                    "default": "ChromosomeLocation",
                                    "description": "MUST be \"ChromosomeLocation\""
                                },
                                "species_id": {
                                    "additionalProperties": false,
                                    "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                    "type": "string",
                                    "pattern": "^\\w[^:]*:.+$",
                                    "example": "ensembl:ENSG00000139618"
                                },
                                "chr": {
                                    "type": "string",
                                    "description": "The symbolic chromosome name. For humans, For humans, chromosome names MUST be one of 1..22, X, Y (case-sensitive)"
                                },
                                "interval": {
                                    "description": "A contiguous span on a chromosome defined by cytoband features. The span includes the constituent regions described by the start and end cytobands, as well as any intervening regions.",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "const": "CytobandInterval",
                                            "default": "CytobandInterval",
                                            "description": "MUST be \"CytobandInterval\""
                                        },
                                        "start": {
                                            "additionalProperties": false,
                                            "description": "A character string representing cytobands derived from the *International System for Human Cytogenomic Nomenclature* (ISCN) [guidelines](http://doi.org/10.1159/isbn.978-3-318-06861-0).",
                                            "type": "string",
                                            "pattern": "^cen|[pq](ter|([1-9][0-9]*(\\.[1-9][0-9]*)?))$",
                                            "example": "q22.3"
                                        },
                                        "end": {
                                            "additionalProperties": false,
                                            "description": "A character string representing cytobands derived from the *International System for Human Cytogenomic Nomenclature* (ISCN) [guidelines](http://doi.org/10.1159/isbn.978-3-318-06861-0).",
                                            "type": "string",
                                            "pattern": "^cen|[pq](ter|([1-9][0-9]*(\\.[1-9][0-9]*)?))$",
                                            "example": "q22.3"
                                        }
                                    },
                                    "example": {
                                        "type": "CytobandInterval",
                                        "start": "q22.2",
                                        "end": "q22.3"
                                    },
                                    "required": [
                                        "end",
                                        "start",
                                        "type"
                                    ]
                                }
                            },
                            "required": [
                                "chr",
                                "interval",
                                "species_id",
                                "type"
                            ]
                        },
                        {
                            "additionalProperties": false,
                            "description": "A Location defined by an interval on a referenced Sequence.",
                            "type": "object",
                            "properties": {
                                "_id": {
                                    "additionalProperties": false,
                                    "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                    "type": "string",
                                    "pattern": "^\\w[^:]*:.+$",
                                    "example": "ensembl:ENSG00000139618"
                                },
                                "type": {
                                    "type": "string",
                                    "const": "SequenceLocation",
                                    "default": "SequenceLocation",
                                    "description": "MUST be \"SequenceLocation\""
                                },
                                "sequence_id": {
                                    "additionalProperties": false,
                                    "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                    "type": "string",
                                    "pattern": "^\\w[^:]*:.+$",
                                    "example": "ensembl:ENSG00000139618"
                                },
                                "interval": {
                                    "oneOf": [
                                        {
                                            "description": "A SequenceInterval represents a span on a Sequence. Positions are always represented by contiguous spans using interbase coordinates or coordinate ranges.",
                                            "type": "object",
                                            "additionalProperties": false,
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "const": "SequenceInterval",
                                                    "default": "SequenceInterval",
                                                    "description": "MUST be \"SequenceInterval\""
                                                },
                                                "start": {
                                                    "oneOf": [
                                                        {
                                                            "description": "A simple integer value as a VRS class.",
                                                            "type": "object",
                                                            "additionalProperties": false,
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string",
                                                                    "const": "Number",
                                                                    "default": "Number",
                                                                    "description": "MUST be \"Number\""
                                                                },
                                                                "value": {
                                                                    "type": "integer",
                                                                    "description": "The value represented by Number"
                                                                }
                                                            },
                                                            "required": [
                                                                "type",
                                                                "value"
                                                            ]
                                                        },
                                                        {
                                                            "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                            "type": "object",
                                                            "additionalProperties": false,
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string",
                                                                    "const": "IndefiniteRange",
                                                                    "default": "IndefiniteRange",
                                                                    "description": "MUST be \"IndefiniteRange\""
                                                                },
                                                                "value": {
                                                                    "type": "number",
                                                                    "description": "The bounded value; inclusive"
                                                                },
                                                                "comparator": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "<=",
                                                                        ">="
                                                                    ],
                                                                    "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                }
                                                            },
                                                            "required": [
                                                                "comparator",
                                                                "type",
                                                                "value"
                                                            ]
                                                        },
                                                        {
                                                            "description": "A bounded, inclusive range of numbers.",
                                                            "type": "object",
                                                            "additionalProperties": false,
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string",
                                                                    "const": "DefiniteRange",
                                                                    "default": "DefiniteRange",
                                                                    "description": "MUST be \"DefiniteRange\""
                                                                },
                                                                "min": {
                                                                    "type": "number",
                                                                    "description": "The minimum value; inclusive"
                                                                },
                                                                "max": {
                                                                    "type": "number",
                                                                    "description": "The maximum value; inclusive"
                                                                }
                                                            },
                                                            "required": [
                                                                "max",
                                                                "min",
                                                                "type"
                                                            ]
                                                        }
                                                    ],
                                                    "description": "The start coordinate or range of the interval. The minimum value of this coordinate or range is 0. MUST represent a coordinate or range less than the value of `end`."
                                                },
                                                "end": {
                                                    "oneOf": [
                                                        {
                                                            "description": "A simple integer value as a VRS class.",
                                                            "type": "object",
                                                            "additionalProperties": false,
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string",
                                                                    "const": "Number",
                                                                    "default": "Number",
                                                                    "description": "MUST be \"Number\""
                                                                },
                                                                "value": {
                                                                    "type": "integer",
                                                                    "description": "The value represented by Number"
                                                                }
                                                            },
                                                            "required": [
                                                                "type",
                                                                "value"
                                                            ]
                                                        },
                                                        {
                                                            "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                            "type": "object",
                                                            "additionalProperties": false,
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string",
                                                                    "const": "IndefiniteRange",
                                                                    "default": "IndefiniteRange",
                                                                    "description": "MUST be \"IndefiniteRange\""
                                                                },
                                                                "value": {
                                                                    "type": "number",
                                                                    "description": "The bounded value; inclusive"
                                                                },
                                                                "comparator": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "<=",
                                                                        ">="
                                                                    ],
                                                                    "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                }
                                                            },
                                                            "required": [
                                                                "comparator",
                                                                "type",
                                                                "value"
                                                            ]
                                                        },
                                                        {
                                                            "description": "A bounded, inclusive range of numbers.",
                                                            "type": "object",
                                                            "additionalProperties": false,
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string",
                                                                    "const": "DefiniteRange",
                                                                    "default": "DefiniteRange",
                                                                    "description": "MUST be \"DefiniteRange\""
                                                                },
                                                                "min": {
                                                                    "type": "number",
                                                                    "description": "The minimum value; inclusive"
                                                                },
                                                                "max": {
                                                                    "type": "number",
                                                                    "description": "The maximum value; inclusive"
                                                                }
                                                            },
                                                            "required": [
                                                                "max",
                                                                "min",
                                                                "type"
                                                            ]
                                                        }
                                                    ],
                                                    "description": "The end coordinate or range of the interval. The minimum value of this coordinate or range is 0. MUST represent a coordinate or range greater than the value of `start`."
                                                }
                                            },
                                            "allOf": [
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "start": {
                                                                "description": "A simple integer value as a VRS class.",
                                                                "type": "object",
                                                                "additionalProperties": false,
                                                                "properties": {
                                                                    "type": {
                                                                        "type": "string",
                                                                        "const": "Number",
                                                                        "default": "Number",
                                                                        "description": "MUST be \"Number\""
                                                                    },
                                                                    "value": {
                                                                        "type": "integer",
                                                                        "description": "The value represented by Number"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "type",
                                                                    "value"
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "properties": {
                                                            "start": {
                                                                "properties": {
                                                                    "value": {
                                                                        "minimum": 0
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "start": {
                                                                "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                "type": "object",
                                                                "additionalProperties": false,
                                                                "properties": {
                                                                    "type": {
                                                                        "type": "string",
                                                                        "const": "IndefiniteRange",
                                                                        "default": "IndefiniteRange",
                                                                        "description": "MUST be \"IndefiniteRange\""
                                                                    },
                                                                    "value": {
                                                                        "type": "number",
                                                                        "description": "The bounded value; inclusive"
                                                                    },
                                                                    "comparator": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "<=",
                                                                            ">="
                                                                        ],
                                                                        "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "comparator",
                                                                    "type",
                                                                    "value"
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "properties": {
                                                            "start": {
                                                                "properties": {
                                                                    "value": {
                                                                        "minimum": 0
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "start": {
                                                                "description": "A bounded, inclusive range of numbers.",
                                                                "type": "object",
                                                                "additionalProperties": false,
                                                                "properties": {
                                                                    "type": {
                                                                        "type": "string",
                                                                        "const": "DefiniteRange",
                                                                        "default": "DefiniteRange",
                                                                        "description": "MUST be \"DefiniteRange\""
                                                                    },
                                                                    "min": {
                                                                        "type": "number",
                                                                        "description": "The minimum value; inclusive"
                                                                    },
                                                                    "max": {
                                                                        "type": "number",
                                                                        "description": "The maximum value; inclusive"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "max",
                                                                    "min",
                                                                    "type"
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "properties": {
                                                            "start": {
                                                                "properties": {
                                                                    "min": {
                                                                        "minimum": 0
                                                                    },
                                                                    "max": {
                                                                        "minimum": 0
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "end": {
                                                                "description": "A simple integer value as a VRS class.",
                                                                "type": "object",
                                                                "additionalProperties": false,
                                                                "properties": {
                                                                    "type": {
                                                                        "type": "string",
                                                                        "const": "Number",
                                                                        "default": "Number",
                                                                        "description": "MUST be \"Number\""
                                                                    },
                                                                    "value": {
                                                                        "type": "integer",
                                                                        "description": "The value represented by Number"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "type",
                                                                    "value"
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "properties": {
                                                            "end": {
                                                                "properties": {
                                                                    "value": {
                                                                        "minimum": 0
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "end": {
                                                                "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                "type": "object",
                                                                "additionalProperties": false,
                                                                "properties": {
                                                                    "type": {
                                                                        "type": "string",
                                                                        "const": "IndefiniteRange",
                                                                        "default": "IndefiniteRange",
                                                                        "description": "MUST be \"IndefiniteRange\""
                                                                    },
                                                                    "value": {
                                                                        "type": "number",
                                                                        "description": "The bounded value; inclusive"
                                                                    },
                                                                    "comparator": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "<=",
                                                                            ">="
                                                                        ],
                                                                        "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "comparator",
                                                                    "type",
                                                                    "value"
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "properties": {
                                                            "end": {
                                                                "properties": {
                                                                    "value": {
                                                                        "minimum": 0
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "end": {
                                                                "description": "A bounded, inclusive range of numbers.",
                                                                "type": "object",
                                                                "additionalProperties": false,
                                                                "properties": {
                                                                    "type": {
                                                                        "type": "string",
                                                                        "const": "DefiniteRange",
                                                                        "default": "DefiniteRange",
                                                                        "description": "MUST be \"DefiniteRange\""
                                                                    },
                                                                    "min": {
                                                                        "type": "number",
                                                                        "description": "The minimum value; inclusive"
                                                                    },
                                                                    "max": {
                                                                        "type": "number",
                                                                        "description": "The maximum value; inclusive"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "max",
                                                                    "min",
                                                                    "type"
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "properties": {
                                                            "end": {
                                                                "properties": {
                                                                    "min": {
                                                                        "minimum": 0
                                                                    },
                                                                    "max": {
                                                                        "minimum": 0
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            ],
                                            "required": [
                                                "end",
                                                "start",
                                                "type"
                                            ]
                                        },
                                        {
                                            "deprecated": true,
                                            "description": "DEPRECATED: A SimpleInterval represents a span of sequence. Positions are always represented by contiguous spans using interbase coordinates. This class is deprecated. Use SequenceInterval instead.",
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "const": "SimpleInterval",
                                                    "default": "SimpleInterval",
                                                    "description": "MUST be \"SimpleInterval\""
                                                },
                                                "start": {
                                                    "type": "integer",
                                                    "description": "The start coordinate"
                                                },
                                                "end": {
                                                    "type": "integer",
                                                    "description": "The end coordinate"
                                                }
                                            },
                                            "example": {
                                                "type": "SimpleInterval",
                                                "start": 11,
                                                "end": 22
                                            },
                                            "required": [
                                                "end",
                                                "start",
                                                "type"
                                            ]
                                        }
                                    ],
                                    "description": "Reference sequence region defined by a SequenceInterval."
                                }
                            },
                            "required": [
                                "interval",
                                "sequence_id",
                                "type"
                            ]
                        }
                    ],
                    "discriminator": {
                        "propertyName": "type"
                    }
                },
                "referenceBases": {
                    "description": "Reference bases for this variant (starting from `start`). * Accepted values: IUPAC codes for nucleotides (e.g. `https://www.bioinformatics.org/sms/iupac.html`). N is a wildcard, that denotes the position of any base, and can be used as a standalone base of any type or within a partially known sequence. As example, a query of `ANNT` the Ns can take take any form of `[ACGT]` and will match `ANNT`, `ACNT`, `ACCT`, `ACGT` ... and so forth. * an *empty value* is used in the case of insertions with the maximally trimmed, inserted sequence being indicated in `AlternateBases`. NOTE: Many Beacon instances could not support UIPAC codes and it is not mandatory for them to do so. In such cases the use of [ACGTN] is mandated.",
                    "examples": [
                        "A",
                        "T",
                        "N",
                        "",
                        "ACG"
                    ],
                    "pattern": "^([ACGTUNRYSWKMBDHV\\-\\.]*)$",
                    "type": "string"
                },
                "variantType": {
                    "default": "SNP",
                    "description": "The `variantType` declares the nature of the variation in relation to a reference. In a response, it is used to describe the variation. In a request, it is used to declare the type of event the Beacon client is looking for. If in queries variants can not be defined through a sequence of one or more bases (`precise` variants) it can be used standalone (i.e. without `alternateBases`) together with positional parameters. Examples here are e.g. queries for structural variants such as `DUP` (increased allelic count of material from the genomic region  between `start` and `end` positions without assumption about the placement of the additional sequence) or `DEL` (deletion of sequence following `start`). Either `alternateBases` or `variantType` is required, with the exception of range queries (single `start` and `end` parameters).",
                    "examples": [
                        "SNP",
                        "DEL",
                        "DUP",
                        "BND"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "variantType",
                "alternateBases",
                "location"
            ],
            "type": "object"
        },
        "MolecularAttributes": {
            "properties": {
                "aminoacidChanges": {
                    "description": "Lisf of change(s) at aminoacid level for protein affecting variants.",
                    "examples": [
                        [
                            "V304*"
                        ]
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "geneIds": {
                    "examples": [
                        [
                            "ACE2"
                        ],
                        [
                            "BRCA1"
                        ]
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "genomicFeatures": {
                    "description": "List of Genomic feature(s) affected by the variant.",
                    "items": {
                        "description": "Genomic feature(s) related to the variant. NOTE: Although genes could also be referenced using these attributes, they have an independent section to allow direct queries.",
                        "properties": {
                            "featureClass": {
                                "$schema": "https://json-schema.org/draft/2020-12/schema",
                                "additionalProperties": true,
                                "definitions": {
                                    "CURIE": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    }
                                },
                                "description": "Definition of an ontology term.",
                                "properties": {
                                    "id": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    },
                                    "label": {
                                        "description": "The text that describes the term. By default it could be the preferred text of the term, but is it acceptable to customize it for a clearer description and understanding of the term in an specific context.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "Ontology Term",
                                "type": "object"
                            },
                            "featureID": {
                                "$schema": "https://json-schema.org/draft/2020-12/schema",
                                "additionalProperties": true,
                                "definitions": {
                                    "CURIE": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    }
                                },
                                "description": "Definition of an ontology term.",
                                "properties": {
                                    "id": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    },
                                    "label": {
                                        "description": "The text that describes the term. By default it could be the preferred text of the term, but is it acceptable to customize it for a clearer description and understanding of the term in an specific context.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "Ontology Term",
                                "type": "object"
                            }
                        },
                        "required": [
                            "featureClass"
                        ],
                        "type": "object"
                    },
                    "type": "array"
                },
                "molecularEffects": {
                    "description": "Ontology term that includes describes the class of molecular consequence generated by the variant. Values from Ensembl Glossary Variant Consequence (ENSGLOSSARY:0000134 ontology branch) are recommended, e.g. Stop gained, Missense variant, Coding sequence variant.",
                    "examples": [
                        {
                            "id": "ENSGLOSSARY:0000143",
                            "label": "Stop gained"
                        },
                        {
                            "id": "ENSGLOSSARY:0000150",
                            "label": "Missense variant"
                        }
                    ],
                    "items": {
                        "$schema": "https://json-schema.org/draft/2020-12/schema",
                        "additionalProperties": true,
                        "definitions": {
                            "CURIE": {
                                "description": "A CURIE identifier for an ontology term.",
                                "examples": [
                                    "ga4gh:GA.01234abcde",
                                    "DUO:0000004",
                                    "orcid:0000-0003-3463-0775",
                                    "PMID:15254584"
                                ],
                                "pattern": "^\\w[^:]+:.+$",
                                "type": "string"
                            }
                        },
                        "description": "Definition of an ontology term.",
                        "properties": {
                            "id": {
                                "description": "A CURIE identifier for an ontology term.",
                                "examples": [
                                    "ga4gh:GA.01234abcde",
                                    "DUO:0000004",
                                    "orcid:0000-0003-3463-0775",
                                    "PMID:15254584"
                                ],
                                "pattern": "^\\w[^:]+:.+$",
                                "type": "string"
                            },
                            "label": {
                                "description": "The text that describes the term. By default it could be the preferred text of the term, but is it acceptable to customize it for a clearer description and understanding of the term in an specific context.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "id"
                        ],
                        "title": "Ontology Term",
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PhenoClinicEffect": {
            "description": "List of annotated effects on disease or phenotypes.",
            "properties": {
                "annotatedWith": {
                    "properties": {
                        "toolName": {
                            "description": "Name of the tool.",
                            "examples": [
                                "Ensembl Variant Effect Predictor (VEP)"
                            ],
                            "type": "string"
                        },
                        "toolReferences": {
                            "additionalProperties": true,
                            "description": "References to the tool",
                            "examples": [
                                {
                                    "bio.toolsId": "https://bio.tools/vep"
                                },
                                {
                                    "url": "http://www.ensembl.org/vep"
                                }
                            ],
                            "minProperties": 1,
                            "properties": {},
                            "type": "object"
                        },
                        "version": {
                            "description": "Version used.",
                            "examples": [
                                "rel 104"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "toolName",
                        "version",
                        "toolReferences"
                    ],
                    "type": "object"
                },
                "category": {
                    "$schema": "https://json-schema.org/draft/2020-12/schema",
                    "additionalProperties": true,
                    "definitions": {
                        "CURIE": {
                            "description": "A CURIE identifier for an ontology term.",
                            "examples": [
                                "ga4gh:GA.01234abcde",
                                "DUO:0000004",
                                "orcid:0000-0003-3463-0775",
                                "PMID:15254584"
                            ],
                            "pattern": "^\\w[^:]+:.+$",
                            "type": "string"
                        }
                    },
                    "description": "Definition of an ontology term.",
                    "properties": {
                        "id": {
                            "description": "A CURIE identifier for an ontology term.",
                            "examples": [
                                "ga4gh:GA.01234abcde",
                                "DUO:0000004",
                                "orcid:0000-0003-3463-0775",
                                "PMID:15254584"
                            ],
                            "pattern": "^\\w[^:]+:.+$",
                            "type": "string"
                        },
                        "label": {
                            "description": "The text that describes the term. By default it could be the preferred text of the term, but is it acceptable to customize it for a clearer description and understanding of the term in an specific context.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "id"
                    ],
                    "title": "Ontology Term",
                    "type": "object"
                },
                "clinicalRelevance": {
                    "description": "A value from the five-tiered classification from the American College of Medical Genetics (ACMG) designed to describe the likelihood that a genomic sequence variant is causative of an inherited disease. (NCIT:C168798).",
                    "enum": [
                        "benign",
                        "likely benign",
                        "uncertain significance",
                        "likely pathogenic",
                        "pathogenic"
                    ],
                    "example": "pathogenic",
                    "type": "string"
                },
                "conditionId": {
                    "description": "Internal identifier of the phenotype or clinical effect.",
                    "examples": [
                        "disease1",
                        "phen2234"
                    ],
                    "type": "string"
                },
                "effect": {
                    "$schema": "https://json-schema.org/draft/2020-12/schema",
                    "additionalProperties": true,
                    "definitions": {
                        "CURIE": {
                            "description": "A CURIE identifier for an ontology term.",
                            "examples": [
                                "ga4gh:GA.01234abcde",
                                "DUO:0000004",
                                "orcid:0000-0003-3463-0775",
                                "PMID:15254584"
                            ],
                            "pattern": "^\\w[^:]+:.+$",
                            "type": "string"
                        }
                    },
                    "description": "Definition of an ontology term.",
                    "properties": {
                        "id": {
                            "description": "A CURIE identifier for an ontology term.",
                            "examples": [
                                "ga4gh:GA.01234abcde",
                                "DUO:0000004",
                                "orcid:0000-0003-3463-0775",
                                "PMID:15254584"
                            ],
                            "pattern": "^\\w[^:]+:.+$",
                            "type": "string"
                        },
                        "label": {
                            "description": "The text that describes the term. By default it could be the preferred text of the term, but is it acceptable to customize it for a clearer description and understanding of the term in an specific context.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "id"
                    ],
                    "title": "Ontology Term",
                    "type": "object"
                },
                "evidenceType": {
                    "$schema": "https://json-schema.org/draft/2020-12/schema",
                    "additionalProperties": true,
                    "definitions": {
                        "CURIE": {
                            "description": "A CURIE identifier for an ontology term.",
                            "examples": [
                                "ga4gh:GA.01234abcde",
                                "DUO:0000004",
                                "orcid:0000-0003-3463-0775",
                                "PMID:15254584"
                            ],
                            "pattern": "^\\w[^:]+:.+$",
                            "type": "string"
                        }
                    },
                    "description": "Definition of an ontology term.",
                    "properties": {
                        "id": {
                            "description": "A CURIE identifier for an ontology term.",
                            "examples": [
                                "ga4gh:GA.01234abcde",
                                "DUO:0000004",
                                "orcid:0000-0003-3463-0775",
                                "PMID:15254584"
                            ],
                            "pattern": "^\\w[^:]+:.+$",
                            "type": "string"
                        },
                        "label": {
                            "description": "The text that describes the term. By default it could be the preferred text of the term, but is it acceptable to customize it for a clearer description and understanding of the term in an specific context.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "id"
                    ],
                    "title": "Ontology Term",
                    "type": "object"
                }
            },
            "required": [
                "conditionId",
                "effect"
            ],
            "type": "object"
        },
        "PopulationFrequency": {
            "properties": {
                "alleleFrequency": {
                    "description": "Allele frequency between 0 and 1.",
                    "examples": [
                        3.186e-05
                    ],
                    "type": "number"
                },
                "population": {
                    "description": "A name for the population. A population could an ethnic, geographical one or just the `members`of a study.",
                    "examples": [
                        "East Asian",
                        "ICGC Chronic Lymphocytic Leukemia-ES",
                        "Men",
                        "Children"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "population",
                "alleleFrequency"
            ],
            "type": "object"
        },
        "SoftwareTool": {
            "properties": {
                "toolName": {
                    "description": "Name of the tool.",
                    "examples": [
                        "Ensembl Variant Effect Predictor (VEP)"
                    ],
                    "type": "string"
                },
                "toolReferences": {
                    "additionalProperties": true,
                    "description": "References to the tool",
                    "examples": [
                        {
                            "bio.toolsId": "https://bio.tools/vep"
                        },
                        {
                            "url": "http://www.ensembl.org/vep"
                        }
                    ],
                    "minProperties": 1,
                    "properties": {},
                    "type": "object"
                },
                "version": {
                    "description": "Version used.",
                    "examples": [
                        "rel 104"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "toolName",
                "version",
                "toolReferences"
            ],
            "type": "object"
        },
        "VariantLevelData": {
            "properties": {
                "clinicalInterpretations": {
                    "items": {
                        "description": "List of annotated effects on disease or phenotypes.",
                        "properties": {
                            "annotatedWith": {
                                "properties": {
                                    "toolName": {
                                        "description": "Name of the tool.",
                                        "examples": [
                                            "Ensembl Variant Effect Predictor (VEP)"
                                        ],
                                        "type": "string"
                                    },
                                    "toolReferences": {
                                        "additionalProperties": true,
                                        "description": "References to the tool",
                                        "examples": [
                                            {
                                                "bio.toolsId": "https://bio.tools/vep"
                                            },
                                            {
                                                "url": "http://www.ensembl.org/vep"
                                            }
                                        ],
                                        "minProperties": 1,
                                        "properties": {},
                                        "type": "object"
                                    },
                                    "version": {
                                        "description": "Version used.",
                                        "examples": [
                                            "rel 104"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "toolName",
                                    "version",
                                    "toolReferences"
                                ],
                                "type": "object"
                            },
                            "category": {
                                "$schema": "https://json-schema.org/draft/2020-12/schema",
                                "additionalProperties": true,
                                "definitions": {
                                    "CURIE": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    }
                                },
                                "description": "Definition of an ontology term.",
                                "properties": {
                                    "id": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    },
                                    "label": {
                                        "description": "The text that describes the term. By default it could be the preferred text of the term, but is it acceptable to customize it for a clearer description and understanding of the term in an specific context.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "Ontology Term",
                                "type": "object"
                            },
                            "clinicalRelevance": {
                                "description": "A value from the five-tiered classification from the American College of Medical Genetics (ACMG) designed to describe the likelihood that a genomic sequence variant is causative of an inherited disease. (NCIT:C168798).",
                                "enum": [
                                    "benign",
                                    "likely benign",
                                    "uncertain significance",
                                    "likely pathogenic",
                                    "pathogenic"
                                ],
                                "example": "pathogenic",
                                "type": "string"
                            },
                            "conditionId": {
                                "description": "Internal identifier of the phenotype or clinical effect.",
                                "examples": [
                                    "disease1",
                                    "phen2234"
                                ],
                                "type": "string"
                            },
                            "effect": {
                                "$schema": "https://json-schema.org/draft/2020-12/schema",
                                "additionalProperties": true,
                                "definitions": {
                                    "CURIE": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    }
                                },
                                "description": "Definition of an ontology term.",
                                "properties": {
                                    "id": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    },
                                    "label": {
                                        "description": "The text that describes the term. By default it could be the preferred text of the term, but is it acceptable to customize it for a clearer description and understanding of the term in an specific context.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "Ontology Term",
                                "type": "object"
                            },
                            "evidenceType": {
                                "$schema": "https://json-schema.org/draft/2020-12/schema",
                                "additionalProperties": true,
                                "definitions": {
                                    "CURIE": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    }
                                },
                                "description": "Definition of an ontology term.",
                                "properties": {
                                    "id": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    },
                                    "label": {
                                        "description": "The text that describes the term. By default it could be the preferred text of the term, but is it acceptable to customize it for a clearer description and understanding of the term in an specific context.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "Ontology Term",
                                "type": "object"
                            }
                        },
                        "required": [
                            "conditionId",
                            "effect"
                        ],
                        "type": "object"
                    },
                    "type": "array"
                },
                "phenotypicEffects": {
                    "items": {
                        "description": "List of annotated effects on disease or phenotypes.",
                        "properties": {
                            "annotatedWith": {
                                "properties": {
                                    "toolName": {
                                        "description": "Name of the tool.",
                                        "examples": [
                                            "Ensembl Variant Effect Predictor (VEP)"
                                        ],
                                        "type": "string"
                                    },
                                    "toolReferences": {
                                        "additionalProperties": true,
                                        "description": "References to the tool",
                                        "examples": [
                                            {
                                                "bio.toolsId": "https://bio.tools/vep"
                                            },
                                            {
                                                "url": "http://www.ensembl.org/vep"
                                            }
                                        ],
                                        "minProperties": 1,
                                        "properties": {},
                                        "type": "object"
                                    },
                                    "version": {
                                        "description": "Version used.",
                                        "examples": [
                                            "rel 104"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "toolName",
                                    "version",
                                    "toolReferences"
                                ],
                                "type": "object"
                            },
                            "category": {
                                "$schema": "https://json-schema.org/draft/2020-12/schema",
                                "additionalProperties": true,
                                "definitions": {
                                    "CURIE": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    }
                                },
                                "description": "Definition of an ontology term.",
                                "properties": {
                                    "id": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    },
                                    "label": {
                                        "description": "The text that describes the term. By default it could be the preferred text of the term, but is it acceptable to customize it for a clearer description and understanding of the term in an specific context.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "Ontology Term",
                                "type": "object"
                            },
                            "clinicalRelevance": {
                                "description": "A value from the five-tiered classification from the American College of Medical Genetics (ACMG) designed to describe the likelihood that a genomic sequence variant is causative of an inherited disease. (NCIT:C168798).",
                                "enum": [
                                    "benign",
                                    "likely benign",
                                    "uncertain significance",
                                    "likely pathogenic",
                                    "pathogenic"
                                ],
                                "example": "pathogenic",
                                "type": "string"
                            },
                            "conditionId": {
                                "description": "Internal identifier of the phenotype or clinical effect.",
                                "examples": [
                                    "disease1",
                                    "phen2234"
                                ],
                                "type": "string"
                            },
                            "effect": {
                                "$schema": "https://json-schema.org/draft/2020-12/schema",
                                "additionalProperties": true,
                                "definitions": {
                                    "CURIE": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    }
                                },
                                "description": "Definition of an ontology term.",
                                "properties": {
                                    "id": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    },
                                    "label": {
                                        "description": "The text that describes the term. By default it could be the preferred text of the term, but is it acceptable to customize it for a clearer description and understanding of the term in an specific context.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "Ontology Term",
                                "type": "object"
                            },
                            "evidenceType": {
                                "$schema": "https://json-schema.org/draft/2020-12/schema",
                                "additionalProperties": true,
                                "definitions": {
                                    "CURIE": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    }
                                },
                                "description": "Definition of an ontology term.",
                                "properties": {
                                    "id": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    },
                                    "label": {
                                        "description": "The text that describes the term. By default it could be the preferred text of the term, but is it acceptable to customize it for a clearer description and understanding of the term in an specific context.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "Ontology Term",
                                "type": "object"
                            }
                        },
                        "required": [
                            "conditionId",
                            "effect"
                        ],
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        }
    },
    "description": "Schema for a genomic variant entry.",
    "properties": {
        "caseLevelData": {
            "description": "caseLevelData reports about the variation instances observed in individual analyses.",
            "items": {
                "description": "",
                "properties": {
                    "alleleOrigin": {
                        "$schema": "https://json-schema.org/draft/2020-12/schema",
                        "additionalProperties": true,
                        "definitions": {
                            "CURIE": {
                                "description": "A CURIE identifier for an ontology term.",
                                "examples": [
                                    "ga4gh:GA.01234abcde",
                                    "DUO:0000004",
                                    "orcid:0000-0003-3463-0775",
                                    "PMID:15254584"
                                ],
                                "pattern": "^\\w[^:]+:.+$",
                                "type": "string"
                            }
                        },
                        "description": "Definition of an ontology term.",
                        "properties": {
                            "id": {
                                "description": "A CURIE identifier for an ontology term.",
                                "examples": [
                                    "ga4gh:GA.01234abcde",
                                    "DUO:0000004",
                                    "orcid:0000-0003-3463-0775",
                                    "PMID:15254584"
                                ],
                                "pattern": "^\\w[^:]+:.+$",
                                "type": "string"
                            },
                            "label": {
                                "description": "The text that describes the term. By default it could be the preferred text of the term, but is it acceptable to customize it for a clearer description and understanding of the term in an specific context.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "id"
                        ],
                        "title": "Ontology Term",
                        "type": "object"
                    },
                    "analysisId": {
                        "description": "Reference to the bioinformatics analysis ID (`analysis.id`)",
                        "examples": [
                            "pgxcs-kftvldsu"
                        ],
                        "type": "string"
                    },
                    "biosampleId": {
                        "description": "Reference to biosample ID (`biosample.id`)",
                        "examples": [
                            "bs001104"
                        ],
                        "type": "string"
                    },
                    "clinicalInterpretations": {
                        "items": {
                            "description": "List of annotated effects on disease or phenotypes.",
                            "properties": {
                                "annotatedWith": {
                                    "properties": {
                                        "toolName": {
                                            "description": "Name of the tool.",
                                            "examples": [
                                                "Ensembl Variant Effect Predictor (VEP)"
                                            ],
                                            "type": "string"
                                        },
                                        "toolReferences": {
                                            "additionalProperties": true,
                                            "description": "References to the tool",
                                            "examples": [
                                                {
                                                    "bio.toolsId": "https://bio.tools/vep"
                                                },
                                                {
                                                    "url": "http://www.ensembl.org/vep"
                                                }
                                            ],
                                            "minProperties": 1,
                                            "properties": {},
                                            "type": "object"
                                        },
                                        "version": {
                                            "description": "Version used.",
                                            "examples": [
                                                "rel 104"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "toolName",
                                        "version",
                                        "toolReferences"
                                    ],
                                    "type": "object"
                                },
                                "category": {
                                    "$schema": "https://json-schema.org/draft/2020-12/schema",
                                    "additionalProperties": true,
                                    "definitions": {
                                        "CURIE": {
                                            "description": "A CURIE identifier for an ontology term.",
                                            "examples": [
                                                "ga4gh:GA.01234abcde",
                                                "DUO:0000004",
                                                "orcid:0000-0003-3463-0775",
                                                "PMID:15254584"
                                            ],
                                            "pattern": "^\\w[^:]+:.+$",
                                            "type": "string"
                                        }
                                    },
                                    "description": "Definition of an ontology term.",
                                    "properties": {
                                        "id": {
                                            "description": "A CURIE identifier for an ontology term.",
                                            "examples": [
                                                "ga4gh:GA.01234abcde",
                                                "DUO:0000004",
                                                "orcid:0000-0003-3463-0775",
                                                "PMID:15254584"
                                            ],
                                            "pattern": "^\\w[^:]+:.+$",
                                            "type": "string"
                                        },
                                        "label": {
                                            "description": "The text that describes the term. By default it could be the preferred text of the term, but is it acceptable to customize it for a clearer description and understanding of the term in an specific context.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id"
                                    ],
                                    "title": "Ontology Term",
                                    "type": "object"
                                },
                                "clinicalRelevance": {
                                    "description": "A value from the five-tiered classification from the American College of Medical Genetics (ACMG) designed to describe the likelihood that a genomic sequence variant is causative of an inherited disease. (NCIT:C168798).",
                                    "enum": [
                                        "benign",
                                        "likely benign",
                                        "uncertain significance",
                                        "likely pathogenic",
                                        "pathogenic"
                                    ],
                                    "example": "pathogenic",
                                    "type": "string"
                                },
                                "conditionId": {
                                    "description": "Internal identifier of the phenotype or clinical effect.",
                                    "examples": [
                                        "disease1",
                                        "phen2234"
                                    ],
                                    "type": "string"
                                },
                                "effect": {
                                    "$schema": "https://json-schema.org/draft/2020-12/schema",
                                    "additionalProperties": true,
                                    "definitions": {
                                        "CURIE": {
                                            "description": "A CURIE identifier for an ontology term.",
                                            "examples": [
                                                "ga4gh:GA.01234abcde",
                                                "DUO:0000004",
                                                "orcid:0000-0003-3463-0775",
                                                "PMID:15254584"
                                            ],
                                            "pattern": "^\\w[^:]+:.+$",
                                            "type": "string"
                                        }
                                    },
                                    "description": "Definition of an ontology term.",
                                    "properties": {
                                        "id": {
                                            "description": "A CURIE identifier for an ontology term.",
                                            "examples": [
                                                "ga4gh:GA.01234abcde",
                                                "DUO:0000004",
                                                "orcid:0000-0003-3463-0775",
                                                "PMID:15254584"
                                            ],
                                            "pattern": "^\\w[^:]+:.+$",
                                            "type": "string"
                                        },
                                        "label": {
                                            "description": "The text that describes the term. By default it could be the preferred text of the term, but is it acceptable to customize it for a clearer description and understanding of the term in an specific context.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id"
                                    ],
                                    "title": "Ontology Term",
                                    "type": "object"
                                },
                                "evidenceType": {
                                    "$schema": "https://json-schema.org/draft/2020-12/schema",
                                    "additionalProperties": true,
                                    "definitions": {
                                        "CURIE": {
                                            "description": "A CURIE identifier for an ontology term.",
                                            "examples": [
                                                "ga4gh:GA.01234abcde",
                                                "DUO:0000004",
                                                "orcid:0000-0003-3463-0775",
                                                "PMID:15254584"
                                            ],
                                            "pattern": "^\\w[^:]+:.+$",
                                            "type": "string"
                                        }
                                    },
                                    "description": "Definition of an ontology term.",
                                    "properties": {
                                        "id": {
                                            "description": "A CURIE identifier for an ontology term.",
                                            "examples": [
                                                "ga4gh:GA.01234abcde",
                                                "DUO:0000004",
                                                "orcid:0000-0003-3463-0775",
                                                "PMID:15254584"
                                            ],
                                            "pattern": "^\\w[^:]+:.+$",
                                            "type": "string"
                                        },
                                        "label": {
                                            "description": "The text that describes the term. By default it could be the preferred text of the term, but is it acceptable to customize it for a clearer description and understanding of the term in an specific context.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id"
                                    ],
                                    "title": "Ontology Term",
                                    "type": "object"
                                }
                            },
                            "required": [
                                "conditionId",
                                "effect"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "Internal id of this case level *instance* of the variant. This is an optional housekeeping parameter and should not be confused with the identifier of the variant (`variantInternalId`).",
                        "examples": [
                            "id0001-var101101118"
                        ],
                        "type": "string"
                    },
                    "individualId": {
                        "description": "Reference to individual ID (`individual.id`)",
                        "examples": [
                            "ind0001"
                        ],
                        "type": "string"
                    },
                    "phenotypicEffects": {
                        "items": {
                            "description": "List of annotated effects on disease or phenotypes.",
                            "properties": {
                                "annotatedWith": {
                                    "properties": {
                                        "toolName": {
                                            "description": "Name of the tool.",
                                            "examples": [
                                                "Ensembl Variant Effect Predictor (VEP)"
                                            ],
                                            "type": "string"
                                        },
                                        "toolReferences": {
                                            "additionalProperties": true,
                                            "description": "References to the tool",
                                            "examples": [
                                                {
                                                    "bio.toolsId": "https://bio.tools/vep"
                                                },
                                                {
                                                    "url": "http://www.ensembl.org/vep"
                                                }
                                            ],
                                            "minProperties": 1,
                                            "properties": {},
                                            "type": "object"
                                        },
                                        "version": {
                                            "description": "Version used.",
                                            "examples": [
                                                "rel 104"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "toolName",
                                        "version",
                                        "toolReferences"
                                    ],
                                    "type": "object"
                                },
                                "category": {
                                    "$schema": "https://json-schema.org/draft/2020-12/schema",
                                    "additionalProperties": true,
                                    "definitions": {
                                        "CURIE": {
                                            "description": "A CURIE identifier for an ontology term.",
                                            "examples": [
                                                "ga4gh:GA.01234abcde",
                                                "DUO:0000004",
                                                "orcid:0000-0003-3463-0775",
                                                "PMID:15254584"
                                            ],
                                            "pattern": "^\\w[^:]+:.+$",
                                            "type": "string"
                                        }
                                    },
                                    "description": "Definition of an ontology term.",
                                    "properties": {
                                        "id": {
                                            "description": "A CURIE identifier for an ontology term.",
                                            "examples": [
                                                "ga4gh:GA.01234abcde",
                                                "DUO:0000004",
                                                "orcid:0000-0003-3463-0775",
                                                "PMID:15254584"
                                            ],
                                            "pattern": "^\\w[^:]+:.+$",
                                            "type": "string"
                                        },
                                        "label": {
                                            "description": "The text that describes the term. By default it could be the preferred text of the term, but is it acceptable to customize it for a clearer description and understanding of the term in an specific context.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id"
                                    ],
                                    "title": "Ontology Term",
                                    "type": "object"
                                },
                                "clinicalRelevance": {
                                    "description": "A value from the five-tiered classification from the American College of Medical Genetics (ACMG) designed to describe the likelihood that a genomic sequence variant is causative of an inherited disease. (NCIT:C168798).",
                                    "enum": [
                                        "benign",
                                        "likely benign",
                                        "uncertain significance",
                                        "likely pathogenic",
                                        "pathogenic"
                                    ],
                                    "example": "pathogenic",
                                    "type": "string"
                                },
                                "conditionId": {
                                    "description": "Internal identifier of the phenotype or clinical effect.",
                                    "examples": [
                                        "disease1",
                                        "phen2234"
                                    ],
                                    "type": "string"
                                },
                                "effect": {
                                    "$schema": "https://json-schema.org/draft/2020-12/schema",
                                    "additionalProperties": true,
                                    "definitions": {
                                        "CURIE": {
                                            "description": "A CURIE identifier for an ontology term.",
                                            "examples": [
                                                "ga4gh:GA.01234abcde",
                                                "DUO:0000004",
                                                "orcid:0000-0003-3463-0775",
                                                "PMID:15254584"
                                            ],
                                            "pattern": "^\\w[^:]+:.+$",
                                            "type": "string"
                                        }
                                    },
                                    "description": "Definition of an ontology term.",
                                    "properties": {
                                        "id": {
                                            "description": "A CURIE identifier for an ontology term.",
                                            "examples": [
                                                "ga4gh:GA.01234abcde",
                                                "DUO:0000004",
                                                "orcid:0000-0003-3463-0775",
                                                "PMID:15254584"
                                            ],
                                            "pattern": "^\\w[^:]+:.+$",
                                            "type": "string"
                                        },
                                        "label": {
                                            "description": "The text that describes the term. By default it could be the preferred text of the term, but is it acceptable to customize it for a clearer description and understanding of the term in an specific context.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id"
                                    ],
                                    "title": "Ontology Term",
                                    "type": "object"
                                },
                                "evidenceType": {
                                    "$schema": "https://json-schema.org/draft/2020-12/schema",
                                    "additionalProperties": true,
                                    "definitions": {
                                        "CURIE": {
                                            "description": "A CURIE identifier for an ontology term.",
                                            "examples": [
                                                "ga4gh:GA.01234abcde",
                                                "DUO:0000004",
                                                "orcid:0000-0003-3463-0775",
                                                "PMID:15254584"
                                            ],
                                            "pattern": "^\\w[^:]+:.+$",
                                            "type": "string"
                                        }
                                    },
                                    "description": "Definition of an ontology term.",
                                    "properties": {
                                        "id": {
                                            "description": "A CURIE identifier for an ontology term.",
                                            "examples": [
                                                "ga4gh:GA.01234abcde",
                                                "DUO:0000004",
                                                "orcid:0000-0003-3463-0775",
                                                "PMID:15254584"
                                            ],
                                            "pattern": "^\\w[^:]+:.+$",
                                            "type": "string"
                                        },
                                        "label": {
                                            "description": "The text that describes the term. By default it could be the preferred text of the term, but is it acceptable to customize it for a clearer description and understanding of the term in an specific context.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id"
                                    ],
                                    "title": "Ontology Term",
                                    "type": "object"
                                }
                            },
                            "required": [
                                "conditionId",
                                "effect"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "runId": {
                        "description": "Reference to the experimental run ID (`run.id`)",
                        "examples": [
                            "SRR10903401"
                        ],
                        "type": "string"
                    },
                    "zygosity": {
                        "$schema": "https://json-schema.org/draft/2020-12/schema",
                        "additionalProperties": true,
                        "definitions": {
                            "CURIE": {
                                "description": "A CURIE identifier for an ontology term.",
                                "examples": [
                                    "ga4gh:GA.01234abcde",
                                    "DUO:0000004",
                                    "orcid:0000-0003-3463-0775",
                                    "PMID:15254584"
                                ],
                                "pattern": "^\\w[^:]+:.+$",
                                "type": "string"
                            }
                        },
                        "description": "Definition of an ontology term.",
                        "properties": {
                            "id": {
                                "description": "A CURIE identifier for an ontology term.",
                                "examples": [
                                    "ga4gh:GA.01234abcde",
                                    "DUO:0000004",
                                    "orcid:0000-0003-3463-0775",
                                    "PMID:15254584"
                                ],
                                "pattern": "^\\w[^:]+:.+$",
                                "type": "string"
                            },
                            "label": {
                                "description": "The text that describes the term. By default it could be the preferred text of the term, but is it acceptable to customize it for a clearer description and understanding of the term in an specific context.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "id"
                        ],
                        "title": "Ontology Term",
                        "type": "object"
                    }
                },
                "required": [
                    "biosampleId"
                ],
                "type": "object"
            },
            "type": "array"
        },
        "frequencyInPopulations": {
            "items": {
                "properties": {
                    "frequencies": {
                        "items": {
                            "properties": {
                                "alleleFrequency": {
                                    "description": "Allele frequency between 0 and 1.",
                                    "examples": [
                                        3.186e-05
                                    ],
                                    "type": "number"
                                },
                                "population": {
                                    "description": "A name for the population. A population could an ethnic, geographical one or just the `members`of a study.",
                                    "examples": [
                                        "East Asian",
                                        "ICGC Chronic Lymphocytic Leukemia-ES",
                                        "Men",
                                        "Children"
                                    ],
                                    "type": "string"
                                }
                            },
                            "required": [
                                "population",
                                "alleleFrequency"
                            ],
                            "type": "object"
                        },
                        "minItems": 1,
                        "type": "array"
                    },
                    "source": {
                        "description": "The study",
                        "examples": [
                            "The Genome Aggregation Database (gnomAD)",
                            "The European Genome-phenome Archive (EGA)"
                        ],
                        "type": "string"
                    },
                    "sourceReference": {
                        "description": "A reference to further documentation or details.",
                        "examples": [
                            "https://gnomad.broadinstitute.org/",
                            "https://ega-archive.org/"
                        ],
                        "type": "string"
                    },
                    "version": {
                        "description": "version of the source data.",
                        "examples": [
                            "gnomAD v3.1.1"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "source",
                    "sourceReference",
                    "frequencies"
                ],
                "type": "object"
            },
            "type": "array"
        },
        "identifiers": {
            "properties": {
                "clinvarVariantId": {
                    "description": "ClinVar variant id. Other id values used by ClinVar can be added to `variantAlternativeIds`",
                    "examples": [
                        "clinvar:12345",
                        "9325"
                    ],
                    "pattern": "^(clinvar:)?\\d+$",
                    "type": "string"
                },
                "genomicHGVSId": {
                    "description": "HGVSId descriptor.",
                    "examples": [
                        "NC_000017.11:g.43057063G>A"
                    ],
                    "type": "string"
                },
                "proteinHGVSIds": {
                    "description": "List of HGVSId descriptor(s) at protein level (for protein-altering variants).",
                    "examples": [
                        [
                            "NP_009225.1:p.Glu1817Ter"
                        ],
                        [
                            "LRG 199p1:p.Val25Gly (preferred)"
                        ]
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "transcriptHGVSIds": {
                    "description": "List of HGVSId descriptor(s) at transcript level.",
                    "examples": [
                        [
                            "NC 000023.10(NM004006.2):c.357+1G"
                        ]
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "variantAlternativeIds": {
                    "description": "List of cross-referencing ID(s), for the variant in other databases (e.g. dbSNP, ClinVar, ClinGen, COSMIC), as `externalReferences` with CURIE(s).",
                    "examples": [
                        [
                            {
                                "id": "dbSNP:rs587780345",
                                "notes": "dbSNP id",
                                "reference": "https://www.ncbi.nlm.nih.gov/snp/rs587780345"
                            },
                            {
                                "id": "ClinGen:CA152954",
                                "notes": "ClinGen Allele Registry id",
                                "reference": "http://reg.clinicalgenome.org/redmine/projects/registry/genboree_registry/by_caid?caid=CA152954"
                            },
                            {
                                "id": "UniProtKB:P35557#VAR_003699",
                                "reference": "https://www.uniprot.org/uniprot/P35557#VAR_003699"
                            }
                        ],
                        [
                            {
                                "id": "OMIM:164757.0001",
                                "reference": "https://www.omim.org/entry/164757#0001"
                            }
                        ]
                    ],
                    "items": {
                        "$schema": "https://json-schema.org/draft/2020-12/schema",
                        "additionalProperties": true,
                        "description": "Definition of an external reference class. Provenance: GA4GH Phenopackets v2 `ExternalReference`",
                        "properties": {
                            "id": {
                                "description": "An application specific identifier. RECOMMENDED.",
                                "example": "PMID:34054918",
                                "type": "string"
                            },
                            "notes": {
                                "description": "An optional text descriptor. Renamed compared to GA4GH Phenopackets v2 `ExternalReference.description`",
                                "example": "Signatures of Discriminative Copy Number Aberrations in 31 Cancer Subtypes",
                                "type": "string"
                            },
                            "reference": {
                                "description": "A url.",
                                "example": "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8155688/",
                                "type": "string"
                            }
                        },
                        "required": [],
                        "title": "ExternalReference",
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "molecularAttributes": {
            "properties": {
                "aminoacidChanges": {
                    "description": "Lisf of change(s) at aminoacid level for protein affecting variants.",
                    "examples": [
                        [
                            "V304*"
                        ]
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "geneIds": {
                    "examples": [
                        [
                            "ACE2"
                        ],
                        [
                            "BRCA1"
                        ]
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "genomicFeatures": {
                    "description": "List of Genomic feature(s) affected by the variant.",
                    "items": {
                        "description": "Genomic feature(s) related to the variant. NOTE: Although genes could also be referenced using these attributes, they have an independent section to allow direct queries.",
                        "properties": {
                            "featureClass": {
                                "$schema": "https://json-schema.org/draft/2020-12/schema",
                                "additionalProperties": true,
                                "definitions": {
                                    "CURIE": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    }
                                },
                                "description": "Definition of an ontology term.",
                                "properties": {
                                    "id": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    },
                                    "label": {
                                        "description": "The text that describes the term. By default it could be the preferred text of the term, but is it acceptable to customize it for a clearer description and understanding of the term in an specific context.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "Ontology Term",
                                "type": "object"
                            },
                            "featureID": {
                                "$schema": "https://json-schema.org/draft/2020-12/schema",
                                "additionalProperties": true,
                                "definitions": {
                                    "CURIE": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    }
                                },
                                "description": "Definition of an ontology term.",
                                "properties": {
                                    "id": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    },
                                    "label": {
                                        "description": "The text that describes the term. By default it could be the preferred text of the term, but is it acceptable to customize it for a clearer description and understanding of the term in an specific context.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "Ontology Term",
                                "type": "object"
                            }
                        },
                        "required": [
                            "featureClass"
                        ],
                        "type": "object"
                    },
                    "type": "array"
                },
                "molecularEffects": {
                    "description": "Ontology term that includes describes the class of molecular consequence generated by the variant. Values from Ensembl Glossary Variant Consequence (ENSGLOSSARY:0000134 ontology branch) are recommended, e.g. Stop gained, Missense variant, Coding sequence variant.",
                    "examples": [
                        {
                            "id": "ENSGLOSSARY:0000143",
                            "label": "Stop gained"
                        },
                        {
                            "id": "ENSGLOSSARY:0000150",
                            "label": "Missense variant"
                        }
                    ],
                    "items": {
                        "$schema": "https://json-schema.org/draft/2020-12/schema",
                        "additionalProperties": true,
                        "definitions": {
                            "CURIE": {
                                "description": "A CURIE identifier for an ontology term.",
                                "examples": [
                                    "ga4gh:GA.01234abcde",
                                    "DUO:0000004",
                                    "orcid:0000-0003-3463-0775",
                                    "PMID:15254584"
                                ],
                                "pattern": "^\\w[^:]+:.+$",
                                "type": "string"
                            }
                        },
                        "description": "Definition of an ontology term.",
                        "properties": {
                            "id": {
                                "description": "A CURIE identifier for an ontology term.",
                                "examples": [
                                    "ga4gh:GA.01234abcde",
                                    "DUO:0000004",
                                    "orcid:0000-0003-3463-0775",
                                    "PMID:15254584"
                                ],
                                "pattern": "^\\w[^:]+:.+$",
                                "type": "string"
                            },
                            "label": {
                                "description": "The text that describes the term. By default it could be the preferred text of the term, but is it acceptable to customize it for a clearer description and understanding of the term in an specific context.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "id"
                        ],
                        "title": "Ontology Term",
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "variantInternalId": {
            "description": "Reference to the **internal** variant ID. This represents the primary key/identifier of that variant **inside** a given Beacon instance. Different Beacon instances may use identical id values, referring to unrelated variants. Public identifiers such as the GA4GH Variant Representation Id (VRSid) MUST be returned in the `identifiers` section. A Beacon instance can, of course, use the VRSid as their own internal id but still MUST represent this then in the `identifiers` section.",
            "examples": [
                "var00001",
                "v110112"
            ],
            "type": "string"
        },
        "variantLevelData": {
            "properties": {
                "clinicalInterpretations": {
                    "items": {
                        "description": "List of annotated effects on disease or phenotypes.",
                        "properties": {
                            "annotatedWith": {
                                "properties": {
                                    "toolName": {
                                        "description": "Name of the tool.",
                                        "examples": [
                                            "Ensembl Variant Effect Predictor (VEP)"
                                        ],
                                        "type": "string"
                                    },
                                    "toolReferences": {
                                        "additionalProperties": true,
                                        "description": "References to the tool",
                                        "examples": [
                                            {
                                                "bio.toolsId": "https://bio.tools/vep"
                                            },
                                            {
                                                "url": "http://www.ensembl.org/vep"
                                            }
                                        ],
                                        "minProperties": 1,
                                        "properties": {},
                                        "type": "object"
                                    },
                                    "version": {
                                        "description": "Version used.",
                                        "examples": [
                                            "rel 104"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "toolName",
                                    "version",
                                    "toolReferences"
                                ],
                                "type": "object"
                            },
                            "category": {
                                "$schema": "https://json-schema.org/draft/2020-12/schema",
                                "additionalProperties": true,
                                "definitions": {
                                    "CURIE": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    }
                                },
                                "description": "Definition of an ontology term.",
                                "properties": {
                                    "id": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    },
                                    "label": {
                                        "description": "The text that describes the term. By default it could be the preferred text of the term, but is it acceptable to customize it for a clearer description and understanding of the term in an specific context.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "Ontology Term",
                                "type": "object"
                            },
                            "clinicalRelevance": {
                                "description": "A value from the five-tiered classification from the American College of Medical Genetics (ACMG) designed to describe the likelihood that a genomic sequence variant is causative of an inherited disease. (NCIT:C168798).",
                                "enum": [
                                    "benign",
                                    "likely benign",
                                    "uncertain significance",
                                    "likely pathogenic",
                                    "pathogenic"
                                ],
                                "example": "pathogenic",
                                "type": "string"
                            },
                            "conditionId": {
                                "description": "Internal identifier of the phenotype or clinical effect.",
                                "examples": [
                                    "disease1",
                                    "phen2234"
                                ],
                                "type": "string"
                            },
                            "effect": {
                                "$schema": "https://json-schema.org/draft/2020-12/schema",
                                "additionalProperties": true,
                                "definitions": {
                                    "CURIE": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    }
                                },
                                "description": "Definition of an ontology term.",
                                "properties": {
                                    "id": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    },
                                    "label": {
                                        "description": "The text that describes the term. By default it could be the preferred text of the term, but is it acceptable to customize it for a clearer description and understanding of the term in an specific context.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "Ontology Term",
                                "type": "object"
                            },
                            "evidenceType": {
                                "$schema": "https://json-schema.org/draft/2020-12/schema",
                                "additionalProperties": true,
                                "definitions": {
                                    "CURIE": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    }
                                },
                                "description": "Definition of an ontology term.",
                                "properties": {
                                    "id": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    },
                                    "label": {
                                        "description": "The text that describes the term. By default it could be the preferred text of the term, but is it acceptable to customize it for a clearer description and understanding of the term in an specific context.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "Ontology Term",
                                "type": "object"
                            }
                        },
                        "required": [
                            "conditionId",
                            "effect"
                        ],
                        "type": "object"
                    },
                    "type": "array"
                },
                "phenotypicEffects": {
                    "items": {
                        "description": "List of annotated effects on disease or phenotypes.",
                        "properties": {
                            "annotatedWith": {
                                "properties": {
                                    "toolName": {
                                        "description": "Name of the tool.",
                                        "examples": [
                                            "Ensembl Variant Effect Predictor (VEP)"
                                        ],
                                        "type": "string"
                                    },
                                    "toolReferences": {
                                        "additionalProperties": true,
                                        "description": "References to the tool",
                                        "examples": [
                                            {
                                                "bio.toolsId": "https://bio.tools/vep"
                                            },
                                            {
                                                "url": "http://www.ensembl.org/vep"
                                            }
                                        ],
                                        "minProperties": 1,
                                        "properties": {},
                                        "type": "object"
                                    },
                                    "version": {
                                        "description": "Version used.",
                                        "examples": [
                                            "rel 104"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "toolName",
                                    "version",
                                    "toolReferences"
                                ],
                                "type": "object"
                            },
                            "category": {
                                "$schema": "https://json-schema.org/draft/2020-12/schema",
                                "additionalProperties": true,
                                "definitions": {
                                    "CURIE": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    }
                                },
                                "description": "Definition of an ontology term.",
                                "properties": {
                                    "id": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    },
                                    "label": {
                                        "description": "The text that describes the term. By default it could be the preferred text of the term, but is it acceptable to customize it for a clearer description and understanding of the term in an specific context.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "Ontology Term",
                                "type": "object"
                            },
                            "clinicalRelevance": {
                                "description": "A value from the five-tiered classification from the American College of Medical Genetics (ACMG) designed to describe the likelihood that a genomic sequence variant is causative of an inherited disease. (NCIT:C168798).",
                                "enum": [
                                    "benign",
                                    "likely benign",
                                    "uncertain significance",
                                    "likely pathogenic",
                                    "pathogenic"
                                ],
                                "example": "pathogenic",
                                "type": "string"
                            },
                            "conditionId": {
                                "description": "Internal identifier of the phenotype or clinical effect.",
                                "examples": [
                                    "disease1",
                                    "phen2234"
                                ],
                                "type": "string"
                            },
                            "effect": {
                                "$schema": "https://json-schema.org/draft/2020-12/schema",
                                "additionalProperties": true,
                                "definitions": {
                                    "CURIE": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    }
                                },
                                "description": "Definition of an ontology term.",
                                "properties": {
                                    "id": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    },
                                    "label": {
                                        "description": "The text that describes the term. By default it could be the preferred text of the term, but is it acceptable to customize it for a clearer description and understanding of the term in an specific context.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "Ontology Term",
                                "type": "object"
                            },
                            "evidenceType": {
                                "$schema": "https://json-schema.org/draft/2020-12/schema",
                                "additionalProperties": true,
                                "definitions": {
                                    "CURIE": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    }
                                },
                                "description": "Definition of an ontology term.",
                                "properties": {
                                    "id": {
                                        "description": "A CURIE identifier for an ontology term.",
                                        "examples": [
                                            "ga4gh:GA.01234abcde",
                                            "DUO:0000004",
                                            "orcid:0000-0003-3463-0775",
                                            "PMID:15254584"
                                        ],
                                        "pattern": "^\\w[^:]+:.+$",
                                        "type": "string"
                                    },
                                    "label": {
                                        "description": "The text that describes the term. By default it could be the preferred text of the term, but is it acceptable to customize it for a clearer description and understanding of the term in an specific context.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "Ontology Term",
                                "type": "object"
                            }
                        },
                        "required": [
                            "conditionId",
                            "effect"
                        ],
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "variation": {
            "oneOf": [
                {
                    "description": "A variation on a contiguous molecule.",
                    "oneOf": [
                        {
                            "description": "The state of a molecule at a Location.",
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                                "_id": {
                                    "additionalProperties": false,
                                    "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                    "type": "string",
                                    "pattern": "^\\w[^:]*:.+$",
                                    "example": "ensembl:ENSG00000139618"
                                },
                                "type": {
                                    "type": "string",
                                    "const": "Allele",
                                    "description": "MUST be \"Allele\""
                                },
                                "location": {
                                    "oneOf": [
                                        {
                                            "additionalProperties": false,
                                            "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                            "type": "string",
                                            "pattern": "^\\w[^:]*:.+$",
                                            "example": "ensembl:ENSG00000139618"
                                        },
                                        {
                                            "description": "A contiguous segment of a biological sequence.",
                                            "oneOf": [
                                                {
                                                    "additionalProperties": false,
                                                    "description": "A Location on a chromosome defined by a species and chromosome name.",
                                                    "type": "object",
                                                    "properties": {
                                                        "_id": {
                                                            "additionalProperties": false,
                                                            "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                            "type": "string",
                                                            "pattern": "^\\w[^:]*:.+$",
                                                            "example": "ensembl:ENSG00000139618"
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "const": "ChromosomeLocation",
                                                            "description": "MUST be \"ChromosomeLocation\""
                                                        },
                                                        "species_id": {
                                                            "additionalProperties": false,
                                                            "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                            "type": "string",
                                                            "pattern": "^\\w[^:]*:.+$",
                                                            "example": "ensembl:ENSG00000139618"
                                                        },
                                                        "chr": {
                                                            "type": "string",
                                                            "description": "The symbolic chromosome name. For humans, For humans, chromosome names MUST be one of 1..22, X, Y (case-sensitive)"
                                                        },
                                                        "interval": {
                                                            "description": "A contiguous span on a chromosome defined by cytoband features. The span includes the constituent regions described by the start and end cytobands, as well as any intervening regions.",
                                                            "type": "object",
                                                            "additionalProperties": false,
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string",
                                                                    "const": "CytobandInterval",
                                                                    "description": "MUST be \"CytobandInterval\""
                                                                },
                                                                "start": {
                                                                    "additionalProperties": false,
                                                                    "description": "A character string representing cytobands derived from the *International System for Human Cytogenomic Nomenclature* (ISCN) [guidelines](http://doi.org/10.1159/isbn.978-3-318-06861-0).",
                                                                    "type": "string",
                                                                    "pattern": "^cen|[pq](ter|([1-9][0-9]*(\\.[1-9][0-9]*)?))$",
                                                                    "example": "q22.3"
                                                                },
                                                                "end": {
                                                                    "additionalProperties": false,
                                                                    "description": "A character string representing cytobands derived from the *International System for Human Cytogenomic Nomenclature* (ISCN) [guidelines](http://doi.org/10.1159/isbn.978-3-318-06861-0).",
                                                                    "type": "string",
                                                                    "pattern": "^cen|[pq](ter|([1-9][0-9]*(\\.[1-9][0-9]*)?))$",
                                                                    "example": "q22.3"
                                                                }
                                                            },
                                                            "example": {
                                                                "type": "CytobandInterval",
                                                                "start": "q22.2",
                                                                "end": "q22.3"
                                                            },
                                                            "required": [
                                                                "end",
                                                                "start",
                                                                "type"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "chr",
                                                        "interval",
                                                        "species_id",
                                                        "type"
                                                    ]
                                                },
                                                {
                                                    "additionalProperties": false,
                                                    "description": "A Location defined by an interval on a referenced Sequence.",
                                                    "type": "object",
                                                    "properties": {
                                                        "_id": {
                                                            "additionalProperties": false,
                                                            "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                            "type": "string",
                                                            "pattern": "^\\w[^:]*:.+$",
                                                            "example": "ensembl:ENSG00000139618"
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "const": "SequenceLocation",
                                                            "description": "MUST be \"SequenceLocation\""
                                                        },
                                                        "sequence_id": {
                                                            "additionalProperties": false,
                                                            "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                            "type": "string",
                                                            "pattern": "^\\w[^:]*:.+$",
                                                            "example": "ensembl:ENSG00000139618"
                                                        },
                                                        "interval": {
                                                            "oneOf": [
                                                                {
                                                                    "description": "A SequenceInterval represents a span on a Sequence. Positions are always represented by contiguous spans using interbase coordinates or coordinate ranges.",
                                                                    "type": "object",
                                                                    "additionalProperties": false,
                                                                    "properties": {
                                                                        "type": {
                                                                            "type": "string",
                                                                            "const": "SequenceInterval",
                                                                            "description": "MUST be \"SequenceInterval\""
                                                                        },
                                                                        "start": {
                                                                            "oneOf": [
                                                                                {
                                                                                    "description": "A simple integer value as a VRS class.",
                                                                                    "type": "object",
                                                                                    "additionalProperties": false,
                                                                                    "properties": {
                                                                                        "type": {
                                                                                            "type": "string",
                                                                                            "const": "Number",
                                                                                            "description": "MUST be \"Number\""
                                                                                        },
                                                                                        "value": {
                                                                                            "type": "integer",
                                                                                            "description": "The value represented by Number"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "type",
                                                                                        "value"
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                    "type": "object",
                                                                                    "additionalProperties": false,
                                                                                    "properties": {
                                                                                        "type": {
                                                                                            "type": "string",
                                                                                            "const": "IndefiniteRange",
                                                                                            "description": "MUST be \"IndefiniteRange\""
                                                                                        },
                                                                                        "value": {
                                                                                            "type": "number",
                                                                                            "description": "The bounded value; inclusive"
                                                                                        },
                                                                                        "comparator": {
                                                                                            "type": "string",
                                                                                            "enum": [
                                                                                                "<=",
                                                                                                ">="
                                                                                            ],
                                                                                            "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "comparator",
                                                                                        "type",
                                                                                        "value"
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "description": "A bounded, inclusive range of numbers.",
                                                                                    "type": "object",
                                                                                    "additionalProperties": false,
                                                                                    "properties": {
                                                                                        "type": {
                                                                                            "type": "string",
                                                                                            "const": "DefiniteRange",
                                                                                            "description": "MUST be \"DefiniteRange\""
                                                                                        },
                                                                                        "min": {
                                                                                            "type": "number",
                                                                                            "description": "The minimum value; inclusive"
                                                                                        },
                                                                                        "max": {
                                                                                            "type": "number",
                                                                                            "description": "The maximum value; inclusive"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "max",
                                                                                        "min",
                                                                                        "type"
                                                                                    ]
                                                                                }
                                                                            ],
                                                                            "description": "The start coordinate or range of the interval. The minimum value of this coordinate or range is 0. MUST represent a coordinate or range less than the value of `end`."
                                                                        },
                                                                        "end": {
                                                                            "oneOf": [
                                                                                {
                                                                                    "description": "A simple integer value as a VRS class.",
                                                                                    "type": "object",
                                                                                    "additionalProperties": false,
                                                                                    "properties": {
                                                                                        "type": {
                                                                                            "type": "string",
                                                                                            "const": "Number",
                                                                                            "description": "MUST be \"Number\""
                                                                                        },
                                                                                        "value": {
                                                                                            "type": "integer",
                                                                                            "description": "The value represented by Number"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "type",
                                                                                        "value"
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                    "type": "object",
                                                                                    "additionalProperties": false,
                                                                                    "properties": {
                                                                                        "type": {
                                                                                            "type": "string",
                                                                                            "const": "IndefiniteRange",
                                                                                            "description": "MUST be \"IndefiniteRange\""
                                                                                        },
                                                                                        "value": {
                                                                                            "type": "number",
                                                                                            "description": "The bounded value; inclusive"
                                                                                        },
                                                                                        "comparator": {
                                                                                            "type": "string",
                                                                                            "enum": [
                                                                                                "<=",
                                                                                                ">="
                                                                                            ],
                                                                                            "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "comparator",
                                                                                        "type",
                                                                                        "value"
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "description": "A bounded, inclusive range of numbers.",
                                                                                    "type": "object",
                                                                                    "additionalProperties": false,
                                                                                    "properties": {
                                                                                        "type": {
                                                                                            "type": "string",
                                                                                            "const": "DefiniteRange",
                                                                                            "description": "MUST be \"DefiniteRange\""
                                                                                        },
                                                                                        "min": {
                                                                                            "type": "number",
                                                                                            "description": "The minimum value; inclusive"
                                                                                        },
                                                                                        "max": {
                                                                                            "type": "number",
                                                                                            "description": "The maximum value; inclusive"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "max",
                                                                                        "min",
                                                                                        "type"
                                                                                    ]
                                                                                }
                                                                            ],
                                                                            "description": "The end coordinate or range of the interval. The minimum value of this coordinate or range is 0. MUST represent a coordinate or range greater than the value of `start`."
                                                                        }
                                                                    },
                                                                    "allOf": [
                                                                        {
                                                                            "if": {
                                                                                "properties": {
                                                                                    "start": {
                                                                                        "description": "A simple integer value as a VRS class.",
                                                                                        "type": "object",
                                                                                        "additionalProperties": false,
                                                                                        "properties": {
                                                                                            "type": {
                                                                                                "type": "string",
                                                                                                "const": "Number",
                                                                                                "description": "MUST be \"Number\""
                                                                                            },
                                                                                            "value": {
                                                                                                "type": "integer",
                                                                                                "description": "The value represented by Number"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "type",
                                                                                            "value"
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            },
                                                                            "then": {
                                                                                "properties": {
                                                                                    "start": {
                                                                                        "properties": {
                                                                                            "value": {
                                                                                                "minimum": 0
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "if": {
                                                                                "properties": {
                                                                                    "start": {
                                                                                        "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                        "type": "object",
                                                                                        "additionalProperties": false,
                                                                                        "properties": {
                                                                                            "type": {
                                                                                                "type": "string",
                                                                                                "const": "IndefiniteRange",
                                                                                                "description": "MUST be \"IndefiniteRange\""
                                                                                            },
                                                                                            "value": {
                                                                                                "type": "number",
                                                                                                "description": "The bounded value; inclusive"
                                                                                            },
                                                                                            "comparator": {
                                                                                                "type": "string",
                                                                                                "enum": [
                                                                                                    "<=",
                                                                                                    ">="
                                                                                                ],
                                                                                                "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "comparator",
                                                                                            "type",
                                                                                            "value"
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            },
                                                                            "then": {
                                                                                "properties": {
                                                                                    "start": {
                                                                                        "properties": {
                                                                                            "value": {
                                                                                                "minimum": 0
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "if": {
                                                                                "properties": {
                                                                                    "start": {
                                                                                        "description": "A bounded, inclusive range of numbers.",
                                                                                        "type": "object",
                                                                                        "additionalProperties": false,
                                                                                        "properties": {
                                                                                            "type": {
                                                                                                "type": "string",
                                                                                                "const": "DefiniteRange",
                                                                                                "description": "MUST be \"DefiniteRange\""
                                                                                            },
                                                                                            "min": {
                                                                                                "type": "number",
                                                                                                "description": "The minimum value; inclusive"
                                                                                            },
                                                                                            "max": {
                                                                                                "type": "number",
                                                                                                "description": "The maximum value; inclusive"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "max",
                                                                                            "min",
                                                                                            "type"
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            },
                                                                            "then": {
                                                                                "properties": {
                                                                                    "start": {
                                                                                        "properties": {
                                                                                            "min": {
                                                                                                "minimum": 0
                                                                                            },
                                                                                            "max": {
                                                                                                "minimum": 0
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "if": {
                                                                                "properties": {
                                                                                    "end": {
                                                                                        "description": "A simple integer value as a VRS class.",
                                                                                        "type": "object",
                                                                                        "additionalProperties": false,
                                                                                        "properties": {
                                                                                            "type": {
                                                                                                "type": "string",
                                                                                                "const": "Number",
                                                                                                "description": "MUST be \"Number\""
                                                                                            },
                                                                                            "value": {
                                                                                                "type": "integer",
                                                                                                "description": "The value represented by Number"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "type",
                                                                                            "value"
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            },
                                                                            "then": {
                                                                                "properties": {
                                                                                    "end": {
                                                                                        "properties": {
                                                                                            "value": {
                                                                                                "minimum": 0
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "if": {
                                                                                "properties": {
                                                                                    "end": {
                                                                                        "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                        "type": "object",
                                                                                        "additionalProperties": false,
                                                                                        "properties": {
                                                                                            "type": {
                                                                                                "type": "string",
                                                                                                "const": "IndefiniteRange",
                                                                                                "description": "MUST be \"IndefiniteRange\""
                                                                                            },
                                                                                            "value": {
                                                                                                "type": "number",
                                                                                                "description": "The bounded value; inclusive"
                                                                                            },
                                                                                            "comparator": {
                                                                                                "type": "string",
                                                                                                "enum": [
                                                                                                    "<=",
                                                                                                    ">="
                                                                                                ],
                                                                                                "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "comparator",
                                                                                            "type",
                                                                                            "value"
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            },
                                                                            "then": {
                                                                                "properties": {
                                                                                    "end": {
                                                                                        "properties": {
                                                                                            "value": {
                                                                                                "minimum": 0
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            "if": {
                                                                                "properties": {
                                                                                    "end": {
                                                                                        "description": "A bounded, inclusive range of numbers.",
                                                                                        "type": "object",
                                                                                        "additionalProperties": false,
                                                                                        "properties": {
                                                                                            "type": {
                                                                                                "type": "string",
                                                                                                "const": "DefiniteRange",
                                                                                                "description": "MUST be \"DefiniteRange\""
                                                                                            },
                                                                                            "min": {
                                                                                                "type": "number",
                                                                                                "description": "The minimum value; inclusive"
                                                                                            },
                                                                                            "max": {
                                                                                                "type": "number",
                                                                                                "description": "The maximum value; inclusive"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "max",
                                                                                            "min",
                                                                                            "type"
                                                                                        ]
                                                                                    }
                                                                                }
                                                                            },
                                                                            "then": {
                                                                                "properties": {
                                                                                    "end": {
                                                                                        "properties": {
                                                                                            "min": {
                                                                                                "minimum": 0
                                                                                            },
                                                                                            "max": {
                                                                                                "minimum": 0
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "required": [
                                                                        "end",
                                                                        "start",
                                                                        "type"
                                                                    ]
                                                                },
                                                                {
                                                                    "deprecated": true,
                                                                    "description": "DEPRECATED: A SimpleInterval represents a span of sequence. Positions are always represented by contiguous spans using interbase coordinates. This class is deprecated. Use SequenceInterval instead.",
                                                                    "additionalProperties": false,
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "type": {
                                                                            "type": "string",
                                                                            "const": "SimpleInterval",
                                                                            "description": "MUST be \"SimpleInterval\""
                                                                        },
                                                                        "start": {
                                                                            "type": "integer",
                                                                            "description": "The start coordinate"
                                                                        },
                                                                        "end": {
                                                                            "type": "integer",
                                                                            "description": "The end coordinate"
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "type": "SimpleInterval",
                                                                        "start": 11,
                                                                        "end": 22
                                                                    },
                                                                    "required": [
                                                                        "end",
                                                                        "start",
                                                                        "type"
                                                                    ]
                                                                }
                                                            ],
                                                            "description": "Reference sequence region defined by a SequenceInterval."
                                                        }
                                                    },
                                                    "required": [
                                                        "interval",
                                                        "sequence_id",
                                                        "type"
                                                    ]
                                                }
                                            ],
                                            "discriminator": {
                                                "propertyName": "type"
                                            }
                                        }
                                    ],
                                    "description": "Where Allele is located"
                                },
                                "state": {
                                    "oneOf": [
                                        {
                                            "deprecated": true,
                                            "description": "DEPRECATED. A Sequence as a State. This is the State class to use for representing \"ref-alt\" style variation, including SNVs, MNVs, del, ins, and delins. This class is deprecated. Use LiteralSequenceExpression instead.",
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "const": "SequenceState",
                                                    "description": "MUST be \"SequenceState\""
                                                },
                                                "sequence": {
                                                    "additionalProperties": false,
                                                    "description": "A character string of Residues that represents a biological sequence using the conventional sequence order (5\u2019-to-3\u2019 for nucleic acid sequences, and amino-to-carboxyl for amino acid sequences). IUPAC ambiguity codes are permitted in Sequences.",
                                                    "type": "string",
                                                    "pattern": "^[A-Z*\\-]*$"
                                                }
                                            },
                                            "example": {
                                                "type": "SequenceState",
                                                "sequence": "C"
                                            },
                                            "required": [
                                                "sequence",
                                                "type"
                                            ]
                                        },
                                        {
                                            "description": "An expression describing a Sequence.",
                                            "oneOf": [
                                                {
                                                    "description": "An explicit expression of a Sequence.",
                                                    "type": "object",
                                                    "additionalProperties": false,
                                                    "properties": {
                                                        "type": {
                                                            "type": "string",
                                                            "const": "LiteralSequenceExpression",
                                                            "description": "MUST be \"LiteralSequenceExpression\""
                                                        },
                                                        "sequence": {
                                                            "additionalProperties": false,
                                                            "description": "A character string of Residues that represents a biological sequence using the conventional sequence order (5\u2019-to-3\u2019 for nucleic acid sequences, and amino-to-carboxyl for amino acid sequences). IUPAC ambiguity codes are permitted in Sequences.",
                                                            "type": "string",
                                                            "pattern": "^[A-Z*\\-]*$"
                                                        }
                                                    },
                                                    "required": [
                                                        "sequence",
                                                        "type"
                                                    ]
                                                },
                                                {
                                                    "description": "An approximate expression of a sequence that is derived from a referenced sequence location. Use of this class indicates that the derived sequence is *approximately equivalent* to the reference indicated, and is typically used for describing large regions in contexts where the use of an approximate sequence is inconsequential.",
                                                    "type": "object",
                                                    "additionalProperties": false,
                                                    "properties": {
                                                        "type": {
                                                            "type": "string",
                                                            "const": "DerivedSequenceExpression",
                                                            "description": "MUST be \"DerivedSequenceExpression\""
                                                        },
                                                        "location": {
                                                            "additionalProperties": false,
                                                            "description": "A Location defined by an interval on a referenced Sequence.",
                                                            "type": "object",
                                                            "properties": {
                                                                "_id": {
                                                                    "additionalProperties": false,
                                                                    "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                                    "type": "string",
                                                                    "pattern": "^\\w[^:]*:.+$",
                                                                    "example": "ensembl:ENSG00000139618"
                                                                },
                                                                "type": {
                                                                    "type": "string",
                                                                    "const": "SequenceLocation",
                                                                    "description": "MUST be \"SequenceLocation\""
                                                                },
                                                                "sequence_id": {
                                                                    "additionalProperties": false,
                                                                    "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                                    "type": "string",
                                                                    "pattern": "^\\w[^:]*:.+$",
                                                                    "example": "ensembl:ENSG00000139618"
                                                                },
                                                                "interval": {
                                                                    "oneOf": [
                                                                        {
                                                                            "description": "A SequenceInterval represents a span on a Sequence. Positions are always represented by contiguous spans using interbase coordinates or coordinate ranges.",
                                                                            "type": "object",
                                                                            "additionalProperties": false,
                                                                            "properties": {
                                                                                "type": {
                                                                                    "type": "string",
                                                                                    "const": "SequenceInterval",
                                                                                    "description": "MUST be \"SequenceInterval\""
                                                                                },
                                                                                "start": {
                                                                                    "oneOf": [
                                                                                        {
                                                                                            "description": "A simple integer value as a VRS class.",
                                                                                            "type": "object",
                                                                                            "additionalProperties": false,
                                                                                            "properties": {
                                                                                                "type": {
                                                                                                    "type": "string",
                                                                                                    "const": "Number",
                                                                                                    "description": "MUST be \"Number\""
                                                                                                },
                                                                                                "value": {
                                                                                                    "type": "integer",
                                                                                                    "description": "The value represented by Number"
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "type",
                                                                                                "value"
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                            "type": "object",
                                                                                            "additionalProperties": false,
                                                                                            "properties": {
                                                                                                "type": {
                                                                                                    "type": "string",
                                                                                                    "const": "IndefiniteRange",
                                                                                                    "description": "MUST be \"IndefiniteRange\""
                                                                                                },
                                                                                                "value": {
                                                                                                    "type": "number",
                                                                                                    "description": "The bounded value; inclusive"
                                                                                                },
                                                                                                "comparator": {
                                                                                                    "type": "string",
                                                                                                    "enum": [
                                                                                                        "<=",
                                                                                                        ">="
                                                                                                    ],
                                                                                                    "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "comparator",
                                                                                                "type",
                                                                                                "value"
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "description": "A bounded, inclusive range of numbers.",
                                                                                            "type": "object",
                                                                                            "additionalProperties": false,
                                                                                            "properties": {
                                                                                                "type": {
                                                                                                    "type": "string",
                                                                                                    "const": "DefiniteRange",
                                                                                                    "description": "MUST be \"DefiniteRange\""
                                                                                                },
                                                                                                "min": {
                                                                                                    "type": "number",
                                                                                                    "description": "The minimum value; inclusive"
                                                                                                },
                                                                                                "max": {
                                                                                                    "type": "number",
                                                                                                    "description": "The maximum value; inclusive"
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "max",
                                                                                                "min",
                                                                                                "type"
                                                                                            ]
                                                                                        }
                                                                                    ],
                                                                                    "description": "The start coordinate or range of the interval. The minimum value of this coordinate or range is 0. MUST represent a coordinate or range less than the value of `end`."
                                                                                },
                                                                                "end": {
                                                                                    "oneOf": [
                                                                                        {
                                                                                            "description": "A simple integer value as a VRS class.",
                                                                                            "type": "object",
                                                                                            "additionalProperties": false,
                                                                                            "properties": {
                                                                                                "type": {
                                                                                                    "type": "string",
                                                                                                    "const": "Number",
                                                                                                    "description": "MUST be \"Number\""
                                                                                                },
                                                                                                "value": {
                                                                                                    "type": "integer",
                                                                                                    "description": "The value represented by Number"
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "type",
                                                                                                "value"
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                            "type": "object",
                                                                                            "additionalProperties": false,
                                                                                            "properties": {
                                                                                                "type": {
                                                                                                    "type": "string",
                                                                                                    "const": "IndefiniteRange",
                                                                                                    "description": "MUST be \"IndefiniteRange\""
                                                                                                },
                                                                                                "value": {
                                                                                                    "type": "number",
                                                                                                    "description": "The bounded value; inclusive"
                                                                                                },
                                                                                                "comparator": {
                                                                                                    "type": "string",
                                                                                                    "enum": [
                                                                                                        "<=",
                                                                                                        ">="
                                                                                                    ],
                                                                                                    "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "comparator",
                                                                                                "type",
                                                                                                "value"
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "description": "A bounded, inclusive range of numbers.",
                                                                                            "type": "object",
                                                                                            "additionalProperties": false,
                                                                                            "properties": {
                                                                                                "type": {
                                                                                                    "type": "string",
                                                                                                    "const": "DefiniteRange",
                                                                                                    "description": "MUST be \"DefiniteRange\""
                                                                                                },
                                                                                                "min": {
                                                                                                    "type": "number",
                                                                                                    "description": "The minimum value; inclusive"
                                                                                                },
                                                                                                "max": {
                                                                                                    "type": "number",
                                                                                                    "description": "The maximum value; inclusive"
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "max",
                                                                                                "min",
                                                                                                "type"
                                                                                            ]
                                                                                        }
                                                                                    ],
                                                                                    "description": "The end coordinate or range of the interval. The minimum value of this coordinate or range is 0. MUST represent a coordinate or range greater than the value of `start`."
                                                                                }
                                                                            },
                                                                            "allOf": [
                                                                                {
                                                                                    "if": {
                                                                                        "properties": {
                                                                                            "start": {
                                                                                                "description": "A simple integer value as a VRS class.",
                                                                                                "type": "object",
                                                                                                "additionalProperties": false,
                                                                                                "properties": {
                                                                                                    "type": {
                                                                                                        "type": "string",
                                                                                                        "const": "Number",
                                                                                                        "description": "MUST be \"Number\""
                                                                                                    },
                                                                                                    "value": {
                                                                                                        "type": "integer",
                                                                                                        "description": "The value represented by Number"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "type",
                                                                                                    "value"
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "then": {
                                                                                        "properties": {
                                                                                            "start": {
                                                                                                "properties": {
                                                                                                    "value": {
                                                                                                        "minimum": 0
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "if": {
                                                                                        "properties": {
                                                                                            "start": {
                                                                                                "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                "type": "object",
                                                                                                "additionalProperties": false,
                                                                                                "properties": {
                                                                                                    "type": {
                                                                                                        "type": "string",
                                                                                                        "const": "IndefiniteRange",
                                                                                                        "description": "MUST be \"IndefiniteRange\""
                                                                                                    },
                                                                                                    "value": {
                                                                                                        "type": "number",
                                                                                                        "description": "The bounded value; inclusive"
                                                                                                    },
                                                                                                    "comparator": {
                                                                                                        "type": "string",
                                                                                                        "enum": [
                                                                                                            "<=",
                                                                                                            ">="
                                                                                                        ],
                                                                                                        "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "comparator",
                                                                                                    "type",
                                                                                                    "value"
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "then": {
                                                                                        "properties": {
                                                                                            "start": {
                                                                                                "properties": {
                                                                                                    "value": {
                                                                                                        "minimum": 0
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "if": {
                                                                                        "properties": {
                                                                                            "start": {
                                                                                                "description": "A bounded, inclusive range of numbers.",
                                                                                                "type": "object",
                                                                                                "additionalProperties": false,
                                                                                                "properties": {
                                                                                                    "type": {
                                                                                                        "type": "string",
                                                                                                        "const": "DefiniteRange",
                                                                                                        "description": "MUST be \"DefiniteRange\""
                                                                                                    },
                                                                                                    "min": {
                                                                                                        "type": "number",
                                                                                                        "description": "The minimum value; inclusive"
                                                                                                    },
                                                                                                    "max": {
                                                                                                        "type": "number",
                                                                                                        "description": "The maximum value; inclusive"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "max",
                                                                                                    "min",
                                                                                                    "type"
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "then": {
                                                                                        "properties": {
                                                                                            "start": {
                                                                                                "properties": {
                                                                                                    "min": {
                                                                                                        "minimum": 0
                                                                                                    },
                                                                                                    "max": {
                                                                                                        "minimum": 0
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "if": {
                                                                                        "properties": {
                                                                                            "end": {
                                                                                                "description": "A simple integer value as a VRS class.",
                                                                                                "type": "object",
                                                                                                "additionalProperties": false,
                                                                                                "properties": {
                                                                                                    "type": {
                                                                                                        "type": "string",
                                                                                                        "const": "Number",
                                                                                                        "description": "MUST be \"Number\""
                                                                                                    },
                                                                                                    "value": {
                                                                                                        "type": "integer",
                                                                                                        "description": "The value represented by Number"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "type",
                                                                                                    "value"
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "then": {
                                                                                        "properties": {
                                                                                            "end": {
                                                                                                "properties": {
                                                                                                    "value": {
                                                                                                        "minimum": 0
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "if": {
                                                                                        "properties": {
                                                                                            "end": {
                                                                                                "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                "type": "object",
                                                                                                "additionalProperties": false,
                                                                                                "properties": {
                                                                                                    "type": {
                                                                                                        "type": "string",
                                                                                                        "const": "IndefiniteRange",
                                                                                                        "description": "MUST be \"IndefiniteRange\""
                                                                                                    },
                                                                                                    "value": {
                                                                                                        "type": "number",
                                                                                                        "description": "The bounded value; inclusive"
                                                                                                    },
                                                                                                    "comparator": {
                                                                                                        "type": "string",
                                                                                                        "enum": [
                                                                                                            "<=",
                                                                                                            ">="
                                                                                                        ],
                                                                                                        "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "comparator",
                                                                                                    "type",
                                                                                                    "value"
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "then": {
                                                                                        "properties": {
                                                                                            "end": {
                                                                                                "properties": {
                                                                                                    "value": {
                                                                                                        "minimum": 0
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "if": {
                                                                                        "properties": {
                                                                                            "end": {
                                                                                                "description": "A bounded, inclusive range of numbers.",
                                                                                                "type": "object",
                                                                                                "additionalProperties": false,
                                                                                                "properties": {
                                                                                                    "type": {
                                                                                                        "type": "string",
                                                                                                        "const": "DefiniteRange",
                                                                                                        "description": "MUST be \"DefiniteRange\""
                                                                                                    },
                                                                                                    "min": {
                                                                                                        "type": "number",
                                                                                                        "description": "The minimum value; inclusive"
                                                                                                    },
                                                                                                    "max": {
                                                                                                        "type": "number",
                                                                                                        "description": "The maximum value; inclusive"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "max",
                                                                                                    "min",
                                                                                                    "type"
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "then": {
                                                                                        "properties": {
                                                                                            "end": {
                                                                                                "properties": {
                                                                                                    "min": {
                                                                                                        "minimum": 0
                                                                                                    },
                                                                                                    "max": {
                                                                                                        "minimum": 0
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "required": [
                                                                                "end",
                                                                                "start",
                                                                                "type"
                                                                            ]
                                                                        },
                                                                        {
                                                                            "deprecated": true,
                                                                            "description": "DEPRECATED: A SimpleInterval represents a span of sequence. Positions are always represented by contiguous spans using interbase coordinates. This class is deprecated. Use SequenceInterval instead.",
                                                                            "additionalProperties": false,
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "type": {
                                                                                    "type": "string",
                                                                                    "const": "SimpleInterval",
                                                                                    "description": "MUST be \"SimpleInterval\""
                                                                                },
                                                                                "start": {
                                                                                    "type": "integer",
                                                                                    "description": "The start coordinate"
                                                                                },
                                                                                "end": {
                                                                                    "type": "integer",
                                                                                    "description": "The end coordinate"
                                                                                }
                                                                            },
                                                                            "example": {
                                                                                "type": "SimpleInterval",
                                                                                "start": 11,
                                                                                "end": 22
                                                                            },
                                                                            "required": [
                                                                                "end",
                                                                                "start",
                                                                                "type"
                                                                            ]
                                                                        }
                                                                    ],
                                                                    "description": "Reference sequence region defined by a SequenceInterval."
                                                                }
                                                            },
                                                            "required": [
                                                                "interval",
                                                                "sequence_id",
                                                                "type"
                                                            ]
                                                        },
                                                        "reverse_complement": {
                                                            "type": "boolean",
                                                            "description": "A flag indicating if the expressed sequence is the reverse complement of the sequence referred to by `location`"
                                                        }
                                                    },
                                                    "required": [
                                                        "location",
                                                        "reverse_complement",
                                                        "type"
                                                    ]
                                                },
                                                {
                                                    "description": "An expression of a sequence comprised of a tandem repeating subsequence.",
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "properties": {
                                                        "type": {
                                                            "type": "string",
                                                            "const": "RepeatedSequenceExpression",
                                                            "description": "MUST be \"RepeatedSequenceExpression\""
                                                        },
                                                        "seq_expr": {
                                                            "oneOf": [
                                                                {
                                                                    "description": "An explicit expression of a Sequence.",
                                                                    "type": "object",
                                                                    "additionalProperties": false,
                                                                    "properties": {
                                                                        "type": {
                                                                            "type": "string",
                                                                            "const": "LiteralSequenceExpression",
                                                                            "description": "MUST be \"LiteralSequenceExpression\""
                                                                        },
                                                                        "sequence": {
                                                                            "additionalProperties": false,
                                                                            "description": "A character string of Residues that represents a biological sequence using the conventional sequence order (5\u2019-to-3\u2019 for nucleic acid sequences, and amino-to-carboxyl for amino acid sequences). IUPAC ambiguity codes are permitted in Sequences.",
                                                                            "type": "string",
                                                                            "pattern": "^[A-Z*\\-]*$"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "sequence",
                                                                        "type"
                                                                    ]
                                                                },
                                                                {
                                                                    "description": "An approximate expression of a sequence that is derived from a referenced sequence location. Use of this class indicates that the derived sequence is *approximately equivalent* to the reference indicated, and is typically used for describing large regions in contexts where the use of an approximate sequence is inconsequential.",
                                                                    "type": "object",
                                                                    "additionalProperties": false,
                                                                    "properties": {
                                                                        "type": {
                                                                            "type": "string",
                                                                            "const": "DerivedSequenceExpression",
                                                                            "description": "MUST be \"DerivedSequenceExpression\""
                                                                        },
                                                                        "location": {
                                                                            "additionalProperties": false,
                                                                            "description": "A Location defined by an interval on a referenced Sequence.",
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "_id": {
                                                                                    "additionalProperties": false,
                                                                                    "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                                                    "type": "string",
                                                                                    "pattern": "^\\w[^:]*:.+$",
                                                                                    "example": "ensembl:ENSG00000139618"
                                                                                },
                                                                                "type": {
                                                                                    "type": "string",
                                                                                    "const": "SequenceLocation",
                                                                                    "description": "MUST be \"SequenceLocation\""
                                                                                },
                                                                                "sequence_id": {
                                                                                    "additionalProperties": false,
                                                                                    "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                                                    "type": "string",
                                                                                    "pattern": "^\\w[^:]*:.+$",
                                                                                    "example": "ensembl:ENSG00000139618"
                                                                                },
                                                                                "interval": {
                                                                                    "oneOf": [
                                                                                        {
                                                                                            "description": "A SequenceInterval represents a span on a Sequence. Positions are always represented by contiguous spans using interbase coordinates or coordinate ranges.",
                                                                                            "type": "object",
                                                                                            "additionalProperties": false,
                                                                                            "properties": {
                                                                                                "type": {
                                                                                                    "type": "string",
                                                                                                    "const": "SequenceInterval",
                                                                                                    "description": "MUST be \"SequenceInterval\""
                                                                                                },
                                                                                                "start": {
                                                                                                    "oneOf": [
                                                                                                        {
                                                                                                            "description": "A simple integer value as a VRS class.",
                                                                                                            "type": "object",
                                                                                                            "additionalProperties": false,
                                                                                                            "properties": {
                                                                                                                "type": {
                                                                                                                    "type": "string",
                                                                                                                    "const": "Number",
                                                                                                                    "description": "MUST be \"Number\""
                                                                                                                },
                                                                                                                "value": {
                                                                                                                    "type": "integer",
                                                                                                                    "description": "The value represented by Number"
                                                                                                                }
                                                                                                            },
                                                                                                            "required": [
                                                                                                                "type",
                                                                                                                "value"
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                            "type": "object",
                                                                                                            "additionalProperties": false,
                                                                                                            "properties": {
                                                                                                                "type": {
                                                                                                                    "type": "string",
                                                                                                                    "const": "IndefiniteRange",
                                                                                                                    "description": "MUST be \"IndefiniteRange\""
                                                                                                                },
                                                                                                                "value": {
                                                                                                                    "type": "number",
                                                                                                                    "description": "The bounded value; inclusive"
                                                                                                                },
                                                                                                                "comparator": {
                                                                                                                    "type": "string",
                                                                                                                    "enum": [
                                                                                                                        "<=",
                                                                                                                        ">="
                                                                                                                    ],
                                                                                                                    "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                }
                                                                                                            },
                                                                                                            "required": [
                                                                                                                "comparator",
                                                                                                                "type",
                                                                                                                "value"
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "description": "A bounded, inclusive range of numbers.",
                                                                                                            "type": "object",
                                                                                                            "additionalProperties": false,
                                                                                                            "properties": {
                                                                                                                "type": {
                                                                                                                    "type": "string",
                                                                                                                    "const": "DefiniteRange",
                                                                                                                    "description": "MUST be \"DefiniteRange\""
                                                                                                                },
                                                                                                                "min": {
                                                                                                                    "type": "number",
                                                                                                                    "description": "The minimum value; inclusive"
                                                                                                                },
                                                                                                                "max": {
                                                                                                                    "type": "number",
                                                                                                                    "description": "The maximum value; inclusive"
                                                                                                                }
                                                                                                            },
                                                                                                            "required": [
                                                                                                                "max",
                                                                                                                "min",
                                                                                                                "type"
                                                                                                            ]
                                                                                                        }
                                                                                                    ],
                                                                                                    "description": "The start coordinate or range of the interval. The minimum value of this coordinate or range is 0. MUST represent a coordinate or range less than the value of `end`."
                                                                                                },
                                                                                                "end": {
                                                                                                    "oneOf": [
                                                                                                        {
                                                                                                            "description": "A simple integer value as a VRS class.",
                                                                                                            "type": "object",
                                                                                                            "additionalProperties": false,
                                                                                                            "properties": {
                                                                                                                "type": {
                                                                                                                    "type": "string",
                                                                                                                    "const": "Number",
                                                                                                                    "description": "MUST be \"Number\""
                                                                                                                },
                                                                                                                "value": {
                                                                                                                    "type": "integer",
                                                                                                                    "description": "The value represented by Number"
                                                                                                                }
                                                                                                            },
                                                                                                            "required": [
                                                                                                                "type",
                                                                                                                "value"
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                            "type": "object",
                                                                                                            "additionalProperties": false,
                                                                                                            "properties": {
                                                                                                                "type": {
                                                                                                                    "type": "string",
                                                                                                                    "const": "IndefiniteRange",
                                                                                                                    "description": "MUST be \"IndefiniteRange\""
                                                                                                                },
                                                                                                                "value": {
                                                                                                                    "type": "number",
                                                                                                                    "description": "The bounded value; inclusive"
                                                                                                                },
                                                                                                                "comparator": {
                                                                                                                    "type": "string",
                                                                                                                    "enum": [
                                                                                                                        "<=",
                                                                                                                        ">="
                                                                                                                    ],
                                                                                                                    "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                }
                                                                                                            },
                                                                                                            "required": [
                                                                                                                "comparator",
                                                                                                                "type",
                                                                                                                "value"
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "description": "A bounded, inclusive range of numbers.",
                                                                                                            "type": "object",
                                                                                                            "additionalProperties": false,
                                                                                                            "properties": {
                                                                                                                "type": {
                                                                                                                    "type": "string",
                                                                                                                    "const": "DefiniteRange",
                                                                                                                    "description": "MUST be \"DefiniteRange\""
                                                                                                                },
                                                                                                                "min": {
                                                                                                                    "type": "number",
                                                                                                                    "description": "The minimum value; inclusive"
                                                                                                                },
                                                                                                                "max": {
                                                                                                                    "type": "number",
                                                                                                                    "description": "The maximum value; inclusive"
                                                                                                                }
                                                                                                            },
                                                                                                            "required": [
                                                                                                                "max",
                                                                                                                "min",
                                                                                                                "type"
                                                                                                            ]
                                                                                                        }
                                                                                                    ],
                                                                                                    "description": "The end coordinate or range of the interval. The minimum value of this coordinate or range is 0. MUST represent a coordinate or range greater than the value of `start`."
                                                                                                }
                                                                                            },
                                                                                            "allOf": [
                                                                                                {
                                                                                                    "if": {
                                                                                                        "properties": {
                                                                                                            "start": {
                                                                                                                "description": "A simple integer value as a VRS class.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": false,
                                                                                                                "properties": {
                                                                                                                    "type": {
                                                                                                                        "type": "string",
                                                                                                                        "const": "Number",
                                                                                                                        "description": "MUST be \"Number\""
                                                                                                                    },
                                                                                                                    "value": {
                                                                                                                        "type": "integer",
                                                                                                                        "description": "The value represented by Number"
                                                                                                                    }
                                                                                                                },
                                                                                                                "required": [
                                                                                                                    "type",
                                                                                                                    "value"
                                                                                                                ]
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    "then": {
                                                                                                        "properties": {
                                                                                                            "start": {
                                                                                                                "properties": {
                                                                                                                    "value": {
                                                                                                                        "minimum": 0
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "if": {
                                                                                                        "properties": {
                                                                                                            "start": {
                                                                                                                "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": false,
                                                                                                                "properties": {
                                                                                                                    "type": {
                                                                                                                        "type": "string",
                                                                                                                        "const": "IndefiniteRange",
                                                                                                                        "description": "MUST be \"IndefiniteRange\""
                                                                                                                    },
                                                                                                                    "value": {
                                                                                                                        "type": "number",
                                                                                                                        "description": "The bounded value; inclusive"
                                                                                                                    },
                                                                                                                    "comparator": {
                                                                                                                        "type": "string",
                                                                                                                        "enum": [
                                                                                                                            "<=",
                                                                                                                            ">="
                                                                                                                        ],
                                                                                                                        "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                    }
                                                                                                                },
                                                                                                                "required": [
                                                                                                                    "comparator",
                                                                                                                    "type",
                                                                                                                    "value"
                                                                                                                ]
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    "then": {
                                                                                                        "properties": {
                                                                                                            "start": {
                                                                                                                "properties": {
                                                                                                                    "value": {
                                                                                                                        "minimum": 0
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "if": {
                                                                                                        "properties": {
                                                                                                            "start": {
                                                                                                                "description": "A bounded, inclusive range of numbers.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": false,
                                                                                                                "properties": {
                                                                                                                    "type": {
                                                                                                                        "type": "string",
                                                                                                                        "const": "DefiniteRange",
                                                                                                                        "description": "MUST be \"DefiniteRange\""
                                                                                                                    },
                                                                                                                    "min": {
                                                                                                                        "type": "number",
                                                                                                                        "description": "The minimum value; inclusive"
                                                                                                                    },
                                                                                                                    "max": {
                                                                                                                        "type": "number",
                                                                                                                        "description": "The maximum value; inclusive"
                                                                                                                    }
                                                                                                                },
                                                                                                                "required": [
                                                                                                                    "max",
                                                                                                                    "min",
                                                                                                                    "type"
                                                                                                                ]
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    "then": {
                                                                                                        "properties": {
                                                                                                            "start": {
                                                                                                                "properties": {
                                                                                                                    "min": {
                                                                                                                        "minimum": 0
                                                                                                                    },
                                                                                                                    "max": {
                                                                                                                        "minimum": 0
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "if": {
                                                                                                        "properties": {
                                                                                                            "end": {
                                                                                                                "description": "A simple integer value as a VRS class.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": false,
                                                                                                                "properties": {
                                                                                                                    "type": {
                                                                                                                        "type": "string",
                                                                                                                        "const": "Number",
                                                                                                                        "description": "MUST be \"Number\""
                                                                                                                    },
                                                                                                                    "value": {
                                                                                                                        "type": "integer",
                                                                                                                        "description": "The value represented by Number"
                                                                                                                    }
                                                                                                                },
                                                                                                                "required": [
                                                                                                                    "type",
                                                                                                                    "value"
                                                                                                                ]
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    "then": {
                                                                                                        "properties": {
                                                                                                            "end": {
                                                                                                                "properties": {
                                                                                                                    "value": {
                                                                                                                        "minimum": 0
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "if": {
                                                                                                        "properties": {
                                                                                                            "end": {
                                                                                                                "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": false,
                                                                                                                "properties": {
                                                                                                                    "type": {
                                                                                                                        "type": "string",
                                                                                                                        "const": "IndefiniteRange",
                                                                                                                        "description": "MUST be \"IndefiniteRange\""
                                                                                                                    },
                                                                                                                    "value": {
                                                                                                                        "type": "number",
                                                                                                                        "description": "The bounded value; inclusive"
                                                                                                                    },
                                                                                                                    "comparator": {
                                                                                                                        "type": "string",
                                                                                                                        "enum": [
                                                                                                                            "<=",
                                                                                                                            ">="
                                                                                                                        ],
                                                                                                                        "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                    }
                                                                                                                },
                                                                                                                "required": [
                                                                                                                    "comparator",
                                                                                                                    "type",
                                                                                                                    "value"
                                                                                                                ]
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    "then": {
                                                                                                        "properties": {
                                                                                                            "end": {
                                                                                                                "properties": {
                                                                                                                    "value": {
                                                                                                                        "minimum": 0
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "if": {
                                                                                                        "properties": {
                                                                                                            "end": {
                                                                                                                "description": "A bounded, inclusive range of numbers.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": false,
                                                                                                                "properties": {
                                                                                                                    "type": {
                                                                                                                        "type": "string",
                                                                                                                        "const": "DefiniteRange",
                                                                                                                        "description": "MUST be \"DefiniteRange\""
                                                                                                                    },
                                                                                                                    "min": {
                                                                                                                        "type": "number",
                                                                                                                        "description": "The minimum value; inclusive"
                                                                                                                    },
                                                                                                                    "max": {
                                                                                                                        "type": "number",
                                                                                                                        "description": "The maximum value; inclusive"
                                                                                                                    }
                                                                                                                },
                                                                                                                "required": [
                                                                                                                    "max",
                                                                                                                    "min",
                                                                                                                    "type"
                                                                                                                ]
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    "then": {
                                                                                                        "properties": {
                                                                                                            "end": {
                                                                                                                "properties": {
                                                                                                                    "min": {
                                                                                                                        "minimum": 0
                                                                                                                    },
                                                                                                                    "max": {
                                                                                                                        "minimum": 0
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            ],
                                                                                            "required": [
                                                                                                "end",
                                                                                                "start",
                                                                                                "type"
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "deprecated": true,
                                                                                            "description": "DEPRECATED: A SimpleInterval represents a span of sequence. Positions are always represented by contiguous spans using interbase coordinates. This class is deprecated. Use SequenceInterval instead.",
                                                                                            "additionalProperties": false,
                                                                                            "type": "object",
                                                                                            "properties": {
                                                                                                "type": {
                                                                                                    "type": "string",
                                                                                                    "const": "SimpleInterval",
                                                                                                    "description": "MUST be \"SimpleInterval\""
                                                                                                },
                                                                                                "start": {
                                                                                                    "type": "integer",
                                                                                                    "description": "The start coordinate"
                                                                                                },
                                                                                                "end": {
                                                                                                    "type": "integer",
                                                                                                    "description": "The end coordinate"
                                                                                                }
                                                                                            },
                                                                                            "example": {
                                                                                                "type": "SimpleInterval",
                                                                                                "start": 11,
                                                                                                "end": 22
                                                                                            },
                                                                                            "required": [
                                                                                                "end",
                                                                                                "start",
                                                                                                "type"
                                                                                            ]
                                                                                        }
                                                                                    ],
                                                                                    "description": "Reference sequence region defined by a SequenceInterval."
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "interval",
                                                                                "sequence_id",
                                                                                "type"
                                                                            ]
                                                                        },
                                                                        "reverse_complement": {
                                                                            "type": "boolean",
                                                                            "description": "A flag indicating if the expressed sequence is the reverse complement of the sequence referred to by `location`"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "location",
                                                                        "reverse_complement",
                                                                        "type"
                                                                    ]
                                                                }
                                                            ],
                                                            "description": "An expression of the repeating subsequence"
                                                        },
                                                        "count": {
                                                            "oneOf": [
                                                                {
                                                                    "description": "A simple integer value as a VRS class.",
                                                                    "type": "object",
                                                                    "additionalProperties": false,
                                                                    "properties": {
                                                                        "type": {
                                                                            "type": "string",
                                                                            "const": "Number",
                                                                            "description": "MUST be \"Number\""
                                                                        },
                                                                        "value": {
                                                                            "type": "integer",
                                                                            "description": "The value represented by Number"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "type",
                                                                        "value"
                                                                    ]
                                                                },
                                                                {
                                                                    "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                    "type": "object",
                                                                    "additionalProperties": false,
                                                                    "properties": {
                                                                        "type": {
                                                                            "type": "string",
                                                                            "const": "IndefiniteRange",
                                                                            "description": "MUST be \"IndefiniteRange\""
                                                                        },
                                                                        "value": {
                                                                            "type": "number",
                                                                            "description": "The bounded value; inclusive"
                                                                        },
                                                                        "comparator": {
                                                                            "type": "string",
                                                                            "enum": [
                                                                                "<=",
                                                                                ">="
                                                                            ],
                                                                            "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "comparator",
                                                                        "type",
                                                                        "value"
                                                                    ]
                                                                },
                                                                {
                                                                    "description": "A bounded, inclusive range of numbers.",
                                                                    "type": "object",
                                                                    "additionalProperties": false,
                                                                    "properties": {
                                                                        "type": {
                                                                            "type": "string",
                                                                            "const": "DefiniteRange",
                                                                            "description": "MUST be \"DefiniteRange\""
                                                                        },
                                                                        "min": {
                                                                            "type": "number",
                                                                            "description": "The minimum value; inclusive"
                                                                        },
                                                                        "max": {
                                                                            "type": "number",
                                                                            "description": "The maximum value; inclusive"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "max",
                                                                        "min",
                                                                        "type"
                                                                    ]
                                                                }
                                                            ],
                                                            "description": "The count of repeated units, as an integer or inclusive range"
                                                        }
                                                    },
                                                    "allOf": [
                                                        {
                                                            "if": {
                                                                "properties": {
                                                                    "count": {
                                                                        "description": "A simple integer value as a VRS class.",
                                                                        "type": "object",
                                                                        "additionalProperties": false,
                                                                        "properties": {
                                                                            "type": {
                                                                                "type": "string",
                                                                                "const": "Number",
                                                                                "description": "MUST be \"Number\""
                                                                            },
                                                                            "value": {
                                                                                "type": "integer",
                                                                                "description": "The value represented by Number"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "type",
                                                                            "value"
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            "then": {
                                                                "properties": {
                                                                    "count": {
                                                                        "properties": {
                                                                            "value": {
                                                                                "minimum": 0
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "if": {
                                                                "properties": {
                                                                    "count": {
                                                                        "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                        "type": "object",
                                                                        "additionalProperties": false,
                                                                        "properties": {
                                                                            "type": {
                                                                                "type": "string",
                                                                                "const": "IndefiniteRange",
                                                                                "description": "MUST be \"IndefiniteRange\""
                                                                            },
                                                                            "value": {
                                                                                "type": "number",
                                                                                "description": "The bounded value; inclusive"
                                                                            },
                                                                            "comparator": {
                                                                                "type": "string",
                                                                                "enum": [
                                                                                    "<=",
                                                                                    ">="
                                                                                ],
                                                                                "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "comparator",
                                                                            "type",
                                                                            "value"
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            "then": {
                                                                "properties": {
                                                                    "count": {
                                                                        "properties": {
                                                                            "value": {
                                                                                "minimum": 0
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "if": {
                                                                "properties": {
                                                                    "count": {
                                                                        "description": "A bounded, inclusive range of numbers.",
                                                                        "type": "object",
                                                                        "additionalProperties": false,
                                                                        "properties": {
                                                                            "type": {
                                                                                "type": "string",
                                                                                "const": "DefiniteRange",
                                                                                "description": "MUST be \"DefiniteRange\""
                                                                            },
                                                                            "min": {
                                                                                "type": "number",
                                                                                "description": "The minimum value; inclusive"
                                                                            },
                                                                            "max": {
                                                                                "type": "number",
                                                                                "description": "The maximum value; inclusive"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "max",
                                                                            "min",
                                                                            "type"
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            "then": {
                                                                "properties": {
                                                                    "count": {
                                                                        "properties": {
                                                                            "min": {
                                                                                "minimum": 0
                                                                            },
                                                                            "max": {
                                                                                "minimum": 0
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "required": [
                                                        "count",
                                                        "seq_expr",
                                                        "type"
                                                    ]
                                                }
                                            ],
                                            "discriminator": {
                                                "propertyName": "type"
                                            }
                                        }
                                    ],
                                    "description": "An expression of the sequence state",
                                    "deprecated": [
                                        {
                                            "deprecated": true,
                                            "description": "DEPRECATED. A Sequence as a State. This is the State class to use for representing \"ref-alt\" style variation, including SNVs, MNVs, del, ins, and delins. This class is deprecated. Use LiteralSequenceExpression instead.",
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "const": "SequenceState",
                                                    "description": "MUST be \"SequenceState\""
                                                },
                                                "sequence": {
                                                    "additionalProperties": false,
                                                    "description": "A character string of Residues that represents a biological sequence using the conventional sequence order (5\u2019-to-3\u2019 for nucleic acid sequences, and amino-to-carboxyl for amino acid sequences). IUPAC ambiguity codes are permitted in Sequences.",
                                                    "type": "string",
                                                    "pattern": "^[A-Z*\\-]*$"
                                                }
                                            },
                                            "example": {
                                                "type": "SequenceState",
                                                "sequence": "C"
                                            },
                                            "required": [
                                                "sequence",
                                                "type"
                                            ]
                                        }
                                    ]
                                }
                            },
                            "required": [
                                "location",
                                "state",
                                "type"
                            ]
                        },
                        {
                            "description": "A set of non-overlapping Allele members that co-occur on the same molecule.",
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                                "_id": {
                                    "additionalProperties": false,
                                    "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                    "type": "string",
                                    "pattern": "^\\w[^:]*:.+$",
                                    "example": "ensembl:ENSG00000139618"
                                },
                                "type": {
                                    "type": "string",
                                    "const": "Haplotype",
                                    "description": "MUST be \"Haplotype\""
                                },
                                "members": {
                                    "type": "array",
                                    "minItems": 1,
                                    "uniqueItems": true,
                                    "items": {
                                        "oneOf": [
                                            {
                                                "description": "The state of a molecule at a Location.",
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                    "_id": {
                                                        "additionalProperties": false,
                                                        "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                        "type": "string",
                                                        "pattern": "^\\w[^:]*:.+$",
                                                        "example": "ensembl:ENSG00000139618"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "const": "Allele",
                                                        "description": "MUST be \"Allele\""
                                                    },
                                                    "location": {
                                                        "oneOf": [
                                                            {
                                                                "additionalProperties": false,
                                                                "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                                "type": "string",
                                                                "pattern": "^\\w[^:]*:.+$",
                                                                "example": "ensembl:ENSG00000139618"
                                                            },
                                                            {
                                                                "description": "A contiguous segment of a biological sequence.",
                                                                "oneOf": [
                                                                    {
                                                                        "additionalProperties": false,
                                                                        "description": "A Location on a chromosome defined by a species and chromosome name.",
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "_id": {
                                                                                "additionalProperties": false,
                                                                                "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                                                "type": "string",
                                                                                "pattern": "^\\w[^:]*:.+$",
                                                                                "example": "ensembl:ENSG00000139618"
                                                                            },
                                                                            "type": {
                                                                                "type": "string",
                                                                                "const": "ChromosomeLocation",
                                                                                "description": "MUST be \"ChromosomeLocation\""
                                                                            },
                                                                            "species_id": {
                                                                                "additionalProperties": false,
                                                                                "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                                                "type": "string",
                                                                                "pattern": "^\\w[^:]*:.+$",
                                                                                "example": "ensembl:ENSG00000139618"
                                                                            },
                                                                            "chr": {
                                                                                "type": "string",
                                                                                "description": "The symbolic chromosome name. For humans, For humans, chromosome names MUST be one of 1..22, X, Y (case-sensitive)"
                                                                            },
                                                                            "interval": {
                                                                                "description": "A contiguous span on a chromosome defined by cytoband features. The span includes the constituent regions described by the start and end cytobands, as well as any intervening regions.",
                                                                                "type": "object",
                                                                                "additionalProperties": false,
                                                                                "properties": {
                                                                                    "type": {
                                                                                        "type": "string",
                                                                                        "const": "CytobandInterval",
                                                                                        "description": "MUST be \"CytobandInterval\""
                                                                                    },
                                                                                    "start": {
                                                                                        "additionalProperties": false,
                                                                                        "description": "A character string representing cytobands derived from the *International System for Human Cytogenomic Nomenclature* (ISCN) [guidelines](http://doi.org/10.1159/isbn.978-3-318-06861-0).",
                                                                                        "type": "string",
                                                                                        "pattern": "^cen|[pq](ter|([1-9][0-9]*(\\.[1-9][0-9]*)?))$",
                                                                                        "example": "q22.3"
                                                                                    },
                                                                                    "end": {
                                                                                        "additionalProperties": false,
                                                                                        "description": "A character string representing cytobands derived from the *International System for Human Cytogenomic Nomenclature* (ISCN) [guidelines](http://doi.org/10.1159/isbn.978-3-318-06861-0).",
                                                                                        "type": "string",
                                                                                        "pattern": "^cen|[pq](ter|([1-9][0-9]*(\\.[1-9][0-9]*)?))$",
                                                                                        "example": "q22.3"
                                                                                    }
                                                                                },
                                                                                "example": {
                                                                                    "type": "CytobandInterval",
                                                                                    "start": "q22.2",
                                                                                    "end": "q22.3"
                                                                                },
                                                                                "required": [
                                                                                    "end",
                                                                                    "start",
                                                                                    "type"
                                                                                ]
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "chr",
                                                                            "interval",
                                                                            "species_id",
                                                                            "type"
                                                                        ]
                                                                    },
                                                                    {
                                                                        "additionalProperties": false,
                                                                        "description": "A Location defined by an interval on a referenced Sequence.",
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "_id": {
                                                                                "additionalProperties": false,
                                                                                "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                                                "type": "string",
                                                                                "pattern": "^\\w[^:]*:.+$",
                                                                                "example": "ensembl:ENSG00000139618"
                                                                            },
                                                                            "type": {
                                                                                "type": "string",
                                                                                "const": "SequenceLocation",
                                                                                "description": "MUST be \"SequenceLocation\""
                                                                            },
                                                                            "sequence_id": {
                                                                                "additionalProperties": false,
                                                                                "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                                                "type": "string",
                                                                                "pattern": "^\\w[^:]*:.+$",
                                                                                "example": "ensembl:ENSG00000139618"
                                                                            },
                                                                            "interval": {
                                                                                "oneOf": [
                                                                                    {
                                                                                        "description": "A SequenceInterval represents a span on a Sequence. Positions are always represented by contiguous spans using interbase coordinates or coordinate ranges.",
                                                                                        "type": "object",
                                                                                        "additionalProperties": false,
                                                                                        "properties": {
                                                                                            "type": {
                                                                                                "type": "string",
                                                                                                "const": "SequenceInterval",
                                                                                                "description": "MUST be \"SequenceInterval\""
                                                                                            },
                                                                                            "start": {
                                                                                                "oneOf": [
                                                                                                    {
                                                                                                        "description": "A simple integer value as a VRS class.",
                                                                                                        "type": "object",
                                                                                                        "additionalProperties": false,
                                                                                                        "properties": {
                                                                                                            "type": {
                                                                                                                "type": "string",
                                                                                                                "const": "Number",
                                                                                                                "description": "MUST be \"Number\""
                                                                                                            },
                                                                                                            "value": {
                                                                                                                "type": "integer",
                                                                                                                "description": "The value represented by Number"
                                                                                                            }
                                                                                                        },
                                                                                                        "required": [
                                                                                                            "type",
                                                                                                            "value"
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                        "type": "object",
                                                                                                        "additionalProperties": false,
                                                                                                        "properties": {
                                                                                                            "type": {
                                                                                                                "type": "string",
                                                                                                                "const": "IndefiniteRange",
                                                                                                                "description": "MUST be \"IndefiniteRange\""
                                                                                                            },
                                                                                                            "value": {
                                                                                                                "type": "number",
                                                                                                                "description": "The bounded value; inclusive"
                                                                                                            },
                                                                                                            "comparator": {
                                                                                                                "type": "string",
                                                                                                                "enum": [
                                                                                                                    "<=",
                                                                                                                    ">="
                                                                                                                ],
                                                                                                                "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                            }
                                                                                                        },
                                                                                                        "required": [
                                                                                                            "comparator",
                                                                                                            "type",
                                                                                                            "value"
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "description": "A bounded, inclusive range of numbers.",
                                                                                                        "type": "object",
                                                                                                        "additionalProperties": false,
                                                                                                        "properties": {
                                                                                                            "type": {
                                                                                                                "type": "string",
                                                                                                                "const": "DefiniteRange",
                                                                                                                "description": "MUST be \"DefiniteRange\""
                                                                                                            },
                                                                                                            "min": {
                                                                                                                "type": "number",
                                                                                                                "description": "The minimum value; inclusive"
                                                                                                            },
                                                                                                            "max": {
                                                                                                                "type": "number",
                                                                                                                "description": "The maximum value; inclusive"
                                                                                                            }
                                                                                                        },
                                                                                                        "required": [
                                                                                                            "max",
                                                                                                            "min",
                                                                                                            "type"
                                                                                                        ]
                                                                                                    }
                                                                                                ],
                                                                                                "description": "The start coordinate or range of the interval. The minimum value of this coordinate or range is 0. MUST represent a coordinate or range less than the value of `end`."
                                                                                            },
                                                                                            "end": {
                                                                                                "oneOf": [
                                                                                                    {
                                                                                                        "description": "A simple integer value as a VRS class.",
                                                                                                        "type": "object",
                                                                                                        "additionalProperties": false,
                                                                                                        "properties": {
                                                                                                            "type": {
                                                                                                                "type": "string",
                                                                                                                "const": "Number",
                                                                                                                "description": "MUST be \"Number\""
                                                                                                            },
                                                                                                            "value": {
                                                                                                                "type": "integer",
                                                                                                                "description": "The value represented by Number"
                                                                                                            }
                                                                                                        },
                                                                                                        "required": [
                                                                                                            "type",
                                                                                                            "value"
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                        "type": "object",
                                                                                                        "additionalProperties": false,
                                                                                                        "properties": {
                                                                                                            "type": {
                                                                                                                "type": "string",
                                                                                                                "const": "IndefiniteRange",
                                                                                                                "description": "MUST be \"IndefiniteRange\""
                                                                                                            },
                                                                                                            "value": {
                                                                                                                "type": "number",
                                                                                                                "description": "The bounded value; inclusive"
                                                                                                            },
                                                                                                            "comparator": {
                                                                                                                "type": "string",
                                                                                                                "enum": [
                                                                                                                    "<=",
                                                                                                                    ">="
                                                                                                                ],
                                                                                                                "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                            }
                                                                                                        },
                                                                                                        "required": [
                                                                                                            "comparator",
                                                                                                            "type",
                                                                                                            "value"
                                                                                                        ]
                                                                                                    },
                                                                                                    {
                                                                                                        "description": "A bounded, inclusive range of numbers.",
                                                                                                        "type": "object",
                                                                                                        "additionalProperties": false,
                                                                                                        "properties": {
                                                                                                            "type": {
                                                                                                                "type": "string",
                                                                                                                "const": "DefiniteRange",
                                                                                                                "description": "MUST be \"DefiniteRange\""
                                                                                                            },
                                                                                                            "min": {
                                                                                                                "type": "number",
                                                                                                                "description": "The minimum value; inclusive"
                                                                                                            },
                                                                                                            "max": {
                                                                                                                "type": "number",
                                                                                                                "description": "The maximum value; inclusive"
                                                                                                            }
                                                                                                        },
                                                                                                        "required": [
                                                                                                            "max",
                                                                                                            "min",
                                                                                                            "type"
                                                                                                        ]
                                                                                                    }
                                                                                                ],
                                                                                                "description": "The end coordinate or range of the interval. The minimum value of this coordinate or range is 0. MUST represent a coordinate or range greater than the value of `start`."
                                                                                            }
                                                                                        },
                                                                                        "allOf": [
                                                                                            {
                                                                                                "if": {
                                                                                                    "properties": {
                                                                                                        "start": {
                                                                                                            "description": "A simple integer value as a VRS class.",
                                                                                                            "type": "object",
                                                                                                            "additionalProperties": false,
                                                                                                            "properties": {
                                                                                                                "type": {
                                                                                                                    "type": "string",
                                                                                                                    "const": "Number",
                                                                                                                    "description": "MUST be \"Number\""
                                                                                                                },
                                                                                                                "value": {
                                                                                                                    "type": "integer",
                                                                                                                    "description": "The value represented by Number"
                                                                                                                }
                                                                                                            },
                                                                                                            "required": [
                                                                                                                "type",
                                                                                                                "value"
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "then": {
                                                                                                    "properties": {
                                                                                                        "start": {
                                                                                                            "properties": {
                                                                                                                "value": {
                                                                                                                    "minimum": 0
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "if": {
                                                                                                    "properties": {
                                                                                                        "start": {
                                                                                                            "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                            "type": "object",
                                                                                                            "additionalProperties": false,
                                                                                                            "properties": {
                                                                                                                "type": {
                                                                                                                    "type": "string",
                                                                                                                    "const": "IndefiniteRange",
                                                                                                                    "description": "MUST be \"IndefiniteRange\""
                                                                                                                },
                                                                                                                "value": {
                                                                                                                    "type": "number",
                                                                                                                    "description": "The bounded value; inclusive"
                                                                                                                },
                                                                                                                "comparator": {
                                                                                                                    "type": "string",
                                                                                                                    "enum": [
                                                                                                                        "<=",
                                                                                                                        ">="
                                                                                                                    ],
                                                                                                                    "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                }
                                                                                                            },
                                                                                                            "required": [
                                                                                                                "comparator",
                                                                                                                "type",
                                                                                                                "value"
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "then": {
                                                                                                    "properties": {
                                                                                                        "start": {
                                                                                                            "properties": {
                                                                                                                "value": {
                                                                                                                    "minimum": 0
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "if": {
                                                                                                    "properties": {
                                                                                                        "start": {
                                                                                                            "description": "A bounded, inclusive range of numbers.",
                                                                                                            "type": "object",
                                                                                                            "additionalProperties": false,
                                                                                                            "properties": {
                                                                                                                "type": {
                                                                                                                    "type": "string",
                                                                                                                    "const": "DefiniteRange",
                                                                                                                    "description": "MUST be \"DefiniteRange\""
                                                                                                                },
                                                                                                                "min": {
                                                                                                                    "type": "number",
                                                                                                                    "description": "The minimum value; inclusive"
                                                                                                                },
                                                                                                                "max": {
                                                                                                                    "type": "number",
                                                                                                                    "description": "The maximum value; inclusive"
                                                                                                                }
                                                                                                            },
                                                                                                            "required": [
                                                                                                                "max",
                                                                                                                "min",
                                                                                                                "type"
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "then": {
                                                                                                    "properties": {
                                                                                                        "start": {
                                                                                                            "properties": {
                                                                                                                "min": {
                                                                                                                    "minimum": 0
                                                                                                                },
                                                                                                                "max": {
                                                                                                                    "minimum": 0
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "if": {
                                                                                                    "properties": {
                                                                                                        "end": {
                                                                                                            "description": "A simple integer value as a VRS class.",
                                                                                                            "type": "object",
                                                                                                            "additionalProperties": false,
                                                                                                            "properties": {
                                                                                                                "type": {
                                                                                                                    "type": "string",
                                                                                                                    "const": "Number",
                                                                                                                    "description": "MUST be \"Number\""
                                                                                                                },
                                                                                                                "value": {
                                                                                                                    "type": "integer",
                                                                                                                    "description": "The value represented by Number"
                                                                                                                }
                                                                                                            },
                                                                                                            "required": [
                                                                                                                "type",
                                                                                                                "value"
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "then": {
                                                                                                    "properties": {
                                                                                                        "end": {
                                                                                                            "properties": {
                                                                                                                "value": {
                                                                                                                    "minimum": 0
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "if": {
                                                                                                    "properties": {
                                                                                                        "end": {
                                                                                                            "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                            "type": "object",
                                                                                                            "additionalProperties": false,
                                                                                                            "properties": {
                                                                                                                "type": {
                                                                                                                    "type": "string",
                                                                                                                    "const": "IndefiniteRange",
                                                                                                                    "description": "MUST be \"IndefiniteRange\""
                                                                                                                },
                                                                                                                "value": {
                                                                                                                    "type": "number",
                                                                                                                    "description": "The bounded value; inclusive"
                                                                                                                },
                                                                                                                "comparator": {
                                                                                                                    "type": "string",
                                                                                                                    "enum": [
                                                                                                                        "<=",
                                                                                                                        ">="
                                                                                                                    ],
                                                                                                                    "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                }
                                                                                                            },
                                                                                                            "required": [
                                                                                                                "comparator",
                                                                                                                "type",
                                                                                                                "value"
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "then": {
                                                                                                    "properties": {
                                                                                                        "end": {
                                                                                                            "properties": {
                                                                                                                "value": {
                                                                                                                    "minimum": 0
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "if": {
                                                                                                    "properties": {
                                                                                                        "end": {
                                                                                                            "description": "A bounded, inclusive range of numbers.",
                                                                                                            "type": "object",
                                                                                                            "additionalProperties": false,
                                                                                                            "properties": {
                                                                                                                "type": {
                                                                                                                    "type": "string",
                                                                                                                    "const": "DefiniteRange",
                                                                                                                    "description": "MUST be \"DefiniteRange\""
                                                                                                                },
                                                                                                                "min": {
                                                                                                                    "type": "number",
                                                                                                                    "description": "The minimum value; inclusive"
                                                                                                                },
                                                                                                                "max": {
                                                                                                                    "type": "number",
                                                                                                                    "description": "The maximum value; inclusive"
                                                                                                                }
                                                                                                            },
                                                                                                            "required": [
                                                                                                                "max",
                                                                                                                "min",
                                                                                                                "type"
                                                                                                            ]
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "then": {
                                                                                                    "properties": {
                                                                                                        "end": {
                                                                                                            "properties": {
                                                                                                                "min": {
                                                                                                                    "minimum": 0
                                                                                                                },
                                                                                                                "max": {
                                                                                                                    "minimum": 0
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        ],
                                                                                        "required": [
                                                                                            "end",
                                                                                            "start",
                                                                                            "type"
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "deprecated": true,
                                                                                        "description": "DEPRECATED: A SimpleInterval represents a span of sequence. Positions are always represented by contiguous spans using interbase coordinates. This class is deprecated. Use SequenceInterval instead.",
                                                                                        "additionalProperties": false,
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "type": {
                                                                                                "type": "string",
                                                                                                "const": "SimpleInterval",
                                                                                                "description": "MUST be \"SimpleInterval\""
                                                                                            },
                                                                                            "start": {
                                                                                                "type": "integer",
                                                                                                "description": "The start coordinate"
                                                                                            },
                                                                                            "end": {
                                                                                                "type": "integer",
                                                                                                "description": "The end coordinate"
                                                                                            }
                                                                                        },
                                                                                        "example": {
                                                                                            "type": "SimpleInterval",
                                                                                            "start": 11,
                                                                                            "end": 22
                                                                                        },
                                                                                        "required": [
                                                                                            "end",
                                                                                            "start",
                                                                                            "type"
                                                                                        ]
                                                                                    }
                                                                                ],
                                                                                "description": "Reference sequence region defined by a SequenceInterval."
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "interval",
                                                                            "sequence_id",
                                                                            "type"
                                                                        ]
                                                                    }
                                                                ],
                                                                "discriminator": {
                                                                    "propertyName": "type"
                                                                }
                                                            }
                                                        ],
                                                        "description": "Where Allele is located"
                                                    },
                                                    "state": {
                                                        "oneOf": [
                                                            {
                                                                "deprecated": true,
                                                                "description": "DEPRECATED. A Sequence as a State. This is the State class to use for representing \"ref-alt\" style variation, including SNVs, MNVs, del, ins, and delins. This class is deprecated. Use LiteralSequenceExpression instead.",
                                                                "additionalProperties": false,
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "type": "string",
                                                                        "const": "SequenceState",
                                                                        "description": "MUST be \"SequenceState\""
                                                                    },
                                                                    "sequence": {
                                                                        "additionalProperties": false,
                                                                        "description": "A character string of Residues that represents a biological sequence using the conventional sequence order (5\u2019-to-3\u2019 for nucleic acid sequences, and amino-to-carboxyl for amino acid sequences). IUPAC ambiguity codes are permitted in Sequences.",
                                                                        "type": "string",
                                                                        "pattern": "^[A-Z*\\-]*$"
                                                                    }
                                                                },
                                                                "example": {
                                                                    "type": "SequenceState",
                                                                    "sequence": "C"
                                                                },
                                                                "required": [
                                                                    "sequence",
                                                                    "type"
                                                                ]
                                                            },
                                                            {
                                                                "description": "An expression describing a Sequence.",
                                                                "oneOf": [
                                                                    {
                                                                        "description": "An explicit expression of a Sequence.",
                                                                        "type": "object",
                                                                        "additionalProperties": false,
                                                                        "properties": {
                                                                            "type": {
                                                                                "type": "string",
                                                                                "const": "LiteralSequenceExpression",
                                                                                "description": "MUST be \"LiteralSequenceExpression\""
                                                                            },
                                                                            "sequence": {
                                                                                "additionalProperties": false,
                                                                                "description": "A character string of Residues that represents a biological sequence using the conventional sequence order (5\u2019-to-3\u2019 for nucleic acid sequences, and amino-to-carboxyl for amino acid sequences). IUPAC ambiguity codes are permitted in Sequences.",
                                                                                "type": "string",
                                                                                "pattern": "^[A-Z*\\-]*$"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "sequence",
                                                                            "type"
                                                                        ]
                                                                    },
                                                                    {
                                                                        "description": "An approximate expression of a sequence that is derived from a referenced sequence location. Use of this class indicates that the derived sequence is *approximately equivalent* to the reference indicated, and is typically used for describing large regions in contexts where the use of an approximate sequence is inconsequential.",
                                                                        "type": "object",
                                                                        "additionalProperties": false,
                                                                        "properties": {
                                                                            "type": {
                                                                                "type": "string",
                                                                                "const": "DerivedSequenceExpression",
                                                                                "description": "MUST be \"DerivedSequenceExpression\""
                                                                            },
                                                                            "location": {
                                                                                "additionalProperties": false,
                                                                                "description": "A Location defined by an interval on a referenced Sequence.",
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "_id": {
                                                                                        "additionalProperties": false,
                                                                                        "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                                                        "type": "string",
                                                                                        "pattern": "^\\w[^:]*:.+$",
                                                                                        "example": "ensembl:ENSG00000139618"
                                                                                    },
                                                                                    "type": {
                                                                                        "type": "string",
                                                                                        "const": "SequenceLocation",
                                                                                        "description": "MUST be \"SequenceLocation\""
                                                                                    },
                                                                                    "sequence_id": {
                                                                                        "additionalProperties": false,
                                                                                        "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                                                        "type": "string",
                                                                                        "pattern": "^\\w[^:]*:.+$",
                                                                                        "example": "ensembl:ENSG00000139618"
                                                                                    },
                                                                                    "interval": {
                                                                                        "oneOf": [
                                                                                            {
                                                                                                "description": "A SequenceInterval represents a span on a Sequence. Positions are always represented by contiguous spans using interbase coordinates or coordinate ranges.",
                                                                                                "type": "object",
                                                                                                "additionalProperties": false,
                                                                                                "properties": {
                                                                                                    "type": {
                                                                                                        "type": "string",
                                                                                                        "const": "SequenceInterval",
                                                                                                        "description": "MUST be \"SequenceInterval\""
                                                                                                    },
                                                                                                    "start": {
                                                                                                        "oneOf": [
                                                                                                            {
                                                                                                                "description": "A simple integer value as a VRS class.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": false,
                                                                                                                "properties": {
                                                                                                                    "type": {
                                                                                                                        "type": "string",
                                                                                                                        "const": "Number",
                                                                                                                        "description": "MUST be \"Number\""
                                                                                                                    },
                                                                                                                    "value": {
                                                                                                                        "type": "integer",
                                                                                                                        "description": "The value represented by Number"
                                                                                                                    }
                                                                                                                },
                                                                                                                "required": [
                                                                                                                    "type",
                                                                                                                    "value"
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": false,
                                                                                                                "properties": {
                                                                                                                    "type": {
                                                                                                                        "type": "string",
                                                                                                                        "const": "IndefiniteRange",
                                                                                                                        "description": "MUST be \"IndefiniteRange\""
                                                                                                                    },
                                                                                                                    "value": {
                                                                                                                        "type": "number",
                                                                                                                        "description": "The bounded value; inclusive"
                                                                                                                    },
                                                                                                                    "comparator": {
                                                                                                                        "type": "string",
                                                                                                                        "enum": [
                                                                                                                            "<=",
                                                                                                                            ">="
                                                                                                                        ],
                                                                                                                        "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                    }
                                                                                                                },
                                                                                                                "required": [
                                                                                                                    "comparator",
                                                                                                                    "type",
                                                                                                                    "value"
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "description": "A bounded, inclusive range of numbers.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": false,
                                                                                                                "properties": {
                                                                                                                    "type": {
                                                                                                                        "type": "string",
                                                                                                                        "const": "DefiniteRange",
                                                                                                                        "description": "MUST be \"DefiniteRange\""
                                                                                                                    },
                                                                                                                    "min": {
                                                                                                                        "type": "number",
                                                                                                                        "description": "The minimum value; inclusive"
                                                                                                                    },
                                                                                                                    "max": {
                                                                                                                        "type": "number",
                                                                                                                        "description": "The maximum value; inclusive"
                                                                                                                    }
                                                                                                                },
                                                                                                                "required": [
                                                                                                                    "max",
                                                                                                                    "min",
                                                                                                                    "type"
                                                                                                                ]
                                                                                                            }
                                                                                                        ],
                                                                                                        "description": "The start coordinate or range of the interval. The minimum value of this coordinate or range is 0. MUST represent a coordinate or range less than the value of `end`."
                                                                                                    },
                                                                                                    "end": {
                                                                                                        "oneOf": [
                                                                                                            {
                                                                                                                "description": "A simple integer value as a VRS class.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": false,
                                                                                                                "properties": {
                                                                                                                    "type": {
                                                                                                                        "type": "string",
                                                                                                                        "const": "Number",
                                                                                                                        "description": "MUST be \"Number\""
                                                                                                                    },
                                                                                                                    "value": {
                                                                                                                        "type": "integer",
                                                                                                                        "description": "The value represented by Number"
                                                                                                                    }
                                                                                                                },
                                                                                                                "required": [
                                                                                                                    "type",
                                                                                                                    "value"
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": false,
                                                                                                                "properties": {
                                                                                                                    "type": {
                                                                                                                        "type": "string",
                                                                                                                        "const": "IndefiniteRange",
                                                                                                                        "description": "MUST be \"IndefiniteRange\""
                                                                                                                    },
                                                                                                                    "value": {
                                                                                                                        "type": "number",
                                                                                                                        "description": "The bounded value; inclusive"
                                                                                                                    },
                                                                                                                    "comparator": {
                                                                                                                        "type": "string",
                                                                                                                        "enum": [
                                                                                                                            "<=",
                                                                                                                            ">="
                                                                                                                        ],
                                                                                                                        "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                    }
                                                                                                                },
                                                                                                                "required": [
                                                                                                                    "comparator",
                                                                                                                    "type",
                                                                                                                    "value"
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "description": "A bounded, inclusive range of numbers.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": false,
                                                                                                                "properties": {
                                                                                                                    "type": {
                                                                                                                        "type": "string",
                                                                                                                        "const": "DefiniteRange",
                                                                                                                        "description": "MUST be \"DefiniteRange\""
                                                                                                                    },
                                                                                                                    "min": {
                                                                                                                        "type": "number",
                                                                                                                        "description": "The minimum value; inclusive"
                                                                                                                    },
                                                                                                                    "max": {
                                                                                                                        "type": "number",
                                                                                                                        "description": "The maximum value; inclusive"
                                                                                                                    }
                                                                                                                },
                                                                                                                "required": [
                                                                                                                    "max",
                                                                                                                    "min",
                                                                                                                    "type"
                                                                                                                ]
                                                                                                            }
                                                                                                        ],
                                                                                                        "description": "The end coordinate or range of the interval. The minimum value of this coordinate or range is 0. MUST represent a coordinate or range greater than the value of `start`."
                                                                                                    }
                                                                                                },
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "if": {
                                                                                                            "properties": {
                                                                                                                "start": {
                                                                                                                    "description": "A simple integer value as a VRS class.",
                                                                                                                    "type": "object",
                                                                                                                    "additionalProperties": false,
                                                                                                                    "properties": {
                                                                                                                        "type": {
                                                                                                                            "type": "string",
                                                                                                                            "const": "Number",
                                                                                                                            "description": "MUST be \"Number\""
                                                                                                                        },
                                                                                                                        "value": {
                                                                                                                            "type": "integer",
                                                                                                                            "description": "The value represented by Number"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "required": [
                                                                                                                        "type",
                                                                                                                        "value"
                                                                                                                    ]
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "then": {
                                                                                                            "properties": {
                                                                                                                "start": {
                                                                                                                    "properties": {
                                                                                                                        "value": {
                                                                                                                            "minimum": 0
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "if": {
                                                                                                            "properties": {
                                                                                                                "start": {
                                                                                                                    "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                                    "type": "object",
                                                                                                                    "additionalProperties": false,
                                                                                                                    "properties": {
                                                                                                                        "type": {
                                                                                                                            "type": "string",
                                                                                                                            "const": "IndefiniteRange",
                                                                                                                            "description": "MUST be \"IndefiniteRange\""
                                                                                                                        },
                                                                                                                        "value": {
                                                                                                                            "type": "number",
                                                                                                                            "description": "The bounded value; inclusive"
                                                                                                                        },
                                                                                                                        "comparator": {
                                                                                                                            "type": "string",
                                                                                                                            "enum": [
                                                                                                                                "<=",
                                                                                                                                ">="
                                                                                                                            ],
                                                                                                                            "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "required": [
                                                                                                                        "comparator",
                                                                                                                        "type",
                                                                                                                        "value"
                                                                                                                    ]
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "then": {
                                                                                                            "properties": {
                                                                                                                "start": {
                                                                                                                    "properties": {
                                                                                                                        "value": {
                                                                                                                            "minimum": 0
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "if": {
                                                                                                            "properties": {
                                                                                                                "start": {
                                                                                                                    "description": "A bounded, inclusive range of numbers.",
                                                                                                                    "type": "object",
                                                                                                                    "additionalProperties": false,
                                                                                                                    "properties": {
                                                                                                                        "type": {
                                                                                                                            "type": "string",
                                                                                                                            "const": "DefiniteRange",
                                                                                                                            "description": "MUST be \"DefiniteRange\""
                                                                                                                        },
                                                                                                                        "min": {
                                                                                                                            "type": "number",
                                                                                                                            "description": "The minimum value; inclusive"
                                                                                                                        },
                                                                                                                        "max": {
                                                                                                                            "type": "number",
                                                                                                                            "description": "The maximum value; inclusive"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "required": [
                                                                                                                        "max",
                                                                                                                        "min",
                                                                                                                        "type"
                                                                                                                    ]
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "then": {
                                                                                                            "properties": {
                                                                                                                "start": {
                                                                                                                    "properties": {
                                                                                                                        "min": {
                                                                                                                            "minimum": 0
                                                                                                                        },
                                                                                                                        "max": {
                                                                                                                            "minimum": 0
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "if": {
                                                                                                            "properties": {
                                                                                                                "end": {
                                                                                                                    "description": "A simple integer value as a VRS class.",
                                                                                                                    "type": "object",
                                                                                                                    "additionalProperties": false,
                                                                                                                    "properties": {
                                                                                                                        "type": {
                                                                                                                            "type": "string",
                                                                                                                            "const": "Number",
                                                                                                                            "description": "MUST be \"Number\""
                                                                                                                        },
                                                                                                                        "value": {
                                                                                                                            "type": "integer",
                                                                                                                            "description": "The value represented by Number"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "required": [
                                                                                                                        "type",
                                                                                                                        "value"
                                                                                                                    ]
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "then": {
                                                                                                            "properties": {
                                                                                                                "end": {
                                                                                                                    "properties": {
                                                                                                                        "value": {
                                                                                                                            "minimum": 0
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "if": {
                                                                                                            "properties": {
                                                                                                                "end": {
                                                                                                                    "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                                    "type": "object",
                                                                                                                    "additionalProperties": false,
                                                                                                                    "properties": {
                                                                                                                        "type": {
                                                                                                                            "type": "string",
                                                                                                                            "const": "IndefiniteRange",
                                                                                                                            "description": "MUST be \"IndefiniteRange\""
                                                                                                                        },
                                                                                                                        "value": {
                                                                                                                            "type": "number",
                                                                                                                            "description": "The bounded value; inclusive"
                                                                                                                        },
                                                                                                                        "comparator": {
                                                                                                                            "type": "string",
                                                                                                                            "enum": [
                                                                                                                                "<=",
                                                                                                                                ">="
                                                                                                                            ],
                                                                                                                            "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "required": [
                                                                                                                        "comparator",
                                                                                                                        "type",
                                                                                                                        "value"
                                                                                                                    ]
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "then": {
                                                                                                            "properties": {
                                                                                                                "end": {
                                                                                                                    "properties": {
                                                                                                                        "value": {
                                                                                                                            "minimum": 0
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "if": {
                                                                                                            "properties": {
                                                                                                                "end": {
                                                                                                                    "description": "A bounded, inclusive range of numbers.",
                                                                                                                    "type": "object",
                                                                                                                    "additionalProperties": false,
                                                                                                                    "properties": {
                                                                                                                        "type": {
                                                                                                                            "type": "string",
                                                                                                                            "const": "DefiniteRange",
                                                                                                                            "description": "MUST be \"DefiniteRange\""
                                                                                                                        },
                                                                                                                        "min": {
                                                                                                                            "type": "number",
                                                                                                                            "description": "The minimum value; inclusive"
                                                                                                                        },
                                                                                                                        "max": {
                                                                                                                            "type": "number",
                                                                                                                            "description": "The maximum value; inclusive"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "required": [
                                                                                                                        "max",
                                                                                                                        "min",
                                                                                                                        "type"
                                                                                                                    ]
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "then": {
                                                                                                            "properties": {
                                                                                                                "end": {
                                                                                                                    "properties": {
                                                                                                                        "min": {
                                                                                                                            "minimum": 0
                                                                                                                        },
                                                                                                                        "max": {
                                                                                                                            "minimum": 0
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                ],
                                                                                                "required": [
                                                                                                    "end",
                                                                                                    "start",
                                                                                                    "type"
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "deprecated": true,
                                                                                                "description": "DEPRECATED: A SimpleInterval represents a span of sequence. Positions are always represented by contiguous spans using interbase coordinates. This class is deprecated. Use SequenceInterval instead.",
                                                                                                "additionalProperties": false,
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "type": {
                                                                                                        "type": "string",
                                                                                                        "const": "SimpleInterval",
                                                                                                        "description": "MUST be \"SimpleInterval\""
                                                                                                    },
                                                                                                    "start": {
                                                                                                        "type": "integer",
                                                                                                        "description": "The start coordinate"
                                                                                                    },
                                                                                                    "end": {
                                                                                                        "type": "integer",
                                                                                                        "description": "The end coordinate"
                                                                                                    }
                                                                                                },
                                                                                                "example": {
                                                                                                    "type": "SimpleInterval",
                                                                                                    "start": 11,
                                                                                                    "end": 22
                                                                                                },
                                                                                                "required": [
                                                                                                    "end",
                                                                                                    "start",
                                                                                                    "type"
                                                                                                ]
                                                                                            }
                                                                                        ],
                                                                                        "description": "Reference sequence region defined by a SequenceInterval."
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "interval",
                                                                                    "sequence_id",
                                                                                    "type"
                                                                                ]
                                                                            },
                                                                            "reverse_complement": {
                                                                                "type": "boolean",
                                                                                "description": "A flag indicating if the expressed sequence is the reverse complement of the sequence referred to by `location`"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "location",
                                                                            "reverse_complement",
                                                                            "type"
                                                                        ]
                                                                    },
                                                                    {
                                                                        "description": "An expression of a sequence comprised of a tandem repeating subsequence.",
                                                                        "additionalProperties": false,
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "type": {
                                                                                "type": "string",
                                                                                "const": "RepeatedSequenceExpression",
                                                                                "description": "MUST be \"RepeatedSequenceExpression\""
                                                                            },
                                                                            "seq_expr": {
                                                                                "oneOf": [
                                                                                    {
                                                                                        "description": "An explicit expression of a Sequence.",
                                                                                        "type": "object",
                                                                                        "additionalProperties": false,
                                                                                        "properties": {
                                                                                            "type": {
                                                                                                "type": "string",
                                                                                                "const": "LiteralSequenceExpression",
                                                                                                "description": "MUST be \"LiteralSequenceExpression\""
                                                                                            },
                                                                                            "sequence": {
                                                                                                "additionalProperties": false,
                                                                                                "description": "A character string of Residues that represents a biological sequence using the conventional sequence order (5\u2019-to-3\u2019 for nucleic acid sequences, and amino-to-carboxyl for amino acid sequences). IUPAC ambiguity codes are permitted in Sequences.",
                                                                                                "type": "string",
                                                                                                "pattern": "^[A-Z*\\-]*$"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "sequence",
                                                                                            "type"
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "description": "An approximate expression of a sequence that is derived from a referenced sequence location. Use of this class indicates that the derived sequence is *approximately equivalent* to the reference indicated, and is typically used for describing large regions in contexts where the use of an approximate sequence is inconsequential.",
                                                                                        "type": "object",
                                                                                        "additionalProperties": false,
                                                                                        "properties": {
                                                                                            "type": {
                                                                                                "type": "string",
                                                                                                "const": "DerivedSequenceExpression",
                                                                                                "description": "MUST be \"DerivedSequenceExpression\""
                                                                                            },
                                                                                            "location": {
                                                                                                "additionalProperties": false,
                                                                                                "description": "A Location defined by an interval on a referenced Sequence.",
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "_id": {
                                                                                                        "additionalProperties": false,
                                                                                                        "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                                                                        "type": "string",
                                                                                                        "pattern": "^\\w[^:]*:.+$",
                                                                                                        "example": "ensembl:ENSG00000139618"
                                                                                                    },
                                                                                                    "type": {
                                                                                                        "type": "string",
                                                                                                        "const": "SequenceLocation",
                                                                                                        "description": "MUST be \"SequenceLocation\""
                                                                                                    },
                                                                                                    "sequence_id": {
                                                                                                        "additionalProperties": false,
                                                                                                        "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                                                                        "type": "string",
                                                                                                        "pattern": "^\\w[^:]*:.+$",
                                                                                                        "example": "ensembl:ENSG00000139618"
                                                                                                    },
                                                                                                    "interval": {
                                                                                                        "oneOf": [
                                                                                                            {
                                                                                                                "description": "A SequenceInterval represents a span on a Sequence. Positions are always represented by contiguous spans using interbase coordinates or coordinate ranges.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": false,
                                                                                                                "properties": {
                                                                                                                    "type": {
                                                                                                                        "type": "string",
                                                                                                                        "const": "SequenceInterval",
                                                                                                                        "description": "MUST be \"SequenceInterval\""
                                                                                                                    },
                                                                                                                    "start": {
                                                                                                                        "oneOf": [
                                                                                                                            {
                                                                                                                                "description": "A simple integer value as a VRS class.",
                                                                                                                                "type": "object",
                                                                                                                                "additionalProperties": false,
                                                                                                                                "properties": {
                                                                                                                                    "type": {
                                                                                                                                        "type": "string",
                                                                                                                                        "const": "Number",
                                                                                                                                        "description": "MUST be \"Number\""
                                                                                                                                    },
                                                                                                                                    "value": {
                                                                                                                                        "type": "integer",
                                                                                                                                        "description": "The value represented by Number"
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "required": [
                                                                                                                                    "type",
                                                                                                                                    "value"
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                                                "type": "object",
                                                                                                                                "additionalProperties": false,
                                                                                                                                "properties": {
                                                                                                                                    "type": {
                                                                                                                                        "type": "string",
                                                                                                                                        "const": "IndefiniteRange",
                                                                                                                                        "description": "MUST be \"IndefiniteRange\""
                                                                                                                                    },
                                                                                                                                    "value": {
                                                                                                                                        "type": "number",
                                                                                                                                        "description": "The bounded value; inclusive"
                                                                                                                                    },
                                                                                                                                    "comparator": {
                                                                                                                                        "type": "string",
                                                                                                                                        "enum": [
                                                                                                                                            "<=",
                                                                                                                                            ">="
                                                                                                                                        ],
                                                                                                                                        "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "required": [
                                                                                                                                    "comparator",
                                                                                                                                    "type",
                                                                                                                                    "value"
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "description": "A bounded, inclusive range of numbers.",
                                                                                                                                "type": "object",
                                                                                                                                "additionalProperties": false,
                                                                                                                                "properties": {
                                                                                                                                    "type": {
                                                                                                                                        "type": "string",
                                                                                                                                        "const": "DefiniteRange",
                                                                                                                                        "description": "MUST be \"DefiniteRange\""
                                                                                                                                    },
                                                                                                                                    "min": {
                                                                                                                                        "type": "number",
                                                                                                                                        "description": "The minimum value; inclusive"
                                                                                                                                    },
                                                                                                                                    "max": {
                                                                                                                                        "type": "number",
                                                                                                                                        "description": "The maximum value; inclusive"
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "required": [
                                                                                                                                    "max",
                                                                                                                                    "min",
                                                                                                                                    "type"
                                                                                                                                ]
                                                                                                                            }
                                                                                                                        ],
                                                                                                                        "description": "The start coordinate or range of the interval. The minimum value of this coordinate or range is 0. MUST represent a coordinate or range less than the value of `end`."
                                                                                                                    },
                                                                                                                    "end": {
                                                                                                                        "oneOf": [
                                                                                                                            {
                                                                                                                                "description": "A simple integer value as a VRS class.",
                                                                                                                                "type": "object",
                                                                                                                                "additionalProperties": false,
                                                                                                                                "properties": {
                                                                                                                                    "type": {
                                                                                                                                        "type": "string",
                                                                                                                                        "const": "Number",
                                                                                                                                        "description": "MUST be \"Number\""
                                                                                                                                    },
                                                                                                                                    "value": {
                                                                                                                                        "type": "integer",
                                                                                                                                        "description": "The value represented by Number"
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "required": [
                                                                                                                                    "type",
                                                                                                                                    "value"
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                                                "type": "object",
                                                                                                                                "additionalProperties": false,
                                                                                                                                "properties": {
                                                                                                                                    "type": {
                                                                                                                                        "type": "string",
                                                                                                                                        "const": "IndefiniteRange",
                                                                                                                                        "description": "MUST be \"IndefiniteRange\""
                                                                                                                                    },
                                                                                                                                    "value": {
                                                                                                                                        "type": "number",
                                                                                                                                        "description": "The bounded value; inclusive"
                                                                                                                                    },
                                                                                                                                    "comparator": {
                                                                                                                                        "type": "string",
                                                                                                                                        "enum": [
                                                                                                                                            "<=",
                                                                                                                                            ">="
                                                                                                                                        ],
                                                                                                                                        "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "required": [
                                                                                                                                    "comparator",
                                                                                                                                    "type",
                                                                                                                                    "value"
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "description": "A bounded, inclusive range of numbers.",
                                                                                                                                "type": "object",
                                                                                                                                "additionalProperties": false,
                                                                                                                                "properties": {
                                                                                                                                    "type": {
                                                                                                                                        "type": "string",
                                                                                                                                        "const": "DefiniteRange",
                                                                                                                                        "description": "MUST be \"DefiniteRange\""
                                                                                                                                    },
                                                                                                                                    "min": {
                                                                                                                                        "type": "number",
                                                                                                                                        "description": "The minimum value; inclusive"
                                                                                                                                    },
                                                                                                                                    "max": {
                                                                                                                                        "type": "number",
                                                                                                                                        "description": "The maximum value; inclusive"
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "required": [
                                                                                                                                    "max",
                                                                                                                                    "min",
                                                                                                                                    "type"
                                                                                                                                ]
                                                                                                                            }
                                                                                                                        ],
                                                                                                                        "description": "The end coordinate or range of the interval. The minimum value of this coordinate or range is 0. MUST represent a coordinate or range greater than the value of `start`."
                                                                                                                    }
                                                                                                                },
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "if": {
                                                                                                                            "properties": {
                                                                                                                                "start": {
                                                                                                                                    "description": "A simple integer value as a VRS class.",
                                                                                                                                    "type": "object",
                                                                                                                                    "additionalProperties": false,
                                                                                                                                    "properties": {
                                                                                                                                        "type": {
                                                                                                                                            "type": "string",
                                                                                                                                            "const": "Number",
                                                                                                                                            "description": "MUST be \"Number\""
                                                                                                                                        },
                                                                                                                                        "value": {
                                                                                                                                            "type": "integer",
                                                                                                                                            "description": "The value represented by Number"
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    "required": [
                                                                                                                                        "type",
                                                                                                                                        "value"
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "then": {
                                                                                                                            "properties": {
                                                                                                                                "start": {
                                                                                                                                    "properties": {
                                                                                                                                        "value": {
                                                                                                                                            "minimum": 0
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "if": {
                                                                                                                            "properties": {
                                                                                                                                "start": {
                                                                                                                                    "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                                                    "type": "object",
                                                                                                                                    "additionalProperties": false,
                                                                                                                                    "properties": {
                                                                                                                                        "type": {
                                                                                                                                            "type": "string",
                                                                                                                                            "const": "IndefiniteRange",
                                                                                                                                            "description": "MUST be \"IndefiniteRange\""
                                                                                                                                        },
                                                                                                                                        "value": {
                                                                                                                                            "type": "number",
                                                                                                                                            "description": "The bounded value; inclusive"
                                                                                                                                        },
                                                                                                                                        "comparator": {
                                                                                                                                            "type": "string",
                                                                                                                                            "enum": [
                                                                                                                                                "<=",
                                                                                                                                                ">="
                                                                                                                                            ],
                                                                                                                                            "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    "required": [
                                                                                                                                        "comparator",
                                                                                                                                        "type",
                                                                                                                                        "value"
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "then": {
                                                                                                                            "properties": {
                                                                                                                                "start": {
                                                                                                                                    "properties": {
                                                                                                                                        "value": {
                                                                                                                                            "minimum": 0
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "if": {
                                                                                                                            "properties": {
                                                                                                                                "start": {
                                                                                                                                    "description": "A bounded, inclusive range of numbers.",
                                                                                                                                    "type": "object",
                                                                                                                                    "additionalProperties": false,
                                                                                                                                    "properties": {
                                                                                                                                        "type": {
                                                                                                                                            "type": "string",
                                                                                                                                            "const": "DefiniteRange",
                                                                                                                                            "description": "MUST be \"DefiniteRange\""
                                                                                                                                        },
                                                                                                                                        "min": {
                                                                                                                                            "type": "number",
                                                                                                                                            "description": "The minimum value; inclusive"
                                                                                                                                        },
                                                                                                                                        "max": {
                                                                                                                                            "type": "number",
                                                                                                                                            "description": "The maximum value; inclusive"
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    "required": [
                                                                                                                                        "max",
                                                                                                                                        "min",
                                                                                                                                        "type"
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "then": {
                                                                                                                            "properties": {
                                                                                                                                "start": {
                                                                                                                                    "properties": {
                                                                                                                                        "min": {
                                                                                                                                            "minimum": 0
                                                                                                                                        },
                                                                                                                                        "max": {
                                                                                                                                            "minimum": 0
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "if": {
                                                                                                                            "properties": {
                                                                                                                                "end": {
                                                                                                                                    "description": "A simple integer value as a VRS class.",
                                                                                                                                    "type": "object",
                                                                                                                                    "additionalProperties": false,
                                                                                                                                    "properties": {
                                                                                                                                        "type": {
                                                                                                                                            "type": "string",
                                                                                                                                            "const": "Number",
                                                                                                                                            "description": "MUST be \"Number\""
                                                                                                                                        },
                                                                                                                                        "value": {
                                                                                                                                            "type": "integer",
                                                                                                                                            "description": "The value represented by Number"
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    "required": [
                                                                                                                                        "type",
                                                                                                                                        "value"
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "then": {
                                                                                                                            "properties": {
                                                                                                                                "end": {
                                                                                                                                    "properties": {
                                                                                                                                        "value": {
                                                                                                                                            "minimum": 0
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "if": {
                                                                                                                            "properties": {
                                                                                                                                "end": {
                                                                                                                                    "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                                                    "type": "object",
                                                                                                                                    "additionalProperties": false,
                                                                                                                                    "properties": {
                                                                                                                                        "type": {
                                                                                                                                            "type": "string",
                                                                                                                                            "const": "IndefiniteRange",
                                                                                                                                            "description": "MUST be \"IndefiniteRange\""
                                                                                                                                        },
                                                                                                                                        "value": {
                                                                                                                                            "type": "number",
                                                                                                                                            "description": "The bounded value; inclusive"
                                                                                                                                        },
                                                                                                                                        "comparator": {
                                                                                                                                            "type": "string",
                                                                                                                                            "enum": [
                                                                                                                                                "<=",
                                                                                                                                                ">="
                                                                                                                                            ],
                                                                                                                                            "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    "required": [
                                                                                                                                        "comparator",
                                                                                                                                        "type",
                                                                                                                                        "value"
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "then": {
                                                                                                                            "properties": {
                                                                                                                                "end": {
                                                                                                                                    "properties": {
                                                                                                                                        "value": {
                                                                                                                                            "minimum": 0
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "if": {
                                                                                                                            "properties": {
                                                                                                                                "end": {
                                                                                                                                    "description": "A bounded, inclusive range of numbers.",
                                                                                                                                    "type": "object",
                                                                                                                                    "additionalProperties": false,
                                                                                                                                    "properties": {
                                                                                                                                        "type": {
                                                                                                                                            "type": "string",
                                                                                                                                            "const": "DefiniteRange",
                                                                                                                                            "description": "MUST be \"DefiniteRange\""
                                                                                                                                        },
                                                                                                                                        "min": {
                                                                                                                                            "type": "number",
                                                                                                                                            "description": "The minimum value; inclusive"
                                                                                                                                        },
                                                                                                                                        "max": {
                                                                                                                                            "type": "number",
                                                                                                                                            "description": "The maximum value; inclusive"
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    "required": [
                                                                                                                                        "max",
                                                                                                                                        "min",
                                                                                                                                        "type"
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "then": {
                                                                                                                            "properties": {
                                                                                                                                "end": {
                                                                                                                                    "properties": {
                                                                                                                                        "min": {
                                                                                                                                            "minimum": 0
                                                                                                                                        },
                                                                                                                                        "max": {
                                                                                                                                            "minimum": 0
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                ],
                                                                                                                "required": [
                                                                                                                    "end",
                                                                                                                    "start",
                                                                                                                    "type"
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "deprecated": true,
                                                                                                                "description": "DEPRECATED: A SimpleInterval represents a span of sequence. Positions are always represented by contiguous spans using interbase coordinates. This class is deprecated. Use SequenceInterval instead.",
                                                                                                                "additionalProperties": false,
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "type": {
                                                                                                                        "type": "string",
                                                                                                                        "const": "SimpleInterval",
                                                                                                                        "description": "MUST be \"SimpleInterval\""
                                                                                                                    },
                                                                                                                    "start": {
                                                                                                                        "type": "integer",
                                                                                                                        "description": "The start coordinate"
                                                                                                                    },
                                                                                                                    "end": {
                                                                                                                        "type": "integer",
                                                                                                                        "description": "The end coordinate"
                                                                                                                    }
                                                                                                                },
                                                                                                                "example": {
                                                                                                                    "type": "SimpleInterval",
                                                                                                                    "start": 11,
                                                                                                                    "end": 22
                                                                                                                },
                                                                                                                "required": [
                                                                                                                    "end",
                                                                                                                    "start",
                                                                                                                    "type"
                                                                                                                ]
                                                                                                            }
                                                                                                        ],
                                                                                                        "description": "Reference sequence region defined by a SequenceInterval."
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "interval",
                                                                                                    "sequence_id",
                                                                                                    "type"
                                                                                                ]
                                                                                            },
                                                                                            "reverse_complement": {
                                                                                                "type": "boolean",
                                                                                                "description": "A flag indicating if the expressed sequence is the reverse complement of the sequence referred to by `location`"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "location",
                                                                                            "reverse_complement",
                                                                                            "type"
                                                                                        ]
                                                                                    }
                                                                                ],
                                                                                "description": "An expression of the repeating subsequence"
                                                                            },
                                                                            "count": {
                                                                                "oneOf": [
                                                                                    {
                                                                                        "description": "A simple integer value as a VRS class.",
                                                                                        "type": "object",
                                                                                        "additionalProperties": false,
                                                                                        "properties": {
                                                                                            "type": {
                                                                                                "type": "string",
                                                                                                "const": "Number",
                                                                                                "description": "MUST be \"Number\""
                                                                                            },
                                                                                            "value": {
                                                                                                "type": "integer",
                                                                                                "description": "The value represented by Number"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "type",
                                                                                            "value"
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                        "type": "object",
                                                                                        "additionalProperties": false,
                                                                                        "properties": {
                                                                                            "type": {
                                                                                                "type": "string",
                                                                                                "const": "IndefiniteRange",
                                                                                                "description": "MUST be \"IndefiniteRange\""
                                                                                            },
                                                                                            "value": {
                                                                                                "type": "number",
                                                                                                "description": "The bounded value; inclusive"
                                                                                            },
                                                                                            "comparator": {
                                                                                                "type": "string",
                                                                                                "enum": [
                                                                                                    "<=",
                                                                                                    ">="
                                                                                                ],
                                                                                                "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "comparator",
                                                                                            "type",
                                                                                            "value"
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "description": "A bounded, inclusive range of numbers.",
                                                                                        "type": "object",
                                                                                        "additionalProperties": false,
                                                                                        "properties": {
                                                                                            "type": {
                                                                                                "type": "string",
                                                                                                "const": "DefiniteRange",
                                                                                                "description": "MUST be \"DefiniteRange\""
                                                                                            },
                                                                                            "min": {
                                                                                                "type": "number",
                                                                                                "description": "The minimum value; inclusive"
                                                                                            },
                                                                                            "max": {
                                                                                                "type": "number",
                                                                                                "description": "The maximum value; inclusive"
                                                                                            }
                                                                                        },
                                                                                        "required": [
                                                                                            "max",
                                                                                            "min",
                                                                                            "type"
                                                                                        ]
                                                                                    }
                                                                                ],
                                                                                "description": "The count of repeated units, as an integer or inclusive range"
                                                                            }
                                                                        },
                                                                        "allOf": [
                                                                            {
                                                                                "if": {
                                                                                    "properties": {
                                                                                        "count": {
                                                                                            "description": "A simple integer value as a VRS class.",
                                                                                            "type": "object",
                                                                                            "additionalProperties": false,
                                                                                            "properties": {
                                                                                                "type": {
                                                                                                    "type": "string",
                                                                                                    "const": "Number",
                                                                                                    "description": "MUST be \"Number\""
                                                                                                },
                                                                                                "value": {
                                                                                                    "type": "integer",
                                                                                                    "description": "The value represented by Number"
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "type",
                                                                                                "value"
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "then": {
                                                                                    "properties": {
                                                                                        "count": {
                                                                                            "properties": {
                                                                                                "value": {
                                                                                                    "minimum": 0
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "if": {
                                                                                    "properties": {
                                                                                        "count": {
                                                                                            "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                            "type": "object",
                                                                                            "additionalProperties": false,
                                                                                            "properties": {
                                                                                                "type": {
                                                                                                    "type": "string",
                                                                                                    "const": "IndefiniteRange",
                                                                                                    "description": "MUST be \"IndefiniteRange\""
                                                                                                },
                                                                                                "value": {
                                                                                                    "type": "number",
                                                                                                    "description": "The bounded value; inclusive"
                                                                                                },
                                                                                                "comparator": {
                                                                                                    "type": "string",
                                                                                                    "enum": [
                                                                                                        "<=",
                                                                                                        ">="
                                                                                                    ],
                                                                                                    "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "comparator",
                                                                                                "type",
                                                                                                "value"
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "then": {
                                                                                    "properties": {
                                                                                        "count": {
                                                                                            "properties": {
                                                                                                "value": {
                                                                                                    "minimum": 0
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "if": {
                                                                                    "properties": {
                                                                                        "count": {
                                                                                            "description": "A bounded, inclusive range of numbers.",
                                                                                            "type": "object",
                                                                                            "additionalProperties": false,
                                                                                            "properties": {
                                                                                                "type": {
                                                                                                    "type": "string",
                                                                                                    "const": "DefiniteRange",
                                                                                                    "description": "MUST be \"DefiniteRange\""
                                                                                                },
                                                                                                "min": {
                                                                                                    "type": "number",
                                                                                                    "description": "The minimum value; inclusive"
                                                                                                },
                                                                                                "max": {
                                                                                                    "type": "number",
                                                                                                    "description": "The maximum value; inclusive"
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "max",
                                                                                                "min",
                                                                                                "type"
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "then": {
                                                                                    "properties": {
                                                                                        "count": {
                                                                                            "properties": {
                                                                                                "min": {
                                                                                                    "minimum": 0
                                                                                                },
                                                                                                "max": {
                                                                                                    "minimum": 0
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        ],
                                                                        "required": [
                                                                            "count",
                                                                            "seq_expr",
                                                                            "type"
                                                                        ]
                                                                    }
                                                                ],
                                                                "discriminator": {
                                                                    "propertyName": "type"
                                                                }
                                                            }
                                                        ],
                                                        "description": "An expression of the sequence state",
                                                        "deprecated": [
                                                            {
                                                                "deprecated": true,
                                                                "description": "DEPRECATED. A Sequence as a State. This is the State class to use for representing \"ref-alt\" style variation, including SNVs, MNVs, del, ins, and delins. This class is deprecated. Use LiteralSequenceExpression instead.",
                                                                "additionalProperties": false,
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "type": "string",
                                                                        "const": "SequenceState",
                                                                        "description": "MUST be \"SequenceState\""
                                                                    },
                                                                    "sequence": {
                                                                        "additionalProperties": false,
                                                                        "description": "A character string of Residues that represents a biological sequence using the conventional sequence order (5\u2019-to-3\u2019 for nucleic acid sequences, and amino-to-carboxyl for amino acid sequences). IUPAC ambiguity codes are permitted in Sequences.",
                                                                        "type": "string",
                                                                        "pattern": "^[A-Z*\\-]*$"
                                                                    }
                                                                },
                                                                "example": {
                                                                    "type": "SequenceState",
                                                                    "sequence": "C"
                                                                },
                                                                "required": [
                                                                    "sequence",
                                                                    "type"
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                },
                                                "required": [
                                                    "location",
                                                    "state",
                                                    "type"
                                                ]
                                            },
                                            {
                                                "additionalProperties": false,
                                                "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                "type": "string",
                                                "pattern": "^\\w[^:]*:.+$",
                                                "example": "ensembl:ENSG00000139618"
                                            }
                                        ]
                                    },
                                    "description": "List of Alleles, or references to Alleles, that comprise this Haplotype."
                                }
                            },
                            "required": [
                                "members",
                                "type"
                            ]
                        }
                    ],
                    "discriminator": {
                        "propertyName": "type"
                    }
                },
                {
                    "description": "A Variation of multiple molecules in the context of a system, e.g. a genome, sample, or homologous chromosomes.",
                    "oneOf": [
                        {
                            "additionalProperties": false,
                            "type": "object",
                            "description": "The absolute count of discrete copies of a MolecularVariation, Feature, SequenceExpression, or a CURIE reference within a system (e.g. genome, cell, etc.).",
                            "properties": {
                                "_id": {
                                    "additionalProperties": false,
                                    "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                    "type": "string",
                                    "pattern": "^\\w[^:]*:.+$",
                                    "example": "ensembl:ENSG00000139618"
                                },
                                "type": {
                                    "type": "string",
                                    "const": "CopyNumber",
                                    "description": "MUST be \"CopyNumber\""
                                },
                                "subject": {
                                    "oneOf": [
                                        {
                                            "description": "A variation on a contiguous molecule.",
                                            "oneOf": [
                                                {
                                                    "description": "The state of a molecule at a Location.",
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "properties": {
                                                        "_id": {
                                                            "additionalProperties": false,
                                                            "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                            "type": "string",
                                                            "pattern": "^\\w[^:]*:.+$",
                                                            "example": "ensembl:ENSG00000139618"
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "const": "Allele",
                                                            "description": "MUST be \"Allele\""
                                                        },
                                                        "location": {
                                                            "oneOf": [
                                                                {
                                                                    "additionalProperties": false,
                                                                    "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                                    "type": "string",
                                                                    "pattern": "^\\w[^:]*:.+$",
                                                                    "example": "ensembl:ENSG00000139618"
                                                                },
                                                                {
                                                                    "description": "A contiguous segment of a biological sequence.",
                                                                    "oneOf": [
                                                                        {
                                                                            "additionalProperties": false,
                                                                            "description": "A Location on a chromosome defined by a species and chromosome name.",
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "_id": {
                                                                                    "additionalProperties": false,
                                                                                    "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                                                    "type": "string",
                                                                                    "pattern": "^\\w[^:]*:.+$",
                                                                                    "example": "ensembl:ENSG00000139618"
                                                                                },
                                                                                "type": {
                                                                                    "type": "string",
                                                                                    "const": "ChromosomeLocation",
                                                                                    "description": "MUST be \"ChromosomeLocation\""
                                                                                },
                                                                                "species_id": {
                                                                                    "additionalProperties": false,
                                                                                    "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                                                    "type": "string",
                                                                                    "pattern": "^\\w[^:]*:.+$",
                                                                                    "example": "ensembl:ENSG00000139618"
                                                                                },
                                                                                "chr": {
                                                                                    "type": "string",
                                                                                    "description": "The symbolic chromosome name. For humans, For humans, chromosome names MUST be one of 1..22, X, Y (case-sensitive)"
                                                                                },
                                                                                "interval": {
                                                                                    "description": "A contiguous span on a chromosome defined by cytoband features. The span includes the constituent regions described by the start and end cytobands, as well as any intervening regions.",
                                                                                    "type": "object",
                                                                                    "additionalProperties": false,
                                                                                    "properties": {
                                                                                        "type": {
                                                                                            "type": "string",
                                                                                            "const": "CytobandInterval",
                                                                                            "description": "MUST be \"CytobandInterval\""
                                                                                        },
                                                                                        "start": {
                                                                                            "additionalProperties": false,
                                                                                            "description": "A character string representing cytobands derived from the *International System for Human Cytogenomic Nomenclature* (ISCN) [guidelines](http://doi.org/10.1159/isbn.978-3-318-06861-0).",
                                                                                            "type": "string",
                                                                                            "pattern": "^cen|[pq](ter|([1-9][0-9]*(\\.[1-9][0-9]*)?))$",
                                                                                            "example": "q22.3"
                                                                                        },
                                                                                        "end": {
                                                                                            "additionalProperties": false,
                                                                                            "description": "A character string representing cytobands derived from the *International System for Human Cytogenomic Nomenclature* (ISCN) [guidelines](http://doi.org/10.1159/isbn.978-3-318-06861-0).",
                                                                                            "type": "string",
                                                                                            "pattern": "^cen|[pq](ter|([1-9][0-9]*(\\.[1-9][0-9]*)?))$",
                                                                                            "example": "q22.3"
                                                                                        }
                                                                                    },
                                                                                    "example": {
                                                                                        "type": "CytobandInterval",
                                                                                        "start": "q22.2",
                                                                                        "end": "q22.3"
                                                                                    },
                                                                                    "required": [
                                                                                        "end",
                                                                                        "start",
                                                                                        "type"
                                                                                    ]
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "chr",
                                                                                "interval",
                                                                                "species_id",
                                                                                "type"
                                                                            ]
                                                                        },
                                                                        {
                                                                            "additionalProperties": false,
                                                                            "description": "A Location defined by an interval on a referenced Sequence.",
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "_id": {
                                                                                    "additionalProperties": false,
                                                                                    "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                                                    "type": "string",
                                                                                    "pattern": "^\\w[^:]*:.+$",
                                                                                    "example": "ensembl:ENSG00000139618"
                                                                                },
                                                                                "type": {
                                                                                    "type": "string",
                                                                                    "const": "SequenceLocation",
                                                                                    "description": "MUST be \"SequenceLocation\""
                                                                                },
                                                                                "sequence_id": {
                                                                                    "additionalProperties": false,
                                                                                    "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                                                    "type": "string",
                                                                                    "pattern": "^\\w[^:]*:.+$",
                                                                                    "example": "ensembl:ENSG00000139618"
                                                                                },
                                                                                "interval": {
                                                                                    "oneOf": [
                                                                                        {
                                                                                            "description": "A SequenceInterval represents a span on a Sequence. Positions are always represented by contiguous spans using interbase coordinates or coordinate ranges.",
                                                                                            "type": "object",
                                                                                            "additionalProperties": false,
                                                                                            "properties": {
                                                                                                "type": {
                                                                                                    "type": "string",
                                                                                                    "const": "SequenceInterval",
                                                                                                    "description": "MUST be \"SequenceInterval\""
                                                                                                },
                                                                                                "start": {
                                                                                                    "oneOf": [
                                                                                                        {
                                                                                                            "description": "A simple integer value as a VRS class.",
                                                                                                            "type": "object",
                                                                                                            "additionalProperties": false,
                                                                                                            "properties": {
                                                                                                                "type": {
                                                                                                                    "type": "string",
                                                                                                                    "const": "Number",
                                                                                                                    "description": "MUST be \"Number\""
                                                                                                                },
                                                                                                                "value": {
                                                                                                                    "type": "integer",
                                                                                                                    "description": "The value represented by Number"
                                                                                                                }
                                                                                                            },
                                                                                                            "required": [
                                                                                                                "type",
                                                                                                                "value"
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                            "type": "object",
                                                                                                            "additionalProperties": false,
                                                                                                            "properties": {
                                                                                                                "type": {
                                                                                                                    "type": "string",
                                                                                                                    "const": "IndefiniteRange",
                                                                                                                    "description": "MUST be \"IndefiniteRange\""
                                                                                                                },
                                                                                                                "value": {
                                                                                                                    "type": "number",
                                                                                                                    "description": "The bounded value; inclusive"
                                                                                                                },
                                                                                                                "comparator": {
                                                                                                                    "type": "string",
                                                                                                                    "enum": [
                                                                                                                        "<=",
                                                                                                                        ">="
                                                                                                                    ],
                                                                                                                    "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                }
                                                                                                            },
                                                                                                            "required": [
                                                                                                                "comparator",
                                                                                                                "type",
                                                                                                                "value"
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "description": "A bounded, inclusive range of numbers.",
                                                                                                            "type": "object",
                                                                                                            "additionalProperties": false,
                                                                                                            "properties": {
                                                                                                                "type": {
                                                                                                                    "type": "string",
                                                                                                                    "const": "DefiniteRange",
                                                                                                                    "description": "MUST be \"DefiniteRange\""
                                                                                                                },
                                                                                                                "min": {
                                                                                                                    "type": "number",
                                                                                                                    "description": "The minimum value; inclusive"
                                                                                                                },
                                                                                                                "max": {
                                                                                                                    "type": "number",
                                                                                                                    "description": "The maximum value; inclusive"
                                                                                                                }
                                                                                                            },
                                                                                                            "required": [
                                                                                                                "max",
                                                                                                                "min",
                                                                                                                "type"
                                                                                                            ]
                                                                                                        }
                                                                                                    ],
                                                                                                    "description": "The start coordinate or range of the interval. The minimum value of this coordinate or range is 0. MUST represent a coordinate or range less than the value of `end`."
                                                                                                },
                                                                                                "end": {
                                                                                                    "oneOf": [
                                                                                                        {
                                                                                                            "description": "A simple integer value as a VRS class.",
                                                                                                            "type": "object",
                                                                                                            "additionalProperties": false,
                                                                                                            "properties": {
                                                                                                                "type": {
                                                                                                                    "type": "string",
                                                                                                                    "const": "Number",
                                                                                                                    "description": "MUST be \"Number\""
                                                                                                                },
                                                                                                                "value": {
                                                                                                                    "type": "integer",
                                                                                                                    "description": "The value represented by Number"
                                                                                                                }
                                                                                                            },
                                                                                                            "required": [
                                                                                                                "type",
                                                                                                                "value"
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                            "type": "object",
                                                                                                            "additionalProperties": false,
                                                                                                            "properties": {
                                                                                                                "type": {
                                                                                                                    "type": "string",
                                                                                                                    "const": "IndefiniteRange",
                                                                                                                    "description": "MUST be \"IndefiniteRange\""
                                                                                                                },
                                                                                                                "value": {
                                                                                                                    "type": "number",
                                                                                                                    "description": "The bounded value; inclusive"
                                                                                                                },
                                                                                                                "comparator": {
                                                                                                                    "type": "string",
                                                                                                                    "enum": [
                                                                                                                        "<=",
                                                                                                                        ">="
                                                                                                                    ],
                                                                                                                    "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                }
                                                                                                            },
                                                                                                            "required": [
                                                                                                                "comparator",
                                                                                                                "type",
                                                                                                                "value"
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "description": "A bounded, inclusive range of numbers.",
                                                                                                            "type": "object",
                                                                                                            "additionalProperties": false,
                                                                                                            "properties": {
                                                                                                                "type": {
                                                                                                                    "type": "string",
                                                                                                                    "const": "DefiniteRange",
                                                                                                                    "description": "MUST be \"DefiniteRange\""
                                                                                                                },
                                                                                                                "min": {
                                                                                                                    "type": "number",
                                                                                                                    "description": "The minimum value; inclusive"
                                                                                                                },
                                                                                                                "max": {
                                                                                                                    "type": "number",
                                                                                                                    "description": "The maximum value; inclusive"
                                                                                                                }
                                                                                                            },
                                                                                                            "required": [
                                                                                                                "max",
                                                                                                                "min",
                                                                                                                "type"
                                                                                                            ]
                                                                                                        }
                                                                                                    ],
                                                                                                    "description": "The end coordinate or range of the interval. The minimum value of this coordinate or range is 0. MUST represent a coordinate or range greater than the value of `start`."
                                                                                                }
                                                                                            },
                                                                                            "allOf": [
                                                                                                {
                                                                                                    "if": {
                                                                                                        "properties": {
                                                                                                            "start": {
                                                                                                                "description": "A simple integer value as a VRS class.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": false,
                                                                                                                "properties": {
                                                                                                                    "type": {
                                                                                                                        "type": "string",
                                                                                                                        "const": "Number",
                                                                                                                        "description": "MUST be \"Number\""
                                                                                                                    },
                                                                                                                    "value": {
                                                                                                                        "type": "integer",
                                                                                                                        "description": "The value represented by Number"
                                                                                                                    }
                                                                                                                },
                                                                                                                "required": [
                                                                                                                    "type",
                                                                                                                    "value"
                                                                                                                ]
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    "then": {
                                                                                                        "properties": {
                                                                                                            "start": {
                                                                                                                "properties": {
                                                                                                                    "value": {
                                                                                                                        "minimum": 0
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "if": {
                                                                                                        "properties": {
                                                                                                            "start": {
                                                                                                                "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": false,
                                                                                                                "properties": {
                                                                                                                    "type": {
                                                                                                                        "type": "string",
                                                                                                                        "const": "IndefiniteRange",
                                                                                                                        "description": "MUST be \"IndefiniteRange\""
                                                                                                                    },
                                                                                                                    "value": {
                                                                                                                        "type": "number",
                                                                                                                        "description": "The bounded value; inclusive"
                                                                                                                    },
                                                                                                                    "comparator": {
                                                                                                                        "type": "string",
                                                                                                                        "enum": [
                                                                                                                            "<=",
                                                                                                                            ">="
                                                                                                                        ],
                                                                                                                        "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                    }
                                                                                                                },
                                                                                                                "required": [
                                                                                                                    "comparator",
                                                                                                                    "type",
                                                                                                                    "value"
                                                                                                                ]
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    "then": {
                                                                                                        "properties": {
                                                                                                            "start": {
                                                                                                                "properties": {
                                                                                                                    "value": {
                                                                                                                        "minimum": 0
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "if": {
                                                                                                        "properties": {
                                                                                                            "start": {
                                                                                                                "description": "A bounded, inclusive range of numbers.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": false,
                                                                                                                "properties": {
                                                                                                                    "type": {
                                                                                                                        "type": "string",
                                                                                                                        "const": "DefiniteRange",
                                                                                                                        "description": "MUST be \"DefiniteRange\""
                                                                                                                    },
                                                                                                                    "min": {
                                                                                                                        "type": "number",
                                                                                                                        "description": "The minimum value; inclusive"
                                                                                                                    },
                                                                                                                    "max": {
                                                                                                                        "type": "number",
                                                                                                                        "description": "The maximum value; inclusive"
                                                                                                                    }
                                                                                                                },
                                                                                                                "required": [
                                                                                                                    "max",
                                                                                                                    "min",
                                                                                                                    "type"
                                                                                                                ]
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    "then": {
                                                                                                        "properties": {
                                                                                                            "start": {
                                                                                                                "properties": {
                                                                                                                    "min": {
                                                                                                                        "minimum": 0
                                                                                                                    },
                                                                                                                    "max": {
                                                                                                                        "minimum": 0
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "if": {
                                                                                                        "properties": {
                                                                                                            "end": {
                                                                                                                "description": "A simple integer value as a VRS class.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": false,
                                                                                                                "properties": {
                                                                                                                    "type": {
                                                                                                                        "type": "string",
                                                                                                                        "const": "Number",
                                                                                                                        "description": "MUST be \"Number\""
                                                                                                                    },
                                                                                                                    "value": {
                                                                                                                        "type": "integer",
                                                                                                                        "description": "The value represented by Number"
                                                                                                                    }
                                                                                                                },
                                                                                                                "required": [
                                                                                                                    "type",
                                                                                                                    "value"
                                                                                                                ]
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    "then": {
                                                                                                        "properties": {
                                                                                                            "end": {
                                                                                                                "properties": {
                                                                                                                    "value": {
                                                                                                                        "minimum": 0
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "if": {
                                                                                                        "properties": {
                                                                                                            "end": {
                                                                                                                "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": false,
                                                                                                                "properties": {
                                                                                                                    "type": {
                                                                                                                        "type": "string",
                                                                                                                        "const": "IndefiniteRange",
                                                                                                                        "description": "MUST be \"IndefiniteRange\""
                                                                                                                    },
                                                                                                                    "value": {
                                                                                                                        "type": "number",
                                                                                                                        "description": "The bounded value; inclusive"
                                                                                                                    },
                                                                                                                    "comparator": {
                                                                                                                        "type": "string",
                                                                                                                        "enum": [
                                                                                                                            "<=",
                                                                                                                            ">="
                                                                                                                        ],
                                                                                                                        "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                    }
                                                                                                                },
                                                                                                                "required": [
                                                                                                                    "comparator",
                                                                                                                    "type",
                                                                                                                    "value"
                                                                                                                ]
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    "then": {
                                                                                                        "properties": {
                                                                                                            "end": {
                                                                                                                "properties": {
                                                                                                                    "value": {
                                                                                                                        "minimum": 0
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "if": {
                                                                                                        "properties": {
                                                                                                            "end": {
                                                                                                                "description": "A bounded, inclusive range of numbers.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": false,
                                                                                                                "properties": {
                                                                                                                    "type": {
                                                                                                                        "type": "string",
                                                                                                                        "const": "DefiniteRange",
                                                                                                                        "description": "MUST be \"DefiniteRange\""
                                                                                                                    },
                                                                                                                    "min": {
                                                                                                                        "type": "number",
                                                                                                                        "description": "The minimum value; inclusive"
                                                                                                                    },
                                                                                                                    "max": {
                                                                                                                        "type": "number",
                                                                                                                        "description": "The maximum value; inclusive"
                                                                                                                    }
                                                                                                                },
                                                                                                                "required": [
                                                                                                                    "max",
                                                                                                                    "min",
                                                                                                                    "type"
                                                                                                                ]
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    "then": {
                                                                                                        "properties": {
                                                                                                            "end": {
                                                                                                                "properties": {
                                                                                                                    "min": {
                                                                                                                        "minimum": 0
                                                                                                                    },
                                                                                                                    "max": {
                                                                                                                        "minimum": 0
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            ],
                                                                                            "required": [
                                                                                                "end",
                                                                                                "start",
                                                                                                "type"
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "deprecated": true,
                                                                                            "description": "DEPRECATED: A SimpleInterval represents a span of sequence. Positions are always represented by contiguous spans using interbase coordinates. This class is deprecated. Use SequenceInterval instead.",
                                                                                            "additionalProperties": false,
                                                                                            "type": "object",
                                                                                            "properties": {
                                                                                                "type": {
                                                                                                    "type": "string",
                                                                                                    "const": "SimpleInterval",
                                                                                                    "description": "MUST be \"SimpleInterval\""
                                                                                                },
                                                                                                "start": {
                                                                                                    "type": "integer",
                                                                                                    "description": "The start coordinate"
                                                                                                },
                                                                                                "end": {
                                                                                                    "type": "integer",
                                                                                                    "description": "The end coordinate"
                                                                                                }
                                                                                            },
                                                                                            "example": {
                                                                                                "type": "SimpleInterval",
                                                                                                "start": 11,
                                                                                                "end": 22
                                                                                            },
                                                                                            "required": [
                                                                                                "end",
                                                                                                "start",
                                                                                                "type"
                                                                                            ]
                                                                                        }
                                                                                    ],
                                                                                    "description": "Reference sequence region defined by a SequenceInterval."
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "interval",
                                                                                "sequence_id",
                                                                                "type"
                                                                            ]
                                                                        }
                                                                    ],
                                                                    "discriminator": {
                                                                        "propertyName": "type"
                                                                    }
                                                                }
                                                            ],
                                                            "description": "Where Allele is located"
                                                        },
                                                        "state": {
                                                            "oneOf": [
                                                                {
                                                                    "deprecated": true,
                                                                    "description": "DEPRECATED. A Sequence as a State. This is the State class to use for representing \"ref-alt\" style variation, including SNVs, MNVs, del, ins, and delins. This class is deprecated. Use LiteralSequenceExpression instead.",
                                                                    "additionalProperties": false,
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "type": {
                                                                            "type": "string",
                                                                            "const": "SequenceState",
                                                                            "description": "MUST be \"SequenceState\""
                                                                        },
                                                                        "sequence": {
                                                                            "additionalProperties": false,
                                                                            "description": "A character string of Residues that represents a biological sequence using the conventional sequence order (5\u2019-to-3\u2019 for nucleic acid sequences, and amino-to-carboxyl for amino acid sequences). IUPAC ambiguity codes are permitted in Sequences.",
                                                                            "type": "string",
                                                                            "pattern": "^[A-Z*\\-]*$"
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "type": "SequenceState",
                                                                        "sequence": "C"
                                                                    },
                                                                    "required": [
                                                                        "sequence",
                                                                        "type"
                                                                    ]
                                                                },
                                                                {
                                                                    "description": "An expression describing a Sequence.",
                                                                    "oneOf": [
                                                                        {
                                                                            "description": "An explicit expression of a Sequence.",
                                                                            "type": "object",
                                                                            "additionalProperties": false,
                                                                            "properties": {
                                                                                "type": {
                                                                                    "type": "string",
                                                                                    "const": "LiteralSequenceExpression",
                                                                                    "description": "MUST be \"LiteralSequenceExpression\""
                                                                                },
                                                                                "sequence": {
                                                                                    "additionalProperties": false,
                                                                                    "description": "A character string of Residues that represents a biological sequence using the conventional sequence order (5\u2019-to-3\u2019 for nucleic acid sequences, and amino-to-carboxyl for amino acid sequences). IUPAC ambiguity codes are permitted in Sequences.",
                                                                                    "type": "string",
                                                                                    "pattern": "^[A-Z*\\-]*$"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "sequence",
                                                                                "type"
                                                                            ]
                                                                        },
                                                                        {
                                                                            "description": "An approximate expression of a sequence that is derived from a referenced sequence location. Use of this class indicates that the derived sequence is *approximately equivalent* to the reference indicated, and is typically used for describing large regions in contexts where the use of an approximate sequence is inconsequential.",
                                                                            "type": "object",
                                                                            "additionalProperties": false,
                                                                            "properties": {
                                                                                "type": {
                                                                                    "type": "string",
                                                                                    "const": "DerivedSequenceExpression",
                                                                                    "description": "MUST be \"DerivedSequenceExpression\""
                                                                                },
                                                                                "location": {
                                                                                    "additionalProperties": false,
                                                                                    "description": "A Location defined by an interval on a referenced Sequence.",
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "_id": {
                                                                                            "additionalProperties": false,
                                                                                            "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                                                            "type": "string",
                                                                                            "pattern": "^\\w[^:]*:.+$",
                                                                                            "example": "ensembl:ENSG00000139618"
                                                                                        },
                                                                                        "type": {
                                                                                            "type": "string",
                                                                                            "const": "SequenceLocation",
                                                                                            "description": "MUST be \"SequenceLocation\""
                                                                                        },
                                                                                        "sequence_id": {
                                                                                            "additionalProperties": false,
                                                                                            "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                                                            "type": "string",
                                                                                            "pattern": "^\\w[^:]*:.+$",
                                                                                            "example": "ensembl:ENSG00000139618"
                                                                                        },
                                                                                        "interval": {
                                                                                            "oneOf": [
                                                                                                {
                                                                                                    "description": "A SequenceInterval represents a span on a Sequence. Positions are always represented by contiguous spans using interbase coordinates or coordinate ranges.",
                                                                                                    "type": "object",
                                                                                                    "additionalProperties": false,
                                                                                                    "properties": {
                                                                                                        "type": {
                                                                                                            "type": "string",
                                                                                                            "const": "SequenceInterval",
                                                                                                            "description": "MUST be \"SequenceInterval\""
                                                                                                        },
                                                                                                        "start": {
                                                                                                            "oneOf": [
                                                                                                                {
                                                                                                                    "description": "A simple integer value as a VRS class.",
                                                                                                                    "type": "object",
                                                                                                                    "additionalProperties": false,
                                                                                                                    "properties": {
                                                                                                                        "type": {
                                                                                                                            "type": "string",
                                                                                                                            "const": "Number",
                                                                                                                            "description": "MUST be \"Number\""
                                                                                                                        },
                                                                                                                        "value": {
                                                                                                                            "type": "integer",
                                                                                                                            "description": "The value represented by Number"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "required": [
                                                                                                                        "type",
                                                                                                                        "value"
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                                    "type": "object",
                                                                                                                    "additionalProperties": false,
                                                                                                                    "properties": {
                                                                                                                        "type": {
                                                                                                                            "type": "string",
                                                                                                                            "const": "IndefiniteRange",
                                                                                                                            "description": "MUST be \"IndefiniteRange\""
                                                                                                                        },
                                                                                                                        "value": {
                                                                                                                            "type": "number",
                                                                                                                            "description": "The bounded value; inclusive"
                                                                                                                        },
                                                                                                                        "comparator": {
                                                                                                                            "type": "string",
                                                                                                                            "enum": [
                                                                                                                                "<=",
                                                                                                                                ">="
                                                                                                                            ],
                                                                                                                            "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "required": [
                                                                                                                        "comparator",
                                                                                                                        "type",
                                                                                                                        "value"
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "description": "A bounded, inclusive range of numbers.",
                                                                                                                    "type": "object",
                                                                                                                    "additionalProperties": false,
                                                                                                                    "properties": {
                                                                                                                        "type": {
                                                                                                                            "type": "string",
                                                                                                                            "const": "DefiniteRange",
                                                                                                                            "description": "MUST be \"DefiniteRange\""
                                                                                                                        },
                                                                                                                        "min": {
                                                                                                                            "type": "number",
                                                                                                                            "description": "The minimum value; inclusive"
                                                                                                                        },
                                                                                                                        "max": {
                                                                                                                            "type": "number",
                                                                                                                            "description": "The maximum value; inclusive"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "required": [
                                                                                                                        "max",
                                                                                                                        "min",
                                                                                                                        "type"
                                                                                                                    ]
                                                                                                                }
                                                                                                            ],
                                                                                                            "description": "The start coordinate or range of the interval. The minimum value of this coordinate or range is 0. MUST represent a coordinate or range less than the value of `end`."
                                                                                                        },
                                                                                                        "end": {
                                                                                                            "oneOf": [
                                                                                                                {
                                                                                                                    "description": "A simple integer value as a VRS class.",
                                                                                                                    "type": "object",
                                                                                                                    "additionalProperties": false,
                                                                                                                    "properties": {
                                                                                                                        "type": {
                                                                                                                            "type": "string",
                                                                                                                            "const": "Number",
                                                                                                                            "description": "MUST be \"Number\""
                                                                                                                        },
                                                                                                                        "value": {
                                                                                                                            "type": "integer",
                                                                                                                            "description": "The value represented by Number"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "required": [
                                                                                                                        "type",
                                                                                                                        "value"
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                                    "type": "object",
                                                                                                                    "additionalProperties": false,
                                                                                                                    "properties": {
                                                                                                                        "type": {
                                                                                                                            "type": "string",
                                                                                                                            "const": "IndefiniteRange",
                                                                                                                            "description": "MUST be \"IndefiniteRange\""
                                                                                                                        },
                                                                                                                        "value": {
                                                                                                                            "type": "number",
                                                                                                                            "description": "The bounded value; inclusive"
                                                                                                                        },
                                                                                                                        "comparator": {
                                                                                                                            "type": "string",
                                                                                                                            "enum": [
                                                                                                                                "<=",
                                                                                                                                ">="
                                                                                                                            ],
                                                                                                                            "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "required": [
                                                                                                                        "comparator",
                                                                                                                        "type",
                                                                                                                        "value"
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "description": "A bounded, inclusive range of numbers.",
                                                                                                                    "type": "object",
                                                                                                                    "additionalProperties": false,
                                                                                                                    "properties": {
                                                                                                                        "type": {
                                                                                                                            "type": "string",
                                                                                                                            "const": "DefiniteRange",
                                                                                                                            "description": "MUST be \"DefiniteRange\""
                                                                                                                        },
                                                                                                                        "min": {
                                                                                                                            "type": "number",
                                                                                                                            "description": "The minimum value; inclusive"
                                                                                                                        },
                                                                                                                        "max": {
                                                                                                                            "type": "number",
                                                                                                                            "description": "The maximum value; inclusive"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "required": [
                                                                                                                        "max",
                                                                                                                        "min",
                                                                                                                        "type"
                                                                                                                    ]
                                                                                                                }
                                                                                                            ],
                                                                                                            "description": "The end coordinate or range of the interval. The minimum value of this coordinate or range is 0. MUST represent a coordinate or range greater than the value of `start`."
                                                                                                        }
                                                                                                    },
                                                                                                    "allOf": [
                                                                                                        {
                                                                                                            "if": {
                                                                                                                "properties": {
                                                                                                                    "start": {
                                                                                                                        "description": "A simple integer value as a VRS class.",
                                                                                                                        "type": "object",
                                                                                                                        "additionalProperties": false,
                                                                                                                        "properties": {
                                                                                                                            "type": {
                                                                                                                                "type": "string",
                                                                                                                                "const": "Number",
                                                                                                                                "description": "MUST be \"Number\""
                                                                                                                            },
                                                                                                                            "value": {
                                                                                                                                "type": "integer",
                                                                                                                                "description": "The value represented by Number"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "required": [
                                                                                                                            "type",
                                                                                                                            "value"
                                                                                                                        ]
                                                                                                                    }
                                                                                                                }
                                                                                                            },
                                                                                                            "then": {
                                                                                                                "properties": {
                                                                                                                    "start": {
                                                                                                                        "properties": {
                                                                                                                            "value": {
                                                                                                                                "minimum": 0
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        {
                                                                                                            "if": {
                                                                                                                "properties": {
                                                                                                                    "start": {
                                                                                                                        "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                                        "type": "object",
                                                                                                                        "additionalProperties": false,
                                                                                                                        "properties": {
                                                                                                                            "type": {
                                                                                                                                "type": "string",
                                                                                                                                "const": "IndefiniteRange",
                                                                                                                                "description": "MUST be \"IndefiniteRange\""
                                                                                                                            },
                                                                                                                            "value": {
                                                                                                                                "type": "number",
                                                                                                                                "description": "The bounded value; inclusive"
                                                                                                                            },
                                                                                                                            "comparator": {
                                                                                                                                "type": "string",
                                                                                                                                "enum": [
                                                                                                                                    "<=",
                                                                                                                                    ">="
                                                                                                                                ],
                                                                                                                                "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "required": [
                                                                                                                            "comparator",
                                                                                                                            "type",
                                                                                                                            "value"
                                                                                                                        ]
                                                                                                                    }
                                                                                                                }
                                                                                                            },
                                                                                                            "then": {
                                                                                                                "properties": {
                                                                                                                    "start": {
                                                                                                                        "properties": {
                                                                                                                            "value": {
                                                                                                                                "minimum": 0
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        {
                                                                                                            "if": {
                                                                                                                "properties": {
                                                                                                                    "start": {
                                                                                                                        "description": "A bounded, inclusive range of numbers.",
                                                                                                                        "type": "object",
                                                                                                                        "additionalProperties": false,
                                                                                                                        "properties": {
                                                                                                                            "type": {
                                                                                                                                "type": "string",
                                                                                                                                "const": "DefiniteRange",
                                                                                                                                "description": "MUST be \"DefiniteRange\""
                                                                                                                            },
                                                                                                                            "min": {
                                                                                                                                "type": "number",
                                                                                                                                "description": "The minimum value; inclusive"
                                                                                                                            },
                                                                                                                            "max": {
                                                                                                                                "type": "number",
                                                                                                                                "description": "The maximum value; inclusive"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "required": [
                                                                                                                            "max",
                                                                                                                            "min",
                                                                                                                            "type"
                                                                                                                        ]
                                                                                                                    }
                                                                                                                }
                                                                                                            },
                                                                                                            "then": {
                                                                                                                "properties": {
                                                                                                                    "start": {
                                                                                                                        "properties": {
                                                                                                                            "min": {
                                                                                                                                "minimum": 0
                                                                                                                            },
                                                                                                                            "max": {
                                                                                                                                "minimum": 0
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        {
                                                                                                            "if": {
                                                                                                                "properties": {
                                                                                                                    "end": {
                                                                                                                        "description": "A simple integer value as a VRS class.",
                                                                                                                        "type": "object",
                                                                                                                        "additionalProperties": false,
                                                                                                                        "properties": {
                                                                                                                            "type": {
                                                                                                                                "type": "string",
                                                                                                                                "const": "Number",
                                                                                                                                "description": "MUST be \"Number\""
                                                                                                                            },
                                                                                                                            "value": {
                                                                                                                                "type": "integer",
                                                                                                                                "description": "The value represented by Number"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "required": [
                                                                                                                            "type",
                                                                                                                            "value"
                                                                                                                        ]
                                                                                                                    }
                                                                                                                }
                                                                                                            },
                                                                                                            "then": {
                                                                                                                "properties": {
                                                                                                                    "end": {
                                                                                                                        "properties": {
                                                                                                                            "value": {
                                                                                                                                "minimum": 0
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        {
                                                                                                            "if": {
                                                                                                                "properties": {
                                                                                                                    "end": {
                                                                                                                        "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                                        "type": "object",
                                                                                                                        "additionalProperties": false,
                                                                                                                        "properties": {
                                                                                                                            "type": {
                                                                                                                                "type": "string",
                                                                                                                                "const": "IndefiniteRange",
                                                                                                                                "description": "MUST be \"IndefiniteRange\""
                                                                                                                            },
                                                                                                                            "value": {
                                                                                                                                "type": "number",
                                                                                                                                "description": "The bounded value; inclusive"
                                                                                                                            },
                                                                                                                            "comparator": {
                                                                                                                                "type": "string",
                                                                                                                                "enum": [
                                                                                                                                    "<=",
                                                                                                                                    ">="
                                                                                                                                ],
                                                                                                                                "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "required": [
                                                                                                                            "comparator",
                                                                                                                            "type",
                                                                                                                            "value"
                                                                                                                        ]
                                                                                                                    }
                                                                                                                }
                                                                                                            },
                                                                                                            "then": {
                                                                                                                "properties": {
                                                                                                                    "end": {
                                                                                                                        "properties": {
                                                                                                                            "value": {
                                                                                                                                "minimum": 0
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        {
                                                                                                            "if": {
                                                                                                                "properties": {
                                                                                                                    "end": {
                                                                                                                        "description": "A bounded, inclusive range of numbers.",
                                                                                                                        "type": "object",
                                                                                                                        "additionalProperties": false,
                                                                                                                        "properties": {
                                                                                                                            "type": {
                                                                                                                                "type": "string",
                                                                                                                                "const": "DefiniteRange",
                                                                                                                                "description": "MUST be \"DefiniteRange\""
                                                                                                                            },
                                                                                                                            "min": {
                                                                                                                                "type": "number",
                                                                                                                                "description": "The minimum value; inclusive"
                                                                                                                            },
                                                                                                                            "max": {
                                                                                                                                "type": "number",
                                                                                                                                "description": "The maximum value; inclusive"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "required": [
                                                                                                                            "max",
                                                                                                                            "min",
                                                                                                                            "type"
                                                                                                                        ]
                                                                                                                    }
                                                                                                                }
                                                                                                            },
                                                                                                            "then": {
                                                                                                                "properties": {
                                                                                                                    "end": {
                                                                                                                        "properties": {
                                                                                                                            "min": {
                                                                                                                                "minimum": 0
                                                                                                                            },
                                                                                                                            "max": {
                                                                                                                                "minimum": 0
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    ],
                                                                                                    "required": [
                                                                                                        "end",
                                                                                                        "start",
                                                                                                        "type"
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "deprecated": true,
                                                                                                    "description": "DEPRECATED: A SimpleInterval represents a span of sequence. Positions are always represented by contiguous spans using interbase coordinates. This class is deprecated. Use SequenceInterval instead.",
                                                                                                    "additionalProperties": false,
                                                                                                    "type": "object",
                                                                                                    "properties": {
                                                                                                        "type": {
                                                                                                            "type": "string",
                                                                                                            "const": "SimpleInterval",
                                                                                                            "description": "MUST be \"SimpleInterval\""
                                                                                                        },
                                                                                                        "start": {
                                                                                                            "type": "integer",
                                                                                                            "description": "The start coordinate"
                                                                                                        },
                                                                                                        "end": {
                                                                                                            "type": "integer",
                                                                                                            "description": "The end coordinate"
                                                                                                        }
                                                                                                    },
                                                                                                    "example": {
                                                                                                        "type": "SimpleInterval",
                                                                                                        "start": 11,
                                                                                                        "end": 22
                                                                                                    },
                                                                                                    "required": [
                                                                                                        "end",
                                                                                                        "start",
                                                                                                        "type"
                                                                                                    ]
                                                                                                }
                                                                                            ],
                                                                                            "description": "Reference sequence region defined by a SequenceInterval."
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "interval",
                                                                                        "sequence_id",
                                                                                        "type"
                                                                                    ]
                                                                                },
                                                                                "reverse_complement": {
                                                                                    "type": "boolean",
                                                                                    "description": "A flag indicating if the expressed sequence is the reverse complement of the sequence referred to by `location`"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "location",
                                                                                "reverse_complement",
                                                                                "type"
                                                                            ]
                                                                        },
                                                                        {
                                                                            "description": "An expression of a sequence comprised of a tandem repeating subsequence.",
                                                                            "additionalProperties": false,
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "type": {
                                                                                    "type": "string",
                                                                                    "const": "RepeatedSequenceExpression",
                                                                                    "description": "MUST be \"RepeatedSequenceExpression\""
                                                                                },
                                                                                "seq_expr": {
                                                                                    "oneOf": [
                                                                                        {
                                                                                            "description": "An explicit expression of a Sequence.",
                                                                                            "type": "object",
                                                                                            "additionalProperties": false,
                                                                                            "properties": {
                                                                                                "type": {
                                                                                                    "type": "string",
                                                                                                    "const": "LiteralSequenceExpression",
                                                                                                    "description": "MUST be \"LiteralSequenceExpression\""
                                                                                                },
                                                                                                "sequence": {
                                                                                                    "additionalProperties": false,
                                                                                                    "description": "A character string of Residues that represents a biological sequence using the conventional sequence order (5\u2019-to-3\u2019 for nucleic acid sequences, and amino-to-carboxyl for amino acid sequences). IUPAC ambiguity codes are permitted in Sequences.",
                                                                                                    "type": "string",
                                                                                                    "pattern": "^[A-Z*\\-]*$"
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "sequence",
                                                                                                "type"
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "description": "An approximate expression of a sequence that is derived from a referenced sequence location. Use of this class indicates that the derived sequence is *approximately equivalent* to the reference indicated, and is typically used for describing large regions in contexts where the use of an approximate sequence is inconsequential.",
                                                                                            "type": "object",
                                                                                            "additionalProperties": false,
                                                                                            "properties": {
                                                                                                "type": {
                                                                                                    "type": "string",
                                                                                                    "const": "DerivedSequenceExpression",
                                                                                                    "description": "MUST be \"DerivedSequenceExpression\""
                                                                                                },
                                                                                                "location": {
                                                                                                    "additionalProperties": false,
                                                                                                    "description": "A Location defined by an interval on a referenced Sequence.",
                                                                                                    "type": "object",
                                                                                                    "properties": {
                                                                                                        "_id": {
                                                                                                            "additionalProperties": false,
                                                                                                            "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                                                                            "type": "string",
                                                                                                            "pattern": "^\\w[^:]*:.+$",
                                                                                                            "example": "ensembl:ENSG00000139618"
                                                                                                        },
                                                                                                        "type": {
                                                                                                            "type": "string",
                                                                                                            "const": "SequenceLocation",
                                                                                                            "description": "MUST be \"SequenceLocation\""
                                                                                                        },
                                                                                                        "sequence_id": {
                                                                                                            "additionalProperties": false,
                                                                                                            "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                                                                            "type": "string",
                                                                                                            "pattern": "^\\w[^:]*:.+$",
                                                                                                            "example": "ensembl:ENSG00000139618"
                                                                                                        },
                                                                                                        "interval": {
                                                                                                            "oneOf": [
                                                                                                                {
                                                                                                                    "description": "A SequenceInterval represents a span on a Sequence. Positions are always represented by contiguous spans using interbase coordinates or coordinate ranges.",
                                                                                                                    "type": "object",
                                                                                                                    "additionalProperties": false,
                                                                                                                    "properties": {
                                                                                                                        "type": {
                                                                                                                            "type": "string",
                                                                                                                            "const": "SequenceInterval",
                                                                                                                            "description": "MUST be \"SequenceInterval\""
                                                                                                                        },
                                                                                                                        "start": {
                                                                                                                            "oneOf": [
                                                                                                                                {
                                                                                                                                    "description": "A simple integer value as a VRS class.",
                                                                                                                                    "type": "object",
                                                                                                                                    "additionalProperties": false,
                                                                                                                                    "properties": {
                                                                                                                                        "type": {
                                                                                                                                            "type": "string",
                                                                                                                                            "const": "Number",
                                                                                                                                            "description": "MUST be \"Number\""
                                                                                                                                        },
                                                                                                                                        "value": {
                                                                                                                                            "type": "integer",
                                                                                                                                            "description": "The value represented by Number"
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    "required": [
                                                                                                                                        "type",
                                                                                                                                        "value"
                                                                                                                                    ]
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                                                    "type": "object",
                                                                                                                                    "additionalProperties": false,
                                                                                                                                    "properties": {
                                                                                                                                        "type": {
                                                                                                                                            "type": "string",
                                                                                                                                            "const": "IndefiniteRange",
                                                                                                                                            "description": "MUST be \"IndefiniteRange\""
                                                                                                                                        },
                                                                                                                                        "value": {
                                                                                                                                            "type": "number",
                                                                                                                                            "description": "The bounded value; inclusive"
                                                                                                                                        },
                                                                                                                                        "comparator": {
                                                                                                                                            "type": "string",
                                                                                                                                            "enum": [
                                                                                                                                                "<=",
                                                                                                                                                ">="
                                                                                                                                            ],
                                                                                                                                            "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    "required": [
                                                                                                                                        "comparator",
                                                                                                                                        "type",
                                                                                                                                        "value"
                                                                                                                                    ]
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "description": "A bounded, inclusive range of numbers.",
                                                                                                                                    "type": "object",
                                                                                                                                    "additionalProperties": false,
                                                                                                                                    "properties": {
                                                                                                                                        "type": {
                                                                                                                                            "type": "string",
                                                                                                                                            "const": "DefiniteRange",
                                                                                                                                            "description": "MUST be \"DefiniteRange\""
                                                                                                                                        },
                                                                                                                                        "min": {
                                                                                                                                            "type": "number",
                                                                                                                                            "description": "The minimum value; inclusive"
                                                                                                                                        },
                                                                                                                                        "max": {
                                                                                                                                            "type": "number",
                                                                                                                                            "description": "The maximum value; inclusive"
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    "required": [
                                                                                                                                        "max",
                                                                                                                                        "min",
                                                                                                                                        "type"
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ],
                                                                                                                            "description": "The start coordinate or range of the interval. The minimum value of this coordinate or range is 0. MUST represent a coordinate or range less than the value of `end`."
                                                                                                                        },
                                                                                                                        "end": {
                                                                                                                            "oneOf": [
                                                                                                                                {
                                                                                                                                    "description": "A simple integer value as a VRS class.",
                                                                                                                                    "type": "object",
                                                                                                                                    "additionalProperties": false,
                                                                                                                                    "properties": {
                                                                                                                                        "type": {
                                                                                                                                            "type": "string",
                                                                                                                                            "const": "Number",
                                                                                                                                            "description": "MUST be \"Number\""
                                                                                                                                        },
                                                                                                                                        "value": {
                                                                                                                                            "type": "integer",
                                                                                                                                            "description": "The value represented by Number"
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    "required": [
                                                                                                                                        "type",
                                                                                                                                        "value"
                                                                                                                                    ]
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                                                    "type": "object",
                                                                                                                                    "additionalProperties": false,
                                                                                                                                    "properties": {
                                                                                                                                        "type": {
                                                                                                                                            "type": "string",
                                                                                                                                            "const": "IndefiniteRange",
                                                                                                                                            "description": "MUST be \"IndefiniteRange\""
                                                                                                                                        },
                                                                                                                                        "value": {
                                                                                                                                            "type": "number",
                                                                                                                                            "description": "The bounded value; inclusive"
                                                                                                                                        },
                                                                                                                                        "comparator": {
                                                                                                                                            "type": "string",
                                                                                                                                            "enum": [
                                                                                                                                                "<=",
                                                                                                                                                ">="
                                                                                                                                            ],
                                                                                                                                            "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    "required": [
                                                                                                                                        "comparator",
                                                                                                                                        "type",
                                                                                                                                        "value"
                                                                                                                                    ]
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "description": "A bounded, inclusive range of numbers.",
                                                                                                                                    "type": "object",
                                                                                                                                    "additionalProperties": false,
                                                                                                                                    "properties": {
                                                                                                                                        "type": {
                                                                                                                                            "type": "string",
                                                                                                                                            "const": "DefiniteRange",
                                                                                                                                            "description": "MUST be \"DefiniteRange\""
                                                                                                                                        },
                                                                                                                                        "min": {
                                                                                                                                            "type": "number",
                                                                                                                                            "description": "The minimum value; inclusive"
                                                                                                                                        },
                                                                                                                                        "max": {
                                                                                                                                            "type": "number",
                                                                                                                                            "description": "The maximum value; inclusive"
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    "required": [
                                                                                                                                        "max",
                                                                                                                                        "min",
                                                                                                                                        "type"
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ],
                                                                                                                            "description": "The end coordinate or range of the interval. The minimum value of this coordinate or range is 0. MUST represent a coordinate or range greater than the value of `start`."
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "allOf": [
                                                                                                                        {
                                                                                                                            "if": {
                                                                                                                                "properties": {
                                                                                                                                    "start": {
                                                                                                                                        "description": "A simple integer value as a VRS class.",
                                                                                                                                        "type": "object",
                                                                                                                                        "additionalProperties": false,
                                                                                                                                        "properties": {
                                                                                                                                            "type": {
                                                                                                                                                "type": "string",
                                                                                                                                                "const": "Number",
                                                                                                                                                "description": "MUST be \"Number\""
                                                                                                                                            },
                                                                                                                                            "value": {
                                                                                                                                                "type": "integer",
                                                                                                                                                "description": "The value represented by Number"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "required": [
                                                                                                                                            "type",
                                                                                                                                            "value"
                                                                                                                                        ]
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "then": {
                                                                                                                                "properties": {
                                                                                                                                    "start": {
                                                                                                                                        "properties": {
                                                                                                                                            "value": {
                                                                                                                                                "minimum": 0
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "if": {
                                                                                                                                "properties": {
                                                                                                                                    "start": {
                                                                                                                                        "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                                                        "type": "object",
                                                                                                                                        "additionalProperties": false,
                                                                                                                                        "properties": {
                                                                                                                                            "type": {
                                                                                                                                                "type": "string",
                                                                                                                                                "const": "IndefiniteRange",
                                                                                                                                                "description": "MUST be \"IndefiniteRange\""
                                                                                                                                            },
                                                                                                                                            "value": {
                                                                                                                                                "type": "number",
                                                                                                                                                "description": "The bounded value; inclusive"
                                                                                                                                            },
                                                                                                                                            "comparator": {
                                                                                                                                                "type": "string",
                                                                                                                                                "enum": [
                                                                                                                                                    "<=",
                                                                                                                                                    ">="
                                                                                                                                                ],
                                                                                                                                                "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "required": [
                                                                                                                                            "comparator",
                                                                                                                                            "type",
                                                                                                                                            "value"
                                                                                                                                        ]
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "then": {
                                                                                                                                "properties": {
                                                                                                                                    "start": {
                                                                                                                                        "properties": {
                                                                                                                                            "value": {
                                                                                                                                                "minimum": 0
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "if": {
                                                                                                                                "properties": {
                                                                                                                                    "start": {
                                                                                                                                        "description": "A bounded, inclusive range of numbers.",
                                                                                                                                        "type": "object",
                                                                                                                                        "additionalProperties": false,
                                                                                                                                        "properties": {
                                                                                                                                            "type": {
                                                                                                                                                "type": "string",
                                                                                                                                                "const": "DefiniteRange",
                                                                                                                                                "description": "MUST be \"DefiniteRange\""
                                                                                                                                            },
                                                                                                                                            "min": {
                                                                                                                                                "type": "number",
                                                                                                                                                "description": "The minimum value; inclusive"
                                                                                                                                            },
                                                                                                                                            "max": {
                                                                                                                                                "type": "number",
                                                                                                                                                "description": "The maximum value; inclusive"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "required": [
                                                                                                                                            "max",
                                                                                                                                            "min",
                                                                                                                                            "type"
                                                                                                                                        ]
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "then": {
                                                                                                                                "properties": {
                                                                                                                                    "start": {
                                                                                                                                        "properties": {
                                                                                                                                            "min": {
                                                                                                                                                "minimum": 0
                                                                                                                                            },
                                                                                                                                            "max": {
                                                                                                                                                "minimum": 0
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "if": {
                                                                                                                                "properties": {
                                                                                                                                    "end": {
                                                                                                                                        "description": "A simple integer value as a VRS class.",
                                                                                                                                        "type": "object",
                                                                                                                                        "additionalProperties": false,
                                                                                                                                        "properties": {
                                                                                                                                            "type": {
                                                                                                                                                "type": "string",
                                                                                                                                                "const": "Number",
                                                                                                                                                "description": "MUST be \"Number\""
                                                                                                                                            },
                                                                                                                                            "value": {
                                                                                                                                                "type": "integer",
                                                                                                                                                "description": "The value represented by Number"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "required": [
                                                                                                                                            "type",
                                                                                                                                            "value"
                                                                                                                                        ]
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "then": {
                                                                                                                                "properties": {
                                                                                                                                    "end": {
                                                                                                                                        "properties": {
                                                                                                                                            "value": {
                                                                                                                                                "minimum": 0
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "if": {
                                                                                                                                "properties": {
                                                                                                                                    "end": {
                                                                                                                                        "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                                                        "type": "object",
                                                                                                                                        "additionalProperties": false,
                                                                                                                                        "properties": {
                                                                                                                                            "type": {
                                                                                                                                                "type": "string",
                                                                                                                                                "const": "IndefiniteRange",
                                                                                                                                                "description": "MUST be \"IndefiniteRange\""
                                                                                                                                            },
                                                                                                                                            "value": {
                                                                                                                                                "type": "number",
                                                                                                                                                "description": "The bounded value; inclusive"
                                                                                                                                            },
                                                                                                                                            "comparator": {
                                                                                                                                                "type": "string",
                                                                                                                                                "enum": [
                                                                                                                                                    "<=",
                                                                                                                                                    ">="
                                                                                                                                                ],
                                                                                                                                                "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "required": [
                                                                                                                                            "comparator",
                                                                                                                                            "type",
                                                                                                                                            "value"
                                                                                                                                        ]
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "then": {
                                                                                                                                "properties": {
                                                                                                                                    "end": {
                                                                                                                                        "properties": {
                                                                                                                                            "value": {
                                                                                                                                                "minimum": 0
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "if": {
                                                                                                                                "properties": {
                                                                                                                                    "end": {
                                                                                                                                        "description": "A bounded, inclusive range of numbers.",
                                                                                                                                        "type": "object",
                                                                                                                                        "additionalProperties": false,
                                                                                                                                        "properties": {
                                                                                                                                            "type": {
                                                                                                                                                "type": "string",
                                                                                                                                                "const": "DefiniteRange",
                                                                                                                                                "description": "MUST be \"DefiniteRange\""
                                                                                                                                            },
                                                                                                                                            "min": {
                                                                                                                                                "type": "number",
                                                                                                                                                "description": "The minimum value; inclusive"
                                                                                                                                            },
                                                                                                                                            "max": {
                                                                                                                                                "type": "number",
                                                                                                                                                "description": "The maximum value; inclusive"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "required": [
                                                                                                                                            "max",
                                                                                                                                            "min",
                                                                                                                                            "type"
                                                                                                                                        ]
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "then": {
                                                                                                                                "properties": {
                                                                                                                                    "end": {
                                                                                                                                        "properties": {
                                                                                                                                            "min": {
                                                                                                                                                "minimum": 0
                                                                                                                                            },
                                                                                                                                            "max": {
                                                                                                                                                "minimum": 0
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    ],
                                                                                                                    "required": [
                                                                                                                        "end",
                                                                                                                        "start",
                                                                                                                        "type"
                                                                                                                    ]
                                                                                                                },
                                                                                                                {
                                                                                                                    "deprecated": true,
                                                                                                                    "description": "DEPRECATED: A SimpleInterval represents a span of sequence. Positions are always represented by contiguous spans using interbase coordinates. This class is deprecated. Use SequenceInterval instead.",
                                                                                                                    "additionalProperties": false,
                                                                                                                    "type": "object",
                                                                                                                    "properties": {
                                                                                                                        "type": {
                                                                                                                            "type": "string",
                                                                                                                            "const": "SimpleInterval",
                                                                                                                            "description": "MUST be \"SimpleInterval\""
                                                                                                                        },
                                                                                                                        "start": {
                                                                                                                            "type": "integer",
                                                                                                                            "description": "The start coordinate"
                                                                                                                        },
                                                                                                                        "end": {
                                                                                                                            "type": "integer",
                                                                                                                            "description": "The end coordinate"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "example": {
                                                                                                                        "type": "SimpleInterval",
                                                                                                                        "start": 11,
                                                                                                                        "end": 22
                                                                                                                    },
                                                                                                                    "required": [
                                                                                                                        "end",
                                                                                                                        "start",
                                                                                                                        "type"
                                                                                                                    ]
                                                                                                                }
                                                                                                            ],
                                                                                                            "description": "Reference sequence region defined by a SequenceInterval."
                                                                                                        }
                                                                                                    },
                                                                                                    "required": [
                                                                                                        "interval",
                                                                                                        "sequence_id",
                                                                                                        "type"
                                                                                                    ]
                                                                                                },
                                                                                                "reverse_complement": {
                                                                                                    "type": "boolean",
                                                                                                    "description": "A flag indicating if the expressed sequence is the reverse complement of the sequence referred to by `location`"
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "location",
                                                                                                "reverse_complement",
                                                                                                "type"
                                                                                            ]
                                                                                        }
                                                                                    ],
                                                                                    "description": "An expression of the repeating subsequence"
                                                                                },
                                                                                "count": {
                                                                                    "oneOf": [
                                                                                        {
                                                                                            "description": "A simple integer value as a VRS class.",
                                                                                            "type": "object",
                                                                                            "additionalProperties": false,
                                                                                            "properties": {
                                                                                                "type": {
                                                                                                    "type": "string",
                                                                                                    "const": "Number",
                                                                                                    "description": "MUST be \"Number\""
                                                                                                },
                                                                                                "value": {
                                                                                                    "type": "integer",
                                                                                                    "description": "The value represented by Number"
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "type",
                                                                                                "value"
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                            "type": "object",
                                                                                            "additionalProperties": false,
                                                                                            "properties": {
                                                                                                "type": {
                                                                                                    "type": "string",
                                                                                                    "const": "IndefiniteRange",
                                                                                                    "description": "MUST be \"IndefiniteRange\""
                                                                                                },
                                                                                                "value": {
                                                                                                    "type": "number",
                                                                                                    "description": "The bounded value; inclusive"
                                                                                                },
                                                                                                "comparator": {
                                                                                                    "type": "string",
                                                                                                    "enum": [
                                                                                                        "<=",
                                                                                                        ">="
                                                                                                    ],
                                                                                                    "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "comparator",
                                                                                                "type",
                                                                                                "value"
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "description": "A bounded, inclusive range of numbers.",
                                                                                            "type": "object",
                                                                                            "additionalProperties": false,
                                                                                            "properties": {
                                                                                                "type": {
                                                                                                    "type": "string",
                                                                                                    "const": "DefiniteRange",
                                                                                                    "description": "MUST be \"DefiniteRange\""
                                                                                                },
                                                                                                "min": {
                                                                                                    "type": "number",
                                                                                                    "description": "The minimum value; inclusive"
                                                                                                },
                                                                                                "max": {
                                                                                                    "type": "number",
                                                                                                    "description": "The maximum value; inclusive"
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "max",
                                                                                                "min",
                                                                                                "type"
                                                                                            ]
                                                                                        }
                                                                                    ],
                                                                                    "description": "The count of repeated units, as an integer or inclusive range"
                                                                                }
                                                                            },
                                                                            "allOf": [
                                                                                {
                                                                                    "if": {
                                                                                        "properties": {
                                                                                            "count": {
                                                                                                "description": "A simple integer value as a VRS class.",
                                                                                                "type": "object",
                                                                                                "additionalProperties": false,
                                                                                                "properties": {
                                                                                                    "type": {
                                                                                                        "type": "string",
                                                                                                        "const": "Number",
                                                                                                        "description": "MUST be \"Number\""
                                                                                                    },
                                                                                                    "value": {
                                                                                                        "type": "integer",
                                                                                                        "description": "The value represented by Number"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "type",
                                                                                                    "value"
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "then": {
                                                                                        "properties": {
                                                                                            "count": {
                                                                                                "properties": {
                                                                                                    "value": {
                                                                                                        "minimum": 0
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "if": {
                                                                                        "properties": {
                                                                                            "count": {
                                                                                                "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                "type": "object",
                                                                                                "additionalProperties": false,
                                                                                                "properties": {
                                                                                                    "type": {
                                                                                                        "type": "string",
                                                                                                        "const": "IndefiniteRange",
                                                                                                        "description": "MUST be \"IndefiniteRange\""
                                                                                                    },
                                                                                                    "value": {
                                                                                                        "type": "number",
                                                                                                        "description": "The bounded value; inclusive"
                                                                                                    },
                                                                                                    "comparator": {
                                                                                                        "type": "string",
                                                                                                        "enum": [
                                                                                                            "<=",
                                                                                                            ">="
                                                                                                        ],
                                                                                                        "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "comparator",
                                                                                                    "type",
                                                                                                    "value"
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "then": {
                                                                                        "properties": {
                                                                                            "count": {
                                                                                                "properties": {
                                                                                                    "value": {
                                                                                                        "minimum": 0
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "if": {
                                                                                        "properties": {
                                                                                            "count": {
                                                                                                "description": "A bounded, inclusive range of numbers.",
                                                                                                "type": "object",
                                                                                                "additionalProperties": false,
                                                                                                "properties": {
                                                                                                    "type": {
                                                                                                        "type": "string",
                                                                                                        "const": "DefiniteRange",
                                                                                                        "description": "MUST be \"DefiniteRange\""
                                                                                                    },
                                                                                                    "min": {
                                                                                                        "type": "number",
                                                                                                        "description": "The minimum value; inclusive"
                                                                                                    },
                                                                                                    "max": {
                                                                                                        "type": "number",
                                                                                                        "description": "The maximum value; inclusive"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "max",
                                                                                                    "min",
                                                                                                    "type"
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "then": {
                                                                                        "properties": {
                                                                                            "count": {
                                                                                                "properties": {
                                                                                                    "min": {
                                                                                                        "minimum": 0
                                                                                                    },
                                                                                                    "max": {
                                                                                                        "minimum": 0
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "required": [
                                                                                "count",
                                                                                "seq_expr",
                                                                                "type"
                                                                            ]
                                                                        }
                                                                    ],
                                                                    "discriminator": {
                                                                        "propertyName": "type"
                                                                    }
                                                                }
                                                            ],
                                                            "description": "An expression of the sequence state",
                                                            "deprecated": [
                                                                {
                                                                    "deprecated": true,
                                                                    "description": "DEPRECATED. A Sequence as a State. This is the State class to use for representing \"ref-alt\" style variation, including SNVs, MNVs, del, ins, and delins. This class is deprecated. Use LiteralSequenceExpression instead.",
                                                                    "additionalProperties": false,
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "type": {
                                                                            "type": "string",
                                                                            "const": "SequenceState",
                                                                            "description": "MUST be \"SequenceState\""
                                                                        },
                                                                        "sequence": {
                                                                            "additionalProperties": false,
                                                                            "description": "A character string of Residues that represents a biological sequence using the conventional sequence order (5\u2019-to-3\u2019 for nucleic acid sequences, and amino-to-carboxyl for amino acid sequences). IUPAC ambiguity codes are permitted in Sequences.",
                                                                            "type": "string",
                                                                            "pattern": "^[A-Z*\\-]*$"
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "type": "SequenceState",
                                                                        "sequence": "C"
                                                                    },
                                                                    "required": [
                                                                        "sequence",
                                                                        "type"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "location",
                                                        "state",
                                                        "type"
                                                    ]
                                                },
                                                {
                                                    "description": "A set of non-overlapping Allele members that co-occur on the same molecule.",
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "properties": {
                                                        "_id": {
                                                            "additionalProperties": false,
                                                            "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                            "type": "string",
                                                            "pattern": "^\\w[^:]*:.+$",
                                                            "example": "ensembl:ENSG00000139618"
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "const": "Haplotype",
                                                            "description": "MUST be \"Haplotype\""
                                                        },
                                                        "members": {
                                                            "type": "array",
                                                            "minItems": 1,
                                                            "uniqueItems": true,
                                                            "items": {
                                                                "oneOf": [
                                                                    {
                                                                        "description": "The state of a molecule at a Location.",
                                                                        "additionalProperties": false,
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "_id": {
                                                                                "additionalProperties": false,
                                                                                "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                                                "type": "string",
                                                                                "pattern": "^\\w[^:]*:.+$",
                                                                                "example": "ensembl:ENSG00000139618"
                                                                            },
                                                                            "type": {
                                                                                "type": "string",
                                                                                "const": "Allele",
                                                                                "description": "MUST be \"Allele\""
                                                                            },
                                                                            "location": {
                                                                                "oneOf": [
                                                                                    {
                                                                                        "additionalProperties": false,
                                                                                        "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                                                        "type": "string",
                                                                                        "pattern": "^\\w[^:]*:.+$",
                                                                                        "example": "ensembl:ENSG00000139618"
                                                                                    },
                                                                                    {
                                                                                        "description": "A contiguous segment of a biological sequence.",
                                                                                        "oneOf": [
                                                                                            {
                                                                                                "additionalProperties": false,
                                                                                                "description": "A Location on a chromosome defined by a species and chromosome name.",
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "_id": {
                                                                                                        "additionalProperties": false,
                                                                                                        "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                                                                        "type": "string",
                                                                                                        "pattern": "^\\w[^:]*:.+$",
                                                                                                        "example": "ensembl:ENSG00000139618"
                                                                                                    },
                                                                                                    "type": {
                                                                                                        "type": "string",
                                                                                                        "const": "ChromosomeLocation",
                                                                                                        "description": "MUST be \"ChromosomeLocation\""
                                                                                                    },
                                                                                                    "species_id": {
                                                                                                        "additionalProperties": false,
                                                                                                        "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                                                                        "type": "string",
                                                                                                        "pattern": "^\\w[^:]*:.+$",
                                                                                                        "example": "ensembl:ENSG00000139618"
                                                                                                    },
                                                                                                    "chr": {
                                                                                                        "type": "string",
                                                                                                        "description": "The symbolic chromosome name. For humans, For humans, chromosome names MUST be one of 1..22, X, Y (case-sensitive)"
                                                                                                    },
                                                                                                    "interval": {
                                                                                                        "description": "A contiguous span on a chromosome defined by cytoband features. The span includes the constituent regions described by the start and end cytobands, as well as any intervening regions.",
                                                                                                        "type": "object",
                                                                                                        "additionalProperties": false,
                                                                                                        "properties": {
                                                                                                            "type": {
                                                                                                                "type": "string",
                                                                                                                "const": "CytobandInterval",
                                                                                                                "description": "MUST be \"CytobandInterval\""
                                                                                                            },
                                                                                                            "start": {
                                                                                                                "additionalProperties": false,
                                                                                                                "description": "A character string representing cytobands derived from the *International System for Human Cytogenomic Nomenclature* (ISCN) [guidelines](http://doi.org/10.1159/isbn.978-3-318-06861-0).",
                                                                                                                "type": "string",
                                                                                                                "pattern": "^cen|[pq](ter|([1-9][0-9]*(\\.[1-9][0-9]*)?))$",
                                                                                                                "example": "q22.3"
                                                                                                            },
                                                                                                            "end": {
                                                                                                                "additionalProperties": false,
                                                                                                                "description": "A character string representing cytobands derived from the *International System for Human Cytogenomic Nomenclature* (ISCN) [guidelines](http://doi.org/10.1159/isbn.978-3-318-06861-0).",
                                                                                                                "type": "string",
                                                                                                                "pattern": "^cen|[pq](ter|([1-9][0-9]*(\\.[1-9][0-9]*)?))$",
                                                                                                                "example": "q22.3"
                                                                                                            }
                                                                                                        },
                                                                                                        "example": {
                                                                                                            "type": "CytobandInterval",
                                                                                                            "start": "q22.2",
                                                                                                            "end": "q22.3"
                                                                                                        },
                                                                                                        "required": [
                                                                                                            "end",
                                                                                                            "start",
                                                                                                            "type"
                                                                                                        ]
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "chr",
                                                                                                    "interval",
                                                                                                    "species_id",
                                                                                                    "type"
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "additionalProperties": false,
                                                                                                "description": "A Location defined by an interval on a referenced Sequence.",
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "_id": {
                                                                                                        "additionalProperties": false,
                                                                                                        "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                                                                        "type": "string",
                                                                                                        "pattern": "^\\w[^:]*:.+$",
                                                                                                        "example": "ensembl:ENSG00000139618"
                                                                                                    },
                                                                                                    "type": {
                                                                                                        "type": "string",
                                                                                                        "const": "SequenceLocation",
                                                                                                        "description": "MUST be \"SequenceLocation\""
                                                                                                    },
                                                                                                    "sequence_id": {
                                                                                                        "additionalProperties": false,
                                                                                                        "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                                                                        "type": "string",
                                                                                                        "pattern": "^\\w[^:]*:.+$",
                                                                                                        "example": "ensembl:ENSG00000139618"
                                                                                                    },
                                                                                                    "interval": {
                                                                                                        "oneOf": [
                                                                                                            {
                                                                                                                "description": "A SequenceInterval represents a span on a Sequence. Positions are always represented by contiguous spans using interbase coordinates or coordinate ranges.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": false,
                                                                                                                "properties": {
                                                                                                                    "type": {
                                                                                                                        "type": "string",
                                                                                                                        "const": "SequenceInterval",
                                                                                                                        "description": "MUST be \"SequenceInterval\""
                                                                                                                    },
                                                                                                                    "start": {
                                                                                                                        "oneOf": [
                                                                                                                            {
                                                                                                                                "description": "A simple integer value as a VRS class.",
                                                                                                                                "type": "object",
                                                                                                                                "additionalProperties": false,
                                                                                                                                "properties": {
                                                                                                                                    "type": {
                                                                                                                                        "type": "string",
                                                                                                                                        "const": "Number",
                                                                                                                                        "description": "MUST be \"Number\""
                                                                                                                                    },
                                                                                                                                    "value": {
                                                                                                                                        "type": "integer",
                                                                                                                                        "description": "The value represented by Number"
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "required": [
                                                                                                                                    "type",
                                                                                                                                    "value"
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                                                "type": "object",
                                                                                                                                "additionalProperties": false,
                                                                                                                                "properties": {
                                                                                                                                    "type": {
                                                                                                                                        "type": "string",
                                                                                                                                        "const": "IndefiniteRange",
                                                                                                                                        "description": "MUST be \"IndefiniteRange\""
                                                                                                                                    },
                                                                                                                                    "value": {
                                                                                                                                        "type": "number",
                                                                                                                                        "description": "The bounded value; inclusive"
                                                                                                                                    },
                                                                                                                                    "comparator": {
                                                                                                                                        "type": "string",
                                                                                                                                        "enum": [
                                                                                                                                            "<=",
                                                                                                                                            ">="
                                                                                                                                        ],
                                                                                                                                        "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "required": [
                                                                                                                                    "comparator",
                                                                                                                                    "type",
                                                                                                                                    "value"
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "description": "A bounded, inclusive range of numbers.",
                                                                                                                                "type": "object",
                                                                                                                                "additionalProperties": false,
                                                                                                                                "properties": {
                                                                                                                                    "type": {
                                                                                                                                        "type": "string",
                                                                                                                                        "const": "DefiniteRange",
                                                                                                                                        "description": "MUST be \"DefiniteRange\""
                                                                                                                                    },
                                                                                                                                    "min": {
                                                                                                                                        "type": "number",
                                                                                                                                        "description": "The minimum value; inclusive"
                                                                                                                                    },
                                                                                                                                    "max": {
                                                                                                                                        "type": "number",
                                                                                                                                        "description": "The maximum value; inclusive"
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "required": [
                                                                                                                                    "max",
                                                                                                                                    "min",
                                                                                                                                    "type"
                                                                                                                                ]
                                                                                                                            }
                                                                                                                        ],
                                                                                                                        "description": "The start coordinate or range of the interval. The minimum value of this coordinate or range is 0. MUST represent a coordinate or range less than the value of `end`."
                                                                                                                    },
                                                                                                                    "end": {
                                                                                                                        "oneOf": [
                                                                                                                            {
                                                                                                                                "description": "A simple integer value as a VRS class.",
                                                                                                                                "type": "object",
                                                                                                                                "additionalProperties": false,
                                                                                                                                "properties": {
                                                                                                                                    "type": {
                                                                                                                                        "type": "string",
                                                                                                                                        "const": "Number",
                                                                                                                                        "description": "MUST be \"Number\""
                                                                                                                                    },
                                                                                                                                    "value": {
                                                                                                                                        "type": "integer",
                                                                                                                                        "description": "The value represented by Number"
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "required": [
                                                                                                                                    "type",
                                                                                                                                    "value"
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                                                "type": "object",
                                                                                                                                "additionalProperties": false,
                                                                                                                                "properties": {
                                                                                                                                    "type": {
                                                                                                                                        "type": "string",
                                                                                                                                        "const": "IndefiniteRange",
                                                                                                                                        "description": "MUST be \"IndefiniteRange\""
                                                                                                                                    },
                                                                                                                                    "value": {
                                                                                                                                        "type": "number",
                                                                                                                                        "description": "The bounded value; inclusive"
                                                                                                                                    },
                                                                                                                                    "comparator": {
                                                                                                                                        "type": "string",
                                                                                                                                        "enum": [
                                                                                                                                            "<=",
                                                                                                                                            ">="
                                                                                                                                        ],
                                                                                                                                        "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "required": [
                                                                                                                                    "comparator",
                                                                                                                                    "type",
                                                                                                                                    "value"
                                                                                                                                ]
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "description": "A bounded, inclusive range of numbers.",
                                                                                                                                "type": "object",
                                                                                                                                "additionalProperties": false,
                                                                                                                                "properties": {
                                                                                                                                    "type": {
                                                                                                                                        "type": "string",
                                                                                                                                        "const": "DefiniteRange",
                                                                                                                                        "description": "MUST be \"DefiniteRange\""
                                                                                                                                    },
                                                                                                                                    "min": {
                                                                                                                                        "type": "number",
                                                                                                                                        "description": "The minimum value; inclusive"
                                                                                                                                    },
                                                                                                                                    "max": {
                                                                                                                                        "type": "number",
                                                                                                                                        "description": "The maximum value; inclusive"
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "required": [
                                                                                                                                    "max",
                                                                                                                                    "min",
                                                                                                                                    "type"
                                                                                                                                ]
                                                                                                                            }
                                                                                                                        ],
                                                                                                                        "description": "The end coordinate or range of the interval. The minimum value of this coordinate or range is 0. MUST represent a coordinate or range greater than the value of `start`."
                                                                                                                    }
                                                                                                                },
                                                                                                                "allOf": [
                                                                                                                    {
                                                                                                                        "if": {
                                                                                                                            "properties": {
                                                                                                                                "start": {
                                                                                                                                    "description": "A simple integer value as a VRS class.",
                                                                                                                                    "type": "object",
                                                                                                                                    "additionalProperties": false,
                                                                                                                                    "properties": {
                                                                                                                                        "type": {
                                                                                                                                            "type": "string",
                                                                                                                                            "const": "Number",
                                                                                                                                            "description": "MUST be \"Number\""
                                                                                                                                        },
                                                                                                                                        "value": {
                                                                                                                                            "type": "integer",
                                                                                                                                            "description": "The value represented by Number"
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    "required": [
                                                                                                                                        "type",
                                                                                                                                        "value"
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "then": {
                                                                                                                            "properties": {
                                                                                                                                "start": {
                                                                                                                                    "properties": {
                                                                                                                                        "value": {
                                                                                                                                            "minimum": 0
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "if": {
                                                                                                                            "properties": {
                                                                                                                                "start": {
                                                                                                                                    "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                                                    "type": "object",
                                                                                                                                    "additionalProperties": false,
                                                                                                                                    "properties": {
                                                                                                                                        "type": {
                                                                                                                                            "type": "string",
                                                                                                                                            "const": "IndefiniteRange",
                                                                                                                                            "description": "MUST be \"IndefiniteRange\""
                                                                                                                                        },
                                                                                                                                        "value": {
                                                                                                                                            "type": "number",
                                                                                                                                            "description": "The bounded value; inclusive"
                                                                                                                                        },
                                                                                                                                        "comparator": {
                                                                                                                                            "type": "string",
                                                                                                                                            "enum": [
                                                                                                                                                "<=",
                                                                                                                                                ">="
                                                                                                                                            ],
                                                                                                                                            "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    "required": [
                                                                                                                                        "comparator",
                                                                                                                                        "type",
                                                                                                                                        "value"
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "then": {
                                                                                                                            "properties": {
                                                                                                                                "start": {
                                                                                                                                    "properties": {
                                                                                                                                        "value": {
                                                                                                                                            "minimum": 0
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "if": {
                                                                                                                            "properties": {
                                                                                                                                "start": {
                                                                                                                                    "description": "A bounded, inclusive range of numbers.",
                                                                                                                                    "type": "object",
                                                                                                                                    "additionalProperties": false,
                                                                                                                                    "properties": {
                                                                                                                                        "type": {
                                                                                                                                            "type": "string",
                                                                                                                                            "const": "DefiniteRange",
                                                                                                                                            "description": "MUST be \"DefiniteRange\""
                                                                                                                                        },
                                                                                                                                        "min": {
                                                                                                                                            "type": "number",
                                                                                                                                            "description": "The minimum value; inclusive"
                                                                                                                                        },
                                                                                                                                        "max": {
                                                                                                                                            "type": "number",
                                                                                                                                            "description": "The maximum value; inclusive"
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    "required": [
                                                                                                                                        "max",
                                                                                                                                        "min",
                                                                                                                                        "type"
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "then": {
                                                                                                                            "properties": {
                                                                                                                                "start": {
                                                                                                                                    "properties": {
                                                                                                                                        "min": {
                                                                                                                                            "minimum": 0
                                                                                                                                        },
                                                                                                                                        "max": {
                                                                                                                                            "minimum": 0
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "if": {
                                                                                                                            "properties": {
                                                                                                                                "end": {
                                                                                                                                    "description": "A simple integer value as a VRS class.",
                                                                                                                                    "type": "object",
                                                                                                                                    "additionalProperties": false,
                                                                                                                                    "properties": {
                                                                                                                                        "type": {
                                                                                                                                            "type": "string",
                                                                                                                                            "const": "Number",
                                                                                                                                            "description": "MUST be \"Number\""
                                                                                                                                        },
                                                                                                                                        "value": {
                                                                                                                                            "type": "integer",
                                                                                                                                            "description": "The value represented by Number"
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    "required": [
                                                                                                                                        "type",
                                                                                                                                        "value"
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "then": {
                                                                                                                            "properties": {
                                                                                                                                "end": {
                                                                                                                                    "properties": {
                                                                                                                                        "value": {
                                                                                                                                            "minimum": 0
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "if": {
                                                                                                                            "properties": {
                                                                                                                                "end": {
                                                                                                                                    "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                                                    "type": "object",
                                                                                                                                    "additionalProperties": false,
                                                                                                                                    "properties": {
                                                                                                                                        "type": {
                                                                                                                                            "type": "string",
                                                                                                                                            "const": "IndefiniteRange",
                                                                                                                                            "description": "MUST be \"IndefiniteRange\""
                                                                                                                                        },
                                                                                                                                        "value": {
                                                                                                                                            "type": "number",
                                                                                                                                            "description": "The bounded value; inclusive"
                                                                                                                                        },
                                                                                                                                        "comparator": {
                                                                                                                                            "type": "string",
                                                                                                                                            "enum": [
                                                                                                                                                "<=",
                                                                                                                                                ">="
                                                                                                                                            ],
                                                                                                                                            "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    "required": [
                                                                                                                                        "comparator",
                                                                                                                                        "type",
                                                                                                                                        "value"
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "then": {
                                                                                                                            "properties": {
                                                                                                                                "end": {
                                                                                                                                    "properties": {
                                                                                                                                        "value": {
                                                                                                                                            "minimum": 0
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "if": {
                                                                                                                            "properties": {
                                                                                                                                "end": {
                                                                                                                                    "description": "A bounded, inclusive range of numbers.",
                                                                                                                                    "type": "object",
                                                                                                                                    "additionalProperties": false,
                                                                                                                                    "properties": {
                                                                                                                                        "type": {
                                                                                                                                            "type": "string",
                                                                                                                                            "const": "DefiniteRange",
                                                                                                                                            "description": "MUST be \"DefiniteRange\""
                                                                                                                                        },
                                                                                                                                        "min": {
                                                                                                                                            "type": "number",
                                                                                                                                            "description": "The minimum value; inclusive"
                                                                                                                                        },
                                                                                                                                        "max": {
                                                                                                                                            "type": "number",
                                                                                                                                            "description": "The maximum value; inclusive"
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    "required": [
                                                                                                                                        "max",
                                                                                                                                        "min",
                                                                                                                                        "type"
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "then": {
                                                                                                                            "properties": {
                                                                                                                                "end": {
                                                                                                                                    "properties": {
                                                                                                                                        "min": {
                                                                                                                                            "minimum": 0
                                                                                                                                        },
                                                                                                                                        "max": {
                                                                                                                                            "minimum": 0
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                ],
                                                                                                                "required": [
                                                                                                                    "end",
                                                                                                                    "start",
                                                                                                                    "type"
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "deprecated": true,
                                                                                                                "description": "DEPRECATED: A SimpleInterval represents a span of sequence. Positions are always represented by contiguous spans using interbase coordinates. This class is deprecated. Use SequenceInterval instead.",
                                                                                                                "additionalProperties": false,
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "type": {
                                                                                                                        "type": "string",
                                                                                                                        "const": "SimpleInterval",
                                                                                                                        "description": "MUST be \"SimpleInterval\""
                                                                                                                    },
                                                                                                                    "start": {
                                                                                                                        "type": "integer",
                                                                                                                        "description": "The start coordinate"
                                                                                                                    },
                                                                                                                    "end": {
                                                                                                                        "type": "integer",
                                                                                                                        "description": "The end coordinate"
                                                                                                                    }
                                                                                                                },
                                                                                                                "example": {
                                                                                                                    "type": "SimpleInterval",
                                                                                                                    "start": 11,
                                                                                                                    "end": 22
                                                                                                                },
                                                                                                                "required": [
                                                                                                                    "end",
                                                                                                                    "start",
                                                                                                                    "type"
                                                                                                                ]
                                                                                                            }
                                                                                                        ],
                                                                                                        "description": "Reference sequence region defined by a SequenceInterval."
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "interval",
                                                                                                    "sequence_id",
                                                                                                    "type"
                                                                                                ]
                                                                                            }
                                                                                        ],
                                                                                        "discriminator": {
                                                                                            "propertyName": "type"
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "description": "Where Allele is located"
                                                                            },
                                                                            "state": {
                                                                                "oneOf": [
                                                                                    {
                                                                                        "deprecated": true,
                                                                                        "description": "DEPRECATED. A Sequence as a State. This is the State class to use for representing \"ref-alt\" style variation, including SNVs, MNVs, del, ins, and delins. This class is deprecated. Use LiteralSequenceExpression instead.",
                                                                                        "additionalProperties": false,
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "type": {
                                                                                                "type": "string",
                                                                                                "const": "SequenceState",
                                                                                                "description": "MUST be \"SequenceState\""
                                                                                            },
                                                                                            "sequence": {
                                                                                                "additionalProperties": false,
                                                                                                "description": "A character string of Residues that represents a biological sequence using the conventional sequence order (5\u2019-to-3\u2019 for nucleic acid sequences, and amino-to-carboxyl for amino acid sequences). IUPAC ambiguity codes are permitted in Sequences.",
                                                                                                "type": "string",
                                                                                                "pattern": "^[A-Z*\\-]*$"
                                                                                            }
                                                                                        },
                                                                                        "example": {
                                                                                            "type": "SequenceState",
                                                                                            "sequence": "C"
                                                                                        },
                                                                                        "required": [
                                                                                            "sequence",
                                                                                            "type"
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "description": "An expression describing a Sequence.",
                                                                                        "oneOf": [
                                                                                            {
                                                                                                "description": "An explicit expression of a Sequence.",
                                                                                                "type": "object",
                                                                                                "additionalProperties": false,
                                                                                                "properties": {
                                                                                                    "type": {
                                                                                                        "type": "string",
                                                                                                        "const": "LiteralSequenceExpression",
                                                                                                        "description": "MUST be \"LiteralSequenceExpression\""
                                                                                                    },
                                                                                                    "sequence": {
                                                                                                        "additionalProperties": false,
                                                                                                        "description": "A character string of Residues that represents a biological sequence using the conventional sequence order (5\u2019-to-3\u2019 for nucleic acid sequences, and amino-to-carboxyl for amino acid sequences). IUPAC ambiguity codes are permitted in Sequences.",
                                                                                                        "type": "string",
                                                                                                        "pattern": "^[A-Z*\\-]*$"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "sequence",
                                                                                                    "type"
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "description": "An approximate expression of a sequence that is derived from a referenced sequence location. Use of this class indicates that the derived sequence is *approximately equivalent* to the reference indicated, and is typically used for describing large regions in contexts where the use of an approximate sequence is inconsequential.",
                                                                                                "type": "object",
                                                                                                "additionalProperties": false,
                                                                                                "properties": {
                                                                                                    "type": {
                                                                                                        "type": "string",
                                                                                                        "const": "DerivedSequenceExpression",
                                                                                                        "description": "MUST be \"DerivedSequenceExpression\""
                                                                                                    },
                                                                                                    "location": {
                                                                                                        "additionalProperties": false,
                                                                                                        "description": "A Location defined by an interval on a referenced Sequence.",
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "_id": {
                                                                                                                "additionalProperties": false,
                                                                                                                "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                                                                                "type": "string",
                                                                                                                "pattern": "^\\w[^:]*:.+$",
                                                                                                                "example": "ensembl:ENSG00000139618"
                                                                                                            },
                                                                                                            "type": {
                                                                                                                "type": "string",
                                                                                                                "const": "SequenceLocation",
                                                                                                                "description": "MUST be \"SequenceLocation\""
                                                                                                            },
                                                                                                            "sequence_id": {
                                                                                                                "additionalProperties": false,
                                                                                                                "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                                                                                "type": "string",
                                                                                                                "pattern": "^\\w[^:]*:.+$",
                                                                                                                "example": "ensembl:ENSG00000139618"
                                                                                                            },
                                                                                                            "interval": {
                                                                                                                "oneOf": [
                                                                                                                    {
                                                                                                                        "description": "A SequenceInterval represents a span on a Sequence. Positions are always represented by contiguous spans using interbase coordinates or coordinate ranges.",
                                                                                                                        "type": "object",
                                                                                                                        "additionalProperties": false,
                                                                                                                        "properties": {
                                                                                                                            "type": {
                                                                                                                                "type": "string",
                                                                                                                                "const": "SequenceInterval",
                                                                                                                                "description": "MUST be \"SequenceInterval\""
                                                                                                                            },
                                                                                                                            "start": {
                                                                                                                                "oneOf": [
                                                                                                                                    {
                                                                                                                                        "description": "A simple integer value as a VRS class.",
                                                                                                                                        "type": "object",
                                                                                                                                        "additionalProperties": false,
                                                                                                                                        "properties": {
                                                                                                                                            "type": {
                                                                                                                                                "type": "string",
                                                                                                                                                "const": "Number",
                                                                                                                                                "description": "MUST be \"Number\""
                                                                                                                                            },
                                                                                                                                            "value": {
                                                                                                                                                "type": "integer",
                                                                                                                                                "description": "The value represented by Number"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "required": [
                                                                                                                                            "type",
                                                                                                                                            "value"
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                                                        "type": "object",
                                                                                                                                        "additionalProperties": false,
                                                                                                                                        "properties": {
                                                                                                                                            "type": {
                                                                                                                                                "type": "string",
                                                                                                                                                "const": "IndefiniteRange",
                                                                                                                                                "description": "MUST be \"IndefiniteRange\""
                                                                                                                                            },
                                                                                                                                            "value": {
                                                                                                                                                "type": "number",
                                                                                                                                                "description": "The bounded value; inclusive"
                                                                                                                                            },
                                                                                                                                            "comparator": {
                                                                                                                                                "type": "string",
                                                                                                                                                "enum": [
                                                                                                                                                    "<=",
                                                                                                                                                    ">="
                                                                                                                                                ],
                                                                                                                                                "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "required": [
                                                                                                                                            "comparator",
                                                                                                                                            "type",
                                                                                                                                            "value"
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "description": "A bounded, inclusive range of numbers.",
                                                                                                                                        "type": "object",
                                                                                                                                        "additionalProperties": false,
                                                                                                                                        "properties": {
                                                                                                                                            "type": {
                                                                                                                                                "type": "string",
                                                                                                                                                "const": "DefiniteRange",
                                                                                                                                                "description": "MUST be \"DefiniteRange\""
                                                                                                                                            },
                                                                                                                                            "min": {
                                                                                                                                                "type": "number",
                                                                                                                                                "description": "The minimum value; inclusive"
                                                                                                                                            },
                                                                                                                                            "max": {
                                                                                                                                                "type": "number",
                                                                                                                                                "description": "The maximum value; inclusive"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "required": [
                                                                                                                                            "max",
                                                                                                                                            "min",
                                                                                                                                            "type"
                                                                                                                                        ]
                                                                                                                                    }
                                                                                                                                ],
                                                                                                                                "description": "The start coordinate or range of the interval. The minimum value of this coordinate or range is 0. MUST represent a coordinate or range less than the value of `end`."
                                                                                                                            },
                                                                                                                            "end": {
                                                                                                                                "oneOf": [
                                                                                                                                    {
                                                                                                                                        "description": "A simple integer value as a VRS class.",
                                                                                                                                        "type": "object",
                                                                                                                                        "additionalProperties": false,
                                                                                                                                        "properties": {
                                                                                                                                            "type": {
                                                                                                                                                "type": "string",
                                                                                                                                                "const": "Number",
                                                                                                                                                "description": "MUST be \"Number\""
                                                                                                                                            },
                                                                                                                                            "value": {
                                                                                                                                                "type": "integer",
                                                                                                                                                "description": "The value represented by Number"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "required": [
                                                                                                                                            "type",
                                                                                                                                            "value"
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                                                        "type": "object",
                                                                                                                                        "additionalProperties": false,
                                                                                                                                        "properties": {
                                                                                                                                            "type": {
                                                                                                                                                "type": "string",
                                                                                                                                                "const": "IndefiniteRange",
                                                                                                                                                "description": "MUST be \"IndefiniteRange\""
                                                                                                                                            },
                                                                                                                                            "value": {
                                                                                                                                                "type": "number",
                                                                                                                                                "description": "The bounded value; inclusive"
                                                                                                                                            },
                                                                                                                                            "comparator": {
                                                                                                                                                "type": "string",
                                                                                                                                                "enum": [
                                                                                                                                                    "<=",
                                                                                                                                                    ">="
                                                                                                                                                ],
                                                                                                                                                "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "required": [
                                                                                                                                            "comparator",
                                                                                                                                            "type",
                                                                                                                                            "value"
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "description": "A bounded, inclusive range of numbers.",
                                                                                                                                        "type": "object",
                                                                                                                                        "additionalProperties": false,
                                                                                                                                        "properties": {
                                                                                                                                            "type": {
                                                                                                                                                "type": "string",
                                                                                                                                                "const": "DefiniteRange",
                                                                                                                                                "description": "MUST be \"DefiniteRange\""
                                                                                                                                            },
                                                                                                                                            "min": {
                                                                                                                                                "type": "number",
                                                                                                                                                "description": "The minimum value; inclusive"
                                                                                                                                            },
                                                                                                                                            "max": {
                                                                                                                                                "type": "number",
                                                                                                                                                "description": "The maximum value; inclusive"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "required": [
                                                                                                                                            "max",
                                                                                                                                            "min",
                                                                                                                                            "type"
                                                                                                                                        ]
                                                                                                                                    }
                                                                                                                                ],
                                                                                                                                "description": "The end coordinate or range of the interval. The minimum value of this coordinate or range is 0. MUST represent a coordinate or range greater than the value of `start`."
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "allOf": [
                                                                                                                            {
                                                                                                                                "if": {
                                                                                                                                    "properties": {
                                                                                                                                        "start": {
                                                                                                                                            "description": "A simple integer value as a VRS class.",
                                                                                                                                            "type": "object",
                                                                                                                                            "additionalProperties": false,
                                                                                                                                            "properties": {
                                                                                                                                                "type": {
                                                                                                                                                    "type": "string",
                                                                                                                                                    "const": "Number",
                                                                                                                                                    "description": "MUST be \"Number\""
                                                                                                                                                },
                                                                                                                                                "value": {
                                                                                                                                                    "type": "integer",
                                                                                                                                                    "description": "The value represented by Number"
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            "required": [
                                                                                                                                                "type",
                                                                                                                                                "value"
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "then": {
                                                                                                                                    "properties": {
                                                                                                                                        "start": {
                                                                                                                                            "properties": {
                                                                                                                                                "value": {
                                                                                                                                                    "minimum": 0
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "if": {
                                                                                                                                    "properties": {
                                                                                                                                        "start": {
                                                                                                                                            "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                                                            "type": "object",
                                                                                                                                            "additionalProperties": false,
                                                                                                                                            "properties": {
                                                                                                                                                "type": {
                                                                                                                                                    "type": "string",
                                                                                                                                                    "const": "IndefiniteRange",
                                                                                                                                                    "description": "MUST be \"IndefiniteRange\""
                                                                                                                                                },
                                                                                                                                                "value": {
                                                                                                                                                    "type": "number",
                                                                                                                                                    "description": "The bounded value; inclusive"
                                                                                                                                                },
                                                                                                                                                "comparator": {
                                                                                                                                                    "type": "string",
                                                                                                                                                    "enum": [
                                                                                                                                                        "<=",
                                                                                                                                                        ">="
                                                                                                                                                    ],
                                                                                                                                                    "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            "required": [
                                                                                                                                                "comparator",
                                                                                                                                                "type",
                                                                                                                                                "value"
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "then": {
                                                                                                                                    "properties": {
                                                                                                                                        "start": {
                                                                                                                                            "properties": {
                                                                                                                                                "value": {
                                                                                                                                                    "minimum": 0
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "if": {
                                                                                                                                    "properties": {
                                                                                                                                        "start": {
                                                                                                                                            "description": "A bounded, inclusive range of numbers.",
                                                                                                                                            "type": "object",
                                                                                                                                            "additionalProperties": false,
                                                                                                                                            "properties": {
                                                                                                                                                "type": {
                                                                                                                                                    "type": "string",
                                                                                                                                                    "const": "DefiniteRange",
                                                                                                                                                    "description": "MUST be \"DefiniteRange\""
                                                                                                                                                },
                                                                                                                                                "min": {
                                                                                                                                                    "type": "number",
                                                                                                                                                    "description": "The minimum value; inclusive"
                                                                                                                                                },
                                                                                                                                                "max": {
                                                                                                                                                    "type": "number",
                                                                                                                                                    "description": "The maximum value; inclusive"
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            "required": [
                                                                                                                                                "max",
                                                                                                                                                "min",
                                                                                                                                                "type"
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "then": {
                                                                                                                                    "properties": {
                                                                                                                                        "start": {
                                                                                                                                            "properties": {
                                                                                                                                                "min": {
                                                                                                                                                    "minimum": 0
                                                                                                                                                },
                                                                                                                                                "max": {
                                                                                                                                                    "minimum": 0
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "if": {
                                                                                                                                    "properties": {
                                                                                                                                        "end": {
                                                                                                                                            "description": "A simple integer value as a VRS class.",
                                                                                                                                            "type": "object",
                                                                                                                                            "additionalProperties": false,
                                                                                                                                            "properties": {
                                                                                                                                                "type": {
                                                                                                                                                    "type": "string",
                                                                                                                                                    "const": "Number",
                                                                                                                                                    "description": "MUST be \"Number\""
                                                                                                                                                },
                                                                                                                                                "value": {
                                                                                                                                                    "type": "integer",
                                                                                                                                                    "description": "The value represented by Number"
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            "required": [
                                                                                                                                                "type",
                                                                                                                                                "value"
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "then": {
                                                                                                                                    "properties": {
                                                                                                                                        "end": {
                                                                                                                                            "properties": {
                                                                                                                                                "value": {
                                                                                                                                                    "minimum": 0
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "if": {
                                                                                                                                    "properties": {
                                                                                                                                        "end": {
                                                                                                                                            "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                                                            "type": "object",
                                                                                                                                            "additionalProperties": false,
                                                                                                                                            "properties": {
                                                                                                                                                "type": {
                                                                                                                                                    "type": "string",
                                                                                                                                                    "const": "IndefiniteRange",
                                                                                                                                                    "description": "MUST be \"IndefiniteRange\""
                                                                                                                                                },
                                                                                                                                                "value": {
                                                                                                                                                    "type": "number",
                                                                                                                                                    "description": "The bounded value; inclusive"
                                                                                                                                                },
                                                                                                                                                "comparator": {
                                                                                                                                                    "type": "string",
                                                                                                                                                    "enum": [
                                                                                                                                                        "<=",
                                                                                                                                                        ">="
                                                                                                                                                    ],
                                                                                                                                                    "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            "required": [
                                                                                                                                                "comparator",
                                                                                                                                                "type",
                                                                                                                                                "value"
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "then": {
                                                                                                                                    "properties": {
                                                                                                                                        "end": {
                                                                                                                                            "properties": {
                                                                                                                                                "value": {
                                                                                                                                                    "minimum": 0
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            },
                                                                                                                            {
                                                                                                                                "if": {
                                                                                                                                    "properties": {
                                                                                                                                        "end": {
                                                                                                                                            "description": "A bounded, inclusive range of numbers.",
                                                                                                                                            "type": "object",
                                                                                                                                            "additionalProperties": false,
                                                                                                                                            "properties": {
                                                                                                                                                "type": {
                                                                                                                                                    "type": "string",
                                                                                                                                                    "const": "DefiniteRange",
                                                                                                                                                    "description": "MUST be \"DefiniteRange\""
                                                                                                                                                },
                                                                                                                                                "min": {
                                                                                                                                                    "type": "number",
                                                                                                                                                    "description": "The minimum value; inclusive"
                                                                                                                                                },
                                                                                                                                                "max": {
                                                                                                                                                    "type": "number",
                                                                                                                                                    "description": "The maximum value; inclusive"
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            "required": [
                                                                                                                                                "max",
                                                                                                                                                "min",
                                                                                                                                                "type"
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "then": {
                                                                                                                                    "properties": {
                                                                                                                                        "end": {
                                                                                                                                            "properties": {
                                                                                                                                                "min": {
                                                                                                                                                    "minimum": 0
                                                                                                                                                },
                                                                                                                                                "max": {
                                                                                                                                                    "minimum": 0
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        ],
                                                                                                                        "required": [
                                                                                                                            "end",
                                                                                                                            "start",
                                                                                                                            "type"
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    {
                                                                                                                        "deprecated": true,
                                                                                                                        "description": "DEPRECATED: A SimpleInterval represents a span of sequence. Positions are always represented by contiguous spans using interbase coordinates. This class is deprecated. Use SequenceInterval instead.",
                                                                                                                        "additionalProperties": false,
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "type": {
                                                                                                                                "type": "string",
                                                                                                                                "const": "SimpleInterval",
                                                                                                                                "description": "MUST be \"SimpleInterval\""
                                                                                                                            },
                                                                                                                            "start": {
                                                                                                                                "type": "integer",
                                                                                                                                "description": "The start coordinate"
                                                                                                                            },
                                                                                                                            "end": {
                                                                                                                                "type": "integer",
                                                                                                                                "description": "The end coordinate"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "example": {
                                                                                                                            "type": "SimpleInterval",
                                                                                                                            "start": 11,
                                                                                                                            "end": 22
                                                                                                                        },
                                                                                                                        "required": [
                                                                                                                            "end",
                                                                                                                            "start",
                                                                                                                            "type"
                                                                                                                        ]
                                                                                                                    }
                                                                                                                ],
                                                                                                                "description": "Reference sequence region defined by a SequenceInterval."
                                                                                                            }
                                                                                                        },
                                                                                                        "required": [
                                                                                                            "interval",
                                                                                                            "sequence_id",
                                                                                                            "type"
                                                                                                        ]
                                                                                                    },
                                                                                                    "reverse_complement": {
                                                                                                        "type": "boolean",
                                                                                                        "description": "A flag indicating if the expressed sequence is the reverse complement of the sequence referred to by `location`"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "location",
                                                                                                    "reverse_complement",
                                                                                                    "type"
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                "description": "An expression of a sequence comprised of a tandem repeating subsequence.",
                                                                                                "additionalProperties": false,
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "type": {
                                                                                                        "type": "string",
                                                                                                        "const": "RepeatedSequenceExpression",
                                                                                                        "description": "MUST be \"RepeatedSequenceExpression\""
                                                                                                    },
                                                                                                    "seq_expr": {
                                                                                                        "oneOf": [
                                                                                                            {
                                                                                                                "description": "An explicit expression of a Sequence.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": false,
                                                                                                                "properties": {
                                                                                                                    "type": {
                                                                                                                        "type": "string",
                                                                                                                        "const": "LiteralSequenceExpression",
                                                                                                                        "description": "MUST be \"LiteralSequenceExpression\""
                                                                                                                    },
                                                                                                                    "sequence": {
                                                                                                                        "additionalProperties": false,
                                                                                                                        "description": "A character string of Residues that represents a biological sequence using the conventional sequence order (5\u2019-to-3\u2019 for nucleic acid sequences, and amino-to-carboxyl for amino acid sequences). IUPAC ambiguity codes are permitted in Sequences.",
                                                                                                                        "type": "string",
                                                                                                                        "pattern": "^[A-Z*\\-]*$"
                                                                                                                    }
                                                                                                                },
                                                                                                                "required": [
                                                                                                                    "sequence",
                                                                                                                    "type"
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "description": "An approximate expression of a sequence that is derived from a referenced sequence location. Use of this class indicates that the derived sequence is *approximately equivalent* to the reference indicated, and is typically used for describing large regions in contexts where the use of an approximate sequence is inconsequential.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": false,
                                                                                                                "properties": {
                                                                                                                    "type": {
                                                                                                                        "type": "string",
                                                                                                                        "const": "DerivedSequenceExpression",
                                                                                                                        "description": "MUST be \"DerivedSequenceExpression\""
                                                                                                                    },
                                                                                                                    "location": {
                                                                                                                        "additionalProperties": false,
                                                                                                                        "description": "A Location defined by an interval on a referenced Sequence.",
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "_id": {
                                                                                                                                "additionalProperties": false,
                                                                                                                                "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                                                                                                "type": "string",
                                                                                                                                "pattern": "^\\w[^:]*:.+$",
                                                                                                                                "example": "ensembl:ENSG00000139618"
                                                                                                                            },
                                                                                                                            "type": {
                                                                                                                                "type": "string",
                                                                                                                                "const": "SequenceLocation",
                                                                                                                                "description": "MUST be \"SequenceLocation\""
                                                                                                                            },
                                                                                                                            "sequence_id": {
                                                                                                                                "additionalProperties": false,
                                                                                                                                "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                                                                                                "type": "string",
                                                                                                                                "pattern": "^\\w[^:]*:.+$",
                                                                                                                                "example": "ensembl:ENSG00000139618"
                                                                                                                            },
                                                                                                                            "interval": {
                                                                                                                                "oneOf": [
                                                                                                                                    {
                                                                                                                                        "description": "A SequenceInterval represents a span on a Sequence. Positions are always represented by contiguous spans using interbase coordinates or coordinate ranges.",
                                                                                                                                        "type": "object",
                                                                                                                                        "additionalProperties": false,
                                                                                                                                        "properties": {
                                                                                                                                            "type": {
                                                                                                                                                "type": "string",
                                                                                                                                                "const": "SequenceInterval",
                                                                                                                                                "description": "MUST be \"SequenceInterval\""
                                                                                                                                            },
                                                                                                                                            "start": {
                                                                                                                                                "oneOf": [
                                                                                                                                                    {
                                                                                                                                                        "description": "A simple integer value as a VRS class.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "additionalProperties": false,
                                                                                                                                                        "properties": {
                                                                                                                                                            "type": {
                                                                                                                                                                "type": "string",
                                                                                                                                                                "const": "Number",
                                                                                                                                                                "description": "MUST be \"Number\""
                                                                                                                                                            },
                                                                                                                                                            "value": {
                                                                                                                                                                "type": "integer",
                                                                                                                                                                "description": "The value represented by Number"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        "required": [
                                                                                                                                                            "type",
                                                                                                                                                            "value"
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "additionalProperties": false,
                                                                                                                                                        "properties": {
                                                                                                                                                            "type": {
                                                                                                                                                                "type": "string",
                                                                                                                                                                "const": "IndefiniteRange",
                                                                                                                                                                "description": "MUST be \"IndefiniteRange\""
                                                                                                                                                            },
                                                                                                                                                            "value": {
                                                                                                                                                                "type": "number",
                                                                                                                                                                "description": "The bounded value; inclusive"
                                                                                                                                                            },
                                                                                                                                                            "comparator": {
                                                                                                                                                                "type": "string",
                                                                                                                                                                "enum": [
                                                                                                                                                                    "<=",
                                                                                                                                                                    ">="
                                                                                                                                                                ],
                                                                                                                                                                "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        "required": [
                                                                                                                                                            "comparator",
                                                                                                                                                            "type",
                                                                                                                                                            "value"
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "description": "A bounded, inclusive range of numbers.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "additionalProperties": false,
                                                                                                                                                        "properties": {
                                                                                                                                                            "type": {
                                                                                                                                                                "type": "string",
                                                                                                                                                                "const": "DefiniteRange",
                                                                                                                                                                "description": "MUST be \"DefiniteRange\""
                                                                                                                                                            },
                                                                                                                                                            "min": {
                                                                                                                                                                "type": "number",
                                                                                                                                                                "description": "The minimum value; inclusive"
                                                                                                                                                            },
                                                                                                                                                            "max": {
                                                                                                                                                                "type": "number",
                                                                                                                                                                "description": "The maximum value; inclusive"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        "required": [
                                                                                                                                                            "max",
                                                                                                                                                            "min",
                                                                                                                                                            "type"
                                                                                                                                                        ]
                                                                                                                                                    }
                                                                                                                                                ],
                                                                                                                                                "description": "The start coordinate or range of the interval. The minimum value of this coordinate or range is 0. MUST represent a coordinate or range less than the value of `end`."
                                                                                                                                            },
                                                                                                                                            "end": {
                                                                                                                                                "oneOf": [
                                                                                                                                                    {
                                                                                                                                                        "description": "A simple integer value as a VRS class.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "additionalProperties": false,
                                                                                                                                                        "properties": {
                                                                                                                                                            "type": {
                                                                                                                                                                "type": "string",
                                                                                                                                                                "const": "Number",
                                                                                                                                                                "description": "MUST be \"Number\""
                                                                                                                                                            },
                                                                                                                                                            "value": {
                                                                                                                                                                "type": "integer",
                                                                                                                                                                "description": "The value represented by Number"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        "required": [
                                                                                                                                                            "type",
                                                                                                                                                            "value"
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "additionalProperties": false,
                                                                                                                                                        "properties": {
                                                                                                                                                            "type": {
                                                                                                                                                                "type": "string",
                                                                                                                                                                "const": "IndefiniteRange",
                                                                                                                                                                "description": "MUST be \"IndefiniteRange\""
                                                                                                                                                            },
                                                                                                                                                            "value": {
                                                                                                                                                                "type": "number",
                                                                                                                                                                "description": "The bounded value; inclusive"
                                                                                                                                                            },
                                                                                                                                                            "comparator": {
                                                                                                                                                                "type": "string",
                                                                                                                                                                "enum": [
                                                                                                                                                                    "<=",
                                                                                                                                                                    ">="
                                                                                                                                                                ],
                                                                                                                                                                "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        "required": [
                                                                                                                                                            "comparator",
                                                                                                                                                            "type",
                                                                                                                                                            "value"
                                                                                                                                                        ]
                                                                                                                                                    },
                                                                                                                                                    {
                                                                                                                                                        "description": "A bounded, inclusive range of numbers.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "additionalProperties": false,
                                                                                                                                                        "properties": {
                                                                                                                                                            "type": {
                                                                                                                                                                "type": "string",
                                                                                                                                                                "const": "DefiniteRange",
                                                                                                                                                                "description": "MUST be \"DefiniteRange\""
                                                                                                                                                            },
                                                                                                                                                            "min": {
                                                                                                                                                                "type": "number",
                                                                                                                                                                "description": "The minimum value; inclusive"
                                                                                                                                                            },
                                                                                                                                                            "max": {
                                                                                                                                                                "type": "number",
                                                                                                                                                                "description": "The maximum value; inclusive"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        "required": [
                                                                                                                                                            "max",
                                                                                                                                                            "min",
                                                                                                                                                            "type"
                                                                                                                                                        ]
                                                                                                                                                    }
                                                                                                                                                ],
                                                                                                                                                "description": "The end coordinate or range of the interval. The minimum value of this coordinate or range is 0. MUST represent a coordinate or range greater than the value of `start`."
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "allOf": [
                                                                                                                                            {
                                                                                                                                                "if": {
                                                                                                                                                    "properties": {
                                                                                                                                                        "start": {
                                                                                                                                                            "description": "A simple integer value as a VRS class.",
                                                                                                                                                            "type": "object",
                                                                                                                                                            "additionalProperties": false,
                                                                                                                                                            "properties": {
                                                                                                                                                                "type": {
                                                                                                                                                                    "type": "string",
                                                                                                                                                                    "const": "Number",
                                                                                                                                                                    "description": "MUST be \"Number\""
                                                                                                                                                                },
                                                                                                                                                                "value": {
                                                                                                                                                                    "type": "integer",
                                                                                                                                                                    "description": "The value represented by Number"
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "required": [
                                                                                                                                                                "type",
                                                                                                                                                                "value"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "then": {
                                                                                                                                                    "properties": {
                                                                                                                                                        "start": {
                                                                                                                                                            "properties": {
                                                                                                                                                                "value": {
                                                                                                                                                                    "minimum": 0
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "if": {
                                                                                                                                                    "properties": {
                                                                                                                                                        "start": {
                                                                                                                                                            "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                                                                            "type": "object",
                                                                                                                                                            "additionalProperties": false,
                                                                                                                                                            "properties": {
                                                                                                                                                                "type": {
                                                                                                                                                                    "type": "string",
                                                                                                                                                                    "const": "IndefiniteRange",
                                                                                                                                                                    "description": "MUST be \"IndefiniteRange\""
                                                                                                                                                                },
                                                                                                                                                                "value": {
                                                                                                                                                                    "type": "number",
                                                                                                                                                                    "description": "The bounded value; inclusive"
                                                                                                                                                                },
                                                                                                                                                                "comparator": {
                                                                                                                                                                    "type": "string",
                                                                                                                                                                    "enum": [
                                                                                                                                                                        "<=",
                                                                                                                                                                        ">="
                                                                                                                                                                    ],
                                                                                                                                                                    "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "required": [
                                                                                                                                                                "comparator",
                                                                                                                                                                "type",
                                                                                                                                                                "value"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "then": {
                                                                                                                                                    "properties": {
                                                                                                                                                        "start": {
                                                                                                                                                            "properties": {
                                                                                                                                                                "value": {
                                                                                                                                                                    "minimum": 0
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "if": {
                                                                                                                                                    "properties": {
                                                                                                                                                        "start": {
                                                                                                                                                            "description": "A bounded, inclusive range of numbers.",
                                                                                                                                                            "type": "object",
                                                                                                                                                            "additionalProperties": false,
                                                                                                                                                            "properties": {
                                                                                                                                                                "type": {
                                                                                                                                                                    "type": "string",
                                                                                                                                                                    "const": "DefiniteRange",
                                                                                                                                                                    "description": "MUST be \"DefiniteRange\""
                                                                                                                                                                },
                                                                                                                                                                "min": {
                                                                                                                                                                    "type": "number",
                                                                                                                                                                    "description": "The minimum value; inclusive"
                                                                                                                                                                },
                                                                                                                                                                "max": {
                                                                                                                                                                    "type": "number",
                                                                                                                                                                    "description": "The maximum value; inclusive"
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "required": [
                                                                                                                                                                "max",
                                                                                                                                                                "min",
                                                                                                                                                                "type"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "then": {
                                                                                                                                                    "properties": {
                                                                                                                                                        "start": {
                                                                                                                                                            "properties": {
                                                                                                                                                                "min": {
                                                                                                                                                                    "minimum": 0
                                                                                                                                                                },
                                                                                                                                                                "max": {
                                                                                                                                                                    "minimum": 0
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "if": {
                                                                                                                                                    "properties": {
                                                                                                                                                        "end": {
                                                                                                                                                            "description": "A simple integer value as a VRS class.",
                                                                                                                                                            "type": "object",
                                                                                                                                                            "additionalProperties": false,
                                                                                                                                                            "properties": {
                                                                                                                                                                "type": {
                                                                                                                                                                    "type": "string",
                                                                                                                                                                    "const": "Number",
                                                                                                                                                                    "description": "MUST be \"Number\""
                                                                                                                                                                },
                                                                                                                                                                "value": {
                                                                                                                                                                    "type": "integer",
                                                                                                                                                                    "description": "The value represented by Number"
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "required": [
                                                                                                                                                                "type",
                                                                                                                                                                "value"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "then": {
                                                                                                                                                    "properties": {
                                                                                                                                                        "end": {
                                                                                                                                                            "properties": {
                                                                                                                                                                "value": {
                                                                                                                                                                    "minimum": 0
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "if": {
                                                                                                                                                    "properties": {
                                                                                                                                                        "end": {
                                                                                                                                                            "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                                                                            "type": "object",
                                                                                                                                                            "additionalProperties": false,
                                                                                                                                                            "properties": {
                                                                                                                                                                "type": {
                                                                                                                                                                    "type": "string",
                                                                                                                                                                    "const": "IndefiniteRange",
                                                                                                                                                                    "description": "MUST be \"IndefiniteRange\""
                                                                                                                                                                },
                                                                                                                                                                "value": {
                                                                                                                                                                    "type": "number",
                                                                                                                                                                    "description": "The bounded value; inclusive"
                                                                                                                                                                },
                                                                                                                                                                "comparator": {
                                                                                                                                                                    "type": "string",
                                                                                                                                                                    "enum": [
                                                                                                                                                                        "<=",
                                                                                                                                                                        ">="
                                                                                                                                                                    ],
                                                                                                                                                                    "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "required": [
                                                                                                                                                                "comparator",
                                                                                                                                                                "type",
                                                                                                                                                                "value"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "then": {
                                                                                                                                                    "properties": {
                                                                                                                                                        "end": {
                                                                                                                                                            "properties": {
                                                                                                                                                                "value": {
                                                                                                                                                                    "minimum": 0
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            {
                                                                                                                                                "if": {
                                                                                                                                                    "properties": {
                                                                                                                                                        "end": {
                                                                                                                                                            "description": "A bounded, inclusive range of numbers.",
                                                                                                                                                            "type": "object",
                                                                                                                                                            "additionalProperties": false,
                                                                                                                                                            "properties": {
                                                                                                                                                                "type": {
                                                                                                                                                                    "type": "string",
                                                                                                                                                                    "const": "DefiniteRange",
                                                                                                                                                                    "description": "MUST be \"DefiniteRange\""
                                                                                                                                                                },
                                                                                                                                                                "min": {
                                                                                                                                                                    "type": "number",
                                                                                                                                                                    "description": "The minimum value; inclusive"
                                                                                                                                                                },
                                                                                                                                                                "max": {
                                                                                                                                                                    "type": "number",
                                                                                                                                                                    "description": "The maximum value; inclusive"
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "required": [
                                                                                                                                                                "max",
                                                                                                                                                                "min",
                                                                                                                                                                "type"
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "then": {
                                                                                                                                                    "properties": {
                                                                                                                                                        "end": {
                                                                                                                                                            "properties": {
                                                                                                                                                                "min": {
                                                                                                                                                                    "minimum": 0
                                                                                                                                                                },
                                                                                                                                                                "max": {
                                                                                                                                                                    "minimum": 0
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        ],
                                                                                                                                        "required": [
                                                                                                                                            "end",
                                                                                                                                            "start",
                                                                                                                                            "type"
                                                                                                                                        ]
                                                                                                                                    },
                                                                                                                                    {
                                                                                                                                        "deprecated": true,
                                                                                                                                        "description": "DEPRECATED: A SimpleInterval represents a span of sequence. Positions are always represented by contiguous spans using interbase coordinates. This class is deprecated. Use SequenceInterval instead.",
                                                                                                                                        "additionalProperties": false,
                                                                                                                                        "type": "object",
                                                                                                                                        "properties": {
                                                                                                                                            "type": {
                                                                                                                                                "type": "string",
                                                                                                                                                "const": "SimpleInterval",
                                                                                                                                                "description": "MUST be \"SimpleInterval\""
                                                                                                                                            },
                                                                                                                                            "start": {
                                                                                                                                                "type": "integer",
                                                                                                                                                "description": "The start coordinate"
                                                                                                                                            },
                                                                                                                                            "end": {
                                                                                                                                                "type": "integer",
                                                                                                                                                "description": "The end coordinate"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "example": {
                                                                                                                                            "type": "SimpleInterval",
                                                                                                                                            "start": 11,
                                                                                                                                            "end": 22
                                                                                                                                        },
                                                                                                                                        "required": [
                                                                                                                                            "end",
                                                                                                                                            "start",
                                                                                                                                            "type"
                                                                                                                                        ]
                                                                                                                                    }
                                                                                                                                ],
                                                                                                                                "description": "Reference sequence region defined by a SequenceInterval."
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "required": [
                                                                                                                            "interval",
                                                                                                                            "sequence_id",
                                                                                                                            "type"
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    "reverse_complement": {
                                                                                                                        "type": "boolean",
                                                                                                                        "description": "A flag indicating if the expressed sequence is the reverse complement of the sequence referred to by `location`"
                                                                                                                    }
                                                                                                                },
                                                                                                                "required": [
                                                                                                                    "location",
                                                                                                                    "reverse_complement",
                                                                                                                    "type"
                                                                                                                ]
                                                                                                            }
                                                                                                        ],
                                                                                                        "description": "An expression of the repeating subsequence"
                                                                                                    },
                                                                                                    "count": {
                                                                                                        "oneOf": [
                                                                                                            {
                                                                                                                "description": "A simple integer value as a VRS class.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": false,
                                                                                                                "properties": {
                                                                                                                    "type": {
                                                                                                                        "type": "string",
                                                                                                                        "const": "Number",
                                                                                                                        "description": "MUST be \"Number\""
                                                                                                                    },
                                                                                                                    "value": {
                                                                                                                        "type": "integer",
                                                                                                                        "description": "The value represented by Number"
                                                                                                                    }
                                                                                                                },
                                                                                                                "required": [
                                                                                                                    "type",
                                                                                                                    "value"
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": false,
                                                                                                                "properties": {
                                                                                                                    "type": {
                                                                                                                        "type": "string",
                                                                                                                        "const": "IndefiniteRange",
                                                                                                                        "description": "MUST be \"IndefiniteRange\""
                                                                                                                    },
                                                                                                                    "value": {
                                                                                                                        "type": "number",
                                                                                                                        "description": "The bounded value; inclusive"
                                                                                                                    },
                                                                                                                    "comparator": {
                                                                                                                        "type": "string",
                                                                                                                        "enum": [
                                                                                                                            "<=",
                                                                                                                            ">="
                                                                                                                        ],
                                                                                                                        "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                    }
                                                                                                                },
                                                                                                                "required": [
                                                                                                                    "comparator",
                                                                                                                    "type",
                                                                                                                    "value"
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "description": "A bounded, inclusive range of numbers.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": false,
                                                                                                                "properties": {
                                                                                                                    "type": {
                                                                                                                        "type": "string",
                                                                                                                        "const": "DefiniteRange",
                                                                                                                        "description": "MUST be \"DefiniteRange\""
                                                                                                                    },
                                                                                                                    "min": {
                                                                                                                        "type": "number",
                                                                                                                        "description": "The minimum value; inclusive"
                                                                                                                    },
                                                                                                                    "max": {
                                                                                                                        "type": "number",
                                                                                                                        "description": "The maximum value; inclusive"
                                                                                                                    }
                                                                                                                },
                                                                                                                "required": [
                                                                                                                    "max",
                                                                                                                    "min",
                                                                                                                    "type"
                                                                                                                ]
                                                                                                            }
                                                                                                        ],
                                                                                                        "description": "The count of repeated units, as an integer or inclusive range"
                                                                                                    }
                                                                                                },
                                                                                                "allOf": [
                                                                                                    {
                                                                                                        "if": {
                                                                                                            "properties": {
                                                                                                                "count": {
                                                                                                                    "description": "A simple integer value as a VRS class.",
                                                                                                                    "type": "object",
                                                                                                                    "additionalProperties": false,
                                                                                                                    "properties": {
                                                                                                                        "type": {
                                                                                                                            "type": "string",
                                                                                                                            "const": "Number",
                                                                                                                            "description": "MUST be \"Number\""
                                                                                                                        },
                                                                                                                        "value": {
                                                                                                                            "type": "integer",
                                                                                                                            "description": "The value represented by Number"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "required": [
                                                                                                                        "type",
                                                                                                                        "value"
                                                                                                                    ]
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "then": {
                                                                                                            "properties": {
                                                                                                                "count": {
                                                                                                                    "properties": {
                                                                                                                        "value": {
                                                                                                                            "minimum": 0
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "if": {
                                                                                                            "properties": {
                                                                                                                "count": {
                                                                                                                    "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                                    "type": "object",
                                                                                                                    "additionalProperties": false,
                                                                                                                    "properties": {
                                                                                                                        "type": {
                                                                                                                            "type": "string",
                                                                                                                            "const": "IndefiniteRange",
                                                                                                                            "description": "MUST be \"IndefiniteRange\""
                                                                                                                        },
                                                                                                                        "value": {
                                                                                                                            "type": "number",
                                                                                                                            "description": "The bounded value; inclusive"
                                                                                                                        },
                                                                                                                        "comparator": {
                                                                                                                            "type": "string",
                                                                                                                            "enum": [
                                                                                                                                "<=",
                                                                                                                                ">="
                                                                                                                            ],
                                                                                                                            "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "required": [
                                                                                                                        "comparator",
                                                                                                                        "type",
                                                                                                                        "value"
                                                                                                                    ]
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "then": {
                                                                                                            "properties": {
                                                                                                                "count": {
                                                                                                                    "properties": {
                                                                                                                        "value": {
                                                                                                                            "minimum": 0
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "if": {
                                                                                                            "properties": {
                                                                                                                "count": {
                                                                                                                    "description": "A bounded, inclusive range of numbers.",
                                                                                                                    "type": "object",
                                                                                                                    "additionalProperties": false,
                                                                                                                    "properties": {
                                                                                                                        "type": {
                                                                                                                            "type": "string",
                                                                                                                            "const": "DefiniteRange",
                                                                                                                            "description": "MUST be \"DefiniteRange\""
                                                                                                                        },
                                                                                                                        "min": {
                                                                                                                            "type": "number",
                                                                                                                            "description": "The minimum value; inclusive"
                                                                                                                        },
                                                                                                                        "max": {
                                                                                                                            "type": "number",
                                                                                                                            "description": "The maximum value; inclusive"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "required": [
                                                                                                                        "max",
                                                                                                                        "min",
                                                                                                                        "type"
                                                                                                                    ]
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "then": {
                                                                                                            "properties": {
                                                                                                                "count": {
                                                                                                                    "properties": {
                                                                                                                        "min": {
                                                                                                                            "minimum": 0
                                                                                                                        },
                                                                                                                        "max": {
                                                                                                                            "minimum": 0
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                ],
                                                                                                "required": [
                                                                                                    "count",
                                                                                                    "seq_expr",
                                                                                                    "type"
                                                                                                ]
                                                                                            }
                                                                                        ],
                                                                                        "discriminator": {
                                                                                            "propertyName": "type"
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "description": "An expression of the sequence state",
                                                                                "deprecated": [
                                                                                    {
                                                                                        "deprecated": true,
                                                                                        "description": "DEPRECATED. A Sequence as a State. This is the State class to use for representing \"ref-alt\" style variation, including SNVs, MNVs, del, ins, and delins. This class is deprecated. Use LiteralSequenceExpression instead.",
                                                                                        "additionalProperties": false,
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "type": {
                                                                                                "type": "string",
                                                                                                "const": "SequenceState",
                                                                                                "description": "MUST be \"SequenceState\""
                                                                                            },
                                                                                            "sequence": {
                                                                                                "additionalProperties": false,
                                                                                                "description": "A character string of Residues that represents a biological sequence using the conventional sequence order (5\u2019-to-3\u2019 for nucleic acid sequences, and amino-to-carboxyl for amino acid sequences). IUPAC ambiguity codes are permitted in Sequences.",
                                                                                                "type": "string",
                                                                                                "pattern": "^[A-Z*\\-]*$"
                                                                                            }
                                                                                        },
                                                                                        "example": {
                                                                                            "type": "SequenceState",
                                                                                            "sequence": "C"
                                                                                        },
                                                                                        "required": [
                                                                                            "sequence",
                                                                                            "type"
                                                                                        ]
                                                                                    }
                                                                                ]
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "location",
                                                                            "state",
                                                                            "type"
                                                                        ]
                                                                    },
                                                                    {
                                                                        "additionalProperties": false,
                                                                        "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                                        "type": "string",
                                                                        "pattern": "^\\w[^:]*:.+$",
                                                                        "example": "ensembl:ENSG00000139618"
                                                                    }
                                                                ]
                                                            },
                                                            "description": "List of Alleles, or references to Alleles, that comprise this Haplotype."
                                                        }
                                                    },
                                                    "required": [
                                                        "members",
                                                        "type"
                                                    ]
                                                }
                                            ],
                                            "discriminator": {
                                                "propertyName": "type"
                                            }
                                        },
                                        {
                                            "description": "A named entity that can be mapped to a Location. Genes, protein domains, exons, and chromosomes are some examples of common biological entities that may be Features.",
                                            "oneOf": [
                                                {
                                                    "description": "A reference to a Gene as defined by an authority. For human genes, the use of [hgnc](https://registry.identifiers.org/registry/hgnc) as the gene authority is RECOMMENDED.",
                                                    "type": "object",
                                                    "additionalProperties": false,
                                                    "properties": {
                                                        "type": {
                                                            "type": "string",
                                                            "const": "Gene",
                                                            "description": "MUST be \"Gene\""
                                                        },
                                                        "gene_id": {
                                                            "additionalProperties": false,
                                                            "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                            "type": "string",
                                                            "pattern": "^\\w[^:]*:.+$",
                                                            "example": "ensembl:ENSG00000139618"
                                                        }
                                                    },
                                                    "required": [
                                                        "gene_id",
                                                        "type"
                                                    ]
                                                }
                                            ],
                                            "discriminator": {
                                                "propertyName": "type"
                                            }
                                        },
                                        {
                                            "description": "An expression describing a Sequence.",
                                            "oneOf": [
                                                {
                                                    "description": "An explicit expression of a Sequence.",
                                                    "type": "object",
                                                    "additionalProperties": false,
                                                    "properties": {
                                                        "type": {
                                                            "type": "string",
                                                            "const": "LiteralSequenceExpression",
                                                            "description": "MUST be \"LiteralSequenceExpression\""
                                                        },
                                                        "sequence": {
                                                            "additionalProperties": false,
                                                            "description": "A character string of Residues that represents a biological sequence using the conventional sequence order (5\u2019-to-3\u2019 for nucleic acid sequences, and amino-to-carboxyl for amino acid sequences). IUPAC ambiguity codes are permitted in Sequences.",
                                                            "type": "string",
                                                            "pattern": "^[A-Z*\\-]*$"
                                                        }
                                                    },
                                                    "required": [
                                                        "sequence",
                                                        "type"
                                                    ]
                                                },
                                                {
                                                    "description": "An approximate expression of a sequence that is derived from a referenced sequence location. Use of this class indicates that the derived sequence is *approximately equivalent* to the reference indicated, and is typically used for describing large regions in contexts where the use of an approximate sequence is inconsequential.",
                                                    "type": "object",
                                                    "additionalProperties": false,
                                                    "properties": {
                                                        "type": {
                                                            "type": "string",
                                                            "const": "DerivedSequenceExpression",
                                                            "description": "MUST be \"DerivedSequenceExpression\""
                                                        },
                                                        "location": {
                                                            "additionalProperties": false,
                                                            "description": "A Location defined by an interval on a referenced Sequence.",
                                                            "type": "object",
                                                            "properties": {
                                                                "_id": {
                                                                    "additionalProperties": false,
                                                                    "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                                    "type": "string",
                                                                    "pattern": "^\\w[^:]*:.+$",
                                                                    "example": "ensembl:ENSG00000139618"
                                                                },
                                                                "type": {
                                                                    "type": "string",
                                                                    "const": "SequenceLocation",
                                                                    "description": "MUST be \"SequenceLocation\""
                                                                },
                                                                "sequence_id": {
                                                                    "additionalProperties": false,
                                                                    "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                                    "type": "string",
                                                                    "pattern": "^\\w[^:]*:.+$",
                                                                    "example": "ensembl:ENSG00000139618"
                                                                },
                                                                "interval": {
                                                                    "oneOf": [
                                                                        {
                                                                            "description": "A SequenceInterval represents a span on a Sequence. Positions are always represented by contiguous spans using interbase coordinates or coordinate ranges.",
                                                                            "type": "object",
                                                                            "additionalProperties": false,
                                                                            "properties": {
                                                                                "type": {
                                                                                    "type": "string",
                                                                                    "const": "SequenceInterval",
                                                                                    "description": "MUST be \"SequenceInterval\""
                                                                                },
                                                                                "start": {
                                                                                    "oneOf": [
                                                                                        {
                                                                                            "description": "A simple integer value as a VRS class.",
                                                                                            "type": "object",
                                                                                            "additionalProperties": false,
                                                                                            "properties": {
                                                                                                "type": {
                                                                                                    "type": "string",
                                                                                                    "const": "Number",
                                                                                                    "description": "MUST be \"Number\""
                                                                                                },
                                                                                                "value": {
                                                                                                    "type": "integer",
                                                                                                    "description": "The value represented by Number"
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "type",
                                                                                                "value"
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                            "type": "object",
                                                                                            "additionalProperties": false,
                                                                                            "properties": {
                                                                                                "type": {
                                                                                                    "type": "string",
                                                                                                    "const": "IndefiniteRange",
                                                                                                    "description": "MUST be \"IndefiniteRange\""
                                                                                                },
                                                                                                "value": {
                                                                                                    "type": "number",
                                                                                                    "description": "The bounded value; inclusive"
                                                                                                },
                                                                                                "comparator": {
                                                                                                    "type": "string",
                                                                                                    "enum": [
                                                                                                        "<=",
                                                                                                        ">="
                                                                                                    ],
                                                                                                    "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "comparator",
                                                                                                "type",
                                                                                                "value"
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "description": "A bounded, inclusive range of numbers.",
                                                                                            "type": "object",
                                                                                            "additionalProperties": false,
                                                                                            "properties": {
                                                                                                "type": {
                                                                                                    "type": "string",
                                                                                                    "const": "DefiniteRange",
                                                                                                    "description": "MUST be \"DefiniteRange\""
                                                                                                },
                                                                                                "min": {
                                                                                                    "type": "number",
                                                                                                    "description": "The minimum value; inclusive"
                                                                                                },
                                                                                                "max": {
                                                                                                    "type": "number",
                                                                                                    "description": "The maximum value; inclusive"
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "max",
                                                                                                "min",
                                                                                                "type"
                                                                                            ]
                                                                                        }
                                                                                    ],
                                                                                    "description": "The start coordinate or range of the interval. The minimum value of this coordinate or range is 0. MUST represent a coordinate or range less than the value of `end`."
                                                                                },
                                                                                "end": {
                                                                                    "oneOf": [
                                                                                        {
                                                                                            "description": "A simple integer value as a VRS class.",
                                                                                            "type": "object",
                                                                                            "additionalProperties": false,
                                                                                            "properties": {
                                                                                                "type": {
                                                                                                    "type": "string",
                                                                                                    "const": "Number",
                                                                                                    "description": "MUST be \"Number\""
                                                                                                },
                                                                                                "value": {
                                                                                                    "type": "integer",
                                                                                                    "description": "The value represented by Number"
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "type",
                                                                                                "value"
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                            "type": "object",
                                                                                            "additionalProperties": false,
                                                                                            "properties": {
                                                                                                "type": {
                                                                                                    "type": "string",
                                                                                                    "const": "IndefiniteRange",
                                                                                                    "description": "MUST be \"IndefiniteRange\""
                                                                                                },
                                                                                                "value": {
                                                                                                    "type": "number",
                                                                                                    "description": "The bounded value; inclusive"
                                                                                                },
                                                                                                "comparator": {
                                                                                                    "type": "string",
                                                                                                    "enum": [
                                                                                                        "<=",
                                                                                                        ">="
                                                                                                    ],
                                                                                                    "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "comparator",
                                                                                                "type",
                                                                                                "value"
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "description": "A bounded, inclusive range of numbers.",
                                                                                            "type": "object",
                                                                                            "additionalProperties": false,
                                                                                            "properties": {
                                                                                                "type": {
                                                                                                    "type": "string",
                                                                                                    "const": "DefiniteRange",
                                                                                                    "description": "MUST be \"DefiniteRange\""
                                                                                                },
                                                                                                "min": {
                                                                                                    "type": "number",
                                                                                                    "description": "The minimum value; inclusive"
                                                                                                },
                                                                                                "max": {
                                                                                                    "type": "number",
                                                                                                    "description": "The maximum value; inclusive"
                                                                                                }
                                                                                            },
                                                                                            "required": [
                                                                                                "max",
                                                                                                "min",
                                                                                                "type"
                                                                                            ]
                                                                                        }
                                                                                    ],
                                                                                    "description": "The end coordinate or range of the interval. The minimum value of this coordinate or range is 0. MUST represent a coordinate or range greater than the value of `start`."
                                                                                }
                                                                            },
                                                                            "allOf": [
                                                                                {
                                                                                    "if": {
                                                                                        "properties": {
                                                                                            "start": {
                                                                                                "description": "A simple integer value as a VRS class.",
                                                                                                "type": "object",
                                                                                                "additionalProperties": false,
                                                                                                "properties": {
                                                                                                    "type": {
                                                                                                        "type": "string",
                                                                                                        "const": "Number",
                                                                                                        "description": "MUST be \"Number\""
                                                                                                    },
                                                                                                    "value": {
                                                                                                        "type": "integer",
                                                                                                        "description": "The value represented by Number"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "type",
                                                                                                    "value"
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "then": {
                                                                                        "properties": {
                                                                                            "start": {
                                                                                                "properties": {
                                                                                                    "value": {
                                                                                                        "minimum": 0
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "if": {
                                                                                        "properties": {
                                                                                            "start": {
                                                                                                "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                "type": "object",
                                                                                                "additionalProperties": false,
                                                                                                "properties": {
                                                                                                    "type": {
                                                                                                        "type": "string",
                                                                                                        "const": "IndefiniteRange",
                                                                                                        "description": "MUST be \"IndefiniteRange\""
                                                                                                    },
                                                                                                    "value": {
                                                                                                        "type": "number",
                                                                                                        "description": "The bounded value; inclusive"
                                                                                                    },
                                                                                                    "comparator": {
                                                                                                        "type": "string",
                                                                                                        "enum": [
                                                                                                            "<=",
                                                                                                            ">="
                                                                                                        ],
                                                                                                        "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "comparator",
                                                                                                    "type",
                                                                                                    "value"
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "then": {
                                                                                        "properties": {
                                                                                            "start": {
                                                                                                "properties": {
                                                                                                    "value": {
                                                                                                        "minimum": 0
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "if": {
                                                                                        "properties": {
                                                                                            "start": {
                                                                                                "description": "A bounded, inclusive range of numbers.",
                                                                                                "type": "object",
                                                                                                "additionalProperties": false,
                                                                                                "properties": {
                                                                                                    "type": {
                                                                                                        "type": "string",
                                                                                                        "const": "DefiniteRange",
                                                                                                        "description": "MUST be \"DefiniteRange\""
                                                                                                    },
                                                                                                    "min": {
                                                                                                        "type": "number",
                                                                                                        "description": "The minimum value; inclusive"
                                                                                                    },
                                                                                                    "max": {
                                                                                                        "type": "number",
                                                                                                        "description": "The maximum value; inclusive"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "max",
                                                                                                    "min",
                                                                                                    "type"
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "then": {
                                                                                        "properties": {
                                                                                            "start": {
                                                                                                "properties": {
                                                                                                    "min": {
                                                                                                        "minimum": 0
                                                                                                    },
                                                                                                    "max": {
                                                                                                        "minimum": 0
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "if": {
                                                                                        "properties": {
                                                                                            "end": {
                                                                                                "description": "A simple integer value as a VRS class.",
                                                                                                "type": "object",
                                                                                                "additionalProperties": false,
                                                                                                "properties": {
                                                                                                    "type": {
                                                                                                        "type": "string",
                                                                                                        "const": "Number",
                                                                                                        "description": "MUST be \"Number\""
                                                                                                    },
                                                                                                    "value": {
                                                                                                        "type": "integer",
                                                                                                        "description": "The value represented by Number"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "type",
                                                                                                    "value"
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "then": {
                                                                                        "properties": {
                                                                                            "end": {
                                                                                                "properties": {
                                                                                                    "value": {
                                                                                                        "minimum": 0
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "if": {
                                                                                        "properties": {
                                                                                            "end": {
                                                                                                "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                "type": "object",
                                                                                                "additionalProperties": false,
                                                                                                "properties": {
                                                                                                    "type": {
                                                                                                        "type": "string",
                                                                                                        "const": "IndefiniteRange",
                                                                                                        "description": "MUST be \"IndefiniteRange\""
                                                                                                    },
                                                                                                    "value": {
                                                                                                        "type": "number",
                                                                                                        "description": "The bounded value; inclusive"
                                                                                                    },
                                                                                                    "comparator": {
                                                                                                        "type": "string",
                                                                                                        "enum": [
                                                                                                            "<=",
                                                                                                            ">="
                                                                                                        ],
                                                                                                        "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "comparator",
                                                                                                    "type",
                                                                                                    "value"
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "then": {
                                                                                        "properties": {
                                                                                            "end": {
                                                                                                "properties": {
                                                                                                    "value": {
                                                                                                        "minimum": 0
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "if": {
                                                                                        "properties": {
                                                                                            "end": {
                                                                                                "description": "A bounded, inclusive range of numbers.",
                                                                                                "type": "object",
                                                                                                "additionalProperties": false,
                                                                                                "properties": {
                                                                                                    "type": {
                                                                                                        "type": "string",
                                                                                                        "const": "DefiniteRange",
                                                                                                        "description": "MUST be \"DefiniteRange\""
                                                                                                    },
                                                                                                    "min": {
                                                                                                        "type": "number",
                                                                                                        "description": "The minimum value; inclusive"
                                                                                                    },
                                                                                                    "max": {
                                                                                                        "type": "number",
                                                                                                        "description": "The maximum value; inclusive"
                                                                                                    }
                                                                                                },
                                                                                                "required": [
                                                                                                    "max",
                                                                                                    "min",
                                                                                                    "type"
                                                                                                ]
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "then": {
                                                                                        "properties": {
                                                                                            "end": {
                                                                                                "properties": {
                                                                                                    "min": {
                                                                                                        "minimum": 0
                                                                                                    },
                                                                                                    "max": {
                                                                                                        "minimum": 0
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "required": [
                                                                                "end",
                                                                                "start",
                                                                                "type"
                                                                            ]
                                                                        },
                                                                        {
                                                                            "deprecated": true,
                                                                            "description": "DEPRECATED: A SimpleInterval represents a span of sequence. Positions are always represented by contiguous spans using interbase coordinates. This class is deprecated. Use SequenceInterval instead.",
                                                                            "additionalProperties": false,
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "type": {
                                                                                    "type": "string",
                                                                                    "const": "SimpleInterval",
                                                                                    "description": "MUST be \"SimpleInterval\""
                                                                                },
                                                                                "start": {
                                                                                    "type": "integer",
                                                                                    "description": "The start coordinate"
                                                                                },
                                                                                "end": {
                                                                                    "type": "integer",
                                                                                    "description": "The end coordinate"
                                                                                }
                                                                            },
                                                                            "example": {
                                                                                "type": "SimpleInterval",
                                                                                "start": 11,
                                                                                "end": 22
                                                                            },
                                                                            "required": [
                                                                                "end",
                                                                                "start",
                                                                                "type"
                                                                            ]
                                                                        }
                                                                    ],
                                                                    "description": "Reference sequence region defined by a SequenceInterval."
                                                                }
                                                            },
                                                            "required": [
                                                                "interval",
                                                                "sequence_id",
                                                                "type"
                                                            ]
                                                        },
                                                        "reverse_complement": {
                                                            "type": "boolean",
                                                            "description": "A flag indicating if the expressed sequence is the reverse complement of the sequence referred to by `location`"
                                                        }
                                                    },
                                                    "required": [
                                                        "location",
                                                        "reverse_complement",
                                                        "type"
                                                    ]
                                                },
                                                {
                                                    "description": "An expression of a sequence comprised of a tandem repeating subsequence.",
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "properties": {
                                                        "type": {
                                                            "type": "string",
                                                            "const": "RepeatedSequenceExpression",
                                                            "description": "MUST be \"RepeatedSequenceExpression\""
                                                        },
                                                        "seq_expr": {
                                                            "oneOf": [
                                                                {
                                                                    "description": "An explicit expression of a Sequence.",
                                                                    "type": "object",
                                                                    "additionalProperties": false,
                                                                    "properties": {
                                                                        "type": {
                                                                            "type": "string",
                                                                            "const": "LiteralSequenceExpression",
                                                                            "description": "MUST be \"LiteralSequenceExpression\""
                                                                        },
                                                                        "sequence": {
                                                                            "additionalProperties": false,
                                                                            "description": "A character string of Residues that represents a biological sequence using the conventional sequence order (5\u2019-to-3\u2019 for nucleic acid sequences, and amino-to-carboxyl for amino acid sequences). IUPAC ambiguity codes are permitted in Sequences.",
                                                                            "type": "string",
                                                                            "pattern": "^[A-Z*\\-]*$"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "sequence",
                                                                        "type"
                                                                    ]
                                                                },
                                                                {
                                                                    "description": "An approximate expression of a sequence that is derived from a referenced sequence location. Use of this class indicates that the derived sequence is *approximately equivalent* to the reference indicated, and is typically used for describing large regions in contexts where the use of an approximate sequence is inconsequential.",
                                                                    "type": "object",
                                                                    "additionalProperties": false,
                                                                    "properties": {
                                                                        "type": {
                                                                            "type": "string",
                                                                            "const": "DerivedSequenceExpression",
                                                                            "description": "MUST be \"DerivedSequenceExpression\""
                                                                        },
                                                                        "location": {
                                                                            "additionalProperties": false,
                                                                            "description": "A Location defined by an interval on a referenced Sequence.",
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "_id": {
                                                                                    "additionalProperties": false,
                                                                                    "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                                                    "type": "string",
                                                                                    "pattern": "^\\w[^:]*:.+$",
                                                                                    "example": "ensembl:ENSG00000139618"
                                                                                },
                                                                                "type": {
                                                                                    "type": "string",
                                                                                    "const": "SequenceLocation",
                                                                                    "description": "MUST be \"SequenceLocation\""
                                                                                },
                                                                                "sequence_id": {
                                                                                    "additionalProperties": false,
                                                                                    "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                                                                    "type": "string",
                                                                                    "pattern": "^\\w[^:]*:.+$",
                                                                                    "example": "ensembl:ENSG00000139618"
                                                                                },
                                                                                "interval": {
                                                                                    "oneOf": [
                                                                                        {
                                                                                            "description": "A SequenceInterval represents a span on a Sequence. Positions are always represented by contiguous spans using interbase coordinates or coordinate ranges.",
                                                                                            "type": "object",
                                                                                            "additionalProperties": false,
                                                                                            "properties": {
                                                                                                "type": {
                                                                                                    "type": "string",
                                                                                                    "const": "SequenceInterval",
                                                                                                    "description": "MUST be \"SequenceInterval\""
                                                                                                },
                                                                                                "start": {
                                                                                                    "oneOf": [
                                                                                                        {
                                                                                                            "description": "A simple integer value as a VRS class.",
                                                                                                            "type": "object",
                                                                                                            "additionalProperties": false,
                                                                                                            "properties": {
                                                                                                                "type": {
                                                                                                                    "type": "string",
                                                                                                                    "const": "Number",
                                                                                                                    "description": "MUST be \"Number\""
                                                                                                                },
                                                                                                                "value": {
                                                                                                                    "type": "integer",
                                                                                                                    "description": "The value represented by Number"
                                                                                                                }
                                                                                                            },
                                                                                                            "required": [
                                                                                                                "type",
                                                                                                                "value"
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                            "type": "object",
                                                                                                            "additionalProperties": false,
                                                                                                            "properties": {
                                                                                                                "type": {
                                                                                                                    "type": "string",
                                                                                                                    "const": "IndefiniteRange",
                                                                                                                    "description": "MUST be \"IndefiniteRange\""
                                                                                                                },
                                                                                                                "value": {
                                                                                                                    "type": "number",
                                                                                                                    "description": "The bounded value; inclusive"
                                                                                                                },
                                                                                                                "comparator": {
                                                                                                                    "type": "string",
                                                                                                                    "enum": [
                                                                                                                        "<=",
                                                                                                                        ">="
                                                                                                                    ],
                                                                                                                    "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                }
                                                                                                            },
                                                                                                            "required": [
                                                                                                                "comparator",
                                                                                                                "type",
                                                                                                                "value"
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "description": "A bounded, inclusive range of numbers.",
                                                                                                            "type": "object",
                                                                                                            "additionalProperties": false,
                                                                                                            "properties": {
                                                                                                                "type": {
                                                                                                                    "type": "string",
                                                                                                                    "const": "DefiniteRange",
                                                                                                                    "description": "MUST be \"DefiniteRange\""
                                                                                                                },
                                                                                                                "min": {
                                                                                                                    "type": "number",
                                                                                                                    "description": "The minimum value; inclusive"
                                                                                                                },
                                                                                                                "max": {
                                                                                                                    "type": "number",
                                                                                                                    "description": "The maximum value; inclusive"
                                                                                                                }
                                                                                                            },
                                                                                                            "required": [
                                                                                                                "max",
                                                                                                                "min",
                                                                                                                "type"
                                                                                                            ]
                                                                                                        }
                                                                                                    ],
                                                                                                    "description": "The start coordinate or range of the interval. The minimum value of this coordinate or range is 0. MUST represent a coordinate or range less than the value of `end`."
                                                                                                },
                                                                                                "end": {
                                                                                                    "oneOf": [
                                                                                                        {
                                                                                                            "description": "A simple integer value as a VRS class.",
                                                                                                            "type": "object",
                                                                                                            "additionalProperties": false,
                                                                                                            "properties": {
                                                                                                                "type": {
                                                                                                                    "type": "string",
                                                                                                                    "const": "Number",
                                                                                                                    "description": "MUST be \"Number\""
                                                                                                                },
                                                                                                                "value": {
                                                                                                                    "type": "integer",
                                                                                                                    "description": "The value represented by Number"
                                                                                                                }
                                                                                                            },
                                                                                                            "required": [
                                                                                                                "type",
                                                                                                                "value"
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                            "type": "object",
                                                                                                            "additionalProperties": false,
                                                                                                            "properties": {
                                                                                                                "type": {
                                                                                                                    "type": "string",
                                                                                                                    "const": "IndefiniteRange",
                                                                                                                    "description": "MUST be \"IndefiniteRange\""
                                                                                                                },
                                                                                                                "value": {
                                                                                                                    "type": "number",
                                                                                                                    "description": "The bounded value; inclusive"
                                                                                                                },
                                                                                                                "comparator": {
                                                                                                                    "type": "string",
                                                                                                                    "enum": [
                                                                                                                        "<=",
                                                                                                                        ">="
                                                                                                                    ],
                                                                                                                    "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                }
                                                                                                            },
                                                                                                            "required": [
                                                                                                                "comparator",
                                                                                                                "type",
                                                                                                                "value"
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "description": "A bounded, inclusive range of numbers.",
                                                                                                            "type": "object",
                                                                                                            "additionalProperties": false,
                                                                                                            "properties": {
                                                                                                                "type": {
                                                                                                                    "type": "string",
                                                                                                                    "const": "DefiniteRange",
                                                                                                                    "description": "MUST be \"DefiniteRange\""
                                                                                                                },
                                                                                                                "min": {
                                                                                                                    "type": "number",
                                                                                                                    "description": "The minimum value; inclusive"
                                                                                                                },
                                                                                                                "max": {
                                                                                                                    "type": "number",
                                                                                                                    "description": "The maximum value; inclusive"
                                                                                                                }
                                                                                                            },
                                                                                                            "required": [
                                                                                                                "max",
                                                                                                                "min",
                                                                                                                "type"
                                                                                                            ]
                                                                                                        }
                                                                                                    ],
                                                                                                    "description": "The end coordinate or range of the interval. The minimum value of this coordinate or range is 0. MUST represent a coordinate or range greater than the value of `start`."
                                                                                                }
                                                                                            },
                                                                                            "allOf": [
                                                                                                {
                                                                                                    "if": {
                                                                                                        "properties": {
                                                                                                            "start": {
                                                                                                                "description": "A simple integer value as a VRS class.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": false,
                                                                                                                "properties": {
                                                                                                                    "type": {
                                                                                                                        "type": "string",
                                                                                                                        "const": "Number",
                                                                                                                        "description": "MUST be \"Number\""
                                                                                                                    },
                                                                                                                    "value": {
                                                                                                                        "type": "integer",
                                                                                                                        "description": "The value represented by Number"
                                                                                                                    }
                                                                                                                },
                                                                                                                "required": [
                                                                                                                    "type",
                                                                                                                    "value"
                                                                                                                ]
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    "then": {
                                                                                                        "properties": {
                                                                                                            "start": {
                                                                                                                "properties": {
                                                                                                                    "value": {
                                                                                                                        "minimum": 0
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "if": {
                                                                                                        "properties": {
                                                                                                            "start": {
                                                                                                                "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": false,
                                                                                                                "properties": {
                                                                                                                    "type": {
                                                                                                                        "type": "string",
                                                                                                                        "const": "IndefiniteRange",
                                                                                                                        "description": "MUST be \"IndefiniteRange\""
                                                                                                                    },
                                                                                                                    "value": {
                                                                                                                        "type": "number",
                                                                                                                        "description": "The bounded value; inclusive"
                                                                                                                    },
                                                                                                                    "comparator": {
                                                                                                                        "type": "string",
                                                                                                                        "enum": [
                                                                                                                            "<=",
                                                                                                                            ">="
                                                                                                                        ],
                                                                                                                        "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                    }
                                                                                                                },
                                                                                                                "required": [
                                                                                                                    "comparator",
                                                                                                                    "type",
                                                                                                                    "value"
                                                                                                                ]
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    "then": {
                                                                                                        "properties": {
                                                                                                            "start": {
                                                                                                                "properties": {
                                                                                                                    "value": {
                                                                                                                        "minimum": 0
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "if": {
                                                                                                        "properties": {
                                                                                                            "start": {
                                                                                                                "description": "A bounded, inclusive range of numbers.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": false,
                                                                                                                "properties": {
                                                                                                                    "type": {
                                                                                                                        "type": "string",
                                                                                                                        "const": "DefiniteRange",
                                                                                                                        "description": "MUST be \"DefiniteRange\""
                                                                                                                    },
                                                                                                                    "min": {
                                                                                                                        "type": "number",
                                                                                                                        "description": "The minimum value; inclusive"
                                                                                                                    },
                                                                                                                    "max": {
                                                                                                                        "type": "number",
                                                                                                                        "description": "The maximum value; inclusive"
                                                                                                                    }
                                                                                                                },
                                                                                                                "required": [
                                                                                                                    "max",
                                                                                                                    "min",
                                                                                                                    "type"
                                                                                                                ]
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    "then": {
                                                                                                        "properties": {
                                                                                                            "start": {
                                                                                                                "properties": {
                                                                                                                    "min": {
                                                                                                                        "minimum": 0
                                                                                                                    },
                                                                                                                    "max": {
                                                                                                                        "minimum": 0
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "if": {
                                                                                                        "properties": {
                                                                                                            "end": {
                                                                                                                "description": "A simple integer value as a VRS class.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": false,
                                                                                                                "properties": {
                                                                                                                    "type": {
                                                                                                                        "type": "string",
                                                                                                                        "const": "Number",
                                                                                                                        "description": "MUST be \"Number\""
                                                                                                                    },
                                                                                                                    "value": {
                                                                                                                        "type": "integer",
                                                                                                                        "description": "The value represented by Number"
                                                                                                                    }
                                                                                                                },
                                                                                                                "required": [
                                                                                                                    "type",
                                                                                                                    "value"
                                                                                                                ]
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    "then": {
                                                                                                        "properties": {
                                                                                                            "end": {
                                                                                                                "properties": {
                                                                                                                    "value": {
                                                                                                                        "minimum": 0
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "if": {
                                                                                                        "properties": {
                                                                                                            "end": {
                                                                                                                "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": false,
                                                                                                                "properties": {
                                                                                                                    "type": {
                                                                                                                        "type": "string",
                                                                                                                        "const": "IndefiniteRange",
                                                                                                                        "description": "MUST be \"IndefiniteRange\""
                                                                                                                    },
                                                                                                                    "value": {
                                                                                                                        "type": "number",
                                                                                                                        "description": "The bounded value; inclusive"
                                                                                                                    },
                                                                                                                    "comparator": {
                                                                                                                        "type": "string",
                                                                                                                        "enum": [
                                                                                                                            "<=",
                                                                                                                            ">="
                                                                                                                        ],
                                                                                                                        "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                                                                    }
                                                                                                                },
                                                                                                                "required": [
                                                                                                                    "comparator",
                                                                                                                    "type",
                                                                                                                    "value"
                                                                                                                ]
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    "then": {
                                                                                                        "properties": {
                                                                                                            "end": {
                                                                                                                "properties": {
                                                                                                                    "value": {
                                                                                                                        "minimum": 0
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "if": {
                                                                                                        "properties": {
                                                                                                            "end": {
                                                                                                                "description": "A bounded, inclusive range of numbers.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": false,
                                                                                                                "properties": {
                                                                                                                    "type": {
                                                                                                                        "type": "string",
                                                                                                                        "const": "DefiniteRange",
                                                                                                                        "description": "MUST be \"DefiniteRange\""
                                                                                                                    },
                                                                                                                    "min": {
                                                                                                                        "type": "number",
                                                                                                                        "description": "The minimum value; inclusive"
                                                                                                                    },
                                                                                                                    "max": {
                                                                                                                        "type": "number",
                                                                                                                        "description": "The maximum value; inclusive"
                                                                                                                    }
                                                                                                                },
                                                                                                                "required": [
                                                                                                                    "max",
                                                                                                                    "min",
                                                                                                                    "type"
                                                                                                                ]
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    "then": {
                                                                                                        "properties": {
                                                                                                            "end": {
                                                                                                                "properties": {
                                                                                                                    "min": {
                                                                                                                        "minimum": 0
                                                                                                                    },
                                                                                                                    "max": {
                                                                                                                        "minimum": 0
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            ],
                                                                                            "required": [
                                                                                                "end",
                                                                                                "start",
                                                                                                "type"
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "deprecated": true,
                                                                                            "description": "DEPRECATED: A SimpleInterval represents a span of sequence. Positions are always represented by contiguous spans using interbase coordinates. This class is deprecated. Use SequenceInterval instead.",
                                                                                            "additionalProperties": false,
                                                                                            "type": "object",
                                                                                            "properties": {
                                                                                                "type": {
                                                                                                    "type": "string",
                                                                                                    "const": "SimpleInterval",
                                                                                                    "description": "MUST be \"SimpleInterval\""
                                                                                                },
                                                                                                "start": {
                                                                                                    "type": "integer",
                                                                                                    "description": "The start coordinate"
                                                                                                },
                                                                                                "end": {
                                                                                                    "type": "integer",
                                                                                                    "description": "The end coordinate"
                                                                                                }
                                                                                            },
                                                                                            "example": {
                                                                                                "type": "SimpleInterval",
                                                                                                "start": 11,
                                                                                                "end": 22
                                                                                            },
                                                                                            "required": [
                                                                                                "end",
                                                                                                "start",
                                                                                                "type"
                                                                                            ]
                                                                                        }
                                                                                    ],
                                                                                    "description": "Reference sequence region defined by a SequenceInterval."
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "interval",
                                                                                "sequence_id",
                                                                                "type"
                                                                            ]
                                                                        },
                                                                        "reverse_complement": {
                                                                            "type": "boolean",
                                                                            "description": "A flag indicating if the expressed sequence is the reverse complement of the sequence referred to by `location`"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "location",
                                                                        "reverse_complement",
                                                                        "type"
                                                                    ]
                                                                }
                                                            ],
                                                            "description": "An expression of the repeating subsequence"
                                                        },
                                                        "count": {
                                                            "oneOf": [
                                                                {
                                                                    "description": "A simple integer value as a VRS class.",
                                                                    "type": "object",
                                                                    "additionalProperties": false,
                                                                    "properties": {
                                                                        "type": {
                                                                            "type": "string",
                                                                            "const": "Number",
                                                                            "description": "MUST be \"Number\""
                                                                        },
                                                                        "value": {
                                                                            "type": "integer",
                                                                            "description": "The value represented by Number"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "type",
                                                                        "value"
                                                                    ]
                                                                },
                                                                {
                                                                    "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                    "type": "object",
                                                                    "additionalProperties": false,
                                                                    "properties": {
                                                                        "type": {
                                                                            "type": "string",
                                                                            "const": "IndefiniteRange",
                                                                            "description": "MUST be \"IndefiniteRange\""
                                                                        },
                                                                        "value": {
                                                                            "type": "number",
                                                                            "description": "The bounded value; inclusive"
                                                                        },
                                                                        "comparator": {
                                                                            "type": "string",
                                                                            "enum": [
                                                                                "<=",
                                                                                ">="
                                                                            ],
                                                                            "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "comparator",
                                                                        "type",
                                                                        "value"
                                                                    ]
                                                                },
                                                                {
                                                                    "description": "A bounded, inclusive range of numbers.",
                                                                    "type": "object",
                                                                    "additionalProperties": false,
                                                                    "properties": {
                                                                        "type": {
                                                                            "type": "string",
                                                                            "const": "DefiniteRange",
                                                                            "description": "MUST be \"DefiniteRange\""
                                                                        },
                                                                        "min": {
                                                                            "type": "number",
                                                                            "description": "The minimum value; inclusive"
                                                                        },
                                                                        "max": {
                                                                            "type": "number",
                                                                            "description": "The maximum value; inclusive"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "max",
                                                                        "min",
                                                                        "type"
                                                                    ]
                                                                }
                                                            ],
                                                            "description": "The count of repeated units, as an integer or inclusive range"
                                                        }
                                                    },
                                                    "allOf": [
                                                        {
                                                            "if": {
                                                                "properties": {
                                                                    "count": {
                                                                        "description": "A simple integer value as a VRS class.",
                                                                        "type": "object",
                                                                        "additionalProperties": false,
                                                                        "properties": {
                                                                            "type": {
                                                                                "type": "string",
                                                                                "const": "Number",
                                                                                "description": "MUST be \"Number\""
                                                                            },
                                                                            "value": {
                                                                                "type": "integer",
                                                                                "description": "The value represented by Number"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "type",
                                                                            "value"
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            "then": {
                                                                "properties": {
                                                                    "count": {
                                                                        "properties": {
                                                                            "value": {
                                                                                "minimum": 0
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "if": {
                                                                "properties": {
                                                                    "count": {
                                                                        "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                        "type": "object",
                                                                        "additionalProperties": false,
                                                                        "properties": {
                                                                            "type": {
                                                                                "type": "string",
                                                                                "const": "IndefiniteRange",
                                                                                "description": "MUST be \"IndefiniteRange\""
                                                                            },
                                                                            "value": {
                                                                                "type": "number",
                                                                                "description": "The bounded value; inclusive"
                                                                            },
                                                                            "comparator": {
                                                                                "type": "string",
                                                                                "enum": [
                                                                                    "<=",
                                                                                    ">="
                                                                                ],
                                                                                "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "comparator",
                                                                            "type",
                                                                            "value"
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            "then": {
                                                                "properties": {
                                                                    "count": {
                                                                        "properties": {
                                                                            "value": {
                                                                                "minimum": 0
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "if": {
                                                                "properties": {
                                                                    "count": {
                                                                        "description": "A bounded, inclusive range of numbers.",
                                                                        "type": "object",
                                                                        "additionalProperties": false,
                                                                        "properties": {
                                                                            "type": {
                                                                                "type": "string",
                                                                                "const": "DefiniteRange",
                                                                                "description": "MUST be \"DefiniteRange\""
                                                                            },
                                                                            "min": {
                                                                                "type": "number",
                                                                                "description": "The minimum value; inclusive"
                                                                            },
                                                                            "max": {
                                                                                "type": "number",
                                                                                "description": "The maximum value; inclusive"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "max",
                                                                            "min",
                                                                            "type"
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            "then": {
                                                                "properties": {
                                                                    "count": {
                                                                        "properties": {
                                                                            "min": {
                                                                                "minimum": 0
                                                                            },
                                                                            "max": {
                                                                                "minimum": 0
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "required": [
                                                        "count",
                                                        "seq_expr",
                                                        "type"
                                                    ]
                                                }
                                            ],
                                            "discriminator": {
                                                "propertyName": "type"
                                            }
                                        },
                                        {
                                            "additionalProperties": false,
                                            "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                            "type": "string",
                                            "pattern": "^\\w[^:]*:.+$",
                                            "example": "ensembl:ENSG00000139618"
                                        }
                                    ],
                                    "description": "Subject of the Copy Number object"
                                },
                                "copies": {
                                    "oneOf": [
                                        {
                                            "description": "A simple integer value as a VRS class.",
                                            "type": "object",
                                            "additionalProperties": false,
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "const": "Number",
                                                    "description": "MUST be \"Number\""
                                                },
                                                "value": {
                                                    "type": "integer",
                                                    "description": "The value represented by Number"
                                                }
                                            },
                                            "required": [
                                                "type",
                                                "value"
                                            ]
                                        },
                                        {
                                            "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                            "type": "object",
                                            "additionalProperties": false,
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "const": "IndefiniteRange",
                                                    "description": "MUST be \"IndefiniteRange\""
                                                },
                                                "value": {
                                                    "type": "number",
                                                    "description": "The bounded value; inclusive"
                                                },
                                                "comparator": {
                                                    "type": "string",
                                                    "enum": [
                                                        "<=",
                                                        ">="
                                                    ],
                                                    "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                }
                                            },
                                            "required": [
                                                "comparator",
                                                "type",
                                                "value"
                                            ]
                                        },
                                        {
                                            "description": "A bounded, inclusive range of numbers.",
                                            "type": "object",
                                            "additionalProperties": false,
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "const": "DefiniteRange",
                                                    "description": "MUST be \"DefiniteRange\""
                                                },
                                                "min": {
                                                    "type": "number",
                                                    "description": "The minimum value; inclusive"
                                                },
                                                "max": {
                                                    "type": "number",
                                                    "description": "The maximum value; inclusive"
                                                }
                                            },
                                            "required": [
                                                "max",
                                                "min",
                                                "type"
                                            ]
                                        }
                                    ],
                                    "description": "The integral number of copies of the subject in a system"
                                }
                            },
                            "allOf": [
                                {
                                    "if": {
                                        "properties": {
                                            "copies": {
                                                "description": "A simple integer value as a VRS class.",
                                                "type": "object",
                                                "additionalProperties": false,
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "const": "Number",
                                                        "description": "MUST be \"Number\""
                                                    },
                                                    "value": {
                                                        "type": "integer",
                                                        "description": "The value represented by Number"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "value"
                                                ]
                                            }
                                        }
                                    },
                                    "then": {
                                        "properties": {
                                            "copies": {
                                                "properties": {
                                                    "value": {
                                                        "minimum": 0
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "copies": {
                                                "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                "type": "object",
                                                "additionalProperties": false,
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "const": "IndefiniteRange",
                                                        "description": "MUST be \"IndefiniteRange\""
                                                    },
                                                    "value": {
                                                        "type": "number",
                                                        "description": "The bounded value; inclusive"
                                                    },
                                                    "comparator": {
                                                        "type": "string",
                                                        "enum": [
                                                            "<=",
                                                            ">="
                                                        ],
                                                        "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                    }
                                                },
                                                "required": [
                                                    "comparator",
                                                    "type",
                                                    "value"
                                                ]
                                            }
                                        }
                                    },
                                    "then": {
                                        "properties": {
                                            "copies": {
                                                "properties": {
                                                    "value": {
                                                        "minimum": 0
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "copies": {
                                                "description": "A bounded, inclusive range of numbers.",
                                                "type": "object",
                                                "additionalProperties": false,
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "const": "DefiniteRange",
                                                        "description": "MUST be \"DefiniteRange\""
                                                    },
                                                    "min": {
                                                        "type": "number",
                                                        "description": "The minimum value; inclusive"
                                                    },
                                                    "max": {
                                                        "type": "number",
                                                        "description": "The maximum value; inclusive"
                                                    }
                                                },
                                                "required": [
                                                    "max",
                                                    "min",
                                                    "type"
                                                ]
                                            }
                                        }
                                    },
                                    "then": {
                                        "properties": {
                                            "copies": {
                                                "properties": {
                                                    "min": {
                                                        "minimum": 0
                                                    },
                                                    "max": {
                                                        "minimum": 0
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ],
                            "required": [
                                "copies",
                                "subject",
                                "type"
                            ]
                        }
                    ],
                    "discriminator": {
                        "propertyName": "type"
                    }
                },
                {
                    "properties": {
                        "alternateBases": {
                            "description": "Alternate bases for this variant (starting from `start`). * Accepted values: IUPAC codes for nucleotides (e.g. `https://www.bioinformatics.org/sms/iupac.html`). N is a wildcard, that denotes the position of any base, and can beused as a standalone base of any type or within a partially knownsequence. As example, a query of `ANNT` the Ns can take take any form of[ACGT] and will match `ANNT`, `ACNT`, `ACCT`, `ACGT` ... and so forth.* an *empty value* is used in the case of deletions with the maximally trimmed, deleted sequence being indicated in `ReferenceBases`* Categorical variant queries, e.g. such *not* being represented through sequence & position, make use of the `variantType` parameter. * Either `alternateBases` or `variantType` is required.",
                            "examples": [
                                "T",
                                "G",
                                "N",
                                "AG",
                                ""
                            ],
                            "pattern": "^([ACGTUNRYSWKMBDHV\\-\\.]*)$",
                            "type": "string"
                        },
                        "location": {
                            "description": "A contiguous segment of a biological sequence.",
                            "oneOf": [
                                {
                                    "additionalProperties": false,
                                    "description": "A Location on a chromosome defined by a species and chromosome name.",
                                    "type": "object",
                                    "properties": {
                                        "_id": {
                                            "additionalProperties": false,
                                            "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                            "type": "string",
                                            "pattern": "^\\w[^:]*:.+$",
                                            "example": "ensembl:ENSG00000139618"
                                        },
                                        "type": {
                                            "type": "string",
                                            "const": "ChromosomeLocation",
                                            "default": "ChromosomeLocation",
                                            "description": "MUST be \"ChromosomeLocation\""
                                        },
                                        "species_id": {
                                            "additionalProperties": false,
                                            "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                            "type": "string",
                                            "pattern": "^\\w[^:]*:.+$",
                                            "example": "ensembl:ENSG00000139618"
                                        },
                                        "chr": {
                                            "type": "string",
                                            "description": "The symbolic chromosome name. For humans, For humans, chromosome names MUST be one of 1..22, X, Y (case-sensitive)"
                                        },
                                        "interval": {
                                            "description": "A contiguous span on a chromosome defined by cytoband features. The span includes the constituent regions described by the start and end cytobands, as well as any intervening regions.",
                                            "type": "object",
                                            "additionalProperties": false,
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "const": "CytobandInterval",
                                                    "default": "CytobandInterval",
                                                    "description": "MUST be \"CytobandInterval\""
                                                },
                                                "start": {
                                                    "additionalProperties": false,
                                                    "description": "A character string representing cytobands derived from the *International System for Human Cytogenomic Nomenclature* (ISCN) [guidelines](http://doi.org/10.1159/isbn.978-3-318-06861-0).",
                                                    "type": "string",
                                                    "pattern": "^cen|[pq](ter|([1-9][0-9]*(\\.[1-9][0-9]*)?))$",
                                                    "example": "q22.3"
                                                },
                                                "end": {
                                                    "additionalProperties": false,
                                                    "description": "A character string representing cytobands derived from the *International System for Human Cytogenomic Nomenclature* (ISCN) [guidelines](http://doi.org/10.1159/isbn.978-3-318-06861-0).",
                                                    "type": "string",
                                                    "pattern": "^cen|[pq](ter|([1-9][0-9]*(\\.[1-9][0-9]*)?))$",
                                                    "example": "q22.3"
                                                }
                                            },
                                            "example": {
                                                "type": "CytobandInterval",
                                                "start": "q22.2",
                                                "end": "q22.3"
                                            },
                                            "required": [
                                                "end",
                                                "start",
                                                "type"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "chr",
                                        "interval",
                                        "species_id",
                                        "type"
                                    ]
                                },
                                {
                                    "additionalProperties": false,
                                    "description": "A Location defined by an interval on a referenced Sequence.",
                                    "type": "object",
                                    "properties": {
                                        "_id": {
                                            "additionalProperties": false,
                                            "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                            "type": "string",
                                            "pattern": "^\\w[^:]*:.+$",
                                            "example": "ensembl:ENSG00000139618"
                                        },
                                        "type": {
                                            "type": "string",
                                            "const": "SequenceLocation",
                                            "default": "SequenceLocation",
                                            "description": "MUST be \"SequenceLocation\""
                                        },
                                        "sequence_id": {
                                            "additionalProperties": false,
                                            "description": "A [W3C Compact URI](https://www.w3.org/TR/curie/) formatted string. A CURIE string has the structure ``prefix``:``reference``, as defined by the W3C syntax.",
                                            "type": "string",
                                            "pattern": "^\\w[^:]*:.+$",
                                            "example": "ensembl:ENSG00000139618"
                                        },
                                        "interval": {
                                            "oneOf": [
                                                {
                                                    "description": "A SequenceInterval represents a span on a Sequence. Positions are always represented by contiguous spans using interbase coordinates or coordinate ranges.",
                                                    "type": "object",
                                                    "additionalProperties": false,
                                                    "properties": {
                                                        "type": {
                                                            "type": "string",
                                                            "const": "SequenceInterval",
                                                            "default": "SequenceInterval",
                                                            "description": "MUST be \"SequenceInterval\""
                                                        },
                                                        "start": {
                                                            "oneOf": [
                                                                {
                                                                    "description": "A simple integer value as a VRS class.",
                                                                    "type": "object",
                                                                    "additionalProperties": false,
                                                                    "properties": {
                                                                        "type": {
                                                                            "type": "string",
                                                                            "const": "Number",
                                                                            "default": "Number",
                                                                            "description": "MUST be \"Number\""
                                                                        },
                                                                        "value": {
                                                                            "type": "integer",
                                                                            "description": "The value represented by Number"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "type",
                                                                        "value"
                                                                    ]
                                                                },
                                                                {
                                                                    "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                    "type": "object",
                                                                    "additionalProperties": false,
                                                                    "properties": {
                                                                        "type": {
                                                                            "type": "string",
                                                                            "const": "IndefiniteRange",
                                                                            "default": "IndefiniteRange",
                                                                            "description": "MUST be \"IndefiniteRange\""
                                                                        },
                                                                        "value": {
                                                                            "type": "number",
                                                                            "description": "The bounded value; inclusive"
                                                                        },
                                                                        "comparator": {
                                                                            "type": "string",
                                                                            "enum": [
                                                                                "<=",
                                                                                ">="
                                                                            ],
                                                                            "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "comparator",
                                                                        "type",
                                                                        "value"
                                                                    ]
                                                                },
                                                                {
                                                                    "description": "A bounded, inclusive range of numbers.",
                                                                    "type": "object",
                                                                    "additionalProperties": false,
                                                                    "properties": {
                                                                        "type": {
                                                                            "type": "string",
                                                                            "const": "DefiniteRange",
                                                                            "default": "DefiniteRange",
                                                                            "description": "MUST be \"DefiniteRange\""
                                                                        },
                                                                        "min": {
                                                                            "type": "number",
                                                                            "description": "The minimum value; inclusive"
                                                                        },
                                                                        "max": {
                                                                            "type": "number",
                                                                            "description": "The maximum value; inclusive"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "max",
                                                                        "min",
                                                                        "type"
                                                                    ]
                                                                }
                                                            ],
                                                            "description": "The start coordinate or range of the interval. The minimum value of this coordinate or range is 0. MUST represent a coordinate or range less than the value of `end`."
                                                        },
                                                        "end": {
                                                            "oneOf": [
                                                                {
                                                                    "description": "A simple integer value as a VRS class.",
                                                                    "type": "object",
                                                                    "additionalProperties": false,
                                                                    "properties": {
                                                                        "type": {
                                                                            "type": "string",
                                                                            "const": "Number",
                                                                            "default": "Number",
                                                                            "description": "MUST be \"Number\""
                                                                        },
                                                                        "value": {
                                                                            "type": "integer",
                                                                            "description": "The value represented by Number"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "type",
                                                                        "value"
                                                                    ]
                                                                },
                                                                {
                                                                    "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                    "type": "object",
                                                                    "additionalProperties": false,
                                                                    "properties": {
                                                                        "type": {
                                                                            "type": "string",
                                                                            "const": "IndefiniteRange",
                                                                            "default": "IndefiniteRange",
                                                                            "description": "MUST be \"IndefiniteRange\""
                                                                        },
                                                                        "value": {
                                                                            "type": "number",
                                                                            "description": "The bounded value; inclusive"
                                                                        },
                                                                        "comparator": {
                                                                            "type": "string",
                                                                            "enum": [
                                                                                "<=",
                                                                                ">="
                                                                            ],
                                                                            "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "comparator",
                                                                        "type",
                                                                        "value"
                                                                    ]
                                                                },
                                                                {
                                                                    "description": "A bounded, inclusive range of numbers.",
                                                                    "type": "object",
                                                                    "additionalProperties": false,
                                                                    "properties": {
                                                                        "type": {
                                                                            "type": "string",
                                                                            "const": "DefiniteRange",
                                                                            "default": "DefiniteRange",
                                                                            "description": "MUST be \"DefiniteRange\""
                                                                        },
                                                                        "min": {
                                                                            "type": "number",
                                                                            "description": "The minimum value; inclusive"
                                                                        },
                                                                        "max": {
                                                                            "type": "number",
                                                                            "description": "The maximum value; inclusive"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "max",
                                                                        "min",
                                                                        "type"
                                                                    ]
                                                                }
                                                            ],
                                                            "description": "The end coordinate or range of the interval. The minimum value of this coordinate or range is 0. MUST represent a coordinate or range greater than the value of `start`."
                                                        }
                                                    },
                                                    "allOf": [
                                                        {
                                                            "if": {
                                                                "properties": {
                                                                    "start": {
                                                                        "description": "A simple integer value as a VRS class.",
                                                                        "type": "object",
                                                                        "additionalProperties": false,
                                                                        "properties": {
                                                                            "type": {
                                                                                "type": "string",
                                                                                "const": "Number",
                                                                                "default": "Number",
                                                                                "description": "MUST be \"Number\""
                                                                            },
                                                                            "value": {
                                                                                "type": "integer",
                                                                                "description": "The value represented by Number"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "type",
                                                                            "value"
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            "then": {
                                                                "properties": {
                                                                    "start": {
                                                                        "properties": {
                                                                            "value": {
                                                                                "minimum": 0
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "if": {
                                                                "properties": {
                                                                    "start": {
                                                                        "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                        "type": "object",
                                                                        "additionalProperties": false,
                                                                        "properties": {
                                                                            "type": {
                                                                                "type": "string",
                                                                                "const": "IndefiniteRange",
                                                                                "default": "IndefiniteRange",
                                                                                "description": "MUST be \"IndefiniteRange\""
                                                                            },
                                                                            "value": {
                                                                                "type": "number",
                                                                                "description": "The bounded value; inclusive"
                                                                            },
                                                                            "comparator": {
                                                                                "type": "string",
                                                                                "enum": [
                                                                                    "<=",
                                                                                    ">="
                                                                                ],
                                                                                "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "comparator",
                                                                            "type",
                                                                            "value"
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            "then": {
                                                                "properties": {
                                                                    "start": {
                                                                        "properties": {
                                                                            "value": {
                                                                                "minimum": 0
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "if": {
                                                                "properties": {
                                                                    "start": {
                                                                        "description": "A bounded, inclusive range of numbers.",
                                                                        "type": "object",
                                                                        "additionalProperties": false,
                                                                        "properties": {
                                                                            "type": {
                                                                                "type": "string",
                                                                                "const": "DefiniteRange",
                                                                                "default": "DefiniteRange",
                                                                                "description": "MUST be \"DefiniteRange\""
                                                                            },
                                                                            "min": {
                                                                                "type": "number",
                                                                                "description": "The minimum value; inclusive"
                                                                            },
                                                                            "max": {
                                                                                "type": "number",
                                                                                "description": "The maximum value; inclusive"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "max",
                                                                            "min",
                                                                            "type"
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            "then": {
                                                                "properties": {
                                                                    "start": {
                                                                        "properties": {
                                                                            "min": {
                                                                                "minimum": 0
                                                                            },
                                                                            "max": {
                                                                                "minimum": 0
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "if": {
                                                                "properties": {
                                                                    "end": {
                                                                        "description": "A simple integer value as a VRS class.",
                                                                        "type": "object",
                                                                        "additionalProperties": false,
                                                                        "properties": {
                                                                            "type": {
                                                                                "type": "string",
                                                                                "const": "Number",
                                                                                "default": "Number",
                                                                                "description": "MUST be \"Number\""
                                                                            },
                                                                            "value": {
                                                                                "type": "integer",
                                                                                "description": "The value represented by Number"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "type",
                                                                            "value"
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            "then": {
                                                                "properties": {
                                                                    "end": {
                                                                        "properties": {
                                                                            "value": {
                                                                                "minimum": 0
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "if": {
                                                                "properties": {
                                                                    "end": {
                                                                        "description": "A half-bounded range of numbers represented as a number bound and associated comparator. The bound operator is interpreted as follows: '>=' are all numbers greater than and including `value`, '<=' are all numbers less than and including `value`.",
                                                                        "type": "object",
                                                                        "additionalProperties": false,
                                                                        "properties": {
                                                                            "type": {
                                                                                "type": "string",
                                                                                "const": "IndefiniteRange",
                                                                                "default": "IndefiniteRange",
                                                                                "description": "MUST be \"IndefiniteRange\""
                                                                            },
                                                                            "value": {
                                                                                "type": "number",
                                                                                "description": "The bounded value; inclusive"
                                                                            },
                                                                            "comparator": {
                                                                                "type": "string",
                                                                                "enum": [
                                                                                    "<=",
                                                                                    ">="
                                                                                ],
                                                                                "description": "MUST be one of \"<=\" or \">=\", indicating which direction the range is indefinite"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "comparator",
                                                                            "type",
                                                                            "value"
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            "then": {
                                                                "properties": {
                                                                    "end": {
                                                                        "properties": {
                                                                            "value": {
                                                                                "minimum": 0
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "if": {
                                                                "properties": {
                                                                    "end": {
                                                                        "description": "A bounded, inclusive range of numbers.",
                                                                        "type": "object",
                                                                        "additionalProperties": false,
                                                                        "properties": {
                                                                            "type": {
                                                                                "type": "string",
                                                                                "const": "DefiniteRange",
                                                                                "default": "DefiniteRange",
                                                                                "description": "MUST be \"DefiniteRange\""
                                                                            },
                                                                            "min": {
                                                                                "type": "number",
                                                                                "description": "The minimum value; inclusive"
                                                                            },
                                                                            "max": {
                                                                                "type": "number",
                                                                                "description": "The maximum value; inclusive"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "max",
                                                                            "min",
                                                                            "type"
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            "then": {
                                                                "properties": {
                                                                    "end": {
                                                                        "properties": {
                                                                            "min": {
                                                                                "minimum": 0
                                                                            },
                                                                            "max": {
                                                                                "minimum": 0
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "required": [
                                                        "end",
                                                        "start",
                                                        "type"
                                                    ]
                                                },
                                                {
                                                    "deprecated": true,
                                                    "description": "DEPRECATED: A SimpleInterval represents a span of sequence. Positions are always represented by contiguous spans using interbase coordinates. This class is deprecated. Use SequenceInterval instead.",
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "properties": {
                                                        "type": {
                                                            "type": "string",
                                                            "const": "SimpleInterval",
                                                            "default": "SimpleInterval",
                                                            "description": "MUST be \"SimpleInterval\""
                                                        },
                                                        "start": {
                                                            "type": "integer",
                                                            "description": "The start coordinate"
                                                        },
                                                        "end": {
                                                            "type": "integer",
                                                            "description": "The end coordinate"
                                                        }
                                                    },
                                                    "example": {
                                                        "type": "SimpleInterval",
                                                        "start": 11,
                                                        "end": 22
                                                    },
                                                    "required": [
                                                        "end",
                                                        "start",
                                                        "type"
                                                    ]
                                                }
                                            ],
                                            "description": "Reference sequence region defined by a SequenceInterval."
                                        }
                                    },
                                    "required": [
                                        "interval",
                                        "sequence_id",
                                        "type"
                                    ]
                                }
                            ],
                            "discriminator": {
                                "propertyName": "type"
                            }
                        },
                        "referenceBases": {
                            "description": "Reference bases for this variant (starting from `start`). * Accepted values: IUPAC codes for nucleotides (e.g. `https://www.bioinformatics.org/sms/iupac.html`). N is a wildcard, that denotes the position of any base, and can be used as a standalone base of any type or within a partially known sequence. As example, a query of `ANNT` the Ns can take take any form of `[ACGT]` and will match `ANNT`, `ACNT`, `ACCT`, `ACGT` ... and so forth. * an *empty value* is used in the case of insertions with the maximally trimmed, inserted sequence being indicated in `AlternateBases`. NOTE: Many Beacon instances could not support UIPAC codes and it is not mandatory for them to do so. In such cases the use of [ACGTN] is mandated.",
                            "examples": [
                                "A",
                                "T",
                                "N",
                                "",
                                "ACG"
                            ],
                            "pattern": "^([ACGTUNRYSWKMBDHV\\-\\.]*)$",
                            "type": "string"
                        },
                        "variantType": {
                            "default": "SNP",
                            "description": "The `variantType` declares the nature of the variation in relation to a reference. In a response, it is used to describe the variation. In a request, it is used to declare the type of event the Beacon client is looking for. If in queries variants can not be defined through a sequence of one or more bases (`precise` variants) it can be used standalone (i.e. without `alternateBases`) together with positional parameters. Examples here are e.g. queries for structural variants such as `DUP` (increased allelic count of material from the genomic region  between `start` and `end` positions without assumption about the placement of the additional sequence) or `DEL` (deletion of sequence following `start`). Either `alternateBases` or `variantType` is required, with the exception of range queries (single `start` and `end` parameters).",
                            "examples": [
                                "SNP",
                                "DEL",
                                "DUP",
                                "BND"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "variantType",
                        "alternateBases",
                        "location"
                    ],
                    "type": "object"
                }
            ]
        }
    },
    "required": [
        "variantInternalId",
        "variation"
    ],
    "title": "Genomic Variation",
    "type": "object"
}