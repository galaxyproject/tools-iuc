<tool id='usher' name='Usher' version='@TOOL_VERSION@+@GALAXY_TOOL_VERSION@' profile='20.01'>
    <description>ultrafast sample placement on existing trees</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro='edam_ontology' />
    <expand macro='requirements' />
    <version_command>usher --version</version_command>
    <command detect_errors='exit_code'><![CDATA[
        usher
        -v '${vcf}'
        #if $tree
            -t '${tree}'
        #end if
        #if $load_mutation_annotation
            -i '${load_mutation_annotation}'
        #end if
        $output_options.save_mutation_annotation
        $sort_mode
        $collapse_options.collapse_tree
        $collapse_options.collapse_output_tree
        #if $max_uncertainly
            -e $max_uncertainly
        #end if
        $output_options.write_uncondensed
        #if $output_options.write_subtrees
            -k $output_options.write_subtrees
        #end if
        #if $output_options.write_single
            -K $output_options.write_single
        #end if
        $output_options.write_parsimony
        #if $output_options.multiple_placements
            -M $output_options.multiple_placements
        #end if
        #if $retain_input_branch
            $retain_input_branch
        #end if
        -T \${GALAXY_SLOTS:-1}
        -d ./
        #if $output_options.write_subtrees
            && mkdir -p out_subtrees out_subtrees_expanded out_subtrees_mutations
            && mv subtree*expanded.txt ./out_subtrees_expanded
            && mv subtree*mutations.txt ./out_subtrees_mutations
            && mv subtree*.nh ./out_subtrees
        #end if
    ]]>    </command>
    <inputs>
        <param name="vcf" type="data" format="vcf,vcf.gz" label="VCF file" help="Input VCF file."/>
        <param name="tree" type="data" format="newick" optional="True" label="Tree file" help="Input tree file in Newick format."/>
        <param name="load_mutation_annotation" type="data" format="protobuf3" optional="True" label="Mutation-annotated tree object" help=" UShER uses protocol buffers to store in a file, the Newick string corresponding to the input tree and a list of lists of node mutation, which we refer to as mutation-annotated tree object."/>
        <param name="sort_mode" type="select" label="Mode of sorting new samples">
            <option value="">Default sorting</option>
            <option value="--sort-before-placement-1">Sort based on computed parsimony score and then number of optimal placements before the actual placement (-s)</option>
            <option value="--sort-before-placement-1 --reverse-sort">Sort based on computed parsimony score and then number of optimal placements before the actual placement [reversed] (-s -r)</option>
            <option value="--sort-before-placement-2">Sort based on the number of optimal placements and then the parsimony score before the actual placement (-S)</option>
            <option value="--sort-before-placement-2 --reverse-sort">Sort based on the number of optimal placements and then the parsimony score before the actual placement [reversed] (-S -r)</option>
            <option value="--sort-before-placement-3">Sort based on the number of ambiguous bases (-A)</option>
        </param>
        <param name="max_uncertainly" argument="--max-uncertainty-per-sample" type="integer" optional="True" min="0" max="10000000" value="" label="Maximum number of equally parsimonious placements" help="Maximum number of equally parsimonious placements allowed per sample beyond which the sample is ignored." />
        <param name="retain_input_branch" argument="--retain-input-branch-lengths" type="boolean" truevalue="--retain-input-branch-lengths" falsevalue="" label="Retain the branch lengths" help="Retain the branch lengths from the input tree in out newick files instead of using number of mutations for the branch lengths." />
        <section name="collapse_options" title="Collapse options" expanded="True">
            <param name="collapse_tree" argument="--collapse-tree" type="boolean" truevalue="--collapse-tree" falsevalue="" label="Collapse internal nodes of the input tree" help="Collapse internal nodes of the input tree with no mutations and condense identical sequences in polytomies into a single node and the save the tree to file condensed-tree.nh in outdir." />
            <param name="collapse_output_tree" argument="--collapse-output-tree" type="boolean" truevalue="--collapse-output-tree" falsevalue="" label="Collapse internal nodes of the output tree" help="Collapse internal nodes of the output tree with no mutations before the saving the tree to file final-tree.nh in outdir." />
        </section>
        <section name="output_options" title="Output tree options" expanded="True">
            <param name="save_mutation_annotation" argument="--save-mutation-annotated-tree" type="boolean" truevalue="--save-mutation-annotated-tree annotated-tree.pb" falsevalue="" label="Save the new mutation-annotated tree object" help="Save output mutation-annotated tree object to the file new_global_assignments.pb." />
            <param name="write_uncondensed" argument="--write-uncondensed-final-tree" type="boolean" truevalue="--write-uncondensed-final-tree" falsevalue="" label="Uncondensed final tree" help="Write the final tree in uncondensed format and save to file uncondensed-final-tree.nh in outdir." />
            <param name="write_subtrees" argument="--write-subtrees-size" type="integer" optional="True" min="0" max="100" value="" label="Subtrees size" help="Write minimum set of subtrees covering the newly added samples of size equal to this value." />
            <param name="write_single" argument="--write-single-subtree" type="integer" optional="True" min="0" max="100" value="" label="Single subtree size" help="Similar to write-subtrees-size but produces a single subtree with all newly added samples along with random samples up to the value specified by this argument." />
            <param name="write_parsimony" argument="--write-parsimony-scores-per-node" type="boolean" truevalue="--write-parsimony-scores-per-node" falsevalue="" label="Write parsimony scores per node" help="Write the parsimony scores for adding new samples at each existing node in the tree without modifying the tree in a file names parsimony-scores.tsv in outdir." />
            <param name="multiple_placements" argument="--multiple-placements" type="integer" optional="True" min="0" max="100" value="" label="Multiple placements" help="Create a new tree up to this limit for each possibility of parsimony-optimal placement." />
        </section>
    </inputs>
    <outputs>
        <data name="annotated_tree" format="protobuf3" from_work_dir="annotated-tree.pb" label="${tool.name} on ${on_string}: mutation annotated tree">
            <filter>output_options['save_mutation_annotation'] is True</filter>
        </data> 
        <data name="condensed_tree" format="newick" from_work_dir="condensed-tree.nh" label="${tool.name} on ${on_string}: condensed tree">
            <filter>collapse_options['collapse_tree'] is True</filter>
        </data>
        <data name="final_tree" format="newick" from_work_dir="final-tree.nh" label="${tool.name} on ${on_string}: final tree">
            <filter>output_options['write_uncondensed'] is False and output_options['write_parsimony'] is False</filter>
        </data>
        <data name="uncondensed_tree" format="newick" from_work_dir="uncondensed-final-tree.nh" label="${tool.name} on ${on_string}: uncondensed tree">
            <filter>output_options['write_uncondensed'] is True</filter>
        </data>
        <data name="mutation_paths" format="txt" from_work_dir="mutation-paths.txt" label="${tool.name} on ${on_string}: mutation paths">
            <filter>output_options['save_mutation_annotation'] is False and output_options['write_parsimony'] is False</filter>        
        </data>
        <data name="clades" format="txt" from_work_dir="clades.txt" label="${tool.name} on ${on_string}: clades">
            <filter>output_options['save_mutation_annotation'] is False and output_options['write_parsimony'] is False</filter>        
        </data>
        <collection name='subtrees' type='list' label='${tool.name} on ${on_string}: subtrees'>
            <discover_datasets pattern='__designation_and_ext__' format="newick" directory='out_subtrees'/>
            <filter>output_options['write_subtrees']</filter> 
        </collection>
        <collection name='subtrees_expanded' type='list' label='${tool.name} on ${on_string}: subtrees expanded'>
            <discover_datasets pattern='__designation_and_ext__' format='txt' directory='out_subtrees_expanded'/>
            <filter>output_options['write_subtrees']</filter> 
        </collection>  
        <collection name='subtrees_mutations' type='list' label='${tool.name} on ${on_string}: subtrees mutations'>
            <discover_datasets pattern='__designation_and_ext__' format='txt' directory='out_subtrees_mutations'/>
            <filter>output_options['write_subtrees']</filter> 
        </collection>
        <data name="current_tree" format="newick" from_work_dir="current-tree.nh" label="${tool.name} on ${on_string}: current tree">
            <filter>output_options['write_parsimony'] is True</filter>        
        </data>
        <data name="parsimony_scores" format="tabular" from_work_dir="parsimony-scores.tsv" label="${tool.name} on ${on_string}: parsimony scores per node">
            <filter>output_options['write_parsimony'] is True</filter>        
        </data>
        <data name="single_subtree" format="newick" from_work_dir="single-subtree.nh" label="${tool.name} on ${on_string}: single subtree">
            <filter>output_options['write_single']</filter>        
        </data>
        <data name="single_tree_expanded" format="txt" from_work_dir="single-subtree-expanded.txt" label="${tool.name} on ${on_string}: single subtree expanded">
            <filter>output_options['write_single']</filter>        
        </data>
        <data name="single_subtree_mutations" format="txt" from_work_dir="single-subtree-mutations.txt" label="${tool.name} on ${on_string}: single subtree mutations">
            <filter>output_options['write_single']</filter>        
        </data>
    </outputs>
    <tests>
        <test expect_num_outputs="3">
            <param name="vcf" value="global_samples.vcf.gz"/>
            <param name="tree" value="global_phylo.nh"/>
            <section name="collapse_options">
                <param name="collapse_tree" value="true"/>
            </section>
            <section name="output_options">
                <param name="save_mutation_annotation" value="true"/>
            </section>
            <output name="annotated_tree" file="test_01_annotated_tree.pb" ftype="protobuf3">
                <assert_contents>
                    <has_size value="26100" delta="100"/>
                </assert_contents>
            </output>
            <output name="condensed_tree" file="test_01_condensed_tree.nh" ftype="newick"/>
            <output name="final_tree" file="test_01_final_tree.nh" ftype="newick"/>
        </test>
        <test expect_num_outputs="3">
            <param name="vcf" value="new_samples.vcf.gz"/>
            <param name="load_mutation_annotation" value="test_01_annotated_tree.pb"/>
            <section name="output_options">
                <param name="write_uncondensed" value="true"/>
            </section>
            <output name="uncondensed_tree" file="test_02_uncondensed_tree.nh" ftype="newick"/>
            <output name="mutation_paths" file="test_02_mutation_path.nh" ftype="txt"/>
            <output name="clades" ftype="txt">
                <assert_contents>
                    <has_size value="0" delta="0"/>
                </assert_contents>
            </output>
        </test>
        <test expect_num_outputs="4">
            <param name="vcf" value="global_samples.vcf.gz"/>
            <param name="tree" value="global_phylo.nh"/>
            <param name="sort_mode" value="--sort-before-placement-1"/>
            <section name="collapse_options">
                <param name="collapse_tree" value="true"/>
            </section>   
            <output name="condensed_tree" file="test_03_condensed_tree.nh" ftype="newick"/>
            <output name="final_tree" file="test_03_final_tree.nh" ftype="newick"/>
            <output name="mutation_paths" file="test_03_mutation_paths.txt" ftype="txt"/>
            <output name="clades" ftype="txt">
                <assert_contents>
                    <has_size value="0"/>
                </assert_contents>
            </output>
        </test>
        <test expect_num_outputs="6">
            <param name="vcf" value="new_samples.vcf.gz"/>
            <param name="load_mutation_annotation" value="test_01_annotated_tree.pb"/>
            <section name="output_options">
                <param name="write_uncondensed" value="true"/>
                <param name="write_subtrees" value="20"/>
            </section>
            <output name="uncondensed_tree" file="test_04_uncondensed_tree.nh" ftype="newick"/>
            <output name="mutation_paths" file="test_04_mutation_paths.txt" ftype="txt"/>
            <output name="clades" ftype="txt">
                <assert_contents>
                    <has_size value="0"/>
                </assert_contents>
            </output>
            <output_collection name="subtrees" type="list" count="1">
                <element name="subtree-1" file="test_04_subtree_1.nh"/>
            </output_collection>
            <output_collection name="subtrees_expanded" type="list" count="1">
                <element name="subtree-1-expanded" file="test_04_subtree_1_expanded.txt" ftype="txt"/>
            </output_collection>
            <output_collection name="subtrees_mutations" type="list" count="1">
                <element name="subtree-1-mutations" file="test_04_subtree_1_mutations.txt" ftype="txt"/>
            </output_collection>
        </test>
        <test expect_num_outputs="2">
            <param name="vcf" value="new_samples.vcf.gz"/>
            <param name="load_mutation_annotation" value="test_01_annotated_tree.pb"/>
            <section name="output_options">
                <param name="write_parsimony" value="true"/>
            </section>
            <output name="current_tree" file="test_05_current_tree.nw" ftype="newick"/>
            <output name="parsimony_scores" file="test_05_parsimony_scores.tabular" ftype="tabular"/>
        </test>
        <test expect_num_outputs="3">
            <param name="vcf" value="new_samples.vcf.gz"/>
            <param name="load_mutation_annotation" value="test_01_annotated_tree.pb"/>  
            <section name="output_options">
                <param name="multiple_placements" value="2"/>
            </section>
            <output name="final_tree" file="test_06_final_tree.nh" ftype="newick"/>
            <output name="mutation_paths" file="test_06_mutation_paths.txt" ftype="txt"/>
            <output name="clades" ftype="txt">
                <assert_contents>
                    <has_size value="0"/>
                </assert_contents>
            </output>
        </test>
        <test expect_num_outputs="6">
            <param name="vcf" value="new_samples.vcf.gz"/>
            <param name="load_mutation_annotation" value="test_01_annotated_tree.pb"/>  
            <section name="output_options">
                <param name="write_single" value="2"/>
            </section>
            <output name="final_tree" file="test_06_final_tree.nh" ftype="newick"/>
            <output name="mutation_paths" file="test_06_mutation_paths.txt" ftype="txt"/>
            <output name="clades" ftype="txt">
                <assert_contents>
                    <has_size value="0"/>
                </assert_contents>
            </output>
            <output name="single_subtree" file="test_07_single_subtree.nh" ftype="newick"/>
            <output name="single_subtree_mutations" file="test_07_single_subtree_mutations.txt" ftype="txt"/>
            <output name="single_subtree_expanded" file="test_07_single_subtree_expanded.txt" ftype="txt"/>
        </test>
        <test expect_num_outputs="3">
            <param name="vcf" value="new_samples.vcf.gz"/>
            <param name="load_mutation_annotation" value="test_01_annotated_tree.pb"/>
            <param name="sort_mode" value="--sort-before-placement-2"/>
            <output name="final_tree" file="test_08_final_tree.nh" ftype="newick"/>
            <output name="mutation_paths" file="test_08_mutation_path.nh" ftype="txt"/>
            <output name="clades" ftype="txt">
                <assert_contents>
                    <has_size value="0" delta="0"/>
                </assert_contents>
            </output>
        </test>
        <test expect_num_outputs="3">
            <param name="vcf" value="new_samples.vcf.gz"/>
            <param name="load_mutation_annotation" value="test_01_annotated_tree.pb"/>
            <param name="sort_mode" value="--sort-before-placement-3"/>
            <output name="final_tree" file="test_09_final_tree.nh" ftype="newick"/>
            <output name="mutation_paths" file="test_09_mutation_path.nh" ftype="txt"/>
            <output name="clades" ftype="txt">
                <assert_contents>
                    <has_size value="0" delta="0"/>
                </assert_contents>
            </output>
        </test>
        <test expect_num_outputs="3">
            <param name="vcf" value="new_samples.vcf.gz"/>
            <param name="load_mutation_annotation" value="test_01_annotated_tree.pb"/>
            <param name="sort_mode" value="--sort-before-placement-1 --reverse-sort"/>
            <output name="final_tree" file="test_10_final_tree.nh" ftype="newick"/>
            <output name="mutation_paths" file="test_10_mutation_path.nh" ftype="txt"/>
            <output name="clades" ftype="txt">
                <assert_contents>
                    <has_size value="0" delta="0"/>
                </assert_contents>
            </output>
        </test>
        <test expect_num_outputs="3">
            <param name="vcf" value="new_samples.vcf.gz"/>
            <param name="load_mutation_annotation" value="test_01_annotated_tree.pb"/>
            <param name="sort_mode" value="--sort-before-placement-2 --reverse-sort"/>
            <output name="final_tree" file="test_11_final_tree.nh" ftype="newick"/>
            <output name="mutation_paths" file="test_11_mutation_path.nh" ftype="txt"/>
            <output name="clades" ftype="txt">
                <assert_contents>
                    <has_size value="0" delta="0"/>
                </assert_contents>
            </output>
        </test>
        <test expect_num_outputs="3">
            <param name="vcf" value="new_samples.vcf.gz"/>
            <param name="load_mutation_annotation" value="test_01_annotated_tree.pb"/>
            <param name="retain_input_branch" value="true"/>
            <output name="final_tree" file="test_12_final_tree.nh" ftype="newick"/>
            <output name="mutation_paths" file="test_12_mutation_path.nh" ftype="txt"/>
            <output name="clades" ftype="txt">
                <assert_contents>
                    <has_size value="0" delta="0"/>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[

    Hello, world!
    
    ]]>    </help>
    <expand macro="citations" />
</tool>
