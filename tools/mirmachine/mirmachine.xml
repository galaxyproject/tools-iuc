<tool id="mirmachine" name="MirMachine" version="0.1.0" profile="22.05">
    <description>A tool to detect miRNA homologs in genome sequences</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <command detect_errors="exit_code"><![CDATA[
        MirMachine.py -n '$input_node' -s '$input_species' --genome '$input1' -c ${GALAXY_SLOTS:-8}
    ]]></command>
    <inputs>
        <param type="select" name="input_node" label="Node name (e.g. Caenorhabditis)">
            <option value="Acanthomorpha"/>
            <option value="Ambulacraria"/>
            <option value="Amniota"/>
            <option value="Amphibia"/>
            <option value="Annelida"/>
            <option value="Archelosauria"/>
            <option value="Archosauria"/>
            <option value="Arthropoda"/>
            <option value="Bilateria"/>
            <option value="Boreoeutheria"/>
            <option value="Branchiostoma"/>
            <option value="Caenorhabditis"/>
            <option value="Catarrhini"/>
            <option value="Cephalopoda"/>
            <option value="Chelicerata"/>
            <option value="Chondrichthyes"/>
            <option value="Chordata"/>
            <option value="Chromadorea"/>
            <option value="Clupeocephala"/>
            <option value="Cnidaria"/>
            <option value="Coleoidea"/>
            <option value="Cyclostomata"/>
            <option value="Daphnia"/>
            <option value="Demospongiae"/>
            <option value="Deuterostomia"/>
            <option value="Diapsida"/>
            <option value="Diptera"/>
            <option value="Diptera"/>
            <option value="Drosophila"/>
            <option value="Ecdysozoa"/>
            <option value="Echinodermata"/>
            <option value="Eleutherozoa"/>
            <option value="Endopterygota"/>
            <option value="Enteropneusta"/>
            <option value="Euarchontoglires"/>
            <option value="Eumetazoa"/>      
            <option value="Eutheria"/>         
            <option value="Glires"/>           
            <option value="Gnathostomata"/>    
            <option value="Gymnophiona"/>       
            <option value="Laurasiatheria"/>    
            <option value="Lepidoptera"/>      
            <option value="Lepidosauria"/>     
            <option value="Lophotrochozoa"/>    
            <option value="Mammalia"/>         
            <option value="Marsupialia"/>      
            <option value="Metazoa"/>             
            <option value="Mollusca"/>       
            <option value="Muridae"/>          
            <option value="Neoaves"/>          
            <option value="Neognathae"/>       
            <option value="Neoptera"/>          
            <option value="Neopterygii"/>       
            <option value="Neotrochozoa"/>     
            <option value="Octopus"/>          
            <option value="Olfactores"/>        
            <option value="Osteichthyes"/>     
            <option value="Pancrustacea"/>     
            <option value="Platytrochozoa"/>      
            <option value="Protostomia"/>    
            <option value="Sarcopterygii"/>    
            <option value="Silicispongia"/>    
            <option value="Tetrapoda"/>        
            <option value="Theria"/>            
            <option value="Vertebrata"/>        
            <option value="Xenopus"/> 
        </param>
        <param type="text" name="input_species" label="Scientific species name separated by underscore (e.g. Caenorhabditis_elegans)">
            <sanitizer invalid_char="">
                <valid initial="string.letters">
                    <add value="_"/>
                </valid>
            </sanitizer>
            <validator type="regex">
                [a-zA-Z_]+
            </validator>
        </param>
        <param type="data" name="input1" format="fa" label="Genome fasta file"/>
    </inputs>
    <outputs>
	<data name="gff_file" format="gff" from_work_dir="results/predictions/gff/${input_species}.PRE.gff" label="${tool.name} on ${on_string}: GFF file"/>
	<data name="filtered_gff_file" format="gff" from_work_dir="results/predictions/filtered_gff/${input_species}.PRE.gff" label="${tool.name} on ${on_string}: filtered GFF file"/>
	<data name="fasta_file" format="fasta" from_work_dir="results/predictions/fasta/${input_species}.PRE.fasta" label="${tool.name} on ${on_string}: fasta sequence of annotation miRNAs"/>
    </outputs>
    <tests>
        <test expect_num_outputs="3">
            <param name="input1" value="ce11_chrI.fa"/>
            <param name="input_node" value="Caenorhabditis"/>
            <param name="input_species" value="Caenorhabditis_elegans"/>
            <output name="gff_file" file="results/predictions/gff/Caenorhabditis_elegans.PRE.gff" type="gff">
                <assert_contents>
                    <has_n_lines value="167" delta="0"/>
                </assert_contents>
            </output>
            <output name="filtered_gff_file" file="results/predictions/filtered_gff/Caenorhabditis_elegans.PRE.gff" type="gff">
                <assert_contents>
                    <has_n_lines value="19" delta="0"/>
                </assert_contents>
            </output>
            <output name="fasta_file" file="results/predictions/fasta/Caenorhabditis_elegans.PRE.fasta" type="fasta">
                <assert_contents>
                    <has_n_lines value="310" delta="0"/>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[
Main MirMachine executable

Arguments:
    -n <text>, --node <text>              Node name. (e.g. Caenorhabditis)
    -s <text>, --species <text>           Species name. (e.g. Caenorhabditis_elegans)
    -g <text>, --genome <text>            Genome fasta file location (e.g. data/genome/example.fasta)
    -m <text>, --model <text>             Model type: deutero, proto, combined [default: combined]

Options:
    -a, --add-all-nodes                 Move on the tree both ways.
    -o, --single-node-only              Run only on the given node for miRNA families.
    -p, --print-all-nodes               Print all available node options and exit.
    -l, --print-all-families            Print all available families in this version and exit.
    -t, --print-ascii-tree              Print ascii tree of the tree file.

    ]]></help>
    <expand macro="citations" />
    <expand macro="creator" />
</tool>
