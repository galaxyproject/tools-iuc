<macros>
    <token name="@TOOL_VERSION@">1.20.0</token>
    <token name="@SUFFIX_VERSION@">3</token>
    <xml name="requirements">
        <requirements>
            <requirement type="package" version="@TOOL_VERSION@">bioconductor-isoformswitchanalyzer</requirement>
            <requirement type="package" version="2.2.1">r-argparse</requirement>
            <requirement type="package" version="1.0.10">r-dplyr</requirement>
        </requirements>
    </xml>
    <xml name="citations">
        <citations>
            <citation type="doi">10.1093/bioinformatics/btz247</citation>
            <citation type="doi">10.1158/1541-7786.MCR-16-0459</citation>
        </citations>
    </xml>
    <xml name="xrefs">
        <xrefs>
          <xref type="bio.tools">IsoformSwitchAnalyzeR</xref>
          <xref type="bioconductor">isoformswitchanalyzer</xref>
        </xrefs>
    </xml>
    <xml name="macro_disordered_regions">
        <param argument="smoothingWindowSize" type="integer" min="1" value="5" label="Smoothing window size" help="An integer indicating how 
            large a sliding window should be used to calculate a smoothed (via mean) disordered probability score of a particular position in
            a peptide. This has as a smoothing effect which prevents IDRs from not being detected (or from being split into sub-IDRs) by a 
            single residue with low probability. The trade off is worse accuracy of detecting the exact edges of the IDRs. To turn it off 
            smoothing simply set to 1." />
        <param argument="probabilityCutoff" type="float" min="0" value="0.5" label="Probability cutoff" help="Cutoff applied to the (smoothed) 
            disordered probability score for calling a residue as disordered. The default, 30 amino acids, is an accepted standard for long IDRs" />
        <param argument="minIdrSize" type="integer" min="0" value="30" label="Minimum IDR size" help="How long a stretch of disordered amino acid 
            constitute the region part of the Intrinsically Disordered Region (IDR) definition. The default, 30 amino acids, is an accepted 
            standard for long IDRs" />
    </xml>
    <xml name="macro_alpha_difcutoff">
        <param argument="alpha" type="float" min="0" max="1" value="0.05" label="Alpha value" help="The cutoff which the FDR correct p-values must be smaller 
            than for calling significant switches." />
        <param argument="dIFcutoff" type="float" min="0" max="1" value="0.1" label="dIFcutoff" help="The cutoff which the changes in (absolute) isoform usage 
            must be larger than before an isoform is considered switching. This cutoff can remove cases where isoforms with (very) low dIF values are deemed 
            significant and thereby included in the downstream analysis. This cutoff is analogous to having a cutoff on log2 fold change in a normal differential
            expression analysis of genes to ensure the genes have a certain effect size. Default is 0.1 (10%)" />
    </xml>
    <xml name="macro_ifcutoff" token_value="" token_help="">
        <param argument="IFcutoff" type="float" min="0" max="1" value="@VALUE@" label="IFcutoff" help="@HELP@" />
    </xml>
    <xml name="macro_onlysigisoforms1">
        <param argument="onlySigIsoforms" type="boolean" truevalue="--onlySigIsoforms" falsevalue="" checked="false" label="Only significantly differential 
            used isoforms" help="This parameter indicates whether both isoforms the pairs considered if reduceFurtherToGenesWithConsequenshould be significantly 
            differential used (as indicated by the alpha and dIFcutoff parameters). Default is disabled (aka only one of the isoforms in a pair should be
            significantly differential used)" />
    </xml>
    <xml name="macro_onlysigisoforms2">
        <param argument="onlySigIsoforms" type="boolean" truevalue="--onlySigIsoforms" falsevalue="" checked="false" label="Only significantly differential 
            used isoforms" help="This parameter indicates whether to only consider significant isoforms, meaning only analyzing genes where at least two isoforms 
            which both have significant usage changes in opposite direction (quite strict). Naturally this only works if the isoform switch test used have isoform 
            resolution (which the build in *isoformSwitchTestDEXSeq* has). If disabled all isoforms with an absolute dIF value larger than dIFcutoff in a gene with 
            significant switches (defined by alpha and dIFcutoff) are included in the pairwise comparison" />
    </xml>
    <xml name="macro_keeisoforminall" token_checked="">
        <param argument="keepIsoformInAllConditions" type="boolean" truevalue="--keepIsoformInAllConditions" falsevalue="" checked="@CHECKED@" label="Keep isoforms in all conditions" 
            help="This parameter indicates whether an isoform should be kept in all comparisons even if it is only deemed significant (as defined by the 
            alpha and dIFcutoff parameters) in one comparison" />
    </xml>
    <xml name="macro_onlyswitching">
        <param argument="onlySwitchingGenes" type="boolean" truevalue="--onlySwitchingGenes" falsevalue="" checked="true" label="Only switching genes" help="Only 
            analyze genes with isoform switches (as indicated by the alpha and dIFcutoff parameters)" />
    </xml>
</macros>