<tool id="cd_hit" name="CD-HIT (-2d|-est|-est-2d)" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@">
    <description>cluster/compare peptide/nucleotide sequences</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <version_command><![CDATA[cd-hit | grep "CD-HIT version" | cut -d" " -f 4]]></version_command>
    <command detect_errors="exit_code"><![CDATA[
cd-hit$est_cond.est_sel$mode_cond.mode_sel

## general parameters
-i '$i'
-o 'result'
-b $b
-l $l
-uL $uL
-uS $uS
-U $U
$g
-M \${GALAXY_MEMORY_MB:-0}
-T \${GALAXY_SLOTS:-1}

## cd-hit-2d/cd-hit-est-2d specific parameters
#if $mode_cond.mode_sel == '-2d'
    -i2 '$mode_cond.i2'
#end if

## parameters for global and local alignment
$mode_cond.G_cond.G_sel ## -G
#if $mode_cond.G_cond.G_sel == '-G 0' ## local alignment
    -aL $mode_cond.G_cond.aL
    -AL $mode_cond.G_cond.AL
    -aS $mode_cond.G_cond.aS
    -AS $mode_cond.G_cond.AS
    -A $mode_cond.G_cond.A
    -s $mode_cond.G_cond.s
    -S $mode_cond.G_cond.S
    #if $mode_cond.mode_sel == '-2d'
        -s2 $mode_cond.G_cond.s2
        -S2 $mode_cond.G_cond.S2
    #end if
#end if

## sequence type parameters
-c $est_cond.c
-n $est_cond.n
#if $est_cond.est_sel == ''
    -t $est_cond.t
#else if $est_cond.est_sel == '-est'
    $est_cond.r
    -mask '$est_cond.mask'
    -match $est_cond.match
    -mismatch $est_cond.mismatch
    -gap $est_cond.gap
    -gap-ext $est_cond.gapext
    -cx $est_cond.cx
    -cy $est_cond.cy
#end if

## output options
-d $out.d 
$out.p
$out.sc
$out.sf
$out.bak
#if $out.log
    |& tee -a '$out_log'
#end if

&& ls -lisa ## todo remove
    ]]></command>
    <inputs>
        <param argument="-i" type="data" format="fasta" label="Select file with sequences to cluster/compare"/>
        <conditional name="mode_cond">
            <param name="mode_sel" type="select" label="Activate -2d mode?">
                <option value="" selected="true">No for clustering sequences (cd-hit/cd-hit-est)</option>
                <option value="-2d">Yes for comparison of 2 sequence databases (cd-hit-2d/cd-hit-est-2d)</option>
            </param>
            <when value="">
                <expand macro="G"/>
            </when>
            <when value="-2d">
                <param argument="-i2" type="data" format="fasta" label="Select second file with sequences to cluster/compare"/>
                <expand macro="G">
                    <param argument="-s2" type="float" min="0.0" max="1.0" value="1.0" label="Set length difference cutoff for other sequences" help="By default, seqs in db1 >= seqs in db2 in a same cluster if set to 0.9, seqs in db1 may just >= 90% seqs in db2."/>
                    <param argument="-S2" type="integer" min="0" value="0" label="Set length difference cutoff in residues for other sequences" help="By default, seqs in db1 >= seqs in db2 in a same cluster if set to 60, seqs in db2 may 60aa longer than seqs in db1."/>
                </expand>
            </when>
        </conditional>
        <conditional name="est_cond">
            <param name="est_sel" type="select" label="Activate -est mode?">
                <option value="" selected="true">No for peptides (cd-hit/cd-hit-2d)</option>
                <option value="-est">Yes for nucleotides (cd-hit-est/cd-hit-est-2d)</option>
            </param>
            <when value="">
                <expand macro="c" default="0.9"/>
                <expand macro="n" default="5" help="Suggested word size: 5 for thresholds 0.7 ~ 1.0; 4 for thresholds 0.6 ~ 0.7; 3 for thresholds 0.5 ~ 0.6; 2 for thresholds 0.4 ~ 0.5"/>
                <param argument="-t" type="integer" value="2" label="Set tolerance for redundance"/>
            </when>
            <when value="-est">
                <expand macro="c" default="0.9"/>
                <expand macro="n" default="10" help="Suggested word size: 10,11 for threshold in 0.95 ~ 1.0; 8,9 for threshold in 0.9 ~ 0,95; 7 for threshold in 0.88 ~ 0.9; 6 for threshold in 0.85 ~ 0.88; 5 for threshold in 0.80 ~ 0.85; 4 for threshold in 0.75 ~ 0.8"/>
                <param argument="-r" type="boolean" truevalue="-r 1" falsevalue="-r 0" checked="false" label="Compare both strands?"/>
                <param argument="-mask" type="text" optional="true" label="Set letters to mask out" help="NX to mask out both 'N' and 'X'"/>
                <expand macro="match"/>
                <expand macro="mismatch" default="-2"/>
                <expand macro="gap" default="-6"/>
                <expand macro="gapext"/>
                <param argument="-cx" type="integer" value="0" label="Set length to keep after trimming the tail of sequences in the first file"/>
                <param argument="-cy" type="integer" value="0" label="Set length to keep after trimming the tail of sequences in the second file"/>
            </when>
        </conditional>
        <expand macro="b" default="20"/>
        <param argument="-l" type="integer" min="1" value="10" label="Set length of sequences to throw away"/>
        <param argument="-uL" type="float" min="0.0" max="1.0" value="1.0" label="Set maximum unmatched percentage for the shorter sequence" help="If set to 0.1, the unmatched region (excluding leading and tailing gaps) must not be more than 10% of the sequence."/>
        <param argument="-uS" type="float" min="0.0" max="1.0" value="1.0" label="Set maximum unmatched percentage for the shorter sequence" help="If set to 0.1, the unmatched region (excluding leading and tailing gaps) must not be more than 10% of the sequence."/>
        <param argument="-U" type="integer" min="0" value="99999999" label="Set maximum unmatched length" help="If set to 10, the unmatched region (excluding leading and tailing gaps) must not be more than 10 bases."/>
        <param argument="-g" type="boolean" truevalue="-g 1" falsevalue="" label="Activate accurate but slow mode?" help="By cd-hit's default algorithm, a sequence is clustered to the first cluster that meet the threshold (fast cluster). If set to true, the program will cluster it into the most similar cluster that meet the threshold (accurate but slow mode)"/>        
        <section name="out" title="Output options">
            <param argument="-d" type="integer" min="0" value="20" label="Set length of description in cluster output file" help="If set to 0, it takes the FASTA defline and stops at first space."/>
            <param argument="-p" type="boolean" truevalue="-p 1" falsevalue="" label="Print alignment overlap in cluster output file"/>
            <param argument="-sc" type="boolean" truevalue="-sc 1" falsevalue="" label="Sort clusters by decreasing size (number of sequences) in cluster output file?"/>
            <param argument="-sf" type="boolean" truevalue="-sf 1" falsevalue="" label="Sort fasta/fastq by cluster size (number of sequences) in cluster output file?"/>
            <expand macro="bak"/>
            <expand macro="log"/>
        </section>
    </inputs>
    <outputs>
        <data name="out_clusters" format="txt" from_work_dir="result.clstr" label="${tool.name} on ${on_string}: Cluster"/>
        <data name="out_clusters_backup" format="txt" from_work_dir="result.bak.clstr" label="${tool.name} on ${on_string}: Backup cluster">
            <filter>out['bak']</filter>
        </data>
        <data name="out_sequences" format="fasta" from_work_dir="result" label="${tool.name} on ${on_string}: Representative sequences" />
        <data name="out_log" format="txt" label="${tool.name} on ${on_string}: Log">
            <filter>out['log']</filter>
        </data>        
    </outputs>
    <tests>
        <!-- no test implemented for -->

        <!-- #1 cd-hit, default -->
        <test expect_num_outputs="4">
            <param name="i" value="sequence.fasta"/>
            <section name="out">
                <param name="bak" value="true"/>
                <param name="log" value="true"/>
            </section>
            <output name="out_clusters">
                <assert_contents>
                    <has_n_lines n="39"/>
                    <has_line line=">Cluster 0"/>
                    <has_text_matching expression="1.+241aa.+"/>
                </assert_contents>
            </output>
            <output name="out_clusters_backup">
                <assert_contents>
                    <has_n_lines n="37"/>
                    <has_text_matching expression="1.+241aa.+"/>
                </assert_contents>
            </output>
            <output name="out_sequences">
                <assert_contents>
                    <has_n_lines n="4"/>
                    <has_line line=">F23Fcsw_133990"/>
                </assert_contents>
            </output>
            <output name="out_log">
                <assert_contents>
                    <has_line line="program completed !"/>
                </assert_contents>
            </output>
        </test>
        <!-- #2 cd-hit, custom -->
        <test expect_num_outputs="4">
            <param name="i" value="sequence.fasta"/>
            <conditional name="mode_cond">
                <param name="mode_sel" value=""/>
                <conditional name="G_cond">  
                    <param name="G_sel" value="-G 0"/>
                    <param name="aL" value="1.0"/>
                    <param name="AL" value="99999998"/>
                    <param name="aS" value="1.0"/>
                    <param name="AS" value="99999998"/>
                    <param name="A" value="1"/>
                    <param name="s" value="1.0"/>
                    <param name="S" value="999998"/>
                </conditional>
            </conditional>
            <conditional name="est_cond">
                <param name="est_sel" value=""/>
                <param name="c" value="0.8"/>
                <param name="n" value="4"/>
                <param name="t" value="3"/>
            </conditional>
            <param name="b" value="21"/>
            <param name="l" value="11"/>
            <param name="uL" value="0.9"/>
            <param name="uS" value="0.9"/>
            <param name="U" value="99999998"/>
            <param name="g" value="true"/>
            <section name="out">
                <param name="d" value="21"/>
                <param name="p" value="true"/>
                <param name="sc" value="true"/>
                <param name="sf" value="true"/>
                <param name="bak" value="true"/>
                <param name="log" value="true"/>
            </section>
            <output name="out_clusters">
                <assert_contents>
                    <has_n_lines n="61"/>
                    <has_line line=">Cluster 0"/>
                    <has_text_matching expression="1.+238aa.+"/>
                </assert_contents>
            </output>
            <output name="out_clusters_backup">
                <assert_contents>
                    <has_n_lines n="37"/>
                    <has_text_matching expression="4.+241aa.+"/>
                </assert_contents>
            </output>
            <output name="out_sequences">
                <assert_contents>
                    <has_n_lines n="48"/>
                    <has_line line=">M44Fcsw_200453"/>
                </assert_contents>
            </output>
            <output name="out_log">
                <assert_contents>
                    <has_line line="program completed !"/>
                </assert_contents>
            </output>
        </test>
        <!-- #3 cd-hit-2d, default -->
        <test expect_num_outputs="4">
            <param name="i" value="db1.fasta"/>
            <conditional name="mode_cond">
                <param name="mode_sel" value="-2d"/>
                <param name="i2" value="db2.fasta"/>
            </conditional>
            <section name="out">
                <param name="bak" value="true"/>
                <param name="log" value="true"/>
            </section>
            <output name="out_clusters">
                <assert_contents>
                    <has_n_lines n="868"/>
                    <has_line line=">Cluster 298"/>
                    <has_text_matching expression="1.+53aa.+"/>
                </assert_contents>
            </output>
            <output name="out_clusters_backup">
                <assert_contents>
                    <has_n_lines n="569"/>
                    <has_text_matching expression="80.+276aa.+"/>
                </assert_contents>
            </output>
            <output name="out_sequences">
                <assert_contents>
                    <has_n_lines n="18"/>
                    <has_line line=">MISEQ-1639_78_000000000-B3PNL_1_2118_17053_20751_ATGCATGG  "/>
                </assert_contents>
            </output>
            <output name="out_log">
                <assert_contents>
                    <has_line line="program completed !"/>
                </assert_contents>
            </output>
        </test>
        <!-- #4 cd-hit-2d, custom -->
        <test expect_num_outputs="4">
            <param name="i" value="db1.fasta"/>
            <conditional name="mode_cond">
                <param name="mode_sel" value="-2d"/>
                <param name="i2" value="db2.fasta"/>
                <conditional name="G_cond">  
                    <param name="G_sel" value="-G 0"/>
                    <param name="aL" value="1.0"/>
                    <param name="AL" value="99999998"/>
                    <param name="aS" value="1.0"/>
                    <param name="AS" value="99999998"/>
                    <param name="A" value="1"/>
                    <param name="s" value="1.0"/>
                    <param name="S" value="999998"/>
                    <param name="s2" value="0.9"/>
                    <param name="S2" value="1"/>
                </conditional>
            </conditional>
            <conditional name="est_cond">
                <param name="est_sel" value=""/>
                <param name="c" value="0.8"/>
                <param name="n" value="4"/>
                <param name="t" value="3"/>
            </conditional>
            <param name="b" value="21"/>
            <param name="l" value="11"/>
            <param name="uL" value="0.9"/>
            <param name="uS" value="0.9"/>
            <param name="U" value="99999998"/>
            <param name="g" value="true"/>
            <section name="out">
                <param name="d" value="21"/>
                <param name="p" value="true"/>
                <param name="sc" value="true"/>
                <param name="sf" value="true"/>
                <param name="bak" value="true"/>
                <param name="log" value="true"/>
            </section>
            <output name="out_clusters">
                <assert_contents>
                    <has_n_lines n="868"/>
                    <has_line line=">Cluster 298"/>
                    <has_text_matching expression="1.+53aa.+"/>
                </assert_contents>
            </output>
            <output name="out_clusters_backup">
                <assert_contents>
                    <has_n_lines n="569"/>
                    <has_text_matching expression="80.+276aa.+"/>
                </assert_contents>
            </output>
            <output name="out_sequences">
                <assert_contents>
                    <has_n_lines n="18"/>
                    <has_line line=">MISEQ-1639_78_000000000-B3PNL_1_2118_17053_20751_ATGCATGG  "/>
                </assert_contents>
            </output>
            <output name="out_log">
                <assert_contents>
                    <has_line line="program completed !"/>
                </assert_contents>
            </output>
        </test>
        <!-- #5 cd-hit-est, default -->
        <test expect_num_outputs="4">
            <param name="i" value="sequence.fasta"/>
            <conditional name="est_cond">
                <param name="est_sel" value="-est"/>
            </conditional>
            <section name="out">
                <param name="bak" value="true"/>
                <param name="log" value="true"/>
            </section>
            <output name="out_clusters">
                <assert_contents>
                    <has_n_lines n="39"/>
                    <has_line line=">Cluster 1"/>
                    <has_text_matching expression="10.+241nt.+"/>
                </assert_contents>
            </output>
            <output name="out_clusters_backup">
                <assert_contents>
                    <has_n_lines n="37"/>
                    <has_text_matching expression="1.+241nt.+"/>
                </assert_contents>
            </output>
            <output name="out_sequences">
                <assert_contents>
                    <has_n_lines n="4"/>
                    <has_line line=">F23Fcsw_133990"/>
                </assert_contents>
            </output>
            <output name="out_log">
                <assert_contents>
                    <has_line line="program completed !"/>
                </assert_contents>
            </output>
        </test>
        <!-- #6 cd-hit-est, custom -->
        <test expect_num_outputs="4">
            <param name="i" value="sequence.fasta"/>
            <conditional name="est_cond">
                <param name="est_sel" value="-est"/>
                <param name="c" value="0.8"/>
                <param name="n" value="4"/>
                <param name="r" value="true"/>
                <!--param name="mask" value=""/-->
                <param name="match" value="3"/>
                <param name="mismatch"  value="-3"/>
                <param name="gap" value="-5"/>
                <param name="gapext" value="-2"/>
                <param name="cx" value="1"/>
                <param name="cy" value="1"/>
            </conditional>
            <section name="out">
                <param name="bak" value="true"/>
                <param name="log" value="true"/>
            </section>
            <output name="out_clusters">
                <assert_contents>
                    <has_n_lines n="39"/>
                    <has_line line=">Cluster 1"/>
                    <has_text_matching expression="10.+241nt.+"/>
                </assert_contents>
            </output>
            <output name="out_clusters_backup">
                <assert_contents>
                    <has_n_lines n="37"/>
                    <has_text_matching expression="1.+241nt.+"/>
                </assert_contents>
            </output>
            <output name="out_sequences">
                <assert_contents>
                    <has_n_lines n="4"/>
                    <has_line line=">F23Fcsw_133990"/>
                </assert_contents>
            </output>
            <output name="out_log">
                <assert_contents>
                    <has_line line="program completed !"/>
                </assert_contents>
            </output>
        </test>
        <!-- #6 cd-hit-est-2d, default -->
        <test expect_num_outputs="4">
            <param name="i" value="db1.fasta"/>
            <conditional name="mode_cond">
                <param name="mode_sel" value="-2d"/>
                <param name="i2" value="db2.fasta"/>
            </conditional>
            <conditional name="est_cond">
                <param name="est_sel" value="-est"/>
                <param name="c" value="0.8"/>
                <param name="n" value="4"/>
                <param name="r" value="true"/>
                <!--param name="mask" value=""/-->
                <param name="match" value="3"/>
                <param name="mismatch"  value="-3"/>
                <param name="gap" value="-5"/>
                <param name="gapext" value="-2"/>
                <param name="cx" value="1"/>
                <param name="cy" value="1"/>
            </conditional>
            <section name="out">
                <param name="bak" value="true"/>
                <param name="log" value="true"/>
            </section>
            <output name="out_clusters">
                <assert_contents>
                    <has_n_lines n="868"/>
                    <has_line line=">Cluster 298"/>
                    <has_text_matching expression="0.+53nt.+"/>
                </assert_contents>
            </output>
            <output name="out_clusters_backup">
                <assert_contents>
                    <has_n_lines n="569"/>
                    <has_text_matching expression="80.+276nt.+"/>
                </assert_contents>
            </output>
            <output name="out_sequences">
                <assert_contents>
                    <has_n_lines n="18"/>
                    <has_line line=">MISEQ-1639_78_000000000-B3PNL_1_2118_17053_20751_ATGCATGG  "/>
                </assert_contents>
            </output>
            <output name="out_log">
                <assert_contents>
                    <has_line line="program completed !"/>
                </assert_contents>
            </output>
        </test>
        <!-- #7 cd-hit-est-2d, custom -->
        <test expect_num_outputs="4">
            <param name="i" value="db1.fasta"/>
            <conditional name="mode_cond">
                <param name="mode_sel" value="-2d"/>
                <param name="i2" value="db2.fasta"/>
                <conditional name="G_cond">  
                    <param name="G_sel" value="-G 0"/>
                    <param name="aL" value="1.0"/>
                    <param name="AL" value="99999998"/>
                    <param name="aS" value="1.0"/>
                    <param name="AS" value="99999998"/>
                    <param name="A" value="1"/>
                    <param name="s" value="1.0"/>
                    <param name="S" value="999998"/>
                    <param name="s2" value="0.9"/>
                    <param name="S2" value="1"/>
                </conditional>
            </conditional>
            <conditional name="est_cond">
                <param name="c" value="0.8"/>
                <param name="n" value="4"/>
                <param name="r" value="true"/>
                <!--param name="mask" value=""/-->
                <param name="match" value="3"/>
                <param name="mismatch"  value="-3"/>
                <param name="gap" value="-5"/>
                <param name="gapext" value="-2"/>
                <param name="cx" value="1"/>
                <param name="cy" value="1"/>
            </conditional>
            <section name="out">
                <param name="bak" value="true"/>
                <param name="log" value="true"/>
            </section>
            <output name="out_clusters">
                <assert_contents>
                    <has_n_lines n="868"/>
                    <has_line line=">Cluster 298"/>
                    <has_text_matching expression="0.+53nt.+"/>
                </assert_contents>
            </output>
            <output name="out_clusters_backup">
                <assert_contents>
                    <has_n_lines n="569"/>
                    <has_text_matching expression="80.+276nt.+"/>
                </assert_contents>
            </output>
            <output name="out_sequences">
                <assert_contents>
                    <has_n_lines n="18"/>
                    <has_line line=">MISEQ-1639_78_000000000-B3PNL_1_2118_17053_20751_ATGCATGG  "/>
                </assert_contents>
            </output>
            <output name="out_log">
                <assert_contents>
                    <has_line line="program completed !"/>
                </assert_contents>
            </output>
        </test>



        <!-- following are old tests -->


    </tests>
    <help><![CDATA[
.. class:: infomark

**What it does**

cd-hit stands for Cluster Database at High Identity with Tolerance. The tool implements four variants: cd-hit, cd-hit-est, cd-hit-2d, and cd-hit-est-2d.

The program cd-hit (resp. cd-hit-est) takes a FASTA format aminoacid (resp. nucleotide) sequence database as input and produces a set of 'non-redundant' (nr) representative sequences as output. In addition cd-hit outputs a cluster file, documenting the members of the sequence clusters for each nr sequence representative. The idea is to reduce the overall size of the database without removing any sequence information by only removing 'redundant' (or highly similar) sequences. This is why the resulting database is called non-redundant (nr). Essentially, cd-hit (resp. cd-hit-est) produces a set of closely related protein (resp. nucleotide sequence) families from a given FASTA sequence database.

The program cd-hit-2d (resp. cd-hit-est-2d) compares two aminoacid (resp. nucleotide) sequence datasets (db1, db2) in FASTA format. It identifies the sequences in db2 that are similar to db1 at a certain threshold. It outputs two files: a FASTA file of sequences in db2 that are not similar to db1 and a text file that lists similar sequences between db1 & db2.

.. _CD-HIT: http://weizhongli-lab.org/cd-hit/

------

**Inputs**

cd-hit/cd-hit-2d requires a (two) protein FASTA file(s) as input.

cd-hit-est/cd-hit-est-2d requires a (two) nucleotide FASTA file(s) as input.

------

**Outputs**

For cd-hit and cd-hit-est:

1. The first output is a FASTA file containing representative sequences.

2. The second output is a text file listing the mapping of sequences to the representative sequences:

  >Cluster 0
  0 2799aa, >PF04998.6|RPOC2_CHLRE/275-3073... *
  >Cluster 1
  0 2214aa, >PF06317.1|Q6Y625_9VIRU/1-2214... at 80%
  1 2215aa, >PF06317.1|O09705_9VIRU/1-2215... at 84%
  2 2217aa, >PF06317.1|Q6Y630_9VIRU/1-2217... *
  3 2216aa, >PF06317.1|Q6GWS6_9VIRU/1-2216... at 84%
  4 527aa, >PF06317.1|Q67E14_9VIRU/6-532... at 63%
  >Cluster 2
  0 2202aa, >PF06317.1|Q6UY61_9VIRU/8-2209... at 60%
  1 2208aa, >PF06317.1|Q6IVU4_JUNIN/1-2208... *
  2 2207aa, >PF06317.1|Q6IVU0_MACHU/1-2207... at 73%
  3 2208aa, >PF06317.1|RRPO_TACV/1-2208... at 69%

For cd-hit-2d and cd-hit-est-2d:

1. The first output is a FASTA file of sequences in db2 that are not similar to db1.

2. The second output is a text file that lists similar sequences between db1 & db2

.. class:: infomark

**References**

@REFERENCES@
    ]]></help>
    <expand macro="citations"/>
</tool>
