<tool id="cd_hit_dup" name="cd-hit-dup" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@">
    <description>Remove duplicates from sequencing reads</description>
    <macros>
        <token name="@TOOL_VERSION@">4.8.1</token>    
        <token name="@VERSION_SUFFIX@">0</token>
    </macros>
    <requirements>
        <requirement type="package" version="@TOOL_VERSION@">cd-hit</requirement>
        <requirement type="package" version="4.6.8">cd-hit-auxtools</requirement>
    </requirements>
    <version_command><![CDATA[
cd-hit | grep "CD-HIT version" | cut -d" " -f 4
    ]]></version_command>
    <command detect_errors="exit_code"><![CDATA[
cd-hit-dup
-i '$i'
-o rep_seq
#if $paired_file.paired_file_select == "yes":
    -j '$j'
#end if
-d $d
-u $u
-m $m
-e $e
-f $cfilter.f
-a $cfilter.a
-s $s
-b $b
-p $p
    ]]></command>
    <inputs>
        <param argument="-i" type="data" format="fasta" label="Input file (FASTQ or FASTA)"/>
        <conditional name="paired_file">
            <param name="paired_file_select" type="select" label="Is input are paired end (PE) files?">
                <option value="no" selected="true">No</option>
                <option value="yes">Yes</option>
            </param>
            <when value="no"/>
            <when value="yes">
                <param argument="-j" type="data" format="fasta" label="input filename in fasta/fastq format for R2 reads"/>
            </when>
        </conditional>
        <param argument="-d" type="integer" value="0" label="Description length"/>
        <param argument="-u" type="integer" value="0" label="Length of prefix" help="(default 0, for full/maximum length)"/>
        <param argument="-m" type="boolean" truevalue="true" falsevalue="false" checked="true" label="Match length"/>
        <param argument="-e" type="float" label="Maximum number/percent of mismatches allowed"/>
        <conditional name="cfilter">
            <param argument="-f" type="select" label="Filter out chimeric clusters?">
                <option value="false" selected="true">No</option>
                <option value="true">Yes</option>
            </param>
            <when value="false">
                <param argument="-a" type="float" value="1" label="Abundance cutoff"/>
            </when>
            <when value="true">
                <param argument="-a" type="float" value="2" label="Abundance cutoff"/>
            </when>
        </conditional>
        <param argument="-s" type="integer" value="30" min="20" label="Minimum length of common sequence shared between a chimeric read
              and each of its parents"/>
        <param argument="-b" type="float" value="1" label="Abundance ratio between a parent read and a chimeric read"/>
        <param argument="-p" type="float" value="0" label="Dissimilarity control for chimeric filtering"/>
    </inputs>
    <outputs>
        <data name="clusters_out" format="txt" label="${tool.name} on ${on_string}: Clusters" from_work_dir="rep_seq.clstr"/>
        <data name="fasta_out" format="fasta" label="${tool.name} on ${on_string}: Representative sequences" from_work_dir="rep_seq"/>
    </outputs>

    <tests>
        <test>
            <output name="fasta_out">
                <assert_contents>
                    <has_text_matching expression=".+"/>
                </assert_contents>
            </output> 
        </test>
    </tests>
    <help><![CDATA[
**What it does**

cd-hit-dup is a simple tool for removing duplicates from sequencing reads, with optional step to detect and remove chimeric reads. When two files of paired end reads are used as inputs, each pair of reads will be concatenated into a single one. A number of options are provided to tune how the duplicates are removed. 

.. _CD-HIT: http://weizhongli-lab.org/cd-hit/

------

**Inputs**

cd-hit-dup requires a FASTQ or FASTA file(s) as input or compressed .gz files.

------

**Outputs**



------

**References**

More information are available on `GitHub <https://github.com/weizhongli/cdhit>`_ and the `project website <http://cd-hit.org>`.
    ]]></help>
    <citations>
        <citation type="doi">10.1093/bioinformatics/btl158</citation>
        <citation type="doi">10.1093/bioinformatics/bts565</citation>
    </citations>
</tool>
