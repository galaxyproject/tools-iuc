<tool id="cd_hit_lap" name="CD-HIT lap" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@">
    <description>identifies overlapping reads</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <version_command><![CDATA[cd-hit | grep "CD-HIT version" | cut -d" " -f 4]]></version_command>
    <command detect_errors="exit_code"><![CDATA[
## run
cd-hit-lap
## optional parameters
-m $m
-p $p
-d $d
-s $s
## required parameters
-i '$i'
-o 'result'

## postprocessing
#if 'log' in $out
    |& tee -a '$out_log'
#end if
    ]]></command>
    <inputs>
        <param argument="-i" type="data" format="fasta" label="Select file with sequences to divide"/>
        <param argument="-m" type="integer" value="20" label="Set minimum length of overlapping part"/>
        <param argument="-p" type="float" min="0.0" max="1.0" value="0" label="Set minimum percentage of overlapping part"/>
        <expand macro="d"/>
        <param argument="-s" type="integer" value="0" label="Set random number seed for shuffling" help="Shuffled before sorting by length. 0 means no shuffling."/>
        <param name="out" type="select" multiple="true" optional="false" label="Select output file(s)" help="Only added to history if selected here and generated by the specific run.">
            <option value="clusters" selected="true">Clusters</option>
            <option value="sequences" selected="true">Sequences</option>
            <option value="log">Log</option>
        </param>
    </inputs>
    <outputs>
        <data name="out_clusters" format="txt" from_work_dir="result.clstr" label="${tool.name} on ${on_string}: Clusters">
            <filter>'clusters' in out</filter>
        </data>
        <!-- no file extension --> 
        <data name="out_sequences" format="fasta" from_work_dir="result" label="${tool.name} on ${on_string}: Sequences">
            <filter>'sequences' in out</filter>
        </data>
        <data name="out_log" format="txt" label="${tool.name} on $(on_string) Log">
            <filter>'log' in out</filter>
        </data>
    </outputs>
    <tests>
        <!-- #1 default -->
        <test expect_num_outputs="2">
            <param name="i" value="sequence.fasta"/>
            <output name="out_clusters">
                <assert_contents>
                    <has_n_lines n="74"/>
                    <has_line line=">Cluster 36"/>
                </assert_contents>
            </output> 
            <output name="out_sequences">
                <assert_contents>
                    <has_n_lines n="74"/>
                    <has_line line=">F23Fcsw_96640"/>
                    <has_text_matching expression="TCCGTACACTCAGGGATA.+"/>
                </assert_contents>
            </output> 
        </test>
        <!-- #2 -->
        <test expect_num_outputs="3">
            <param name="i" value="sequence.fasta"/>
            <param name="m" value="20"/>
            <param name="p" value="0.01"/>
            <param name="d" value="1"/>
            <param name="s" value="1"/>
            <param name="out" value="clusters,sequences,log"/>
            <output name="out_clusters">
                <assert_contents>
                    <has_n_lines n="74"/>
                    <has_line line=">Cluster 36"/>
                </assert_contents>
            </output> 
            <output name="out_sequences">
                <assert_contents>
                    <has_n_lines n="74"/>
                    <has_line line=">F23Fcsw_96640"/>
                    <has_text_matching expression="TCCGTACACTCAGGGATA.+"/>
                </assert_contents>
            </output> 
            <output name="out_log">
                <assert_contents>
                    <has_line line="Done!"/>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[
.. class:: infomark

**What it does**

@WID@

*CD-HIT lap* is part of CD-HIT and extracts pairs of overlapping reads by clustering based on tail-head overlaps (with perfect matching). The basic clustering strategy is the same as that in standard CD-HIT programs. In this program, each read is clustered as either a 'representative' or a 'redundant' read. For each 'redundant' read, it must have a prefix that is identical a suffix of its representative read. 

**Input**

Sequences in FASTQ or FASTA file format.

**Output**

*clstr* file in which the alignment positions indicate how the reads are overlapped. Visit the `project wiki <https://github.com/weizhongli/cdhit/wiki/3.-User's-Guide#cdhitlap>`_ for more details.

:: 

    >Cluster 0
    0   75nt, >1_lane2_624... *
    1   75nt, >1_lane2_7169... at 1:65:11:75/+/100.00%
    2   75nt, >1_lane2_36713... at 69:1:1:69/-/100.00%
    3   75nt, >1_lane2_141482... at 1:56:20:75/+/100.00%

.. class:: infomark

**References**

@HELP_REFERENCES@
    ]]></help>
    <expand macro="citations"/>
</tool>