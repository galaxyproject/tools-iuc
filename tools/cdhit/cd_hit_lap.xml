<tool id="cd_hit_lap" name="cd-hit-lap" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@">
    <description>Extract pairs of overlapping reads by clustering based on tail-head overlaps</description>
    <macros>
        <token name="@TOOL_VERSION@">4.8.1</token>    
        <token name="@VERSION_SUFFIX@">0</token>
    </macros>
    <requirements>
        <requirement type="package" version="@TOOL_VERSION@">cd-hit</requirement>
        <requirement type="package" version="4.6.8">cd-hit-auxtools</requirement>
    </requirements>
    <version_command><![CDATA[
cd-hit | grep "CD-HIT version" | cut -d" " -f 4
    ]]></version_command>
    <command detect_errors="exit_code"><![CDATA[
cd-hit-lap
-i '$fasta_in'
-o rep_seq
-m $min_length
-p $min_percentage
-d $des_len
-s $seed
    ]]></command>
    <inputs>
        <param name="fasta_in" argument="-i" type="data" format="fasta, fasta.gz" label="Sequences to divide"/>
        <param name="min_length" argument="-m" type="integer" value="20" label="Minimum length of overlapping part"/>
        <param name="min_percentage" argument="-p" type="float" value="0" label="Minimum percentage of overlapping part"/>
        <param name="des_len" argument="-d" type="integer" value="0" label="Description length"/>
        <param name="seed" argument="-s" type="integer" value="0" label="Random number seed for shuffling"/>
    </inputs>
    <outputs>
        <data name="clusters_out" format="txt" label="${tool.name} on ${on_string}: Clusters" from_work_dir="rep_seq.clstr"/>
        <data name="fasta_out" format="fasta" label="${tool.name} on ${on_string}: Representative sequences" from_work_dir="rep_seq"/>
    </outputs>

    <tests>
        <test>
            <output name="fasta_out">
                <assert_contents>
                    <has_text_matching expression=".+"/>
                </assert_contents>
            </output> 
        </test>
    </tests>
    <help><![CDATA[
**What it does**

cd-hit-lap is program for extracting pairs of overlapping reads by clustering based on tail-head overlaps (with perfect matching). The basic clustering strategy is the same as that in standard CD-HIT programs. In this program, each read is clustered as either a "representative" or a "redundant" read. For each "redundant" read, it must have a prefix that is identical a suffix of its representative read. 

.. _CD-HIT: http://weizhongli-lab.org/cd-hit/

------

**Inputs**

cd-hit-lap requires a FASTA file(s) as input or compressed .gz files.

------

**Outputs**

The output format of this program is the same as the standard CD-HIT. In the .clstr file, the alignment positions indicate how the reads are overlapped. For example, 

  >Cluster 0
  0   75nt, >1_lane2_624... *
  1   75nt, >1_lane2_7169... at 1:65:11:75/+/100.00%
  2   75nt, >1_lane2_36713... at 69:1:1:69/-/100.00%
  3   75nt, >1_lane2_141482... at 1:56:20:75/+/100.00%

The cluster member #0 in cluster #0 is the representative of the cluster, and it overlaps with each of the other members in the cluster. For cluster member #1, "1:65:11:75/+" tells that the first 65 bases of member #1 overlaps with the last 65 bases of member #0; "69:1:1:69/-" indicates that the last 69 bases of member #2 overlaps with the first 69 bases of member #0. 

------

**References**

More information are available on `GitHub <https://github.com/weizhongli/cdhit>`_ and the `project website <http://cd-hit.org>`.
    ]]></help>
    <citations>
        <citation type="doi">10.1093/bioinformatics/btl158</citation>
        <citation type="doi">10.1093/bioinformatics/bts565</citation>
    </citations>
</tool>
