<tool id="beacon2_range" name="Beacon2 Range" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="21.05">
    <description>Retrieve the genomic variants from the beacon database by specifying start and end positions</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="creators"/>
    <expand macro="requirements"/>
    <command detect_errors="exit_code"><![CDATA[    
        beacon2-search range
        --db-host '$db_host'
        --db-port $db_port
        --database '$database'
        --collection '$collection'
        --advance-connection
        --db-auth-config '$credentials'
        --start $start
        --end $end
        #if str($advanced_settings.referenceName)
            --referenceName '$advanced_settings.referenceName'
        #end if
        #if str($advanced_settings.alternateBases)
            --alternateBases '$advanced_settings.alternateBases'
        #end if
        #if str($advanced_settings.variantType)
            --variantType '$advanced_settings.variantType'
        #end if
        #if str($advanced_settings.aminoacidChange)
            --aminoacidChange '$advanced_settings.aminoacidChange'
        #end if
        #if str($advanced_settings.variantMinLength)
            --variantMinLength $advanced_settings.variantMinLength
        #end if
        #if str($advanced_settings.variantMaxLength)
            --variantMaxLength $advanced_settings.variantMaxLength
        #end if
        > ranged_query_findings.json
    ]]></command>
    <expand macro="configfile"/>
    <inputs>
        <expand macro="Connection_to_MongoDB" />
        <expand macro="Database_Configuration" />
        <param argument="--start" type="integer" label="START" value="" help="Start position" />
        <param argument="--end" type="integer" label="END" value="" help="End position" />
        <section name="advanced_settings" title="Advanced settings" expanded="false">
            <param argument="--referenceName" optional="true" type="text" label="REFERENCENAME" value="" help="Reference name in numbers chr1/1, chr2/2, chr3/3, etc." />
            <param argument="--alternateBases"  optional="true" type="text" label="ALTERNATEBASES" value="" help="Targeted Alternate bases to search for" />
            <param argument="--variantType"  optional="true" type="text" label="VARIANT TYPE" value="" help="Targeted Variant type to search for" />
            <param argument="--aminoacidChange"  optional="true" type="text" label="AMINOACID CHANGE" value="" help="Targeted Amino acid change to search for" />
            <param argument="--variantMinLength"  optional="true" type="integer" label="VARIANT MIN LENGTH" value="" help="Targeted Variant minimum length to search for" />
            <param argument="--variantMaxLength"  optional="true" type="integer" label="VARIANT MAX LENGTH" value="" help="Targeted VVariant maximum length to search for" />
        </section>
    </inputs>
    <outputs>
        <data name="out_ranged_query" format="json" label="${tool.name} on ${on_string}: Range Query" from_work_dir="ranged_query_findings.json" />
    </outputs>
    <tests>
        <test expect_num_outputs="1">
            <param name="database" value="beacon" />
            <param name="collection" value="genomicVariations" />
            <param name="db_host" value="20.108.51.167" />
            <param name="start" value="131836" />
            <param name="end" value="131837" />
            <param name="variantType" value="SNP" />
            <output name="out_ranged_query">
                <assert_contents><has_text_matching expression="_id"/></assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[
        Beacon Range Queries are supposed to return matches of any variant with at least partial overlap of the sequence range specified by reference_name, start and end parameters
    ]]></help>
    <expand macro="citations" />
</tool>
