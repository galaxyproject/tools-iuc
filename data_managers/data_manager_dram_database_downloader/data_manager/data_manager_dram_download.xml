<tool id="data_manager_dram_download" name="DRAM: Download databases" version="1.3.5" tool_type="manage_data" profile="21.05">
    <description>required by the DRAM suite of tools</description>
    <requirements>
        <requirement type="package" version="1.3.5">dram</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
python '$__tool_directory__/data_manager_dram_download.py'
--out_file '$out_file'
#if str($kofam_hmm_loc) != '':
    --kofam_hmm_loc '$kofam_hmm_loc'
#end if
#if str($kofam_ko_list_loc) != '':
    --kofam_ko_list_loc '$kofam_ko_list_loc'
#end if
#if str($skip_uniref_cond.skip_uniref) == 'yes':
    --skip_uniref '$skip_uniref_cond.skip_uniref'
#else:
    #if str($skip_uniref_cond.uniref_loc) != '':
        --uniref_loc '$skip_uniref_cond.uniref_loc'
    #end if
    --uniref_version $skip_uniref_cond.uniref_version
#end if
#if str($pfam_loc) != '':
    --pfam_loc '$pfam_loc'
#end if
#if str($pfam_hmm_dat) != '':
    --pfam_hmm_dat '$pfam_hmm_dat'
#end if
#if str($dbcan_loc) != '':
    --dbcan_loc '$dbcan_loc'
#end if
#if str($dbcan_fam_activities) != '':
    --dbcan_fam_activities '$dbcan_fam_activities'
#end if
--dbcan_version $dbcan_version
#if str($vogdb_loc) != '':
    --vogdb_loc '$vogdb_loc'
#end if
#if str($vog_annotations) != '':
    --vog_annotations '$vog_annotations'
#end if
#if str($viral_loc) != '':
    --viral_loc '$viral_loc'
#end if
#if str($peptidase_loc) != '':
    --peptidase_loc '$peptidase_loc'
#end if
#if str($genome_summary_form_loc) != '':
    --genome_summary_form_loc '$genome_summary_form_loc'
#end if
#if str($module_step_form_loc) != '':
    --module_step_form_loc '$module_step_form_loc'
#end if
#if str($etc_module_database_loc) != '':
    --etc_module_database_loc '$etc_module_database_loc'
#end if
#if str($function_heatmap_form_loc) != '':
    --function_heatmap_form_loc '$function_heatmap_form_loc'
#end if
#if str($amg_database_loc) != '':
    --amg_database_loc '$amg_database_loc'
#end if
--threads \${GALAXY_SLOTS:-10}
--db_version '$db_version'
    ]]></command>
    <inputs>
        <param argument="--kofam_hmm_loc" type="text" value="" label="Absolute path to hmm file for KOfam (profiles.tar.gz) if already installed" help="Leave blank to install">
            <sanitizer invalid_char="">
                <valid initial="string.printable">
                    <remove value="&apos;"/>
                </valid>
            </sanitizer>
        </param>
        <param argument="--kofam_ko_list_loc" type="text" value="" label="Absolute path to KOfam ko list file (ko_list.gz) if already installed" help="Leave blank to install">
            <sanitizer invalid_char="">
                <valid initial="string.printable">
                    <remove value="&apos;"/>
                </valid>
            </sanitizer>
        </param>

        <conditional name="skip_uniref_cond">
            <param argument="--skip_uniref" type="select" label="Skip downloading and processing uniref?" help="Choosing Yes saves time and memory and does not impact DRAM distillation">
                <option value="no" selected="true">No</option>
                <option value="yes">Yes</option>
            </param>
            <when value="no">
                <param argument="--uniref_loc" type="text" value="" label="Absolute path to uniref (uniref90.fasta.gz) if already installed" help="Leave blank to install">
                    <sanitizer invalid_char="">
                        <valid initial="string.printable">
                            <remove value="&apos;"/>
                        </valid>
                    </sanitizer>
                </param>
                <param argument="--uniref_version" type="integer" value="90" label="UniRef version to download" help="Ignored if uniref is not downloaded and processed"/>
            </when>
            <when value="yes"/>
        </conditional>
        <param argument="--pfam_loc" type="text" value="" label="Absolute path to pfam-A full file (Pfam-A.full.gz) if already installed" help="Leave blank to install">
            <sanitizer invalid_char="">
                <valid initial="string.printable">
                    <remove value="&apos;"/>
                </valid>
            </sanitizer>
        </param>
        <param argument="--pfam_hmm_dat" type="text" value="" label="Absolute path to pfam hmm .dat file to get PF descriptions (Pfam-A.hmm.dat.gz) if already installed" help="Leave blank to install">
            <sanitizer invalid_char="">
                <valid initial="string.printable">
                    <remove value="&apos;"/>
                </valid>
            </sanitizer>
        </param>
        <param argument="--dbcan_loc" type="text" value="" label="Absolute path to dbCAN file (dbCAN-HMMdb-V9.txt) if already installed" help="Leave blank to install">
            <sanitizer invalid_char="">
                <valid initial="string.printable">
                    <remove value="&apos;"/>
                </valid>
            </sanitizer>
        </param>
        <param argument="--dbcan_fam_activities" type="text" value="" label="Absolute path to CAZY family activities file (CAZyDB.07302020.fam-activities.txt) if already installed" help="Leave blank to install">
            <sanitizer invalid_char="">
                <valid initial="string.printable">
                    <remove value="&apos;"/>
                </valid>
            </sanitizer>
        </param>
        <param argument="--dbcan_version" type="integer" value="10" label="Version of dbCAN to use"/>
        <param argument="--vogdb_loc" type="text" value="" label="Absolute path to hmm file for vogdb (vog.hmm.tar.gz) if already installed" help="Leave blank to install">
            <sanitizer invalid_char="">
                <valid initial="string.printable">
                    <remove value="&apos;"/>
                </valid>
            </sanitizer>
        </param>
        <param argument="--vog_annotations" type="text" value="" label="Absolute path to vogdb annotations file (vog.annotations.tsv.gz) if already installed" help="Leave blank to install">
            <sanitizer invalid_char="">
                <valid initial="string.printable">
                    <remove value="&apos;"/>
                </valid>
            </sanitizer>
        </param>
        <param argument="--viral_loc" type="text" value="" label="Absolute path to merged viral protein faa file (viral.x.protein.faa.gz) if already installed" help="Leave blank to install">
            <sanitizer invalid_char="">
                <valid initial="string.printable">
                    <remove value="&apos;"/>
                </valid>
            </sanitizer>
        </param>
        <param argument="--peptidase_loc" type="text" value="" label="Absolute path to MEROPS peptidase fasta file (pepunit.lib) if already installed" help="Leave blank to install">
            <sanitizer invalid_char="">
                <valid initial="string.printable">
                    <remove value="&apos;"/>
                </valid>
            </sanitizer>
        </param>
        <param argument="--genome_summary_form_loc" type="text" value="" label="Absolute path to genome summary form file (genome_summary_form.YYYYMMDD.tsv) if already installed" help="Leave blank to install">
            <sanitizer invalid_char="">
                <valid initial="string.printable">
                    <remove value="&apos;"/>
                </valid>
            </sanitizer>
        </param>
        <param argument="--module_step_form_loc" type="text" value="" label="Absolute path to module step form file (module_step_form.YYYYMMDD.tsv) if already installed" help="Leave blank to install">
            <sanitizer invalid_char="">
                <valid initial="string.printable">
                    <remove value="&apos;"/>
                </valid>
            </sanitizer>
        </param>
        <param argument="--etc_module_database_loc" type="text" value="" label="Absolute path to etc module database file (etc_mdoule_database.YYYYMMDD.tsv) if already installed" help="Leave blank to install">
            <sanitizer invalid_char="">
                <valid initial="string.printable">
                    <remove value="&apos;"/>
                </valid>
            </sanitizer>
        </param>
        <param argument="--function_heatmap_form_loc" type="text" value="" label="Absolute path to function heatmap form file (function_heatmap_form.YYYYMMDD.tsv) if already installed" help="Leave blank to install">
            <sanitizer invalid_char="">
                <valid initial="string.printable">
                    <remove value="&apos;"/>
                </valid>
            </sanitizer>
        </param>
        <param argument="--amg_database_loc" type="text" value="" label="Absolute path to amg database file (amg_database.YYYYMMDD.tsv) if already installed" help="Leave blank to install">
            <sanitizer invalid_char="">
                <valid initial="string.printable">
                    <remove value="&apos;"/>
                </valid>
            </sanitizer>
        </param>
        <param argument="--db_version" type="text" value="1.3.5" label="Version of DRAM databases to install">
            <sanitizer invalid_char="">
                <valid initial="string.printable">
                    <remove value="&apos;"/>
                </valid>
            </sanitizer>
        </param>
    </inputs>
    <outputs>
        <data name="out_file" format="data_manager_json"/>
    </outputs>
    <tests>
        <test expect_failure="true">
            <param name="kofam_hmm_loc" value="profiles.tar.gz"/>
            <param name="kofam_ko_list_loc" value="ko_list.gz"/>
            <param name="skip_uniref" value="yes"/>
            <param name="pfam_loc" value="Pfam-A.full.gz"/>
            <param name="pfam_hmm_dat" value="Pfam-A.hmm.dat.gz"/>
            <param name="dbcan_loc" value="dbCAN-HMMdb-V9.txt"/>
            <param name="dbcan_fam_activities" value="CAZyDB.07302020.fam-activities.txt"/>
            <param name="vogdb_loc" value="vog.hmm.tar.gz"/>
            <param name="vog_annotations" value="vog.annotations.tsv.gz"/>
            <param name="viral_loc" value="viral.x.protein.faa.gz"/>
            <param name="peptidase_loc" value="pepunit.lib"/>
            <param name="genome_summary_form_loc" value="genome_summary_form.20220715.tsv"/>
            <param name="module_step_form_loc" value="module_step_form.20220715.tsv"/>
            <param name="etc_module_database_loc" value="etc_mdoule_database.20220715.tsv"/>
            <param name="function_heatmap_form_loc" value="function_heatmap_form.20220715.tsv"/>
            <param name="amg_database_loc" value="amg_database.20220715.tsv"/>
            <assert_stderr>
                <has_text text="Database location does not exist"/>
            </assert_stderr>
        </test>
    </tests>
    <help>
This tool downloads and processes DRAM databases for annotation and makes them available to corresponding versions
of the DRAM suite of tools.

See https://github.com/WrightonLabCSU/DRAM/wiki for details about DRAM.
    </help>
    <citations>
        <citation type="doi">10.1093/nar/gkaa621</citation>
    </citations>
</tool>

