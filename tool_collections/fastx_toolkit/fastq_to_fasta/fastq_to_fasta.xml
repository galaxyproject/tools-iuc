<tool id="cshl_fastq_to_fasta" name="FASTQ to FASTA" version="1.0.2+galaxy@VERSION_SUFFIX@" profile="22.05">
    <description>converter from FASTX-toolkit</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <command detect_errors="exit_code"><![CDATA[
@CATS@ fastq_to_fasta
$SKIPN
$RENAMESEQ
-v @FQQUAL@
#if $compress_output == 'yes' or ($compress_output == 'infer' and ($input.ext.endswith('.gz') or $input.ext.endswith('.bz2'))):
    | gzip -c  > '$output_gz'
#else:
    > '$output'
#end if
    ]]></command>
    <inputs>
        <expand macro="fastq_input" />
        <param name="SKIPN" type="select" label="Discard sequences with unknown (N) bases ">
            <option value="">yes</option>
            <option value="-n">no</option>
        </param>
        <param name="RENAMESEQ" type="select" label="Rename sequence names in output file (reduces file size)">
            <option value="-r">yes</option>
            <option value="">no</option>
        </param>
        <param name="compress_output" type="select" label="Compress output FASTA">
            <option value="infer" selected="true">Infer from input data</option>
            <option value="yes">Yes</option>
            <option value="no">No</option>
        </param>
    </inputs>
    <outputs>
        <data name="output" format="fasta" metadata_source="input" label="${tool.name} on ${on_string}: FASTA">
            <filter>
                compress_output == 'no' or compress_output == 'infer' and not (input.ext.endswith('.gz') or input.ext.endswith('.bz2'))
            </filter>
        </data>
        <data name="output_gz" format="fasta.gz" metadata_source="input" label="${tool.name} on ${on_string}: FASTA.gz">
            <filter>
                compress_output == 'yes' or compress_output == 'infer' and input.ext.endswith('.gz') or input.ext.endswith('.bz2')
            </filter>
        </data>
    </outputs>
    <tests>
        <test expect_num_outputs="1" >
            <!-- 1 FASTQ-To-FASTA, keep N, don't rename -->
            <param name="input" value="fastq_to_fasta1.fastq" ftype="fastqsolexa" />
            <param name="SKIPN" value=""/>
            <param name="RENAMESEQ" value=""/>
            <output name="output" file="fastq_to_fasta1a.out" />
        </test>
        <test expect_num_outputs="1" >
            <!-- 2 FASTQ-To-FASTA, discard N, rename -->
            <param name="input" value="fastq_to_fasta1.fastq" ftype="fastqsolexa" />
            <param name="SKIPN" value="no"/>
            <param name="RENAMESEQ" value="yes"/>
            <output name="output" file="fastq_to_fasta1b.out" />
        </test>
        <test expect_num_outputs="1" >
            <!-- 3 FASTQ-To-FASTA, discard N, rename -->
            <param name="input" value="fastq_to_fasta-in2.fastq" ftype="fastqsanger" />
            <param name="SKIPN" value="no"/>
            <param name="RENAMESEQ" value="yes"/>
            <output name="output" file="fastq_to_fasta-out2.out" />
        </test>
        <test expect_num_outputs="1" >
            <!-- 4 Infer FASTQ.GZ-To-FASTA.GZ -->
            <param name="input" value="fastq_to_fasta-in2.fastq.gz" ftype="fastqsanger.gz" />
            <param name="SKIPN" value="no"/>
            <param name="RENAMESEQ" value="yes"/>
            <param name="compress_output" value="infer"/>
            <output name="output" file="fastq_to_fasta-out2.out.gz" compare="sim_size" delta="50" />
        </test>
        <test expect_num_outputs="1" >
            <!-- 5 Force FASTQ.GZ-To-FASTA -->
            <param name="input" value="fastq_to_fasta-in2.fastq.gz" ftype="fastqsanger.gz" />
            <param name="SKIPN" value="no"/>
            <param name="RENAMESEQ" value="yes"/>
            <param name="compress_output" value="no"/>
            <output name="output" file="fastq_to_fasta-out2.out"/>
        </test>
        <test expect_num_outputs="1" >
            <!-- 6 Force FASTQ-To-FASTA.GZ -->
            <param name="input" value="fastq_to_fasta-in2.fastq" ftype="fastqsanger" />
            <param name="SKIPN" value="no"/>
            <param name="RENAMESEQ" value="yes"/>
            <param name="compress_output" value="yes"/>
            <output name="output" file="fastq_to_fasta-out2.out.gz" compare="sim_size" delta="50" />
        </test>
    </tests>
    <help><![CDATA[
**What it does**

This tool converts data from Solexa format to FASTA format (scroll down for format description).

--------

**Example**

The following data in Solexa-FASTQ format::

    @CSHL_4_FC042GAMMII_2_1_517_596
    GGTCAATGATGAGTTGGCACTGTAGGCACCATCAAT
    +CSHL_4_FC042GAMMII_2_1_517_596
    40 40 40 40 40 40 40 40 40 40 38 40 40 40 40 40 14 40 40 40 40 40 36 40 13 14 24 24 9 24 9 40 10 10 15 40

Will be converted to FASTA (with 'rename sequence names' = NO)::

    >CSHL_4_FC042GAMMII_2_1_517_596
    GGTCAATGATGAGTTGGCACTGTAGGCACCATCAAT

Will be converted to FASTA (with 'rename sequence names' = YES)::

    >1
    GGTCAATGATGAGTTGGCACTGTAGGCACCATCAAT

------

This tool is based on `FASTX-toolkit`__ by Assaf Gordon.

 .. __: http://hannonlab.cshl.edu/fastx_toolkit/
    ]]></help>
    <expand macro="citations" />
<!-- FASTQ-to-FASTA is part of the FASTX-toolkit, by A.Gordon (gordon@cshl.edu) -->
</tool>
