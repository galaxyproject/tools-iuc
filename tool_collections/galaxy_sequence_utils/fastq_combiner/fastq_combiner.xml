<tool id="fastq_combiner" name="Combine FASTA and QUAL" version="@TOOL_VERSION@">
    <description>into FASTQ</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <edam_topics>
        <edam_topic>topic_0622</edam_topic>
    </edam_topics>
    <edam_operations>
        <edam_operation>operation_3436</edam_operation>
    </edam_operations>
    <command><![CDATA[
gx-fastq-combiner '$fasta_file' '${fasta_file.extension}' '$qual_file' '${qual_file.extension}' '$output_file' $force_quality_encoding
    ]]></command>
    <inputs>
        <param name="fasta_file" type="data" format="fasta,csfasta" label="FASTA File" />
        <param name="qual_file" type="data" format="qual" optional="true" label="Quality Score File" />
        <param name="force_quality_encoding" type="select" label="Force Quality Score encoding">
            <option value="None">Use Source Encoding</option>
            <option value="ascii" selected="true">ASCII</option>
            <option value="decimal">Decimal</option>
        </param>
    </inputs>
    <outputs>
        <data name="output_file" format="fastqsanger">
            <change_format>
                <when input="fasta_file" value="csfasta" format="fastqcssanger" />
                <when input="qual_file" value="qualsolid" format="fastqcssanger" />
                <when input="qual_file" value="qualsolexa" format="fastqsolexa" />
                <when input="qual_file" value="qualillumina" format="fastqillumina" />
            </change_format>
        </data>
    </outputs>
    <tests>
        <test>
            <param name="fasta_file" value="s2fq_phiX.csfasta" ftype="csfasta" />
            <param name="qual_file" value="s2fq_phiX.qualsolid" ftype="qualsolid" />
            <param name="force_quality_encoding" value="None" />
            <output name="output_file" file="combine_phiX_out_1.fastqcssanger" />
        </test>
        <test>
            <param name="fasta_file" value="s2fq_phiX.csfasta" ftype="csfasta" />
            <param name="qual_file" value="s2fq_phiX.qualsolid" ftype="qualsolid" />
            <param name="force_quality_encoding" value="ascii" />
            <output name="output_file" file="combine_phiX_out_2.fastqcssanger" />
        </test>
        <test>
            <param name="fasta_file" value="fastq_combiner_in_1.fasta" ftype="fasta" />
            <param name="qual_file" value="fastq_combiner_in_1.qual454" ftype="qual454" />
            <param name="force_quality_encoding" value="None" />
            <output name="output_file" file="wrapping_as_sanger.fastqsanger" />
        </test>
        <test>
            <param name="fasta_file" value="fastq_combiner_in_1.fasta" ftype="fasta" />
            <param name="qual_file" value="fastq_combiner_in_1.qual454" ftype="qual454" />
            <param name="force_quality_encoding" value="decimal" />
            <output name="output_file" file="wrapping_as_sanger_decimal.fastqsanger" />
        </test>
        <test>
            <param name="fasta_file" value="fastq_combiner_in_1.fasta" ftype="fasta" />
            <param name="qual_file" />
            <param name="force_quality_encoding" value="decimal" />
            <output name="output_file" file="fastq_combiner_no_qual_decimal_out_1.fastqsanger" />
        </test>
        <test>
            <param name="fasta_file" value="s2fq_phiX.csfasta" ftype="csfasta" />
            <param name="qual_file" />
            <param name="force_quality_encoding" value="ascii" />
            <output name="output_file" file="fastq_combiner_no_qual_ascii_out_1.fastqcssanger" />
        </test>
    </tests>
    <help><![CDATA[
**What it does**

This tool joins a FASTA file to a Quality Score file, creating a single FASTQ block for each read.

Specifying a set of quality scores is optional; when not provided, the output will be fastqsanger or fastqcssanger (when a csfasta is provided) with each quality score being the maximal allowed value (93).

Use this tool, for example, to convert 454-type output to FASTQ.
    ]]></help>
    <citations>
        <citation type="doi">10.1093/bioinformatics/btq281</citation>
    </citations>
</tool>
