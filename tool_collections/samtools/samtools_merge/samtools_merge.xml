<!-- TODO can we restrict the input to sorted alignments -->
<!-- TODO can we set the output sort order based on the input sort order -->
<!-- TODO 2.0.1. is the somtools sort's version .. shouls I change this? -->
<tool id="samtools_sort" name="Sort" version="2.0.1">
    <description>merge multiple sorted alignment files</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <expand macro="stdio"/>
    <expand macro="version_command"/>
    <command><![CDATA[
        samtools merge
        #if $comression == 'levelone'
            -1
        #else if $compression == 'uncompressed'
            -u
        #end if
        ## 
        #if str($headerbam) != 'None'
            -h '$headerbam'
        #end if
        ##The input alignments are sorted by read names rather than by chromosomal coordinates 
        ##-n
        ##TODO for -n: can we find out the sorting type state of the input?
        #if str($region) != 'None'
            -R '$region'
        #end if
        Attach an RG tag to each alignment. The tag value is inferred from file names. 
        -r
        ##
        ## 
        $idrg
        $idpg
        $output
        #for $input in $bamfiles
           "$input"
        #end for
    ]]></command>
    <inputs>
        <!-- TODO I guess that sam and bam are valid, but documentation says only bam? -->
        <param format="sam,bam" multiple="true" optional="false" name="bamfiles" type="data" label="Alignments in BAM format" help="Sets of aligned reads." />
        <param optional="true" name="region" type="text" label="Merge files in a region" help="Merge files in the specified region indicated by a string (-n)" />
        <param format="sam,bam" multiple="false" optional="true" name="headerbam" type="data" label="File to take @headers from" help="Use the lines of FILE as `@' headers to be copied to out.bam, replacing any header lines that would otherwise be copied from in1.bam. (FILE is actually in SAM format, though any alignment records it may contain are ignored.) (-h)" />
        <param name="idrg" type="boolean" truevalue="-c" falsevalue="" checked="false" label="Make @RG headers unique" help="When several input files contain @RG headers with the same ID, emit only one of them (namely, the header line from the first file we find that ID in) to the merged output file. Combining these similar headers is usually the right thing to do when the files being merged originated from the same file. Without -c, all @RG headers appear in the output file, with random suffices added to their IDs where necessary to differentiate them. (-c)" />
        <param name="idpg" type="boolean" truevalue="-p" falsevalue="" checked="false" label="Make @PG headers unique" help="Similarly, for each @PG ID in the set of files to merge, use the @PG line of the first file we find that ID in rather than adding a suffix to differentiate similar IDs. (-p)" />

        <param name="compression" type="select" label="Advanced compression options" help="Select advanced compression options">
            <option value="default" selected="true">default</option>
            <option value="levelone">Use zlib compression level 1</option>
            <option value="uncompressed">Uncompressed output</option>
        </param>
        <param name="sort_mode" type="select" label="Sort by ">
            <option value="" selected="True">Chromosomal coordinates</option>
            <option value="-n">Read names (-n)</option>
        </param>
    </inputs>
    <outputs>
        <data name="output" format="bam" />
    </outputs>
    <!-- TODO implement tests -->
    <tests>
        <test>
            <param name="input1" value="1.bam" ftype="bam" />
            <output name="output1" file="1_sort.bam" ftype="bam" sort="True"/>
        </test>
        <test>
            <param name="input1" value="1.bam" ftype="bam" />
            <param name="sort_mode" value="-n"/>
            <output name="output1" file="1_sort_read_names.bam" ftype="bam" sort="True"/>
        </test>
    </tests>
    <help>
**What it does**
Merge multiple sorted alignment files, producing a single sorted output file that contains all the input records and maintains the existing sort order.

If a file to take @headers from is specified the @SQ headers of input files will be merged into the specified header, otherwise they will be merged into a composite header created from the input headers. If in the process of merging @SQ lines for coordinate sorted input files, a conflict arises as to the order (for example input1.bam has @SQ for a,b,c and input2.bam has b,a,c) then the resulting output file will need to be re-sorted back into coordinate order.

Unless the @PG/@RG headers are made unique when merging @RG and @PG records into the output header then any IDs found to be duplicates of existing IDs in the output header will have a suffix appended to them to differentiate them from similar header records from other files and the read records will be updated to reflect this. 
    </help>
    <expand macro="citations"/>
</tool>
